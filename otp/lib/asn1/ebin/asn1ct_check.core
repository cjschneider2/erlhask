module 'asn1ct_check' ['check'/2,
		       'format_error'/1,
		       'module_info'/0,
		       'module_info'/1,
		       'storeindb'/2]
    attributes []
'check'/2 =
    %% Line 77
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,{Types,Values,ParameterizedTypes,Classes,Objects,ObjectSets}> when 'true' ->
	      let <TupleIs> =
		  %% Line 79
		  ( fun (_cor3,_cor2) ->
			case <_cor3,_cor2> of
			  <{T,_cor89},_cor90>
			      when call 'erlang':'=:='
				    (_cor90,
				     T) ->
			      'true'
			  %% Line 80
			  <_cor91,_cor92> when 'true' ->
			      'false'
			end
		    -| [{'id',{0,0,'-check/2-fun-0-'}}] )
	      in  let <IsClass> =
		      %% Line 82
		      ( fun (_cor7) ->
			    apply TupleIs
				(_cor7, 'asn1_class')
			-| [{'id',{0,0,'-check/2-fun-1-'}}] )
		  in  let <IsObjSet> =
			  %% Line 83
			  ( fun (_cor10) ->
				apply TupleIs
				    (_cor10, 'objectsetdef')
			    -| [{'id',{0,0,'-check/2-fun-2-'}}] )
		      in  let <IsPObjSet> =
			      %% Line 84
			      ( fun (_cor13) ->
				    apply TupleIs
					(_cor13, 'pobjectsetdef')
				-| [{'id',{0,0,'-check/2-fun-3-'}}] )
			  in  let <IsObject> =
				  %% Line 85
				  ( fun (_cor16) ->
					apply TupleIs
					    (_cor16, 'objectdef')
				    -| [{'id',{0,0,'-check/2-fun-4-'}}] )
			      in  let <IsValueSet> =
				      %% Line 86
				      ( fun (_cor19) ->
					    apply TupleIs
						(_cor19, 'valueset')
					-| [{'id',{0,0,'-check/2-fun-5-'}}] )
				  in  let <Element2> =
					  %% Line 87
					  ( fun (_cor22) ->
						call 'erlang':'element'
						    (2, _cor22)
					    -| [{'id',{0,0,'-check/2-fun-6-'}}] )
				      in  let <Element1> =
					      %% Line 88
					      ( fun (_cor25) ->
						    call 'erlang':'element'
							(1, _cor25)
						-| [{'id',{0,0,'-check/2-fun-7-'}}] )
					  in  %% Line 91
					      ( case S of
						  ( <( {'state',_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_rec0,_cor99,_cor100,_cor101,_cor102,_cor103,_cor104}
						       -| ['compiler_generated'] )> when 'true' ->
							do  apply 'save_asn1db_uptodate'/3
								(S, _rec0, _cor94)
							    do  %% Line 92
								call 'erlang':'put'
								    ('top_module', _cor94)
								let <_X_> =
								    %% Line 94
								    apply 'checkp'/2
									(S, ParameterizedTypes)
								in  do  %% Line 97
									call 'asn1ct_table':'new'
									    ('parameterized_objects')
									do  %% Line 98
									    call 'asn1ct_table':'new'
										('inlined_objects')
									    let <Terror> =
										%% Line 101
										apply 'checkt'/2
										    (S, Types)
									    in  %% Line 107
										case apply 'filter_errors'/2
											 (IsPObjSet, Terror) of
										  <{PObjSetNames1,Terror2}> when 'true' ->
										      let <_cor37> =
											  %% Line 109
											  call 'erlang':'++'
											      (Values, ObjectSets)
										      in  let <Verror> =
											      %% Line 109
											      apply 'checkv'/2
												  (S, _cor37)
											  in  %% Line 114
											      case apply 'filter_errors'/2
												       (IsClass, Terror2) of
												<{AddClasses,Terror3}> when 'true' ->
												    let <NewClasses> =
													%% Line 116
													call 'erlang':'++'
													    (Classes, AddClasses)
												    in  let <Cerror> =
													    %% Line 118
													    apply 'checkc'/2
														(S, NewClasses)
													in  %% Line 123
													    case apply 'filter_errors'/2
														     (IsObjSet, Verror) of
													      <{ObjSetNames,Verror2}> when 'true' ->
														  %% Line 128
														  case apply 'filter_errors'/2
															   (IsPObjSet, Verror2) of
														    <{PObjSetNames,Verror3}> when 'true' ->
															%% Line 133
															case apply 'filter_errors'/2
																 (IsObject, Verror3) of
															  <{ObjectNames,Verror4}> when 'true' ->
															      let <NewObjects> =
																  %% Line 135
																  call 'erlang':'++'
																      (Objects, ObjectNames)
															      in  let <_cor46> =
																      %% Line 136
																      call 'erlang':'++'
																	  (PObjSetNames, PObjSetNames1)
																  in  let <NewObjectSets> =
																	  %% Line 136
																	  call 'erlang':'++'
																	      (ObjSetNames, _cor46)
																      in  %% Line 141
																	  case apply 'filter_errors'/2
																		   (IsValueSet, Verror4) of
																	    <{ValueSetNames,Verror5}> when 'true' ->
																		let <_cor49> =
																		    %% Line 143
																		    call 'erlang':'++'
																			(NewObjects, %% Line 144
																				     NewObjectSets)
																		in  %% Line 143
																		    case apply 'checko'/5
																			     (S, _cor49, %% Line 145
																					 [], %% Line 145
																					     [], %% Line 145
																						 []) of
																		      <{Oerror,ExclO,ExclOS}> when 'true' ->
																			  let <InlinedObjTuples> =
																			      %% Line 147
																			      call 'asn1ct_table':'to_list'
																				  ('inlined_objects')
																			  in  let <InlinedObjects> =
																				  %% Line 148
																				  call 'lists':'map'
																				      (Element2, InlinedObjTuples)
																			      in  do  %% Line 149
																				      call 'asn1ct_table':'delete'
																					  ('inlined_objects')
																				      let <ParameterizedElems> =
																					  %% Line 150
																					  call 'asn1ct_table':'to_list'
																					      ('parameterized_objects')
																				      in  let <_cor56> =
																					      %% Line 151
																					      ( fun (_cor54) ->
																						    case _cor54 of
																						      <{_X_OSName,'objectset',_cor132}> when 'true' ->
																							  'true'
																						      %% Line 152
																						      <_cor133> when 'true' ->
																							  'false'
																						    end
																						-| [{'id',{0,0,'-check/2-fun-8-'}}] )
																					  in  let <ParObjectSets> =
																						  %% Line 151
																						  call 'lists':'filter'
																						      (_cor56, %% Line 152
																							       ParameterizedElems)
																					      in  let <ParObjectSetNames> =
																						      %% Line 153
																						      call 'lists':'map'
																							  (Element1, ParObjectSets)
																						  in  let <_cor61> =
																							  %% Line 154
																							  ( fun (_cor59) ->
																								case _cor59 of
																								  <{_X_TypeName,'type',_cor134}> when 'true' ->
																								      'true'
																								  %% Line 155
																								  <_cor135> when 'true' ->
																								      'false'
																								end
																							    -| [{'id',{0,0,'-check/2-fun-9-'}}] )
																						      in  let <ParTypes> =
																							      %% Line 154
																							      call 'lists':'filter'
																								  (_cor61, %% Line 155
																									   ParameterizedElems)
																							  in  let <ParTypesNames> =
																								  %% Line 156
																								  call 'lists':'map'
																								      (Element1, ParTypes)
																							      in  do  %% Line 157
																								      call 'asn1ct_table':'delete'
																									  ('parameterized_objects')
																								      do  %% Line 158
																									  call 'erlang':'put'
																									      ('asn1_reference', 'undefined')
																									  let <Exporterror> =
																									      %% Line 160
																									      apply 'check_exports'/2
																										  (S, _cor93)
																									  in  let <ImportError> =
																										  %% Line 161
																										  apply 'check_imports'/2
																										      (S, _cor93)
																									      in  %% Line 163
																										  case <Terror3,Verror5,Cerror,Oerror,Exporterror,ImportError> of
																										    %% Line 164
																										    <[],[],[],[],[],[]> when 'true' ->
																											let <ContextSwitchTs> =
																											    %% Line 165
																											    apply 'context_switch_in_spec'/0
																												()
																											in  let <InstanceOf> =
																												%% Line 166
																												apply 'instance_of_in_spec'/1
																												    (_cor94)
																											    in  let <_cor76> =
																												    %% Line 167
																												    call 'lists':'subtract'
																													(Types, AddClasses)
																												in  let <_cor74> =
																													%% Line 168
																													call 'erlang':'++'
																													    (InstanceOf, ParTypesNames)
																												    in  let <_cor75> =
																													    %% Line 168
																													    call 'erlang':'++'
																														(ContextSwitchTs, _cor74)
																													in  let <NewTypes> =
																														%% Line 167
																														call 'erlang':'++'
																														    (_cor76, _cor75)
																													    in  let <_cor78> =
																														    %% Line 169
																														    call 'erlang':'++'
																															(ObjectNames, %% Line 170
																																      ValueSetNames)
																														in  let <_cor79> =
																															%% Line 169
																															call 'erlang':'++'
																															    (PObjSetNames, _cor78)
																														    in  let <NewValues> =
																															    %% Line 169
																															    call 'lists':'subtract'
																																(Values, _cor79)
																															in  let <_cor83> =
																																%% Line 175
																																call 'lists':'subtract'
																																    (NewObjects, ExclO)
																															    in  let <_cor84> =
																																    %% Line 175
																																    call 'erlang':'++'
																																	(_cor83, InlinedObjects)
																																in  let <_cor81> =
																																	%% Line 176
																																	call 'lists':'subtract'
																																	    (NewObjectSets, ExclOS)
																																    in  let <_cor82> =
																																	    %% Line 176
																																	    call 'erlang':'++'
																																		(_cor81, ParObjectSetNames)
																																	in  %% Line 171
																																	    {'ok',%% Line 172
																																		  {NewTypes,NewValues,ParameterizedTypes,%% Line 173
																																							 NewClasses,%% Line 173
																																								    NewObjects,%% Line 173
																																									       NewObjectSets},%% Line 174
																																											      {NewTypes,NewValues,ParameterizedTypes,NewClasses,_cor84,_cor82}}
																										    %% Line 177
																										    <_fol7,_fol8,_fol9,_fol10,_fol11,_fol12> when 'true' ->
																											let <_cor85> =
																											    %% Line 178
																											    call 'lists':'flatten'
																												([Terror3|[Verror5|[Cerror|%% Line 179
																															   [Oerror|[Exporterror|[ImportError|[]]]]]]])
																											in  %% Line 178
																											    {'error',_cor85}
																										  end
																		      ( <_cor50> when 'true' ->
																			    primop 'match_fail'
																				({'badmatch',_cor50})
																			-| ['compiler_generated'] )
																		    end
																	    ( <_cor48> when 'true' ->
																		  primop 'match_fail'
																		      ({'badmatch',_cor48})
																	      -| ['compiler_generated'] )
																	  end
															  ( <_cor44> when 'true' ->
																primop 'match_fail'
																    ({'badmatch',_cor44})
															    -| ['compiler_generated'] )
															end
														    ( <_cor43> when 'true' ->
															  primop 'match_fail'
															      ({'badmatch',_cor43})
														      -| ['compiler_generated'] )
														  end
													      ( <_cor42> when 'true' ->
														    primop 'match_fail'
															({'badmatch',_cor42})
														-| ['compiler_generated'] )
													    end
												( <_cor39> when 'true' ->
												      primop 'match_fail'
													  ({'badmatch',_cor39})
												  -| ['compiler_generated'] )
											      end
										  ( <_cor36> when 'true' ->
											primop 'match_fail'
											    ({'badmatch',_cor36})
										    -| ['compiler_generated'] )
										end
						    -| ['compiler_generated'] )
						  ( <_cor105> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {'badrecord','state'}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
						-| ['compiler_generated'] )
	  ( <_cor88,_cor87> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor88,_cor87})
		  -| [{'function_name',{'check',2}}] )
	    -| ['compiler_generated'] )
	end
'context_switch_in_spec'/0 =
    %% Line 182
    fun () ->
	let <F> =
	    %% Line 186
	    ( fun (_cor3,_cor2) ->
		  case <_cor3,_cor2> of
		    <{T,TName},Acc> when 'true' ->
			%% Line 187
			case call 'erlang':'get'
				 (T) of
			  %% Line 188
			  <'generate'> when 'true' ->
			      do  call 'erlang':'erase'
				      (T)
				  %% Line 189
				  [TName|Acc]
			  %% Line 190
			  <_cor7> when 'true' ->
			      Acc
			end
		    ( <_cor5,_cor4> when 'true' ->
			  ( primop 'match_fail'
				({'function_clause',_cor5,_cor4})
			    -| [{'function_name',{'-context_switch_in_spec/0-fun-0-',2}}] )
		      -| ['compiler_generated'] )
		  end
	      -| [{'id',{0,0,'-context_switch_in_spec/0-fun-0-'}}] )
	in  %% Line 193
	    call 'lists':'foldl'
		(F, [], [{'external','EXTERNAL'}|[{'embedded_pdv','EMBEDDED PDV'}|[{'character_string','CHARACTER STRING'}]]])
'instance_of_in_spec'/1 =
    %% Line 195
    fun (_cor0) ->
	%% Line 196
	case call 'erlang':'get'
		 ('instance_of') of
	  %% Line 197
	  <L>
	      when call 'erlang':'is_list'
		    (L) ->
	      %% Line 198
	      case call 'lists':'member'
		       (_cor0, L) of
		%% Line 199
		<'true'> when 'true' ->
		    do  %% Line 200
			call 'erlang':'erase'
			    ('instance_of')
			%% Line 201
			['INSTANCE OF']
		%% Line 202
		<_cor4> when 'true' ->
		    do  %% Line 203
			call 'erlang':'erase'
			    ('instance_of')
			%% Line 204
			[]
	      end
	  %% Line 206
	  <_cor5> when 'true' ->
	      %% Line 207
	      []
	end
'instance_of_decl'/1 =
    %% Line 209
    fun (_cor0) ->
	let <Mods> =
	    %% Line 210
	    apply 'get_instance_of'/0
		()
	in  %% Line 211
	    case call 'lists':'member'
		     (_cor0, Mods) of
	      %% Line 212
	      <'true'> when 'true' ->
		  %% Line 213
		  'ok'
	      %% Line 214
	      <_cor4> when 'true' ->
		  %% Line 215
		  call 'erlang':'put'
		      ('instance_of', [_cor0|Mods])
	    end
'get_instance_of'/0 =
    %% Line 217
    fun () ->
	%% Line 218
	case call 'erlang':'get'
		 ('instance_of') of
	  %% Line 219
	  <'undefined'> when 'true' ->
	      %% Line 220
	      []
	  %% Line 221
	  <L> when 'true' ->
	      %% Line 222
	      L
	end
'put_once'/2 =
    %% Line 225
    fun (_cor1,_cor0) ->
	%% Line 228
	case call 'erlang':'get'
		 (_cor1) of
	  %% Line 229
	  <PrevS>
	      when call 'erlang':'>'
		    (PrevS,
		     _cor0) ->
	      %% Line 230
	      call 'erlang':'put'
		  (_cor1, _cor0)
	  %% Line 231
	  <_cor5> when 'true' ->
	      %% Line 232
	      'ok'
	end
'filter_errors'/2 =
    %% Line 235
    fun (_cor1,_cor0) ->
	let <Element2> =
	    %% Line 236
	    ( fun (_cor2) ->
		  call 'erlang':'element'
		      (2, _cor2)
	      -| [{'id',{0,0,'-filter_errors/2-fun-0-'}}] )
	in  let <RemovedTupleElements> =
		%% Line 237
		call 'lists':'filter'
		    (_cor1, _cor0)
	    in  let <RemovedNames> =
		    %% Line 238
		    call 'lists':'map'
			(Element2, RemovedTupleElements)
		in  let <RestErrors> =
			%% Line 240
			call 'lists':'subtract'
			    (_cor0, RemovedTupleElements)
		    in  %% Line 241
			{RemovedNames,RestErrors}
'check_exports'/2 =
    %% Line 244
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,Module = {'module',_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28}> when 'true' ->
	      %% Line 245
	      case _cor25 of
		%% Line 246
		<{'exports',[]}> when 'true' ->
		    %% Line 247
		    []
		%% Line 248
		<{'exports','all'}> when 'true' ->
		    %% Line 249
		    []
		%% Line 250
		<{'exports',ExportList}>
		    when call 'erlang':'is_list'
			  (ExportList) ->
		    let <IsNotDefined> =
			%% Line 252
			( fun (_cor6) ->
			      let <_cor4> =
				  catch
				      %% Line 253
				      apply 'get_referenced_type'/2
					  (S, _cor6)
			      in  %% Line 253
				  case _cor4 of
				    %% Line 254
				    <{'error',{'asn1',_cor37}}> when 'true' ->
					%% Line 255
					'true'
				    %% Line 256
				    <_cor38> when 'true' ->
					'false'
				  end
			  -| [{'id',{0,0,'-check_exports/2-fun-0-'}}] )
		    in  %% Line 259
			case call 'lists':'filter'
				 (IsNotDefined, ExportList) of
			  %% Line 260
			  <[]> when 'true' ->
			      %% Line 261
			      []
			  %% Line 262
			  <NoDefExp> when 'true' ->
			      let <GetName> =
				  %% Line 264
				  ( fun (_cor14) ->
					case _cor14 of
					  <T = {'Externaltypereference',_cor39,_cor40,N}> when 'true' ->
					      %% Line 266
					      case S of
						<{'state',_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53}> when 'true' ->
						    let <_cor10> =
							call 'erlang':'setelement'
							    (5, S, N)
						    in  let <_cor12> =
							    call 'erlang':'setelement'
								(4, _cor10, T)
							in  %% Line 267
							    apply 'error'/1
								({'export',[101|[120|[112|[111|[114|[116|[101|[100|[32|[117|[110|[100|[101|[102|[105|[110|[101|[100|[32|[101|[110|[116|[105|[116|[121]]]]]]]]]]]]]]]]]]]]]]]]],_cor12})
						( <_cor54> when 'true' ->
						      ( call ( 'erlang'
							       -| ['compiler_generated'] ):( 'error'
											     -| ['compiler_generated'] )
							    (( {'badrecord','state'}
							       -| ['compiler_generated'] ))
							-| ['compiler_generated'] )
						  -| ['compiler_generated'] )
					      end
					  ( <_cor15> when 'true' ->
						( primop 'match_fail'
						      ({'function_clause',_cor15})
						  -| [{'function_name',{'-check_exports/2-fun-1-',1}}] )
					    -| ['compiler_generated'] )
					end
				    -| [{'id',{0,0,'-check_exports/2-fun-1-'}}] )
			      in  %% Line 269
				  call 'lists':'map'
				      (GetName, NoDefExp)
			end
		( <_cor18> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor18})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor20,_cor19> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor20,_cor19})
		  -| [{'function_name',{'check_exports',2}}] )
	    -| ['compiler_generated'] )
	end
'check_imports'/2 =
    %% Line 273
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,{'module',_cor4,_cor5,_cor6,_cor7,_cor8,{'imports',Imports},_cor9,_cor10}> when 'true' ->
	      %% Line 274
	      apply 'check_imports_1'/3
		  (S, Imports, [])
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'check_imports',2}}] )
	    -| ['compiler_generated'] )
	end
'check_imports_1'/3 =
    %% Line 276
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <_X_S,[],Acc> when 'true' ->
	      %% Line 277
	      Acc
	  %% Line 278
	  <S,[{'SymbolsFromModule',Imports,ModuleRef,_cor52}|SFMs],Acc0> when 'true' ->
	      let <Module> =
		  %% Line 279
		  apply 'name_of_def'/1
		      (ModuleRef)
	      in  let <_cor9> =
		      %% Line 280
		      ( letrec
			    'lc$^0'/1 =
				fun (_cor6) ->
				    case _cor6 of
				      <[Ref|_cor5]> when 'true' ->
					  let <_cor7> =
					      catch
						  apply 'get_referenced_type'/2
						      (S, Ref)
					  in  let <_cor8> =
						  apply 'lc$^0'/1
						      (_cor5)
					      in  ( [{_cor7,Ref}|_cor8]
						    -| ['compiler_generated'] )
				      <[]> when 'true' ->
					  []
				      ( <_cor6> when 'true' ->
					    ( primop 'match_fail'
						  ({'function_clause',_cor6})
					      -| [{'function_name',{'lc$^0',1}}] )
					-| ['compiler_generated'] )
				    end
			in  apply 'lc$^0'/1
				(Imports)
			-| ['list_comprehension'] )
		  in  let <_cor15> =
			  %% Line 281
			  ( letrec
				'lc$^1'/1 =
				    fun (_cor13) ->
					case _cor13 of
					  <[{{M,_cor53},R}|_cor12]> when 'true' ->
					      let <_cor14> =
						  apply 'lc$^1'/1
						      (_cor12)
					      in  ( [{M,R}|_cor14]
						    -| ['compiler_generated'] )
					  ( <[_cor11|_cor12]> when 'true' ->
						apply 'lc$^1'/1
						    (_cor12)
					    -| ['compiler_generated'] )
					  <[]> when 'true' ->
					      []
					  ( <_cor13> when 'true' ->
						( primop 'match_fail'
						      ({'function_clause',_cor13})
						  -| [{'function_name',{'lc$^1',1}}] )
					    -| ['compiler_generated'] )
					end
			    in  apply 'lc$^1'/1
				    (_cor9)
			    -| ['list_comprehension'] )
		      in  let <_cor19> =
			      %% Line 282
			      ( fun (_cor17) ->
				    case _cor17 of
				      <{'error',_cor54}> when 'true' ->
					  'true'
				      %% Line 283
				      <_cor55> when 'true' ->
					  'false'
				    end
				-| [{'id',{0,0,'-check_imports_1/3-fun-0-'}}] )
			  in  %% Line 282
			      case call 'lists':'splitwith'
				       (_cor19, _cor15) of
				<{Illegal,Other}> when 'true' ->
				    let <_cor25> =
					%% Line 285
					( letrec
					      'lc$^2'/1 =
						  fun (_cor23) ->
						      case _cor23 of
							<[{M,R}|_cor22]>
							    when call 'erlang':'=/='
								  (M,
								   Module) ->
							    let <_cor24> =
								apply 'lc$^2'/1
								    (_cor22)
							    in  ( [R|_cor24]
								  -| ['compiler_generated'] )
							( <[_cor21|_cor22]> when 'true' ->
							      apply 'lc$^2'/1
								  (_cor22)
							  -| ['compiler_generated'] )
							<[]> when 'true' ->
							    []
							( <_cor23> when 'true' ->
							      ( primop 'match_fail'
								    ({'function_clause',_cor23})
								-| [{'function_name',{'lc$^2',1}}] )
							  -| ['compiler_generated'] )
						      end
					  in  apply 'lc$^2'/1
						  (Other)
					  -| ['list_comprehension'] )
				    in  let <_cor34> =
					    %% Line 287
					    ( letrec
						  'lc$^3'/1 =
						      fun (_cor31) ->
							  case _cor31 of
							    <[{M,R}|_cor28]> when 'true' ->
								let <_cor29> =
								    %% Line 288
								    apply 'name_of_def'/1
									(R)
								in  let <_cor30> =
									%% Line 288
									apply 'chained_import'/4
									    (S, Module, M, _cor29)
								    in  %% Line 288
									( case <> of
									    <>
										when call 'erlang':'=/='
										      ('ok',
										       _cor30) ->
										let <_cor32> =
										    apply 'lc$^3'/1
											(_cor28)
										in  ( [R|_cor32]
										      -| ['compiler_generated'] )
									    ( <> when 'true' ->
										  apply 'lc$^3'/1
										      (_cor28)
									      -| ['compiler_generated'] )
									  end
									  -| ['list_comprehension'] )
							    ( <[_cor27|_cor28]> when 'true' ->
								  apply 'lc$^3'/1
								      (_cor28)
							      -| ['compiler_generated'] )
							    <[]> when 'true' ->
								[]
							    ( <_cor31> when 'true' ->
								  ( primop 'match_fail'
									({'function_clause',_cor31})
								    -| [{'function_name',{'lc$^3',1}}] )
							      -| ['compiler_generated'] )
							  end
					      in  apply 'lc$^3'/1
						      (_cor25)
					      -| ['list_comprehension'] )
					in  let <_cor39> =
						%% Line 286
						( letrec
						      'lc$^4'/1 =
							  fun (_cor37) ->
							      case _cor37 of
								<[{'error',R}|_cor36]> when 'true' ->
								    let <_cor38> =
									apply 'lc$^4'/1
									    (_cor36)
								    in  ( [R|_cor38]
									  -| ['compiler_generated'] )
								( <[_cor35|_cor36]> when 'true' ->
								      apply 'lc$^4'/1
									  (_cor36)
								  -| ['compiler_generated'] )
								<[]> when 'true' ->
								    _cor34
								( <_cor37> when 'true' ->
								      ( primop 'match_fail'
									    ({'function_clause',_cor37})
									-| [{'function_name',{'lc$^4',1}}] )
								  -| ['compiler_generated'] )
							      end
						  in  apply 'lc$^4'/1
							  (Illegal)
						  -| ['list_comprehension'] )
					    in  let <_cor47> =
						    %% Line 289
						    ( letrec
							  'lc$^5'/1 =
							      fun (_cor43) ->
								  case _cor43 of
								    <[%% Line 290
								      Ref|_cor42]> when 'true' ->
									let <_cor44> =
									    apply 'name_of_def'/1
										(Ref)
									in  let <_cor45> =
										apply 'return_asn1_error'/3
										    (S, Ref, {'undefined_import',_cor44,Module})
									    in  let <_cor46> =
										    %% Line 290
										    apply 'lc$^5'/1
											(_cor42)
										in  ( [_cor45|_cor46]
										      -| ['compiler_generated'] )
								    <[]> when 'true' ->
									%% Line 290
									Acc0
								    ( <_cor43> when 'true' ->
									  ( primop 'match_fail'
										({'function_clause',_cor43})
									    -| [{'function_name',{'lc$^5',1}}] )
								      -| ['compiler_generated'] )
								  end
						      in  apply 'lc$^5'/1
							      (_cor39)
						      -| ['list_comprehension'] )
						in  %% Line 291
						    apply 'check_imports_1'/3
							(S, SFMs, _cor47)
				( <_cor20> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor20})
				  -| ['compiler_generated'] )
			      end
	  ( <_cor51,_cor50,_cor49> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor51,_cor50,_cor49})
		  -| [{'function_name',{'check_imports_1',3}}] )
	    -| ['compiler_generated'] )
	end
'chained_import'/4 =
    %% Line 293
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <GetImports> =
	    %% Line 298
	    ( fun (_cor5) ->
		  %% Line 299
		  case call 'asn1_db':'dbget'
			   (_cor5, 'MODULE') of
		    %% Line 300
		    <{'module',_cor31,_cor32,_cor33,_cor34,_cor35,{'imports',ImportList},_cor36,_cor37}> when 'true' ->
			%% Line 301
			ImportList
		    %% Line 302
		    <_cor38> when 'true' ->
			[]
		  end
	      -| [{'id',{0,0,'-chained_import/4-fun-0-'}}] )
	in  let <FindNameInImports> =
		%% Line 306
		( fun (_cor20,_cor19,_cor18) ->
		      case <_cor20,_cor19,_cor18> of
			<[],N,_cor39> when 'true' ->
			    {'no_mod',N}
			%% Line 307
			<[{'SymbolsFromModule',Imports,ModuleRef,_cor40}|SFMs],N,F> when 'true' ->
			    let <_cor15> =
				%% Line 308
				( letrec
				      'lc$^0'/1 =
					  fun (_cor11) ->
					      case _cor11 of
						<[X|_cor9]> when 'true' ->
						    let <_cor10> =
							apply 'name_of_def'/1
							    (X)
						    in  ( case <> of
							    <>
								when call 'erlang':'=:='
								      (_cor10,
								       N) ->
								let <_cor12> =
								    apply 'name_of_def'/1
									(X)
								in  let <_cor13> =
									apply 'lc$^0'/1
									    (_cor9)
								    in  ( [_cor12|_cor13]
									  -| ['compiler_generated'] )
							    ( <> when 'true' ->
								  apply 'lc$^0'/1
								      (_cor9)
							      -| ['compiler_generated'] )
							  end
							  -| ['list_comprehension'] )
						<[]> when 'true' ->
						    []
						( <_cor11> when 'true' ->
						      ( primop 'match_fail'
							    ({'function_clause',_cor11})
							-| [{'function_name',{'lc$^0',1}}] )
						  -| ['compiler_generated'] )
					      end
				  in  apply 'lc$^0'/1
					  (Imports)
				  -| ['list_comprehension'] )
			    in  %% Line 308
				case _cor15 of
				  %% Line 309
				  <[]> when 'true' ->
				      apply F
					  (SFMs, N, F)
				  %% Line 310
				  <[_cor41|[]]>
				      when call 'erlang':'=:='
					    (_cor41,
					     N) ->
				      let <_cor16> =
					  apply 'name_of_def'/1
					      (ModuleRef)
				      in  {_cor16,N}
				  ( <_cor17> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_cor17})
				    -| ['compiler_generated'] )
				end
			( <_cor23,_cor22,_cor21> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor23,_cor22,_cor21})
				-| [{'function_name',{'-chained_import/4-fun-1-',3}}] )
			  -| ['compiler_generated'] )
		      end
		  -| [{'id',{0,0,'-chained_import/4-fun-1-'}}] )
	    in  %% Line 313
		case apply GetImports
			 (_cor2) of
		  %% Line 314
		  <[]> when 'true' ->
		      %% Line 315
		      'error'
		  %% Line 316
		  <Imps> when 'true' ->
		      %% Line 317
		      case apply FindNameInImports
			       (Imps, _cor0, FindNameInImports) of
			%% Line 318
			<{'no_mod',_cor42}> when 'true' ->
			    %% Line 319
			    'error'
			%% Line 320
			<{_cor43,_cor44}>
			    when call 'erlang':'=:='
				  (_cor43,
				   _cor1) ->
			    'ok'
			%% Line 321
			<{OtherMod,_cor45}> when 'true' ->
			    %% Line 322
			    apply 'chained_import'/4
				(_cor3, OtherMod, _cor1, _cor0)
			( <_cor25> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor25})
			  -| ['compiler_generated'] )
		      end
		end
'checkt'/2 =
    %% Line 326
    fun (_cor1,_cor0) ->
	let <Check> = 'do_checkt'/3
	in  let <Types> =
		%% Line 332
		apply 'check_fold'/3
		    (_cor1, _cor0, Check)
	    in  let <CtxtSwitch> =
		    %% Line 333
		    apply 'check_contextswitchingtypes'/2
			(_cor1, [])
		in  let <_cor5> =
			%% Line 334
			call 'lists':'reverse'
			    (CtxtSwitch)
		    in  let <_cor6> =
			    %% Line 334
			    apply 'check_fold'/3
				(_cor1, _cor5, Check)
			in  %% Line 334
			    call 'erlang':'++'
				(_cor6, Types)
'do_checkt'/3 =
    %% Line 336
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,Name,Type0 = {'typedef',_cor26,_cor27,_cor28,TypeSpec}> when 'true' ->
	      %% Line 337
	      case S of
		<{'state',_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41}> when 'true' ->
		    let <_cor4> =
			call 'erlang':'setelement'
			    (5, S, Name)
		    in  let <_cor6> =
			    call 'erlang':'setelement'
				(4, _cor4, Type0)
			in  %% Line 338
			    try
				apply 'check_type'/3
				    (_cor6, Type0, TypeSpec)
			    of <_cor8> ->
				case _cor8 of
				  %% Line 339
				  <Ts = {'type',_cor43,_cor44,_cor45,_cor46,_cor47}> when 'true' ->
				      %% Line 340
				      case _cor26 of
					%% Line 341
					<'true'> when 'true' ->
					    %% Line 342
					    'ok'
					%% Line 343
					<_cor52> when 'true' ->
					    let <_cor12> =
						%% Line 345
						call 'erlang':'setelement'
						    (5, Type0, Ts)
					    in  let <_cor14> =
						    %% Line 344
						    call 'erlang':'setelement'
							(2, _cor12, 'true')
						in  %% Line 346
						    ( case _cor6 of
							( <( {'state',_cor58,_rec11,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69}
							     -| ['compiler_generated'] )> when 'true' ->
							      do  call 'asn1_db':'dbput'
								      (_rec11, %% Line 347
									       Name, _cor14)
								  %% Line 348
								  'ok'
							  -| ['compiler_generated'] )
							( <_cor70> when 'true' ->
							      ( call ( 'erlang'
								       -| ['compiler_generated'] ):( 'error'
												     -| ['compiler_generated'] )
								    (( {'badrecord','state'}
								       -| ['compiler_generated'] ))
								-| ['compiler_generated'] )
							  -| ['compiler_generated'] )
						      end
						      -| ['compiler_generated'] )
				      end
				  ( <_cor19> when 'true' ->
					primop 'match_fail'
					    ({'try_clause',_cor19})
				    -| ['compiler_generated'] )
				end
			    catch <_cor22,_cor21,_cor20> ->
				case <_cor22,_cor21,_cor20> of
				  %% Line 351
				  <'throw',{'error',Reason},_cor71> when 'true' ->
				      %% Line 352
				      apply 'error'/1
					  ({'type',Reason,_cor6})
				  %% Line 353
				  <'throw',{'asn1_class',_X_ClassDef},_cor72> when 'true' ->
				      %% Line 354
				      {'asn1_class',Name}
				  %% Line 355
				  <'throw','pobjectsetdef',_cor73> when 'true' ->
				      %% Line 356
				      {'pobjectsetdef',Name}
				  %% Line 357
				  <'throw','pvalueset',_cor74> when 'true' ->
				      %% Line 358
				      {'pvalueset',Name}
				  ( <_cor22,_cor21,_cor20> when 'true' ->
					primop 'raise'
					    (_cor20, _cor21)
				    -| ['compiler_generated'] )
				end
		( <_cor42> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','state'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  ( <_cor25,_cor24,_cor23> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor25,_cor24,_cor23})
		  -| [{'function_name',{'do_checkt',3}}] )
	    -| ['compiler_generated'] )
	end
'check_contextswitchingtypes'/2 =
    %% Line 361
    fun (_cor1,_cor0) ->
	%% Line 365
	apply 'check_contextswitchingtypes'/3
	    (_cor1, [{'external','EXTERNAL'}|[{'embedded_pdv','EMBEDDED PDV'}|[{'character_string','CHARACTER STRING'}]]], _cor0)
'check_contextswitchingtypes'/3 =
    %% Line 367
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,[{T,TName}|Ts],Acc> when 'true' ->
	      %% Line 368
	      case call 'erlang':'get'
		       (T) of
		%% Line 369
		<'unchecked'> when 'true' ->
		    do  %% Line 370
			call 'erlang':'put'
			    (T, 'generate')
			%% Line 371
			apply 'check_contextswitchingtypes'/3
			    (S, Ts, [TName|Acc])
		%% Line 372
		<_cor7> when 'true' ->
		    %% Line 373
		    apply 'check_contextswitchingtypes'/3
			(S, Ts, Acc)
	      end
	  %% Line 375
	  <_cor8,[],Acc> when 'true' ->
	      %% Line 376
	      Acc
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5,_cor4})
		  -| [{'function_name',{'check_contextswitchingtypes',3}}] )
	    -| ['compiler_generated'] )
	end
'checkv'/2 =
    %% Line 378
    fun (_cor1,_cor0) ->
	%% Line 379
	apply 'check_fold'/3
	    (_cor1, _cor0, ( 'do_checkv'/3
			     -| [{'id',{0,0,'-checkv/2-fun-0-'}}] ))
'do_checkv'/3 =
    %% Line 381
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,Name,Value>
	      when let <_cor3> =
		    %% Line 382
		    ( call ( 'erlang'
			     -| ['compiler_generated'] ):( 'is_record'
							   -| ['compiler_generated'] )
			  (Value, 'valuedef', 7)
		      -| ['compiler_generated'] )
		in  let <_cor4> =
			%% Line 383
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'is_record'
							       -| ['compiler_generated'] )
			      (Value, 'typedef', 5)
			  -| ['compiler_generated'] )
		    in  let <_cor5> =
			    %% Line 384
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'is_record'
								   -| ['compiler_generated'] )
				  (Value, 'pvaluedef', 7)
			      -| ['compiler_generated'] )
			in  let <_cor6> =
				%% Line 385
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'is_record'
								       -| ['compiler_generated'] )
				      (Value, 'pvaluesetdef', 7)
				  -| ['compiler_generated'] )
			    in  let <_cor7> =
				    %% Line 384
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'or'
									   -| ['compiler_generated'] )
					  (_cor5, _cor6)
				      -| ['compiler_generated'] )
				in  let <_cor8> =
					%% Line 383
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'or'
									       -| ['compiler_generated'] )
					      (_cor4, _cor7)
					  -| ['compiler_generated'] )
				    in  %% Line 382
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'or'
									       -| ['compiler_generated'] )
					      (_cor3, _cor8)
					  -| ['compiler_generated'] ) ->
	      %% Line 386
	      case S of
		<{'state',_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47}> when 'true' ->
		    let <_cor11> =
			call 'erlang':'setelement'
			    (6, S, Value)
		    in  %% Line 387
			try
			    apply 'check_value'/2
				(_cor11, Value)
			of <_cor13> ->
			    case _cor13 of
			      %% Line 388
			      <{'valueset',VSet}> when 'true' ->
				  let <Pos> =
				      %% Line 389
				      call 'asn1ct':'get_pos_of_def'
					  (Value)
				  in  let <CheckedVSDef> =
					  %% Line 390
					  {'typedef','true',Pos,%% Line 391
								Name,%% Line 391
								     VSet}
				      in  %% Line 392
					  ( case _cor11 of
					      ( <( {'state',_cor49,_rec13,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60}
						   -| ['compiler_generated'] )> when 'true' ->
						    do  call 'asn1_db':'dbput'
							    (_rec13, Name, CheckedVSDef)
							%% Line 393
							{'valueset',Name}
						-| ['compiler_generated'] )
					      ( <_cor61> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {'badrecord','state'}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
			      %% Line 394
			      <V> when 'true' ->
				  %% Line 396
				  ( case _cor11 of
				      ( <( {'state',_cor62,_rec14,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73}
					   -| ['compiler_generated'] )> when 'true' ->
					    do  call 'asn1_db':'dbput'
						    (_rec14, Name, V)
						%% Line 397
						'ok'
					-| ['compiler_generated'] )
				      ( <_cor74> when 'true' ->
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'error'
										   -| ['compiler_generated'] )
						  (( {'badrecord','state'}
						     -| ['compiler_generated'] ))
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
			    end
			catch <_cor23,_cor22,_cor21> ->
			    case <_cor23,_cor22,_cor21> of
			      %% Line 399
			      <'throw',{'error',Reason},_cor75> when 'true' ->
				  %% Line 400
				  apply 'error'/1
				      ({'value',Reason,_cor11})
			      %% Line 401
			      <'throw',{'pobjectsetdef'},_cor76> when 'true' ->
				  %% Line 402
				  {'pobjectsetdef',Name}
			      %% Line 403
			      <'throw',{'objectsetdef'},_cor77> when 'true' ->
				  %% Line 404
				  {'objectsetdef',Name}
			      %% Line 405
			      <'throw',{'objectdef'},_cor78> when 'true' ->
				  %% Line 408
				  case Value of
				    <{'valuedef',C,Pos,N,Type,Def,_cor79}> when 'true' ->
					%% Line 409
					( case Type of
					    ( <( {'type',_cor80,_rec15,_cor81,_cor82,_cor83}
						 -| ['compiler_generated'] )> when 'true' ->
						  let <NewSpec> =
						      %% Line 410
						      {'Object',_rec15,'true',Def}
						  in  let <NewDef> =
							  %% Line 411
							  {'typedef',C,Pos,N,NewSpec}
						      in  %% Line 412
							  ( case _cor11 of
							      ( <( {'state',_cor85,_rec16,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96}
								   -| ['compiler_generated'] )> when 'true' ->
								    do  call 'asn1_db':'dbput'
									    (_rec16, Name, NewDef)
									%% Line 413
									{'objectdef',Name}
								-| ['compiler_generated'] )
							      ( <_cor97> when 'true' ->
								    ( call ( 'erlang'
									     -| ['compiler_generated'] ):( 'error'
													   -| ['compiler_generated'] )
									  (( {'badrecord','state'}
									     -| ['compiler_generated'] ))
								      -| ['compiler_generated'] )
								-| ['compiler_generated'] )
							    end
							    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					    ( <_cor84> when 'true' ->
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'error'
											 -| ['compiler_generated'] )
							(( {'badrecord','type'}
							   -| ['compiler_generated'] ))
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
					  -| ['compiler_generated'] )
				    ( <_cor24> when 'true' ->
					  primop 'match_fail'
					      ({'badmatch',_cor24})
				      -| ['compiler_generated'] )
				  end
			      ( <_cor23,_cor22,_cor21> when 'true' ->
				    primop 'raise'
					(_cor21, _cor22)
				-| ['compiler_generated'] )
			    end
		( <_cor48> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','state'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  ( <_cor34,_cor33,_cor32> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor34,_cor33,_cor32})
		  -| [{'function_name',{'do_checkv',3}}] )
	    -| ['compiler_generated'] )
	end
'checkp'/2 =
    %% Line 417
    fun (_cor1,_cor0) ->
	%% Line 418
	apply 'check_fold'/3
	    (_cor1, _cor0, ( 'do_checkp'/3
			     -| [{'id',{0,0,'-checkp/2-fun-0-'}}] ))
'do_checkp'/3 =
    %% Line 420
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S0,Name,Type0 = {'ptypedef',_cor23,_cor24,_cor25,_cor26,TypeSpec}> when 'true' ->
	      %% Line 421
	      case S0 of
		<{'state',_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39}> when 'true' ->
		    let <_cor4> =
			call 'erlang':'setelement'
			    (5, S0, Name)
		    in  let <_cor6> =
			    call 'erlang':'setelement'
				(4, _cor4, Type0)
			in  %% Line 422
			    try
				apply 'check_ptype'/3
				    (_cor6, Type0, TypeSpec)
			    of <_cor8> ->
				case _cor8 of
				  %% Line 423
				  <Ts = {'type',_cor41,_cor42,_cor43,_cor44,_cor45}> when 'true' ->
				      let <_cor10> =
					  %% Line 424
					  call 'erlang':'setelement'
					      (6, Type0, Ts)
				      in  let <_cor12> =
					      %% Line 424
					      call 'erlang':'setelement'
						  (2, _cor10, 'true')
					  in  %% Line 425
					      ( case _cor6 of
						  ( <( {'state',_cor52,_rec19,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63}
						       -| ['compiler_generated'] )> when 'true' ->
							do  call 'asn1_db':'dbput'
								(_rec19, Name, _cor12)
							    %% Line 426
							    'ok'
						    -| ['compiler_generated'] )
						  ( <_cor64> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {'badrecord','state'}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
						-| ['compiler_generated'] )
				  ( <_cor16> when 'true' ->
					primop 'match_fail'
					    ({'try_clause',_cor16})
				    -| ['compiler_generated'] )
				end
			    catch <_cor19,_cor18,_cor17> ->
				case <_cor19,_cor18,_cor17> of
				  %% Line 428
				  <'throw',{'error',Reason},_cor65> when 'true' ->
				      %% Line 429
				      apply 'error'/1
					  ({'type',Reason,_cor6})
				  %% Line 430
				  <'throw',{'asn1_class',_X_ClassDef},_cor66> when 'true' ->
				      %% Line 431
				      {'asn1_class',Name}
				  %% Line 432
				  <'throw',{'asn1_param_class',_cor67},_cor68> when 'true' ->
				      %% Line 433
				      'ok'
				  ( <_cor19,_cor18,_cor17> when 'true' ->
					primop 'raise'
					    (_cor17, _cor18)
				    -| ['compiler_generated'] )
				end
		( <_cor40> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','state'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  ( <_cor22,_cor21,_cor20> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor22,_cor21,_cor20})
		  -| [{'function_name',{'do_checkp',3}}] )
	    -| ['compiler_generated'] )
	end
'checkc'/2 =
    %% Line 437
    fun (_cor1,_cor0) ->
	%% Line 438
	apply 'check_fold'/3
	    (_cor1, _cor0, ( 'do_checkc'/3
			     -| [{'id',{0,0,'-checkc/2-fun-0-'}}] ))
'do_checkc'/3 =
    %% Line 440
    fun (_cor2,_cor1,_cor0) ->
	let <Class1,ClassSpec> =
	    %% Line 442
	    case _cor0 of
	      %% Line 443
	      <{'classdef',_cor28,_cor29,_cor30,_cor31}> when 'true' ->
		  %% Line 444
		  <_cor0,_cor0>
	      %% Line 445
	      <{'typedef',_cor32,_cor33,_cor34,_cor35}> when 'true' ->
		  %% Line 446
		  <{'classdef','false','undefined',_cor1,'undefined'},_cor35>
	      ( <_cor5> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor5})
		-| ['compiler_generated'] )
	    end
	in  %% Line 448
	    case _cor2 of
	      <{'state',_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52}> when 'true' ->
		  let <_cor9> =
		      call 'erlang':'setelement'
			  (5, _cor2, _cor1)
		  in  let <_cor11> =
			  call 'erlang':'setelement'
			      (4, _cor9, _cor0)
		      in  %% Line 449
			  try
			      apply 'check_class'/2
				  (_cor11, ClassSpec)
			  of <_cor13> ->
			      %% Line 451
			      case Class1 of
				<{'classdef',_cor54,_cor55,_cor56,_cor57}> when 'true' ->
				    let <_cor15> =
					call 'erlang':'setelement'
					    (5, Class1, _cor13)
				    in  let <_cor17> =
					    call 'erlang':'setelement'
						(2, _cor15, 'true')
					in  %% Line 452
					    ( case _cor11 of
						( <( {'state',_cor59,_rec23,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70}
						     -| ['compiler_generated'] )> when 'true' ->
						      do  call 'asn1_db':'dbput'
							      (_rec23, _cor1, _cor17)
							  %% Line 453
							  'ok'
						  -| ['compiler_generated'] )
						( <_cor71> when 'true' ->
						      ( call ( 'erlang'
							       -| ['compiler_generated'] ):( 'error'
											     -| ['compiler_generated'] )
							    (( {'badrecord','state'}
							       -| ['compiler_generated'] ))
							-| ['compiler_generated'] )
						  -| ['compiler_generated'] )
					      end
					      -| ['compiler_generated'] )
				( <_cor58> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','classdef'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			  catch <_cor24,_cor23,_cor22> ->
			      case <_cor24,_cor23,_cor22> of
				%% Line 455
				<'throw',{'error',Reason},_cor72> when 'true' ->
				    %% Line 456
				    apply 'error'/1
					({'class',Reason,_cor11})
				( <_cor24,_cor23,_cor22> when 'true' ->
				      primop 'raise'
					  (_cor22, _cor23)
				  -| ['compiler_generated'] )
			      end
	      ( <_cor53> when 'true' ->
		    ( call ( 'erlang'
			     -| ['compiler_generated'] ):( 'error'
							   -| ['compiler_generated'] )
			  (( {'badrecord','state'}
			     -| ['compiler_generated'] ))
		      -| ['compiler_generated'] )
		-| ['compiler_generated'] )
	    end
'checko'/5 =
    %% Line 459
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <S,[Name|Os],Acc,ExclO,ExclOS> when 'true' ->
	      %% Line 462
	      ( case S of
		  ( <( {'state',_cor63,_rec24,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor52> =
			    case call 'asn1_db':'dbget'
				     (_rec24, Name) of
			      %% Line 463
			      <'undefined'> when 'true' ->
				  %% Line 464
				  apply 'error'/1
				      ({'type',{'internal_error','???'},S})
			      %% Line 465
			      <Object = {'typedef',_cor76,_cor77,_cor78,_cor79}> when ( 'true'
											-| ['compiler_generated'] ) ->
				  let <_cor8> =
				      %% Line 466
				      call 'erlang':'setelement'
					  (5, S, Name)
				  in  let <_cor10> =
					  %% Line 466
					  call 'erlang':'setelement'
					      (4, _cor8, Object)
				      in  let <_cor14> =
					      catch
						  %% Line 467
						  apply 'check_object'/3
						      (_cor10, Object, _cor79)
					  in  %% Line 467
					      case _cor14 of
						%% Line 468
						<{'error',Reason}> when 'true' ->
						    %% Line 469
						    apply 'error'/1
							({'type',Reason,_cor10})
						%% Line 470
						<{'EXIT',Reason}> when 'true' ->
						    %% Line 471
						    apply 'error'/1
							({'type',{'internal_error',Reason},_cor10})
						%% Line 472
						<{'asn1',Reason}> when 'true' ->
						    %% Line 473
						    apply 'error'/1
							({'type',Reason,_cor10})
						%% Line 474
						<O> when 'true' ->
						    let <_cor16> =
							%% Line 475
							call 'erlang':'setelement'
							    (5, Object, O)
						    in  let <_cor18> =
							    %% Line 475
							    call 'erlang':'setelement'
								(2, _cor16, 'true')
							in  %% Line 476
							    ( case _cor10 of
								( <( {'state',_cor103,_rec28,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_cor110,_cor111,_cor112,_cor113,_cor114}
								     -| ['compiler_generated'] )> when 'true' ->
								      do  call 'asn1_db':'dbput'
									      (_rec28, Name, _cor18)
									  %% Line 477
									  case <> of
									    %% Line 478
									    <>
										when ( call ( 'erlang'
											   -| ['compiler_generated'] ):( 'is_record'
															 -| ['compiler_generated'] )
											(O,
											 'Object',
											 4)
										    -| ['compiler_generated'] ) ->
										%% Line 479
										( case O of
										    ( <( {'Object',_cor116,_rec29,_cor117}
											 -| ['compiler_generated'] )> when 'true' ->
											  case _rec29 of
											    %% Line 480
											    <'true'> when 'true' ->
												%% Line 481
												{'ok',ExclO,ExclOS}
											    %% Line 482
											    <'false'> when 'true' ->
												%% Line 483
												{'ok',[Name|ExclO],ExclOS}
											    ( <_cor24> when 'true' ->
												  primop 'match_fail'
												      ({'case_clause',_cor24})
											      -| ['compiler_generated'] )
											  end
										      -| ['compiler_generated'] )
										    ( <_cor118> when 'true' ->
											  ( call ( 'erlang'
												   -| ['compiler_generated'] ):( 'error'
																 -| ['compiler_generated'] )
												(( {'badrecord','Object'}
												   -| ['compiler_generated'] ))
											    -| ['compiler_generated'] )
										      -| ['compiler_generated'] )
										  end
										  -| ['compiler_generated'] )
									    %% Line 485
									    <>
										when ( call ( 'erlang'
											   -| ['compiler_generated'] ):( 'is_record'
															 -| ['compiler_generated'] )
											(O,
											 'ObjectSet',
											 5)
										    -| ['compiler_generated'] ) ->
										%% Line 486
										( case O of
										    ( <( {'ObjectSet',_cor119,_rec30,_cor120,_cor121}
											 -| ['compiler_generated'] )> when 'true' ->
											  case _rec30 of
											    %% Line 487
											    <'true'> when 'true' ->
												%% Line 488
												{'ok',ExclO,ExclOS}
											    %% Line 489
											    <'false'> when 'true' ->
												%% Line 490
												{'ok',ExclO,[Name|ExclOS]}
											    ( <_cor27> when 'true' ->
												  primop 'match_fail'
												      ({'case_clause',_cor27})
											      -| ['compiler_generated'] )
											  end
										      -| ['compiler_generated'] )
										    ( <_cor122> when 'true' ->
											  ( call ( 'erlang'
												   -| ['compiler_generated'] ):( 'error'
																 -| ['compiler_generated'] )
												(( {'badrecord','ObjectSet'}
												   -| ['compiler_generated'] ))
											    -| ['compiler_generated'] )
										      -| ['compiler_generated'] )
										  end
										  -| ['compiler_generated'] )
									    ( <> when 'true' ->
										  primop 'match_fail'
										      ('if_clause')
									      -| ['compiler_generated'] )
									  end
								  -| ['compiler_generated'] )
								( <_cor115> when 'true' ->
								      ( call ( 'erlang'
									       -| ['compiler_generated'] ):( 'error'
													     -| ['compiler_generated'] )
									    (( {'badrecord','state'}
									       -| ['compiler_generated'] ))
									-| ['compiler_generated'] )
								  -| ['compiler_generated'] )
							      end
							      -| ['compiler_generated'] )
					      end
			      %% Line 494
			      <PObject = {'pobjectdef',_cor123,_cor124,_cor125,_cor126,_cor127,_cor128}> when ( 'true'
														-| ['compiler_generated'] ) ->
				  let <_cor30> =
				      %% Line 495
				      call 'erlang':'setelement'
					  (5, S, Name)
				  in  let <_cor32> =
					  %% Line 495
					  call 'erlang':'setelement'
					      (4, _cor30, PObject)
				      in  let <_cor34> =
					      catch
						  %% Line 496
						  apply 'check_pobject'/2
						      (_cor32, PObject)
					  in  %% Line 496
					      case _cor34 of
						%% Line 497
						<{'error',Reason}> when 'true' ->
						    %% Line 498
						    apply 'error'/1
							({'type',Reason,_cor32})
						%% Line 499
						<{'EXIT',Reason}> when 'true' ->
						    %% Line 500
						    apply 'error'/1
							({'type',{'internal_error',Reason},_cor32})
						%% Line 501
						<{'asn1',Reason}> when 'true' ->
						    %% Line 502
						    apply 'error'/1
							({'type',Reason,_cor32})
						%% Line 503
						<PO> when 'true' ->
						    let <_cor37> =
							%% Line 504
							call 'erlang':'setelement'
							    (7, PObject, PO)
						    in  %% Line 505
							( case _cor32 of
							    ( <( {'state',_cor150,_rec33,_cor151,_cor152,_cor153,_cor154,_cor155,_cor156,_cor157,_cor158,_cor159,_cor160,_cor161}
								 -| ['compiler_generated'] )> when 'true' ->
								  do  call 'asn1_db':'dbput'
									  (_rec33, Name, _cor37)
								      %% Line 506
								      {'ok',[Name|ExclO],ExclOS}
							      -| ['compiler_generated'] )
							    ( <_cor162> when 'true' ->
								  ( call ( 'erlang'
									   -| ['compiler_generated'] ):( 'error'
													 -| ['compiler_generated'] )
									(( {'badrecord','state'}
									   -| ['compiler_generated'] ))
								    -| ['compiler_generated'] )
							      -| ['compiler_generated'] )
							  end
							  -| ['compiler_generated'] )
					      end
			      %% Line 508
			      <PObjSet = {'pvaluesetdef',_cor163,_cor164,_cor165,_cor166,_cor167,_cor168}> when ( 'true'
														  -| ['compiler_generated'] ) ->
				  let <_cor43> =
				      %% Line 511
				      call 'erlang':'setelement'
					  (5, S, Name)
				  in  let <_cor45> =
					  %% Line 511
					  call 'erlang':'setelement'
					      (4, _cor43, PObjSet)
				      in  let <_cor47> =
					      catch
						  %% Line 512
						  apply 'check_pobjectset'/2
						      (_cor45, PObjSet)
					  in  %% Line 512
					      case _cor47 of
						%% Line 513
						<{'error',Reason}> when 'true' ->
						    %% Line 514
						    apply 'error'/1
							({'type',Reason,_cor45})
						%% Line 515
						<{'EXIT',Reason}> when 'true' ->
						    %% Line 516
						    apply 'error'/1
							({'type',{'internal_error',Reason},_cor45})
						%% Line 517
						<{'asn1',Reason}> when 'true' ->
						    %% Line 518
						    apply 'error'/1
							({'type',Reason,_cor45})
						%% Line 519
						<POS> when 'true' ->
						    %% Line 521
						    ( case _cor45 of
							( <( {'state',_cor183,_rec35,_cor184,_cor185,_cor186,_cor187,_cor188,_cor189,_cor190,_cor191,_cor192,_cor193,_cor194}
							     -| ['compiler_generated'] )> when 'true' ->
							      do  call 'asn1_db':'dbput'
								      (_rec35, Name, POS)
								  %% Line 522
								  {'ok',ExclO,[Name|ExclOS]}
							  -| ['compiler_generated'] )
							( <_cor195> when 'true' ->
							      ( call ( 'erlang'
								       -| ['compiler_generated'] ):( 'error'
												     -| ['compiler_generated'] )
								    (( {'badrecord','state'}
								       -| ['compiler_generated'] ))
								-| ['compiler_generated'] )
							  -| ['compiler_generated'] )
						      end
						      -| ['compiler_generated'] )
					      end
			      ( <_cor51> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_cor51})
				-| ['compiler_generated'] )
			    end
			in  %% Line 525
			    case _cor52 of
			      %% Line 526
			      <{'ok',NewExclO,NewExclOS}> when 'true' ->
				  %% Line 527
				  apply 'checko'/5
				      (S, Os, Acc, NewExclO, NewExclOS)
			      %% Line 528
			      <_cor196> when 'true' ->
				  %% Line 529
				  apply 'checko'/5
				      (S, Os, [_cor52|Acc], ExclO, ExclOS)
			    end
		    -| ['compiler_generated'] )
		  ( <_cor75> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 531
	  <_X_S,[],Acc,ExclO,ExclOS> when 'true' ->
	      let <_cor57> =
		  %% Line 532
		  call 'lists':'reverse'
		      (Acc)
	      in  let <_cor56> =
		      %% Line 532
		      call 'lists':'reverse'
			  (ExclO)
		  in  let <_cor55> =
			  %% Line 532
			  call 'lists':'reverse'
			      (ExclOS)
		      in  %% Line 532
			  {_cor57,_cor56,_cor55}
	  ( <_cor62,_cor61,_cor60,_cor59,_cor58> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor62,_cor61,_cor60,_cor59,_cor58})
		  -| [{'function_name',{'checko',5}}] )
	    -| ['compiler_generated'] )
	end
'check_class'/2 =
    %% Line 534
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,CDef = {'classdef',Ch,_cor60,Name,TS}> when 'true' ->
	      %% Line 535
	      case Ch of
		%% Line 536
		<'true'> when 'true' ->
		    TS
		%% Line 537
		<'idle'> when 'true' ->
		    TS
		%% Line 538
		<_cor61> when 'true' ->
		    do  %% Line 539
			apply 'store_class'/4
			    (S, 'idle', CDef, Name)
			let <CheckedTS> =
			    %% Line 540
			    apply 'check_class'/2
				(S, TS)
			in  let <_cor5> =
				%% Line 541
				call 'erlang':'setelement'
				    (5, CDef, CheckedTS)
			    in  do  %% Line 541
				    apply 'store_class'/4
					(S, 'true', _cor5, Name)
				    %% Line 542
				    CheckedTS
	      end
	  %% Line 544
	  <S = {'state',_cor67,M,_cor68,T,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77},ClassSpec = {'type',_cor78,_cor79,_cor80,_cor81,_cor82}> when %% Line 545
																					( 'true'
																					  -| ['compiler_generated'] ) ->
	      %% Line 547
	      case _cor79 of
		%% Line 548
		<{'Externaltypereference',_cor88,_cor89,_cor90}>
		    when let <_cor91> =
			  call 'erlang':'=:='
			      (_cor89, M)
		      in  let <_cor92> =
			      call 'erlang':'=:='
				  (_cor90, T)
			  in  call 'erlang':'and'
				  (_cor91, _cor92) ->
		    %% Line 549
		    {'objectclass',_cor79,'undefined'}
		%% Line 550
		<Tref = {'Externaltypereference',_cor93,_cor94,TName}> when 'true' ->
		    %% Line 551
		    case apply 'get_referenced_type'/2
			     (S, Tref) of
		      <{MName,RefType}> when 'true' ->
			  %% Line 552
			  case apply 'is_class'/2
				   (S, RefType) of
			    %% Line 553
			    <'true'> when 'true' ->
				let <_cor12> =
				    %% Line 555
				    call 'erlang':'setelement'
					(5, S, TName)
				in  let <_cor14> =
					%% Line 554
					call 'erlang':'setelement'
					    (4, _cor12, RefType)
				    in  let <NewState> =
					    %% Line 554
					    apply 'update_state'/2
						(_cor14, %% Line 555
							 MName)
					in  let <_cor16> =
						%% Line 556
						apply 'get_class_def'/2
						    (S, RefType)
					    in  %% Line 556
						apply 'check_class'/2
						    (NewState, _cor16)
			    %% Line 557
			    <_cor109> when 'true' ->
				%% Line 558
				apply 'error'/1
				    ({'class',{'internal_error',RefType},S})
			  end
		      ( <_cor10> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor10})
			-| ['compiler_generated'] )
		    end
		%% Line 560
		<{'pt',ClassRef,Params}> when 'true' ->
		    %% Line 562
		    case apply 'get_referenced_type'/2
			     (S, ClassRef) of
		      <{_cor110,PClassDef}> when 'true' ->
			  let <_cor26> =
			      %% Line 564
			      ( letrec
				    'lc$^0'/1 =
					fun (_cor21) ->
					    case _cor21 of
					      <[%% Line 565
						TmpParam|_cor20]> when 'true' ->
						  let <_cor24> =
						      apply 'match_parameters'/3
							  (S, TmpParam, _cor72)
						  in  let <_cor25> =
							  %% Line 565
							  apply 'lc$^0'/1
							      (_cor20)
						      in  ( [_cor24|_cor25]
							    -| ['compiler_generated'] )
					      <[]> when 'true' ->
						  []
					      ( <_cor21> when 'true' ->
						    ( primop 'match_fail'
							  ({'function_clause',_cor21})
						      -| [{'function_name',{'lc$^0',1}}] )
						-| ['compiler_generated'] )
					    end
				in  apply 'lc$^0'/1
					(%% Line 565
					 Params)
				-| ['list_comprehension'] )
			  in  %% Line 566
			      apply 'instantiate_pclass'/3
				  (S, PClassDef, _cor26)
		      ( <_cor18> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor18})
			-| ['compiler_generated'] )
		    end
		( <_cor28> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor28})
		  -| ['compiler_generated'] )
	      end
	  %% Line 568
	  <S,C = {'objectclass',_cor124,_cor125}> when ( 'true'
							 -| ['compiler_generated'] ) ->
	      let <NewFieldSpec> =
		  %% Line 569
		  apply 'check_class_fields'/2
		      (S, _cor124)
	      in  %% Line 570
		  call 'erlang':'setelement'
		      (2, C, NewFieldSpec)
	  %% Line 571
	  <_X_S,{'poc',_X_ObjSet,_X_Params}> when 'true' ->
	      %% Line 572
	      'fix this later'
	  %% Line 573
	  <S,ClassName> when 'true' ->
	      %% Line 574
	      case apply 'get_referenced_type'/2
		       (S, ClassName) of
		<{RefMod,Def}> when 'true' ->
		    %% Line 575
		    case Def of
		      %% Line 576
		      <ClassDef = {'classdef',_cor131,_cor132,_cor133,_cor134}> when ( 'true'
										       -| ['compiler_generated'] ) ->
			  %% Line 577
			  case _cor131 of
			    %% Line 578
			    <'true'> when 'true' ->
				_cor134
			    %% Line 580
			    <'idle'> when 'true' ->
				_cor134
			    %% Line 582
			    <'false'> when 'true' ->
				%% Line 583
				( case ClassName of
				    ( <( {'Externaltypereference',_cor147,_cor148,_rec45}
					 -| ['compiler_generated'] )> when 'true' ->
					  do  %% Line 584
					      apply 'store_class'/4
						  (S, 'idle', ClassDef, _rec45)
					      %% Line 586
					      case S of
						<{'state',_cor150,_cor151,_cor152,_cor153,_cor154,_cor155,_cor156,_cor157,_cor158,_cor159,_cor160,_cor161,_cor162}> when 'true' ->
						    let <_cor43> =
							call 'erlang':'setelement'
							    (5, S, _rec45)
						    in  let <_cor45> =
							    call 'erlang':'setelement'
								(4, _cor43, Def)
							in  let <NewS> =
								apply 'update_state'/2
								    (_cor45, RefMod)
							    in  let <CheckedTS> =
								    %% Line 587
								    apply 'check_class'/2
									(NewS, _cor134)
								in  let <_cor52> =
									%% Line 588
									call 'erlang':'setelement'
									    (5, ClassDef, CheckedTS)
								    in  do  %% Line 588
									    apply 'store_class'/4
										(S, 'true', _cor52, _rec45)
									    %% Line 589
									    CheckedTS
						( <_cor163> when 'true' ->
						      ( call ( 'erlang'
							       -| ['compiler_generated'] ):( 'error'
											     -| ['compiler_generated'] )
							    (( {'badrecord','state'}
							       -| ['compiler_generated'] ))
							-| ['compiler_generated'] )
						  -| ['compiler_generated'] )
					      end
				      -| ['compiler_generated'] )
				    ( <_cor149> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','Externaltypereference'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
			    ( <_cor53> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor53})
			      -| ['compiler_generated'] )
			  end
		      %% Line 591
		      <TypeDef = {'typedef',_cor173,_cor174,_cor175,_cor176}> when ( 'true'
										     -| ['compiler_generated'] ) ->
			  %% Line 594
			  case _cor176 of
			    %% Line 595
			    <{'type',_cor181,Ext = {'Externaltypereference',_cor182,_cor183,_cor184},_cor185,_cor186,_cor187}> when ( 'true'
																      -| ['compiler_generated'] ) ->
				%% Line 596
				apply 'check_class'/2
				    (S, Ext)
			    ( <_cor56> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor56})
			      -| ['compiler_generated'] )
			  end
		      ( <_cor57> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_cor57})
			-| ['compiler_generated'] )
		    end
		( <_cor34> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor34})
		  -| ['compiler_generated'] )
	      end
	end
'instantiate_pclass'/3 =
    %% Line 600
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S = {'state',_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_X_OldArgs,_cor23,_cor24,_cor25,_cor26,_cor27},PClassDef,Params> when 'true' ->
	      %% Line 601
	      case PClassDef of
		<{'ptypedef',_cor28,_cor29,_cor30,Args,Type}> when 'true' ->
		    let <MatchedArgs> =
			%% Line 602
			apply 'match_args'/4
			    (S, Args, Params, [])
		    in  let <_cor6> =
			    %% Line 604
			    call 'erlang':'setelement'
				(11, S, [])
			in  let <_cor7> =
				%% Line 604
				call 'erlang':'setelement'
				    (9, _cor6, MatchedArgs)
			    in  let <_cor9> =
				    %% Line 604
				    call 'erlang':'setelement'
					(4, _cor7, Type)
				in  %% Line 605
				    apply 'check_class'/2
					(_cor9, {'classdef','false','undefined',_cor19,Type})
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor15,_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14,_cor13})
		  -| [{'function_name',{'instantiate_pclass',3}}] )
	    -| ['compiler_generated'] )
	end
'store_class'/4 =
    %% Line 607
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 608
	case _cor1 of
	  <{'classdef',_cor14,_cor15,_cor16,_cor17}> when 'true' ->
	      let <_cor6> =
		  call 'erlang':'setelement'
		      (2, _cor1, _cor2)
	      in  %% Line 609
		  ( case _cor3 of
		      ( <( {'state',_cor19,_rec53,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30}
			   -| ['compiler_generated'] )> when 'true' ->
			    call 'asn1_db':'dbput'
				(_rec53, _cor0, _cor6)
			-| ['compiler_generated'] )
		      ( <_cor31> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  ( <_cor18> when 'true' ->
		( call ( 'erlang'
			 -| ['compiler_generated'] ):( 'error'
						       -| ['compiler_generated'] )
		      (( {'badrecord','classdef'}
			 -| ['compiler_generated'] ))
		  -| ['compiler_generated'] )
	    -| ['compiler_generated'] )
	end
'check_class_fields'/2 =
    %% Line 611
    fun (_cor1,_cor0) ->
	%% Line 612
	apply 'check_class_fields'/3
	    (_cor1, _cor0, [])
'check_class_fields'/3 =
    %% Line 614
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,[F|Fields],Acc> when 'true' ->
	      let <_cor35> =
		  %% Line 616
		  case call 'erlang':'element'
			   (1, F) of
		    %% Line 617
		    <'fixedtypevaluefield'> when 'true' ->
			%% Line 618
			case F of
			  <{_cor40,Name,Type,Unique,OSpec}> when 'true' ->
			      let <RefType> =
				  %% Line 619
				  apply 'check_type'/3
				      (S, {'typedef','false','undefined','undefined',Type}, Type)
			      in  %% Line 620
				  {'fixedtypevaluefield',Name,RefType,Unique,OSpec}
			  ( <_cor3> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor3})
			    -| ['compiler_generated'] )
			end
		    %% Line 621
		    <'object_or_fixedtypevalue_field'> when 'true' ->
			%% Line 622
			case F of
			  <{_cor41,Name,Type,Unique,OSpec}> when 'true' ->
			      %% Line 625
			      ( case apply 'maybe_unchecked_OCFT'/2
					 (S, Type) of
				  ( <( {'type',_cor42,_rec54,_cor43,_cor44,_cor45}
				       -| ['compiler_generated'] )> when 'true' ->
					let <_cor9> =
					    call 'asn1ct_gen':'get_inner'
						(_rec54)
					in  let <_cor17> =
						case call 'asn1ct_gen':'type'
							 (_cor9) of
						  %% Line 626
						  <Def = {'Externaltypereference',_cor47,_cor48,_cor49}> when ( 'true'
														-| ['compiler_generated'] ) ->
						      %% Line 627
						      case apply 'get_referenced_type'/2
							       (S, Def) of
							<{_cor50,D}> when 'true' ->
							    %% Line 628
							    D
							( <_cor10> when 'true' ->
							      primop 'match_fail'
								  ({'badmatch',_cor10})
							  -| ['compiler_generated'] )
						      end
						  %% Line 629
						  <{'undefined','user'}> when 'true' ->
						      %% Line 632
						      ( case S of
							  ( <( {'state',_cor51,_rec55,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62}
							       -| ['compiler_generated'] )> when 'true' ->
								( case Type of
								    ( <( {'type',_cor64,_rec56,_cor65,_cor66,_cor67}
									 -| ['compiler_generated'] )> when 'true' ->
									  case apply 'get_referenced_type'/2
										   (S, {'Externaltypereference','undefined',_rec55,_rec56}) of
									    <{_cor69,D}> when 'true' ->
										%% Line 633
										D
									    ( <_cor15> when 'true' ->
										  primop 'match_fail'
										      ({'badmatch',_cor15})
									      -| ['compiler_generated'] )
									  end
								      -| ['compiler_generated'] )
								    ( <_cor68> when 'true' ->
									  ( call ( 'erlang'
										   -| ['compiler_generated'] ):( 'error'
														 -| ['compiler_generated'] )
										(( {'badrecord','type'}
										   -| ['compiler_generated'] ))
									    -| ['compiler_generated'] )
								      -| ['compiler_generated'] )
								  end
								  -| ['compiler_generated'] )
							    -| ['compiler_generated'] )
							  ( <_cor63> when 'true' ->
								( call ( 'erlang'
									 -| ['compiler_generated'] ):( 'error'
												       -| ['compiler_generated'] )
								      (( {'badrecord','state'}
									 -| ['compiler_generated'] ))
								  -| ['compiler_generated'] )
							    -| ['compiler_generated'] )
							end
							-| ['compiler_generated'] )
						  %% Line 634
						  <_cor70> when 'true' ->
						      %% Line 635
						      Type
						end
					    in  %% Line 637
						case _cor17 of
						  %% Line 638
						  <Class = {'classdef',_cor71,_cor72,_cor73,_cor74}> when ( 'true'
													    -| ['compiler_generated'] ) ->
						      let <ToExt> =
							  %% Line 641
							  ( fun (_cor19) ->
								case _cor19 of
								  <{'type',_cor75,CE = {'Externaltypereference',_cor76,_cor77,_cor78},_cor79,_cor80,_cor81}> when 'true' ->
								      CE
								  <T> when 'true' ->
								      T
								end
							    -| [{'id',{0,0,'-check_class_fields/3-fun-0-'}}] )
						      in  let <_cor22> =
							      %% Line 642
							      apply ToExt
								  (Type)
							  in  %% Line 642
							      {'objectfield',Name,_cor22,Unique,OSpec}
						  %% Line 643
						  <_cor82> when 'true' ->
						      let <RefType> =
							  %% Line 644
							  apply 'check_type'/3
							      (S, {'typedef','false','undefined','undefined',Type}, Type)
						      in  %% Line 645
							  {'fixedtypevaluefield',Name,RefType,Unique,OSpec}
						end
				    -| ['compiler_generated'] )
				  ( <_cor46> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','type'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			  ( <_cor5> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor5})
			    -| ['compiler_generated'] )
			end
		    %% Line 647
		    <'objectset_or_fixedtypevalueset_field'> when 'true' ->
			%% Line 648
			case F of
			  <{_cor83,Name,Type,OSpec}> when 'true' ->
			      let <_cor26> =
				  catch
				      %% Line 650
				      apply 'check_type'/3
					  (S, {'typedef','false','undefined','undefined',Type}, Type)
			      in  let <_cor30> =
				      %% Line 650
				      case _cor26 of
					%% Line 651
					<{'asn1_class',_X_ClassDef}> when 'true' ->
					    %% Line 652
					    case apply 'if_current_checked_type'/2
						     (S, Type) of
					      %% Line 653
					      <'true'> when 'true' ->
						  %% Line 654
						  ( case Type of
						      ( <( {'type',_cor84,_rec57,_cor85,_cor86,_cor87}
							   -| ['compiler_generated'] )> when 'true' ->
							    _rec57
							-| ['compiler_generated'] )
						      ( <_cor88> when 'true' ->
							    ( call ( 'erlang'
								     -| ['compiler_generated'] ):( 'error'
												   -| ['compiler_generated'] )
								  (( {'badrecord','type'}
								     -| ['compiler_generated'] ))
							      -| ['compiler_generated'] )
							-| ['compiler_generated'] )
						    end
						    -| ['compiler_generated'] )
					      %% Line 655
					      <_cor89> when 'true' ->
						  %% Line 656
						  apply 'check_class'/2
						      (S, Type)
					    end
					%% Line 658
					<CheckedType = {'type',_cor90,_cor91,_cor92,_cor93,_cor94}> when ( 'true'
													   -| ['compiler_generated'] ) ->
					    %% Line 659
					    CheckedType
					%% Line 660
					<_cor95> when 'true' ->
					    %% Line 661
					    apply 'error'/1
						({'class',[105|[110|[116|[101|[114|[110|[97|[108|[32|[101|[114|[114|[111|[114|[44|[32|[99|[104|[101|[99|[107|[95|[99|[108|[97|[115|[115|[95|[102|[105|[101|[108|[100|[115]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],S})
				      end
				  in  %% Line 663
				      case <> of
					%% Line 664
					<>
					    when ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'is_record'
										     -| ['compiler_generated'] )
						    (_cor30,
						     'Externaltypereference',
						     4)
						-| ['compiler_generated'] ) ->
					    %% Line 665
					    {'objectsetfield',Name,Type,OSpec}
					%% Line 666
					<>
					    when ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'is_record'
										     -| ['compiler_generated'] )
						    (_cor30,
						     'classdef',
						     5)
						-| ['compiler_generated'] ) ->
					    %% Line 667
					    {'objectsetfield',Name,Type,OSpec}
					%% Line 668
					<>
					    when ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'is_record'
										     -| ['compiler_generated'] )
						    (_cor30,
						     'objectclass',
						     3)
						-| ['compiler_generated'] ) ->
					    %% Line 669
					    {'objectsetfield',Name,Type,OSpec}
					%% Line 670
					<> when 'true' ->
					    %% Line 671
					    {'fixedtypevaluesetfield',Name,_cor30,OSpec}
				      end
			  ( <_cor25> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor25})
			    -| ['compiler_generated'] )
			end
		    %% Line 673
		    <'typefield'> when 'true' ->
			%% Line 674
			case F of
			  %% Line 675
			  <{TF,Name,{'DEFAULT',Type}}> when 'true' ->
			      let <_cor32> =
				  %% Line 676
				  apply 'check_type'/3
				      (S, {'typedef','false','undefined','undefined',Type}, Type)
			      in  %% Line 676
				  {TF,Name,{'DEFAULT',_cor32}}
			  %% Line 677
			  <_cor96> when 'true' ->
			      F
			end
		    %% Line 679
		    <_cor97> when 'true' ->
			F
		  end
	      in  %% Line 681
		  apply 'check_class_fields'/3
		      (S, Fields, [_cor35|Acc])
	  %% Line 682
	  <_X_S,[],Acc> when 'true' ->
	      %% Line 683
	      call 'lists':'reverse'
		  (Acc)
	  ( <_cor39,_cor38,_cor37> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor39,_cor38,_cor37})
		  -| [{'function_name',{'check_class_fields',3}}] )
	    -| ['compiler_generated'] )
	end
'maybe_unchecked_OCFT'/2 =
    %% Line 685
    fun (_cor1,_cor0) ->
	%% Line 686
	( case _cor0 of
	    ( <( {'type',_cor7,_rec58,_cor8,_cor9,_cor10}
		 -| ['compiler_generated'] )> when 'true' ->
		  case _rec58 of
		    %% Line 687
		    <{'ObjectClassFieldType',_cor12,_cor13,_cor14,'undefined'}> when 'true' ->
			%% Line 688
			apply 'check_type'/3
			    (_cor1, {'typedef','false','undefined','undefined',_cor0}, _cor0)
		    %% Line 689
		    <_cor15> when 'true' ->
			_cor0
		  end
	      -| ['compiler_generated'] )
	    ( <_cor11> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','type'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'if_current_checked_type'/2 =
    %% Line 693
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,{'type',_cor15,Def,_cor16,_cor17,_cor18}> when 'true' ->
	      %% Line 694
	      ( case S of
		  ( <( {'state',_cor19,_rec59,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30}
		       -| ['compiler_generated'] )> when 'true' ->
			%% Line 698
			case Def of
			  %% Line 699
			  <{'Externaltypereference',_cor58,_cor59,_cor60}>
			      when let <_cor61> =
				    call 'erlang':'=:='
					(_cor59, _rec59)
				in  let <_cor62> =
					call 'erlang':'=:='
					    (_cor60, _cor21)
				    in  call 'erlang':'and'
					    (_cor61, _cor62) ->
			      %% Line 701
			      'true'
			  %% Line 702
			  <{'Externaltypereference',_cor63,ModuleName,_cor64}>
			      when call 'erlang':'=:='
				    (_cor64,
				     _cor21) ->
			      %% Line 704
			      case _cor26 of
				%% Line 705
				<'undefined'> when 'true' ->
				    %% Line 706
				    'false'
				%% Line 707
				<_cor65> when 'true' ->
				    %% Line 708
				    call 'lists':'member'
					(ModuleName, _cor26)
			      end
			  %% Line 710
			  <_cor66> when 'true' ->
			      %% Line 711
			      'false'
			end
		    -| ['compiler_generated'] )
		  ( <_cor31> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14,_cor13})
		  -| [{'function_name',{'if_current_checked_type',2}}] )
	    -| ['compiler_generated'] )
	end
'check_pobject'/2 =
    %% Line 716
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_S,PObject = {'pobjectdef',_cor7,_cor8,_cor9,_cor10,_cor11,_cor12}> when ( 'true'
											-| ['compiler_generated'] ) ->
	      _cor12
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'check_pobject',2}}] )
	    -| ['compiler_generated'] )
	end
'check_pobjectset'/2 =
    %% Line 721
    fun (_cor1,_cor0) ->
	%% Line 723
	case _cor0 of
	  <{'pvaluesetdef',_cor15,Pos,Name,Args,Type,ValueSet}> when 'true' ->
	      %% Line 724
	      ( case Type of
		  ( <( {'type',_cor16,_rec63,_cor17,_cor18,_cor19}
		       -| ['compiler_generated'] )> when 'true' ->
			case apply 'get_referenced_type'/2
				 (_cor1, _rec63) of
			  <{Mod,Def}> when 'true' ->
			      %% Line 725
			      case Def of
				%% Line 726
				<{'classdef',_cor21,_cor22,_cor23,_cor24}> when 'true' ->
				    let <_cor6> =
					%% Line 728
					apply 'get_datastr_name'/1
					    (Def)
				    in  let <ClassName> =
					    %% Line 727
					    {'Externaltypereference','undefined',Mod,_cor6}
					in  %% Line 729
					    case ValueSet of
					      <{'valueset',Set}> when 'true' ->
						  let <ObjectSet> =
						      %% Line 731
						      {'ObjectSet',ClassName,'true','undefined',%% Line 732
												Set}
						  in  %% Line 733
						      {'pobjectsetdef','false',Pos,Name,Args,_rec63,%% Line 734
												    ObjectSet}
					      ( <_cor8> when 'true' ->
						    primop 'match_fail'
							({'badmatch',_cor8})
						-| ['compiler_generated'] )
					    end
				%% Line 735
				<_cor30> when 'true' ->
				    _cor0
			      end
			  ( <_cor5> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor5})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor20> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','type'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'check_object'/3 =
    %% Line 739
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <_X_S,ObjDef = {'typedef',_cor168,_cor169,_cor170,_cor171},ObjSpec>
	      when call 'erlang':'=:='
		    (_cor168,
		     'true') ->
	      %% Line 740
	      ObjSpec
	  %% Line 741
	  <S,_X_ObjDef,{'Object',ClassRef,_cor172,ObjectDef}> when 'true' ->
	      let <NewClassRef> =
		  %% Line 745
		  apply 'check_externaltypereference'/2
		      (S, ClassRef)
	      in  let <_cor33> =
		      %% Line 747
		      case apply 'get_referenced_type'/2
			       (S, ClassRef) of
			%% Line 748
			<{MName,ClDef = {'classdef','false',_cor173,_cor174,_cor175}}> when 'true' ->
			    %% Line 750
			    ( case ClassRef of
				( <( {'Externaltypereference',_cor176,_cor177,_rec67}
				     -| ['compiler_generated'] )> when 'true' ->
				      case S of
					<{'state',_cor179,_cor180,_cor181,_cor182,_cor183,_cor184,_cor185,_cor186,_cor187,_cor188,_cor189,_cor190,_cor191}> when 'true' ->
					    let <_cor14> =
						call 'erlang':'setelement'
						    (5, S, _rec67)
					    in  let <_cor16> =
						    call 'erlang':'setelement'
							(4, _cor14, ClDef)
						in  let <NewState> =
							apply 'update_state'/2
							    (_cor16, MName)
						    in  let <ObjClass> =
							    %% Line 752
							    apply 'check_class'/2
								(NewState, ClDef)
							in  %% Line 753
							    {'classdef','true','undefined','undefined',%% Line 754
												       ObjClass}
					( <_cor192> when 'true' ->
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'error'
										     -| ['compiler_generated'] )
						    (( {'badrecord','state'}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				  -| ['compiler_generated'] )
				( <_cor178> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','Externaltypereference'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
			%% Line 755
			<{_cor193,_X_ClDef = {'classdef',_cor194,_cor195,_cor196,_cor197}}> when ( 'true'
												   -| ['compiler_generated'] ) ->
			    %% Line 756
			    _X_ClDef
			%% Line 757
			<{MName,_X_TDef = {'typedef','false',Pos,%% Line 758
								 _X_TName,%% Line 758
									  TS}}> when 'true' ->
			    let <ClDef> =
				%% Line 759
				{'classdef','false',Pos,_X_TName,TS}
			    in  %% Line 761
				( case ClassRef of
				    ( <( {'Externaltypereference',_cor198,_cor199,_rec70}
					 -| ['compiler_generated'] )> when 'true' ->
					  case S of
					    <{'state',_cor201,_cor202,_cor203,_cor204,_cor205,_cor206,_cor207,_cor208,_cor209,_cor210,_cor211,_cor212,_cor213}> when 'true' ->
						let <_cor24> =
						    call 'erlang':'setelement'
							(5, S, _rec70)
						in  let <_cor26> =
							call 'erlang':'setelement'
							    (4, _cor24, _X_TDef)
						    in  let <NewState> =
							    apply 'update_state'/2
								(_cor26, MName)
							in  let <ObjClass> =
								%% Line 763
								apply 'check_class'/2
								    (NewState, ClDef)
							    in  %% Line 764
								case ClDef of
								  <{'classdef',_cor215,_cor216,_cor217,_cor218}> when 'true' ->
								      let <_cor30> =
									  call 'erlang':'setelement'
									      (5, ClDef, ObjClass)
								      in  call 'erlang':'setelement'
									      (2, _cor30, 'true')
								  ( <_cor219> when 'true' ->
									( call ( 'erlang'
										 -| ['compiler_generated'] ):( 'error'
													       -| ['compiler_generated'] )
									      (( {'badrecord','classdef'}
										 -| ['compiler_generated'] ))
									  -| ['compiler_generated'] )
								    -| ['compiler_generated'] )
								end
					    ( <_cor214> when 'true' ->
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'error'
											 -| ['compiler_generated'] )
							(( {'badrecord','state'}
							   -| ['compiler_generated'] ))
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
				      -| ['compiler_generated'] )
				    ( <_cor200> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','Externaltypereference'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
			%% Line 765
			<{_cor220,_X_ClDef}> when 'true' ->
			    %% Line 766
			    _X_ClDef
			( <_cor32> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor32})
			  -| ['compiler_generated'] )
		      end
		  in  let <_cor45> =
			  %% Line 769
			  case ObjectDef of
			    %% Line 770
			    <Def>
				when try
				      let <_cor35> =
					  call 'erlang':'is_tuple'
					      (ObjectDef)
				      in  let <_cor36> =
					      call 'erlang':'element'
						  (1, ObjectDef)
					  in  let <_cor37> =
						  call 'erlang':'=:='
						      (_cor36, 'object')
					      in  call 'erlang':'and'
						      (_cor35, _cor37)
				  of <Try> ->
				      Try
				  catch <T,R> ->
				      'false' ->
				let <NewSettingList> =
				    %% Line 771
				    apply 'check_objectdefn'/3
					(S, Def, _cor33)
				in  %% Line 772
				    {'Object','undefined','true',NewSettingList}
			    %% Line 773
			    <{'po',{'object',DefObj},ArgsList}> when 'true' ->
				%% Line 774
				case apply 'get_referenced_type'/2
					 (S, DefObj) of
				  <{_cor221,Object}> when 'true' ->
				      %% Line 778
				      apply 'instantiate_po'/4
					  (S, _cor33, Object, ArgsList)
				  ( <_cor39> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_cor39})
				    -| ['compiler_generated'] )
				end
			    %% Line 779
			    <{'pv',{'simpledefinedvalue',ObjRef},ArgList}> when 'true' ->
				%% Line 780
				case apply 'get_referenced_type'/2
					 (S, ObjRef) of
				  <{_cor222,Object}> when 'true' ->
				      %% Line 781
				      apply 'instantiate_po'/4
					  (S, _cor33, Object, ArgList)
				  ( <_cor40> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_cor40})
				    -| ['compiler_generated'] )
				end
			    %% Line 782
			    <{'Externalvaluereference',_cor223,_cor224,_cor225}> when 'true' ->
				%% Line 783
				case apply 'get_referenced_type'/2
					 (S, ObjectDef) of
				  <{_cor226,Object}> when 'true' ->
				      %% Line 784
				      ( case Object of
					  ( <( {'typedef',_cor227,_cor228,_cor229,_rec72}
					       -| ['compiler_generated'] )> when 'true' ->
						apply 'check_object'/3
						    (S, Object, _rec72)
					    -| ['compiler_generated'] )
					  ( <_cor230> when 'true' ->
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'error'
										       -| ['compiler_generated'] )
						      (( {'badrecord','typedef'}
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
				  ( <_cor41> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_cor41})
				    -| ['compiler_generated'] )
				end
			    %% Line 785
			    <[]> when 'true' ->
				do  %% Line 789
				    apply 'class_fields_optional_check'/2
					(S, _cor33)
				    %% Line 790
				    {'Object','undefined','true',{'object','defaultsyntax',[]}}
			    %% Line 791
			    <_cor231> when 'true' ->
				%% Line 792
				call 'erlang':'exit'
				    ({'error',{'no_object',ObjectDef},S})
			  end
		      in  %% Line 794
			  ( case _cor45 of
			      ( <( {'Object',_cor232,_cor233,_rec73}
				   -| ['compiler_generated'] )> when 'true' ->
				    %% Line 795
				    ( case _cor33 of
					( <( {'classdef',_cor235,_cor236,_cor237,_rec75}
					     -| ['compiler_generated'] )> when 'true' ->
					      ( case _rec75 of
						  ( <( {'objectclass',_rec74,_cor239}
						       -| ['compiler_generated'] )> when 'true' ->
							let <Gen> =
							    apply 'gen_incl'/3
								(S, _rec73, _rec74)
							in  %% Line 796
							    {'Object',NewClassRef,Gen,_rec73}
						    -| ['compiler_generated'] )
						  ( <_cor240> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {'badrecord','objectclass'}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
					( <_cor238> when 'true' ->
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'error'
										     -| ['compiler_generated'] )
						    (( {'badrecord','classdef'}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			      ( <_cor234> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','Object'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
	  %% Line 799
	  <S,%% Line 800
	     _X_ObjSetDef,ObjSet = %% Line 801
				   {'ObjectSet',ClassRef,_cor242,_cor243,_cor244}> when 'true' ->
	      %% Line 804
	      case apply 'get_referenced_type'/2
		       (S, ClassRef) of
		<{_cor245,ClassDef}> when 'true' ->
		    let <NewClassRef> =
			%% Line 805
			apply 'check_externaltypereference'/2
			    (S, ClassRef)
		    in  let <_cor58> =
			    catch
				%% Line 807
				apply 'get_unique_fieldname'/2
				    (S, ClassDef)
			in  let <_cor61> =
				%% Line 807
				case _cor58 of
				  %% Line 808
				  <{'error','__undefined_',_cor246}> when 'true' ->
				      %% Line 809
				      {{'unique','undefined'},{'unique','undefined'}}
				  %% Line 810
				  <{'asn1',Msg,_cor247}> when 'true' ->
				      apply 'error'/1
					  ({'class',Msg,S})
				  %% Line 811
				  <{'EXIT',Msg}> when 'true' ->
				      apply 'error'/1
					  ({'class',{'internal_error',Msg},S})
				  %% Line 812
				  <Other> when 'true' ->
				      let <_cor59> =
					  call 'erlang':'element'
					      (1, Other)
				      in  {_cor59,Other}
				end
			    in  %% Line 806
				case _cor61 of
				  <{UniqueFieldName,UniqueInfo}> when 'true' ->
				      let <_cor150> =
					  %% Line 815
					  case apply 'prepare_objset'/1
						   (_cor244) of
					    %% Line 816
					    <{'set',SET,EXT}> when 'true' ->
						let <CheckedSet> =
						    %% Line 817
						    apply 'check_object_list'/3
							(S, NewClassRef, SET)
						in  let <NewSet> =
							%% Line 818
							apply 'get_unique_valuelist'/3
							    (S, CheckedSet, UniqueInfo)
						    in  let <_rec81> =
							    %% Line 820
							    apply 'extensionmark'/2
								(NewSet, EXT)
							in  let <_cor69> =
								%% Line 820
								call 'erlang':'setelement'
								    (5, ObjSet, _rec81)
							    in  %% Line 819
								call 'erlang':'setelement'
								    (4, _cor69, UniqueFieldName)
					    %% Line 822
					    <{'SingleValue',ERef = {'Externalvaluereference',_cor257,_cor258,_cor259}}> when 'true' ->
						%% Line 823
						case apply 'get_referenced_type'/2
							 (S, ERef) of
						  <{RefedMod,ObjDef}> when 'true' ->
						      %% Line 825
						      ( case ObjDef of
							  ( <( {'typedef',_cor260,_cor261,_cor262,_rec83}
							       -| ['compiler_generated'] )> when 'true' ->
								case apply 'check_object'/3
									 (S, ObjDef, _rec83) of
								  <{'Object',_cor264,_cor265,CheckedObj}> when 'true' ->
								      let <_cor75> =
									  %% Line 827
									  apply 'get_datastr_name'/1
									      (ObjDef)
								      in  let <NewSet> =
									      %% Line 827
									      apply 'get_unique_valuelist'/3
										  (S, [{{RefedMod,_cor75},%% Line 828
													  CheckedObj}|%% Line 828
														      []], %% Line 829
															   UniqueInfo)
									  in  let <_cor78> =
										  %% Line 831
										  call 'erlang':'setelement'
										      (5, ObjSet, NewSet)
									      in  %% Line 830
										  call 'erlang':'setelement'
										      (4, _cor78, UniqueFieldName)
								  ( <_cor74> when 'true' ->
									primop 'match_fail'
									    ({'badmatch',_cor74})
								    -| ['compiler_generated'] )
								end
							    -| ['compiler_generated'] )
							  ( <_cor263> when 'true' ->
								( call ( 'erlang'
									 -| ['compiler_generated'] ):( 'error'
												       -| ['compiler_generated'] )
								      (( {'badrecord','typedef'}
									 -| ['compiler_generated'] ))
								  -| ['compiler_generated'] )
							    -| ['compiler_generated'] )
							end
							-| ['compiler_generated'] )
						  ( <_cor71> when 'true' ->
							primop 'match_fail'
							    ({'badmatch',_cor71})
						    -| ['compiler_generated'] )
						end
					    %% Line 832
					    <['EXTENSIONMARK']> when 'true' ->
						let <_cor81> =
						    %% Line 834
						    call 'erlang':'setelement'
							(5, ObjSet, ['EXTENSIONMARK'])
						in  %% Line 833
						    call 'erlang':'setelement'
							(4, _cor81, UniqueFieldName)
					    %% Line 836
					    <OSref = {'Externaltypereference',_cor276,_cor277,_cor278}> when ( 'true'
													       -| ['compiler_generated'] ) ->
						%% Line 837
						case apply 'get_referenced_type'/2
							 (S, OSref) of
						  <{_cor279,OS = {'typedef',_cor280,_cor281,_cor282,OSdef}}> when 'true' ->
						      %% Line 838
						      apply 'check_object'/3
							  (S, OS, OSdef)
						  ( <_cor83> when 'true' ->
							primop 'match_fail'
							    ({'badmatch',_cor83})
						    -| ['compiler_generated'] )
						end
					    %% Line 840
					    <{Type = {'type',_cor283,_cor284,_cor285,_cor286,_cor287},{'EXCEPT',Exclusion}}> when ( 'true'
																    -| ['compiler_generated'] ) ->
						%% Line 841
						case apply 'get_referenced_type'/2
							 (S, _cor284) of
						  <{_cor293,TDef}> when 'true' ->
						      %% Line 842
						      ( case TDef of
							  ( <( {'typedef',_cor294,_cor295,_cor296,_rec87}
							       -| ['compiler_generated'] )> when 'true' ->
								%% Line 843
								( case _rec87 of
								    ( <( {'ObjectSet',_cor298,_cor299,_cor300,_rec88}
									 -| ['compiler_generated'] )> when 'true' ->
									  let <NewSet> =
									      apply 'reduce_objectset'/2
										  (_rec88, Exclusion)
									  in  let <_cor95> =
										  %% Line 844
										  call 'erlang':'setelement'
										      (5, _rec87, NewSet)
									      in  let <_cor99> =
										      %% Line 845
										      call 'erlang':'setelement'
											  (5, TDef, _cor95)
										  in  %% Line 845
										      apply 'check_object'/3
											  (S, _cor99, _cor95)
								      -| ['compiler_generated'] )
								    ( <_cor301> when 'true' ->
									  ( call ( 'erlang'
										   -| ['compiler_generated'] ):( 'error'
														 -| ['compiler_generated'] )
										(( {'badrecord','ObjectSet'}
										   -| ['compiler_generated'] ))
									    -| ['compiler_generated'] )
								      -| ['compiler_generated'] )
								  end
								  -| ['compiler_generated'] )
							    -| ['compiler_generated'] )
							  ( <_cor297> when 'true' ->
								( call ( 'erlang'
									 -| ['compiler_generated'] ):( 'error'
												       -| ['compiler_generated'] )
								      (( {'badrecord','typedef'}
									 -| ['compiler_generated'] ))
								  -| ['compiler_generated'] )
							    -| ['compiler_generated'] )
							end
							-| ['compiler_generated'] )
						  ( <_cor86> when 'true' ->
							primop 'match_fail'
							    ({'badmatch',_cor86})
						    -| ['compiler_generated'] )
						end
					    %% Line 847
					    <{'type',_cor312,{'pt',DefinedObjSet,ParamList},_cor313,_cor314,_cor315}> when 'true' ->
						%% Line 848
						case apply 'get_referenced_type'/2
							 (S, DefinedObjSet) of
						  <{_cor316,PObjSetDef}> when 'true' ->
						      let <_cor108> =
							  %% Line 850
							  ( letrec
								'lc$^0'/1 =
								    fun (_cor103) ->
									case _cor103 of
									  <[%% Line 851
									    TmpParam|_cor102]> when 'true' ->
									      ( case S of
										  ( <( {'state',_cor317,_cor318,_cor319,_cor320,_cor321,_cor322,_cor323,_rec91,_cor324,_cor325,_cor326,_cor327,_cor328}
										       -| ['compiler_generated'] )> when 'true' ->
											let <_cor106> =
											    apply 'match_parameters'/3
												(S, TmpParam, _rec91)
											in  let <_cor107> =
												%% Line 851
												apply 'lc$^0'/1
												    (_cor102)
											    in  ( [_cor106|_cor107]
												  -| ['compiler_generated'] )
										    -| ['compiler_generated'] )
										  ( <_cor329> when 'true' ->
											( call ( 'erlang'
												 -| ['compiler_generated'] ):( 'error'
															       -| ['compiler_generated'] )
											      (( {'badrecord','state'}
												 -| ['compiler_generated'] ))
											  -| ['compiler_generated'] )
										    -| ['compiler_generated'] )
										end
										-| ['compiler_generated'] )
									  <[]> when 'true' ->
									      []
									  ( <_cor103> when 'true' ->
										( primop 'match_fail'
										      ({'function_clause',_cor103})
										  -| [{'function_name',{'lc$^0',1}}] )
									    -| ['compiler_generated'] )
									end
							    in  apply 'lc$^0'/1
								    (%% Line 851
								     ParamList)
							    -| ['list_comprehension'] )
						      in  %% Line 852
							  apply 'instantiate_pos'/4
							      (S, ClassRef, PObjSetDef, _cor108)
						  ( <_cor100> when 'true' ->
							primop 'match_fail'
							    ({'badmatch',_cor100})
						    -| ['compiler_generated'] )
						end
					    %% Line 857
					    <{'type',_cor330,{'ObjectClassFieldType',ObjName,_cor331,%% Line 858
												     FieldName,_cor332},_cor333,_cor334,_cor335}> when 'true' ->
						%% Line 859
						case apply 'get_referenced_type'/2
							 (S, ObjName) of
						  <{RefedObjMod,TDef}> when 'true' ->
						      %% Line 860
						      ( case TDef of
							  ( <( {'typedef',_cor336,_cor337,_cor338,_rec92}
							       -| ['compiler_generated'] )> when 'true' ->
								let <OS2> =
								    %% Line 864
								    apply 'check_object'/3
									(S, TDef, _rec92)
								in  let <NewSet> =
									%% Line 865
									apply 'object_set_from_objects'/4
									    (S, RefedObjMod, FieldName, OS2)
								    in  let <_cor117> =
									    %% Line 867
									    call 'erlang':'setelement'
										(5, ObjSet, NewSet)
									in  %% Line 866
									    call 'erlang':'setelement'
										(4, _cor117, UniqueFieldName)
							    -| ['compiler_generated'] )
							  ( <_cor339> when 'true' ->
								( call ( 'erlang'
									 -| ['compiler_generated'] ):( 'error'
												       -| ['compiler_generated'] )
								      (( {'badrecord','typedef'}
									 -| ['compiler_generated'] ))
								  -| ['compiler_generated'] )
							    -| ['compiler_generated'] )
							end
							-| ['compiler_generated'] )
						  ( <_cor110> when 'true' ->
							primop 'match_fail'
							    ({'badmatch',_cor110})
						    -| ['compiler_generated'] )
						end
					    %% Line 868
					    <{'ObjectSetFromObjects',{_cor345,_cor346,ObjName},FieldName}> when 'true' ->
						%% Line 869
						case apply 'get_referenced_type'/2
							 (S, ObjName) of
						  <{RefedObjMod,TDef}> when 'true' ->
						      %% Line 870
						      ( case TDef of
							  ( <( {'typedef',_cor347,_cor348,_cor349,_rec94}
							       -| ['compiler_generated'] )> when 'true' ->
								let <OS2> =
								    %% Line 874
								    apply 'check_object'/3
									(S, TDef, _rec94)
								in  let <NewSet> =
									%% Line 875
									apply 'object_set_from_objects'/4
									    (S, RefedObjMod, FieldName, OS2)
								    in  let <_cor126> =
									    %% Line 877
									    call 'erlang':'setelement'
										(5, ObjSet, NewSet)
									in  %% Line 876
									    call 'erlang':'setelement'
										(4, _cor126, UniqueFieldName)
							    -| ['compiler_generated'] )
							  ( <_cor350> when 'true' ->
								( call ( 'erlang'
									 -| ['compiler_generated'] ):( 'error'
												       -| ['compiler_generated'] )
								      (( {'badrecord','typedef'}
									 -| ['compiler_generated'] ))
								  -| ['compiler_generated'] )
							    -| ['compiler_generated'] )
							end
							-| ['compiler_generated'] )
						  ( <_cor119> when 'true' ->
							primop 'match_fail'
							    ({'badmatch',_cor119})
						    -| ['compiler_generated'] )
						end
					    %% Line 878
					    <{'ObjectSetFromObjects',{_cor356,ObjName},FieldName}> when 'true' ->
						%% Line 883
						case apply 'get_referenced_type'/2
							 (S, ObjName) of
						  <{RefedObjMod,TDef}> when 'true' ->
						      %% Line 884
						      ( case TDef of
							  ( <( {'typedef',_cor357,_cor358,_cor359,_rec96}
							       -| ['compiler_generated'] )> when 'true' ->
								let <O2> =
								    %% Line 885
								    apply 'check_object'/3
									(S, TDef, _rec96)
								in  let <NewSet> =
									%% Line 886
									apply 'object_set_from_objects'/4
									    (S, RefedObjMod, FieldName, O2)
								    in  let <_cor135> =
									    %% Line 888
									    call 'erlang':'setelement'
										(5, ObjSet, NewSet)
									in  %% Line 887
									    call 'erlang':'setelement'
										(4, _cor135, UniqueFieldName)
							    -| ['compiler_generated'] )
							  ( <_cor360> when 'true' ->
								( call ( 'erlang'
									 -| ['compiler_generated'] ):( 'error'
												       -| ['compiler_generated'] )
								      (( {'badrecord','typedef'}
									 -| ['compiler_generated'] ))
								  -| ['compiler_generated'] )
							    -| ['compiler_generated'] )
							end
							-| ['compiler_generated'] )
						  ( <_cor128> when 'true' ->
							primop 'match_fail'
							    ({'badmatch',_cor128})
						    -| ['compiler_generated'] )
						end
					    %% Line 891
					    <{'pos',{'objectset',_cor366,DefinedObjSet},Params}> when 'true' ->
						%% Line 892
						case apply 'get_referenced_type'/2
							 (S, DefinedObjSet) of
						  <{_cor367,PObjSetDef}> when 'true' ->
						      let <_cor147> =
							  %% Line 894
							  ( letrec
								'lc$^1'/1 =
								    fun (_cor142) ->
									case _cor142 of
									  <[%% Line 895
									    TmpParam|_cor141]> when 'true' ->
									      ( case S of
										  ( <( {'state',_cor368,_cor369,_cor370,_cor371,_cor372,_cor373,_cor374,_rec98,_cor375,_cor376,_cor377,_cor378,_cor379}
										       -| ['compiler_generated'] )> when 'true' ->
											let <_cor145> =
											    apply 'match_parameters'/3
												(S, TmpParam, _rec98)
											in  let <_cor146> =
												%% Line 895
												apply 'lc$^1'/1
												    (_cor141)
											    in  ( [_cor145|_cor146]
												  -| ['compiler_generated'] )
										    -| ['compiler_generated'] )
										  ( <_cor380> when 'true' ->
											( call ( 'erlang'
												 -| ['compiler_generated'] ):( 'error'
															       -| ['compiler_generated'] )
											      (( {'badrecord','state'}
												 -| ['compiler_generated'] ))
											  -| ['compiler_generated'] )
										    -| ['compiler_generated'] )
										end
										-| ['compiler_generated'] )
									  <[]> when 'true' ->
									      []
									  ( <_cor142> when 'true' ->
										( primop 'match_fail'
										      ({'function_clause',_cor142})
										  -| [{'function_name',{'lc$^1',1}}] )
									    -| ['compiler_generated'] )
									end
							    in  apply 'lc$^1'/1
								    (%% Line 895
								     Params)
							    -| ['list_comprehension'] )
						      in  %% Line 896
							  apply 'instantiate_pos'/4
							      (S, ClassRef, PObjSetDef, _cor147)
						  ( <_cor139> when 'true' ->
							primop 'match_fail'
							    ({'badmatch',_cor139})
						    -| ['compiler_generated'] )
						end
					    %% Line 897
					    <Unknown> when 'true' ->
						%% Line 898
						call 'erlang':'exit'
						    ({'error',{'unknown_object_set',Unknown},S})
					  end
				      in  %% Line 900
					  ( case _cor150 of
					      ( <( {'ObjectSet',_cor381,_cor382,_cor383,_rec99}
						   -| ['compiler_generated'] )> when 'true' ->
						    let <NewSet2> =
							apply 'remove_duplicate_objects'/1
							    (_rec99)
						    in  let <_cor157> =
							    %% Line 901
							    call 'erlang':'setelement'
								(5, _cor150, NewSet2)
							in  %% Line 902
							    ( case _cor157 of
								( <( {'ObjectSet',_cor390,_cor391,_cor392,_rec101}
								     -| ['compiler_generated'] )> when 'true' ->
								      let <Gen> =
									  apply 'gen_incl_set'/3
									      (S, _rec101, %% Line 903
											   ClassDef)
								      in  let <_cor163> =
									      %% Line 905
									      call 'erlang':'setelement'
										  (3, _cor157, Gen)
									  in  %% Line 905
									      call 'erlang':'setelement'
										  (2, _cor163, NewClassRef)
								  -| ['compiler_generated'] )
								( <_cor393> when 'true' ->
								      ( call ( 'erlang'
									       -| ['compiler_generated'] ):( 'error'
													     -| ['compiler_generated'] )
									    (( {'badrecord','ObjectSet'}
									       -| ['compiler_generated'] ))
									-| ['compiler_generated'] )
								  -| ['compiler_generated'] )
							      end
							      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					      ( <_cor384> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {'badrecord','ObjectSet'}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
				  ( <_cor62> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_cor62})
				    -| ['compiler_generated'] )
				end
		( <_cor56> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor56})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor167,_cor166,_cor165> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor167,_cor166,_cor165})
		  -| [{'function_name',{'check_object',3}}] )
	    -| ['compiler_generated'] )
	end
'remove_duplicate_objects'/1 =
    %% Line 910
    fun (_cor0) ->
	case _cor0 of
	  <Set>
	      when call 'erlang':'is_list'
		    (_cor0) ->
	      let <Pred> =
		  %% Line 911
		  ( fun (_cor4,_cor3) ->
			case <_cor4,_cor3> of
			  <{A,B,_cor9},{_cor10,C,_cor11}>
			      when let <_cor12> =
				    call 'erlang':'=:='
					(_cor10, A)
				in  let <_cor13> =
					call 'erlang':'=<'
					    (B, C)
				    in  call 'erlang':'and'
					    (_cor12, _cor13) ->
			      'true'
			  %% Line 912
			  <{A,_cor14,_cor15},{B,_cor16,_cor17}>
			      when call 'erlang':'<'
				    (A,
				     B) ->
			      'true'
			  %% Line 913
			  <'EXTENSIONMARK','EXTENSIONMARK'> when 'true' ->
			      'true'
			  %% Line 914
			  <T,A>
			      when let <_cor1> =
				    call 'erlang':'is_tuple'
					(T)
				in  let <_cor2> =
					call 'erlang':'is_atom'
					    (A)
				    in  call 'erlang':'and'
					    (_cor1, _cor2) ->
			      'true'
			  %% Line 915
			  <_cor18,_cor19> when 'true' ->
			      'false'
			end
		    -| [{'id',{0,0,'-remove_duplicate_objects/1-fun-0-'}}] )
	      in  %% Line 917
		  call 'lists':'usort'
		      (Pred, Set)
	  ( <_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8})
		  -| [{'function_name',{'remove_duplicate_objects',1}}] )
	    -| ['compiler_generated'] )
	end
'extensionmark'/2 =
    %% Line 920
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <L,'true'> when 'true' ->
	      %% Line 921
	      case call 'lists':'member'
		       ('EXTENSIONMARK', L) of
		%% Line 922
		<'true'> when 'true' ->
		    L
		%% Line 923
		<_cor5> when 'true' ->
		    call 'erlang':'++'
			(L, ['EXTENSIONMARK'])
	      end
	  %% Line 925
	  <L,_cor6> when 'true' ->
	      %% Line 926
	      L
	end
'object_to_check'/1 =
    %% Line 928
    fun (_cor0) ->
	case _cor0 of
	  <{'typedef',_cor4,_cor5,_cor6,ObjDef}> when 'true' ->
	      %% Line 929
	      ObjDef
	  %% Line 930
	  <{'valuedef',_cor7,_cor8,_cor9,ClassName,ObjectRef,_cor10}> when 'true' ->
	      %% Line 933
	      ( case ClassName of
		  ( <( {'type',_cor11,_rec103,_cor12,_cor13,_cor14}
		       -| ['compiler_generated'] )> when 'true' ->
			{'Object',_rec103,'true',ObjectRef}
		    -| ['compiler_generated'] )
		  ( <_cor15> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','type'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'object_to_check',1}}] )
	    -| ['compiler_generated'] )
	end
'prepare_objset'/1 =
    %% Line 935
    fun (_cor0) ->
	case _cor0 of
	  <{'SingleValue',Set}>
	      when call 'erlang':'is_list'
		    (Set) ->
	      %% Line 936
	      {'set',Set,'false'}
	  %% Line 937
	  <L = ['EXTENSIONMARK']> when 'true' ->
	      %% Line 938
	      L
	  %% Line 939
	  <Set>
	      when call 'erlang':'is_list'
		    (_cor0) ->
	      %% Line 940
	      {'set',Set,'false'}
	  %% Line 941
	  <{{'SingleValue',Set},Ext}> when 'true' ->
	      let <_cor1> =
		  %% Line 942
		  apply 'merge_sets'/2
		      (Set, Ext)
	      in  %% Line 942
		  {'set',_cor1,'true'}
	  %% Line 945
	  <{Set,Ext}>
	      when call 'erlang':'is_list'
		    (Set) ->
	      let <_cor2> =
		  %% Line 946
		  apply 'merge_sets'/2
		      (Set, Ext)
	      in  %% Line 946
		  {'set',_cor2,'true'}
	  %% Line 947
	  <{Set = {'object','definedsyntax',_X_ObjFields},Ext}> when 'true' ->
	      let <_cor3> =
		  %% Line 948
		  apply 'merge_sets'/2
		      (Set, Ext)
	      in  %% Line 948
		  {'set',_cor3,'true'}
	  %% Line 949
	  <ObjDef = {'object','definedsyntax',_X_ObjFields}> when 'true' ->
	      %% Line 950
	      {'set',[ObjDef|[]],'false'}
	  %% Line 951
	  <{ObjDef = {'type',_cor5,_cor6,_cor7,_cor8,_cor9},Ext}>
	      when call 'erlang':'is_list'
		    (Ext) ->
	      %% Line 952
	      {'set',[ObjDef|Ext],'true'}
	  %% Line 953
	  <Ret> when 'true' ->
	      %% Line 954
	      Ret
	end
'class_fields_optional_check'/2 =
    %% Line 956
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,{'classdef',_cor7,_cor8,_cor9,ClassSpec}> when 'true' ->
	      %% Line 957
	      ( case ClassSpec of
		  ( <( {'objectclass',_rec104,_cor10}
		       -| ['compiler_generated'] )> when 'true' ->
			%% Line 958
			apply 'class_fields_optional_check1'/2
			    (S, _rec104)
		    -| ['compiler_generated'] )
		  ( <_cor11> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','objectclass'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'class_fields_optional_check',2}}] )
	    -| ['compiler_generated'] )
	end
'class_fields_optional_check1'/2 =
    %% Line 960
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_S,[]> when 'true' ->
	      %% Line 961
	      'ok'
	  %% Line 962
	  <S,[{'typefield',_cor4,'OPTIONAL'}|Rest]> when 'true' ->
	      %% Line 963
	      apply 'class_fields_optional_check1'/2
		  (S, Rest)
	  %% Line 964
	  <S,[{'fixedtypevaluefield',_cor5,_cor6,_cor7,'OPTIONAL'}|Rest]> when 'true' ->
	      %% Line 965
	      apply 'class_fields_optional_check1'/2
		  (S, Rest)
	  %% Line 966
	  <S,[{'fixedtypevaluesetfield',_cor8,_cor9,'OPTIONAL'}|Rest]> when 'true' ->
	      %% Line 967
	      apply 'class_fields_optional_check1'/2
		  (S, Rest)
	  %% Line 968
	  <S,[{'objectfield',_cor10,_cor11,_cor12,'OPTIONAL'}|Rest]> when 'true' ->
	      %% Line 969
	      apply 'class_fields_optional_check1'/2
		  (S, Rest)
	  %% Line 970
	  <S,[{'objectsetfield',_cor13,_cor14,'OPTIONAL'}|Rest]> when 'true' ->
	      %% Line 971
	      apply 'class_fields_optional_check1'/2
		  (S, Rest)
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'class_fields_optional_check1',2}}] )
	    -| ['compiler_generated'] )
	end
'object_set_from_objects'/4 =
    %% Line 980
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 981
	apply 'object_set_from_objects'/5
	    (_cor3, _cor2, _cor1, _cor0, [])
'object_set_from_objects'/5 =
    %% Line 982
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <S,RefedObjMod,FieldName,ObjectSet = {'ObjectSet',_cor13,_cor14,_cor15,_cor16},InterSect> when %% Line 983
													 ( 'true'
													   -| ['compiler_generated'] ) ->
	      %% Line 985
	      case apply 'get_referenced_type'/2
		       (S, _cor13) of
		<{_cor19,ClassDef}> when 'true' ->
		    %% Line 986
		    apply 'object_set_from_objects'/7
			(S, RefedObjMod, ClassDef, FieldName, _cor16, InterSect, [])
		( <_cor6> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor6})
		  -| ['compiler_generated'] )
	      end
	  %% Line 987
	  <S,RefedObjMod,FieldName,Object = {'Object',_cor20,_cor21,_cor22},InterSect> when %% Line 988
											    ( 'true'
											      -| ['compiler_generated'] ) ->
	      %% Line 990
	      apply 'object_set_from_objects'/7
		  (S, RefedObjMod, _cor20, FieldName, [_cor22|[]], InterSect, [])
	  ( <_cor12,_cor11,_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11,_cor10,_cor9,_cor8})
		  -| [{'function_name',{'object_set_from_objects',5}}] )
	    -| ['compiler_generated'] )
	end
'object_set_from_objects'/7 =
    %% Line 991
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <S,RefedObjMod,ClassDef,FieldName,['EXTENSIONMARK'|Os],%% Line 992
								 InterSect,%% Line 992
									   Acc> when 'true' ->
	      %% Line 993
	      apply 'object_set_from_objects'/7
		  (S, RefedObjMod, ClassDef, FieldName, Os, InterSect, %% Line 994
								       ['EXTENSIONMARK'|Acc])
	  %% Line 995
	  <S,RefedObjMod,ClassDef,FieldName,[O|Os],InterSect,Acc> when 'true' ->
	      let <_cor8> =
		  %% Line 996
		  call 'erlang':'element'
		      (1, O)
	      in  let <_cor9> =
		      %% Line 996
		      apply 'mod_of_obj'/2
			  (RefedObjMod, _cor8)
		  in  let <_cor7> =
			  %% Line 997
			  call 'erlang':'element'
			      (3, O)
		      in  %% Line 996
			  case apply 'object_set_from_objects2'/6
				   (S, _cor9, %% Line 997
					      ClassDef, %% Line 997
							FieldName, _cor7, %% Line 997
									  InterSect) of
			    %% Line 998
			    <ObjS>
				when call 'erlang':'is_list'
				      (ObjS) ->
				let <_cor10> =
				    %% Line 999
				    call 'erlang':'++'
					(ObjS, Acc)
				in  %% Line 999
				    apply 'object_set_from_objects'/7
					(S, RefedObjMod, ClassDef, FieldName, Os, InterSect, _cor10)
			    %% Line 1000
			    <Obj> when 'true' ->
				%% Line 1001
				apply 'object_set_from_objects'/7
				    (S, RefedObjMod, ClassDef, FieldName, Os, InterSect, [Obj|Acc])
			  end
	  %% Line 1003
	  <_X_S,_X_RefedObjMod,_X_ClassDef,_X_FieldName,[],InterSect,Acc> when 'true' ->
	      let <_cor12> =
		  %% Line 1006
		  apply 'osfo_intersection'/2
		      (InterSect, Acc)
	      in  %% Line 1006
		  apply 'remove_duplicate_objects'/1
		      (_cor12)
	  ( <_cor19,_cor18,_cor17,_cor16,_cor15,_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor19,_cor18,_cor17,_cor16,_cor15,_cor14,_cor13})
		  -| [{'function_name',{'object_set_from_objects',7}}] )
	    -| ['compiler_generated'] )
	end
'object_set_from_objects2'/6 =
    %% Line 1008
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <S,RefedObjMod,ClassDef,[{'valuefieldreference',OName}|[]],%% Line 1009
								     Fields,%% Line 1009
									    _X_InterSect> when 'true' ->
	      %% Line 1011
	      case call 'lists':'keysearch'
		       (OName, 1, Fields) of
		%% Line 1012
		<{'value',{_cor30,TDef}}> when 'true' ->
		    %% Line 1013
		    apply 'mk_object_set_from_object'/4
			(S, RefedObjMod, TDef, ClassDef)
		%% Line 1014
		<_cor31> when 'true' ->
		    %% Line 1015
		    []
	      end
	  %% Line 1017
	  <S,RefedObjMod,ClassDef,[{'typefieldreference',OSName}|[]],%% Line 1018
								     Fields,%% Line 1018
									    _X_InterSect> when 'true' ->
	      %% Line 1020
	      case call 'lists':'keysearch'
		       (OSName, 1, Fields) of
		%% Line 1021
		<{'value',{_cor32,TDef}}> when 'true' ->
		    %% Line 1022
		    ( case TDef of
			( <( {'typedef',_cor33,_cor34,_cor35,_rec105}
			     -| ['compiler_generated'] )> when 'true' ->
			      case _rec105 of
				%% Line 1023
				<{'ObjectSet',_X_NextClName,_cor37,_cor38,NextSet}> when 'true' ->
				    %% Line 1024
				    NextSet
				%% Line 1025
				<{'Object',_cor39,_cor40,_X_ObjDef}> when 'true' ->
				    %% Line 1026
				    apply 'mk_object_set_from_object'/4
					(S, RefedObjMod, TDef, ClassDef)
				( <_cor9> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor9})
				  -| ['compiler_generated'] )
			      end
			  -| ['compiler_generated'] )
			( <_cor36> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','typedef'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 1030
		<_cor41> when 'true' ->
		    %% Line 1031
		    []
	      end
	  %% Line 1033
	  <S,RefedObjMod,_X_ClassDef,[{'valuefieldreference',OName}|Rest],%% Line 1034
									  Fields,%% Line 1034
										 InterSect> when 'true' ->
	      %% Line 1036
	      case call 'lists':'keysearch'
		       (OName, 1, Fields) of
		%% Line 1037
		<{'value',{_cor42,TDef}}> when 'true' ->
		    %% Line 1038
		    ( case TDef of
			( <( {'typedef',_cor43,_cor44,_cor45,_rec106}
			     -| ['compiler_generated'] )> when 'true' ->
			      case _rec106 of
				<{'Object',NextClName,_cor47,ODef}> when 'true' ->
				    %% Line 1039
				    case ODef of
				      <{_cor48,_cor49,NextFields}> when 'true' ->
					  %% Line 1040
					  case apply 'get_referenced_type'/2
						   (S, NextClName) of
					    <{_cor50,NextClass}> when 'true' ->
						%% Line 1041
						apply 'object_set_from_objects2'/6
						    (S, RefedObjMod, NextClass, Rest, NextFields, InterSect)
					    ( <_cor15> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',_cor15})
					      -| ['compiler_generated'] )
					  end
				      ( <_cor14> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_cor14})
					-| ['compiler_generated'] )
				    end
				( <_cor13> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor13})
				  -| ['compiler_generated'] )
			      end
			  -| ['compiler_generated'] )
			( <_cor46> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','typedef'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 1042
		<_cor51> when 'true' ->
		    %% Line 1043
		    []
	      end
	  %% Line 1045
	  <S,RefedObjMod,_X_ClassDef,[{'typefieldreference',OSName}|Rest],%% Line 1046
									  Fields,%% Line 1046
										 InterSect> when 'true' ->
	      let <_cor20> =
		  %% Line 1049
		  case call 'lists':'keysearch'
			   (OSName, 1, Fields) of
		    %% Line 1050
		    <{'value',{_cor52,TDef = {'ObjectSet',_cor53,_cor54,_cor55,_cor56}}}> when ( 'true'
												 -| ['compiler_generated'] ) ->
			%% Line 1052
			{_cor53,_cor56}
		    %% Line 1053
		    <{'value',{_cor59,{'typedef',_cor60,_cor61,_cor62,OS}}}> when 'true' ->
			%% Line 1056
			case OS of
			  %% Line 1057
			  <{'ObjectSet',NextClN,_cor63,_cor64,NextS}> when 'true' ->
			      %% Line 1058
			      {NextClN,NextS}
			  %% Line 1059
			  <{'Object',NextClN,_cor65,NextDef}> when 'true' ->
			      %% Line 1060
			      {NextClN,[NextDef|[]]}
			  ( <_cor18> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor18})
			    -| ['compiler_generated'] )
			end
		    %% Line 1062
		    <_cor66> when 'true' ->
			%% Line 1063
			{[],[]}
		  end
	      in  %% Line 1048
		  case _cor20 of
		    <Next = {NextClName,NextSet}> when 'true' ->
			%% Line 1065
			case <NextClName,NextSet> of
			  %% Line 1066
			  <[],[]> when 'true' ->
			      %% Line 1067
			      []
			  %% Line 1068
			  <_fol825,_fol826> when 'true' ->
			      %% Line 1069
			      case apply 'get_referenced_type'/2
				       (S, NextClName) of
				<{_cor68,NextClass}> when 'true' ->
				    %% Line 1070
				    apply 'object_set_from_objects'/7
					(S, RefedObjMod, NextClass, Rest, NextSet, InterSect, [])
				( <_cor22> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor22})
				  -| ['compiler_generated'] )
			      end
			end
		    ( <_cor21> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor21})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor29,_cor28,_cor27,_cor26,_cor25,_cor24> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor29,_cor28,_cor27,_cor26,_cor25,_cor24})
		  -| [{'function_name',{'object_set_from_objects2',6}}] )
	    -| ['compiler_generated'] )
	end
'mk_object_set_from_object'/4 =
    %% Line 1073
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 1074
	( case _cor1 of
	    ( <( {'typedef',_cor19,_cor20,_cor21,_rec107}
		 -| ['compiler_generated'] )> when 'true' ->
		  case _rec107 of
		    <{'Object',_X_NextClName,_cor23,ODef}> when 'true' ->
			%% Line 1075
			case ODef of
			  <{_cor24,_cor25,NextFields}> when 'true' ->
			      let <_cor8> =
				  catch
				      %% Line 1078
				      apply 'get_unique_fieldname'/2
					  (_cor3, _cor0)
			      in  let <_cor10> =
				      %% Line 1078
				      case _cor8 of
					%% Line 1079
					<{'error','__undefined_',_cor26}> when 'true' ->
					    {'unique','undefined'}
					%% Line 1080
					<{'asn1',Msg,_cor27}> when 'true' ->
					    apply 'error'/1
						({'class',Msg,_cor3})
					%% Line 1081
					<{'EXIT',Msg}> when 'true' ->
					    apply 'error'/1
						({'class',{'internal_error',Msg},_cor3})
					%% Line 1082
					<{Other,_cor28}> when 'true' ->
					    Other
					( <_cor9> when 'true' ->
					      primop 'match_fail'
						  ({'case_clause',_cor9})
					  -| ['compiler_generated'] )
				      end
				  in  let <VDef> =
					  %% Line 1084
					  apply 'get_unique_value'/3
					      (_cor3, NextFields, _cor10)
				      in  %% Line 1086
					  case VDef of
					    %% Line 1087
					    <[]> when 'true' ->
						%% Line 1088
						['EXTENSIONMARK']
					    %% Line 1089
					    <_cor29> when 'true' ->
						let <_cor13> =
						    %% Line 1090
						    apply 'get_datastr_name'/1
							(_cor1)
						in  %% Line 1090
						    {{_cor2,_cor13},VDef,NextFields}
					  end
			  ( <_cor7> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor7})
			    -| ['compiler_generated'] )
			end
		    ( <_cor6> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor6})
		      -| ['compiler_generated'] )
		  end
	      -| ['compiler_generated'] )
	    ( <_cor22> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','typedef'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'mod_of_obj'/2 =
    %% Line 1094
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_RefedObjMod,{NewMod,ObjName}>
	      when let <_cor2> =
		    %% Line 1095
		    call 'erlang':'is_atom'
			(NewMod)
		in  let <_cor3> =
			%% Line 1095
			call 'erlang':'is_atom'
			    (ObjName)
		    in  %% Line 1095
			call 'erlang':'and'
			    (_cor2, _cor3) ->
	      %% Line 1096
	      NewMod
	  %% Line 1097
	  <RefedObjMod,_cor6> when 'true' ->
	      %% Line 1098
	      RefedObjMod
	end
'merge_sets'/2 =
    %% Line 1101
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Root,{'SingleValue',Ext}> when 'true' ->
	      %% Line 1102
	      apply 'merge_sets'/2
		  (Root, Ext)
	  %% Line 1103
	  <Root,Ext>
	      when let <_cor2> =
		    call 'erlang':'is_list'
			(Root)
		in  let <_cor3> =
			call 'erlang':'is_list'
			    (Ext)
		    in  call 'erlang':'and'
			    (_cor2, _cor3) ->
	      %% Line 1104
	      call 'erlang':'++'
		  (Root, Ext)
	  %% Line 1105
	  <Root,Ext>
	      when call 'erlang':'is_list'
		    (Ext) ->
	      %% Line 1106
	      [Root|Ext]
	  %% Line 1107
	  <Root,Ext>
	      when call 'erlang':'is_list'
		    (Root) ->
	      %% Line 1108
	      call 'erlang':'++'
		  (Root, [Ext|[]])
	  %% Line 1109
	  <Root,Ext> when 'true' ->
	      %% Line 1110
	      [Root|[Ext|[]]]
	end
'reduce_objectset'/2 =
    %% Line 1112
    fun (_cor1,_cor0) ->
	%% Line 1113
	case _cor0 of
	  %% Line 1114
	  <{'SingleValue',{'Externalvaluereference',_cor6,_cor7,Name}}> when 'true' ->
	      %% Line 1115
	      case call 'lists':'keysearch'
		       (Name, 1, _cor1) of
		%% Line 1116
		<{'value',El}> when 'true' ->
		    %% Line 1117
		    call 'lists':'subtract'
			(_cor1, [El|[]])
		%% Line 1118
		<_cor8> when 'true' ->
		    _cor1
	      end
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor3})
	    -| ['compiler_generated'] )
	end
'check_object_list'/3 =
    %% Line 1125
    fun (_cor2,_cor1,_cor0) ->
	%% Line 1126
	apply 'check_object_list'/4
	    (_cor2, _cor1, _cor0, [])
'check_object_list'/4 =
    %% Line 1128
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <S,ClassRef,[ObjOrSet|Objs],Acc> when 'true' ->
	      %% Line 1130
	      case ObjOrSet of
		%% Line 1131
		<ObjDef>
		    when try
			  let <_cor4> =
			      call 'erlang':'is_tuple'
				  (ObjOrSet)
			  in  let <_cor5> =
				  call 'erlang':'element'
				      (1, ObjOrSet)
			      in  let <_cor6> =
				      call 'erlang':'=:='
					  (_cor5, 'object')
				  in  call 'erlang':'and'
					  (_cor4, _cor6)
		      of <Try> ->
			  Try
		      catch <T,R> ->
			  'false' ->
		    %% Line 1137
		    ( case apply 'check_object'/3
			       (S, {'typedef','false','undefined','undefined',ObjDef}, {'Object',ClassRef,'true',ObjDef}) of
			( <( {'Object',_cor56,_cor57,_rec108}
			     -| ['compiler_generated'] )> when 'true' ->
			      apply 'check_object_list'/4
				  (S, ClassRef, Objs, [{{'no_mod','no_name'},_rec108}|Acc])
			  -| ['compiler_generated'] )
			( <_cor58> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','Object'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 1138
		<{'SingleValue',Ref = {'Externalvaluereference',_cor59,_cor60,_cor61}}> when 'true' ->
		    %% Line 1141
		    case apply 'check_referenced_object'/2
			     (S, Ref) of
		      <{RefedMod,ObjName,{'Object',_cor62,_cor63,Def}}> when 'true' ->
			  %% Line 1142
			  apply 'check_object_list'/4
			      (S, ClassRef, Objs, [{{RefedMod,ObjName},Def}|Acc])
		      ( <_cor10> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor10})
			-| ['compiler_generated'] )
		    end
		%% Line 1143
		<ObjRef = {'Externalvaluereference',_cor64,_cor65,_cor66}> when ( 'true'
										  -| ['compiler_generated'] ) ->
		    %% Line 1146
		    case apply 'check_referenced_object'/2
			     (S, ObjRef) of
		      <{RefedMod,ObjName,{'Object',_cor67,_cor68,Def}}> when 'true' ->
			  %% Line 1147
			  apply 'check_object_list'/4
			      (S, ClassRef, Objs, [{{RefedMod,ObjName},Def}|Acc])
		      ( <_cor11> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor11})
			-| ['compiler_generated'] )
		    end
		%% Line 1148
		<{'ValueFromObject',{_cor69,Object},FieldName}> when 'true' ->
		    %% Line 1149
		    case apply 'get_referenced_type'/2
			     (S, Object) of
		      <{_cor70,Def}> when 'true' ->
			  %% Line 1151
			  ( case apply 'get_fieldname_element'/3
				     (S, Def, FieldName) of
			      ( <( {'typedef',_cor71,_cor72,_cor73,_rec110}
				   -| ['compiler_generated'] )> when 'true' ->
				    ( case _rec110 of
					( <( {'ObjectSet',_cor75,_cor76,_cor77,_rec109}
					     -| ['compiler_generated'] )> when 'true' ->
					      _rec109
					  -| ['compiler_generated'] )
					( <_cor78> when 'true' ->
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'error'
										     -| ['compiler_generated'] )
						    (( {'badrecord','ObjectSet'}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			      ( <_cor74> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','typedef'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
		      ( <_cor12> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor12})
			-| ['compiler_generated'] )
		    end
		%% Line 1152
		<ObjSet = {'type',_cor79,_cor80,_cor81,_cor82,_cor83}> when ( 'true'
									      -| ['compiler_generated'] ) ->
		    %% Line 1154
		    case _cor80 of
		      %% Line 1155
		      <Ref = {'Externaltypereference',_cor89,_cor90,_cor91}> when ( 'true'
										    -| ['compiler_generated'] ) ->
			  %% Line 1156
			  case apply 'get_referenced_type'/2
				   (S, _cor80) of
			    <{_cor97,D}> when 'true' ->
				%% Line 1162
				( case D of
				    ( <( {'typedef',_cor98,_cor99,_cor100,_rec113}
					 -| ['compiler_generated'] )> when 'true' ->
					  case apply 'check_object'/3
						   (S, D, _rec113) of
					    <{'ObjectSet',_cor102,_cor103,_cor104,ObjectsInSet}> when 'true' ->
						let <AccList> =
						    %% Line 1163
						    apply 'transform_set_to_object_list'/2
							(ObjectsInSet, [])
						in  let <_cor29> =
							%% Line 1164
							call 'erlang':'++'
							    (AccList, Acc)
						    in  %% Line 1164
							apply 'check_object_list'/4
							    (S, ClassRef, Objs, _cor29)
					    ( <_cor27> when 'true' ->
						  primop 'match_fail'
						      ({'badmatch',_cor27})
					      -| ['compiler_generated'] )
					  end
				      -| ['compiler_generated'] )
				    ( <_cor101> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','typedef'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
			    ( <_cor21> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor21})
			      -| ['compiler_generated'] )
			  end
		      %% Line 1158
		      <Other> when 'true' ->
			  %% Line 1159
			  call 'erlang':'throw'
			      ({'asn1_error',{'unknown objecset',Other,S}})
		    end
		%% Line 1165
		<'union'> when 'true' ->
		    %% Line 1166
		    apply 'check_object_list'/4
			(S, ClassRef, Objs, Acc)
		%% Line 1167
		<{'pos',{'objectset',_cor105,DefinedObjectSet},Params}> when 'true' ->
		    let <OSDef> =
			%% Line 1168
			{'type',[],{'pt',DefinedObjectSet,Params},[],[],'no'}
		    in  %% Line 1169
			case %% Line 1170
			     apply 'check_object'/3
				 (S, ObjOrSet, {'ObjectSet',ClassRef,'true','undefined',%% Line 1171
											OSDef}) of
			  <{'ObjectSet',_cor106,_cor107,_cor108,Set}> when 'true' ->
			      let <_cor32> =
				  %% Line 1172
				  call 'erlang':'++'
				      (Set, Acc)
			      in  %% Line 1172
				  apply 'check_object_list'/4
				      (S, ClassRef, Objs, _cor32)
			  ( <_cor31> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor31})
			    -| ['compiler_generated'] )
			end
		%% Line 1173
		<{'pv',{'simpledefinedvalue',DefinedObject},Params}> when 'true' ->
		    let <_cor40> =
			%% Line 1174
			( letrec
			      'lc$^0'/1 =
				  fun (_cor35) ->
				      case _cor35 of
					<[%% Line 1175
					  Param|_cor34]> when 'true' ->
					    ( case S of
						( <( {'state',_cor109,_cor110,_cor111,_cor112,_cor113,_cor114,_cor115,_rec114,_cor116,_cor117,_cor118,_cor119,_cor120}
						     -| ['compiler_generated'] )> when 'true' ->
						      let <_cor38> =
							  apply 'match_parameters'/3
							      (S, Param, _rec114)
						      in  let <_cor39> =
							      %% Line 1175
							      apply 'lc$^0'/1
								  (_cor34)
							  in  ( [_cor38|_cor39]
								-| ['compiler_generated'] )
						  -| ['compiler_generated'] )
						( <_cor121> when 'true' ->
						      ( call ( 'erlang'
							       -| ['compiler_generated'] ):( 'error'
											     -| ['compiler_generated'] )
							    (( {'badrecord','state'}
							       -| ['compiler_generated'] ))
							-| ['compiler_generated'] )
						  -| ['compiler_generated'] )
					      end
					      -| ['compiler_generated'] )
					<[]> when 'true' ->
					    []
					( <_cor35> when 'true' ->
					      ( primop 'match_fail'
						    ({'function_clause',_cor35})
						-| [{'function_name',{'lc$^0',1}}] )
					  -| ['compiler_generated'] )
				      end
			  in  apply 'lc$^0'/1
				  (%% Line 1175
				   Params)
			  -| ['list_comprehension'] )
		    in  %% Line 1176
			case %% Line 1177
			     apply 'check_object'/3
				 (S, ObjOrSet, %% Line 1178
					       {'Object',ClassRef,'true',%% Line 1179
									 {'po',{'object',DefinedObject},_cor40}}) of
			  <{'Object',_cor122,_cor123,Def}> when 'true' ->
			      %% Line 1181
			      apply 'check_object_list'/4
				  (S, ClassRef, Objs, [{{'no_mod','no_name'},Def}|Acc])
			  ( <_cor42> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor42})
			    -| ['compiler_generated'] )
			end
		%% Line 1182
		<{'ObjectSetFromObjects',Os,FieldName}>
		    when call 'erlang':'is_tuple'
			  (Os) ->
		    let <_cor43> =
			%% Line 1184
			call 'erlang':'tuple_size'
			    (Os)
		    in  let <_cor44> =
			    %% Line 1184
			    call 'erlang':'element'
				(_cor43, Os)
			in  let <NewSet> =
				%% Line 1184
				apply 'check_ObjectSetFromObjects'/4
				    (S, _cor44, %% Line 1185
						FieldName, %% Line 1185
							   [])
			    in  let <_cor46> =
				    %% Line 1186
				    call 'erlang':'++'
					(NewSet, Acc)
				in  %% Line 1186
				    apply 'check_object_list'/4
					(S, ClassRef, Objs, _cor46)
		%% Line 1187
		<{{'ObjectSetFromObjects',Os,FieldName},InterSection}>
		    when %% Line 1188
		      call 'erlang':'is_tuple'
			  (Os) ->
		    let <_cor47> =
			%% Line 1190
			call 'erlang':'tuple_size'
			    (Os)
		    in  let <_cor48> =
			    %% Line 1190
			    call 'erlang':'element'
				(_cor47, Os)
			in  let <NewSet> =
				%% Line 1190
				apply 'check_ObjectSetFromObjects'/4
				    (S, _cor48, %% Line 1191
						FieldName, %% Line 1191
							   InterSection)
			    in  let <_cor50> =
				    %% Line 1192
				    call 'erlang':'++'
					(NewSet, Acc)
				in  %% Line 1192
				    apply 'check_object_list'/4
					(S, ClassRef, Objs, _cor50)
		%% Line 1193
		<Other> when 'true' ->
		    %% Line 1194
		    call 'erlang':'exit'
			({'error',{'unknown object',Other},S})
	      end
	  %% Line 1199
	  <_cor124,_cor125,[],Acc> when 'true' ->
	      %% Line 1200
	      call 'lists':'reverse'
		  (Acc)
	  ( <_cor55,_cor54,_cor53,_cor52> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor55,_cor54,_cor53,_cor52})
		  -| [{'function_name',{'check_object_list',4}}] )
	    -| ['compiler_generated'] )
	end
'check_referenced_object'/2 =
    %% Line 1202
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,ObjRef = {'Externalvaluereference',_cor19,_cor20,_cor21}> when %% Line 1203
									    ( 'true'
									      -| ['compiler_generated'] ) ->
	      %% Line 1204
	      case apply 'get_referenced_type'/2
		       (S, ObjRef) of
		%% Line 1205
		<{RefedMod,ObjectDef = {'valuedef',_cor22,_cor23,_cor24,_cor25,_cor26,_cor27}}> when ( 'true'
												       -| ['compiler_generated'] ) ->
		    %% Line 1207
		    case _cor25 of
		      <{'type',_cor34,ClassRef,_cor35,_cor36,_cor37}> when 'true' ->
			  let <_cor10> =
			      %% Line 1209
			      apply 'get_datastr_name'/1
				  (ObjectDef)
			  in  let <_cor8> =
				  %% Line 1210
				  apply 'update_state'/2
				      (S, RefedMod)
			      in  let <_cor9> =
				      %% Line 1210
				      apply 'check_object'/3
					  (_cor8, ObjectDef, {'Object',ClassRef,'true',_cor26})
				  in  %% Line 1209
				      {RefedMod,_cor10,_cor9}
		      ( <_cor4> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor4})
			-| ['compiler_generated'] )
		    end
		%% Line 1212
		<{RefedMod,ObjectDef = {'typedef',_cor44,_cor45,_cor46,_cor47}}> when ( 'true'
											-| ['compiler_generated'] ) ->
		    let <_cor15> =
			%% Line 1213
			apply 'get_datastr_name'/1
			    (ObjectDef)
		    in  let <_cor13> =
			    %% Line 1214
			    apply 'update_state'/2
				(S, RefedMod)
			in  let <_cor14> =
				%% Line 1214
				apply 'check_object'/3
				    (_cor13, ObjectDef, _cor47)
			    in  %% Line 1213
				{RefedMod,_cor15,_cor14}
		( <_cor16> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor16})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor18,_cor17> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor18,_cor17})
		  -| [{'function_name',{'check_referenced_object',2}}] )
	    -| ['compiler_generated'] )
	end
'check_ObjectSetFromObjects'/4 =
    %% Line 1217
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 1218
	case apply 'get_referenced_type'/2
		 (_cor3, _cor2) of
	  <{RefedMod,TDef}> when 'true' ->
	      let <_cor7> =
		  %% Line 1219
		  apply 'update_state'/2
		      (_cor3, RefedMod)
	      in  %% Line 1219
		  ( case TDef of
		      ( <( {'typedef',_cor15,_cor16,_cor17,_rec118}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <ObjOrSet> =
				apply 'check_object'/3
				    (_cor7, TDef, _rec118)
			    in  let <InterSec> =
				    %% Line 1220
				    apply 'prepare_intersection'/2
					(_cor3, _cor0)
				in  %% Line 1221
				    apply 'object_set_from_objects'/5
					(_cor3, RefedMod, _cor1, ObjOrSet, InterSec)
			-| ['compiler_generated'] )
		      ( <_cor18> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','typedef'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  ( <_cor4> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor4})
	    -| ['compiler_generated'] )
	end
'prepare_intersection'/2 =
    %% Line 1223
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_S,[]> when 'true' ->
	      %% Line 1224
	      []
	  %% Line 1225
	  <S,{'EXCEPT',ObjRef}> when 'true' ->
	      %% Line 1226
	      apply 'except_names'/2
		  (S, ObjRef)
	  %% Line 1227
	  <_X_S,T> when 'true' ->
	      %% Line 1228
	      call 'erlang':'exit'
		  ({'error',{'internal_error','not_implemented','object_set_from_objects',T}})
	end
'except_names'/2 =
    %% Line 1229
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_S,{'SingleValue',{'Externalvaluereference',_cor4,_cor5,ObjName}}> when 'true' ->
	      %% Line 1230
	      [{'except',ObjName}|[]]
	  %% Line 1231
	  <_cor6,T> when 'true' ->
	      %% Line 1232
	      call 'erlang':'exit'
		  ({'error',{'internal_error','not_implemented','object_set_from_objects',T}})
	end
'osfo_intersection'/2 =
    %% Line 1234
    fun (_cor1,_cor0) ->
	let <_cor8> =
	    %% Line 1235
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor5) ->
			  case _cor5 of
			    <[X = {{_cor13,N},_cor14,_cor15}|_cor3]> when 'true' ->
				let <_cor4> =
				    %% Line 1236
				    call 'lists':'member'
					({'except',N}, _cor1)
				in  %% Line 1236
				    ( case <> of
					<>
					    when call 'erlang':'=:='
						  (_cor4,
						   'false') ->
					    let <_cor6> =
						apply 'lc$^0'/1
						    (_cor3)
					    in  ( [X|_cor6]
						  -| ['compiler_generated'] )
					( <> when 'true' ->
					      apply 'lc$^0'/1
						  (_cor3)
					  -| ['compiler_generated'] )
				      end
				      -| ['list_comprehension'] )
			    ( <[_cor2|_cor3]> when 'true' ->
				  apply 'lc$^0'/1
				      (_cor3)
			      -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_cor5> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor5})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  apply 'lc$^0'/1
		      (_cor0)
	      -| ['list_comprehension'] )
	in  %% Line 1237
	    case call 'lists':'member'
		     ('EXTENSIONMARK', _cor0) of
	      %% Line 1238
	      <'true'> when 'true' ->
		  %% Line 1239
		  call 'erlang':'++'
		      (_cor8, ['EXTENSIONMARK'])
	      %% Line 1240
	      <_cor16> when 'true' ->
		  _cor8
	    end
'get_fieldname_element'/3 =
    %% Line 1250
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,Def = {'typedef',_cor31,_cor32,_cor33,_cor34},[{_X_RefType,FieldName}|[]]> when ( 'true'
											       -| ['compiler_generated'] ) ->
	      %% Line 1251
	      ( case _cor34 of
		  ( <( {'Object',_cor39,_cor40,_rec119}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec119 of
			  <{_cor42,_cor43,ObjComps}> when 'true' ->
			      let <_cor8> =
				  %% Line 1252
				  call 'lists':'keysearch'
				      (FieldName, 1, ObjComps)
			      in  %% Line 1252
				  apply 'check_fieldname_element'/2
				      (S, _cor8)
			  ( <_cor7> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor7})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor41> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','Object'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 1253
	  <S,Def = {'typedef',_cor44,_cor45,_cor46,_cor47},[{_X_RefType,FieldName}|Rest]> when %% Line 1254
											       ( 'true'
												 -| ['compiler_generated'] ) ->
	      %% Line 1257
	      ( case _cor47 of
		  ( <( {'Object',_cor52,_cor53,_rec121}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec121 of
			  <{_cor55,_cor56,ObjComps}> when 'true' ->
			      let <_cor14> =
				  %% Line 1258
				  call 'lists':'keysearch'
				      (FieldName, 1, ObjComps)
			      in  let <NewDef> =
				      %% Line 1258
				      apply 'check_fieldname_element'/2
					  (S, _cor14)
				  in  let <_cor18> =
					  %% Line 1259
					  ( fun (_cor16) ->
						case _cor16 of
						  <{'Object',_cor57,_cor58,D}> when 'true' ->
						      D
						  %% Line 1260
						  <{'ObjectSet',_cor59,_cor60,_cor61,Set}> when 'true' ->
						      Set
						  ( <_cor17> when 'true' ->
							( primop 'match_fail'
							      ({'function_clause',_cor17})
							  -| [{'function_name',{'-get_fieldname_element/3-fun-0-',1}}] )
						    -| ['compiler_generated'] )
						end
					    -| [{'id',{0,0,'-get_fieldname_element/3-fun-0-'}}] )
				      in  let <ObjDef> =
					      %% Line 1259
					      apply _cor18
						  (%% Line 1262
						   NewDef)
					  in  %% Line 1263
					      case ObjDef of
						%% Line 1264
						<L>
						    when call 'erlang':'is_list'
							  (ObjDef) ->
						    %% Line 1265
						    ( letrec
							  'lc$^0'/1 =
							      fun (_cor22) ->
								  case _cor22 of
								    <[X|_cor21]> when 'true' ->
									let <_cor23> =
									    apply 'get_fieldname_element'/3
										(S, X, Rest)
									in  let <_cor24> =
										apply 'lc$^0'/1
										    (_cor21)
									    in  ( [_cor23|_cor24]
										  -| ['compiler_generated'] )
								    <[]> when 'true' ->
									[]
								    ( <_cor22> when 'true' ->
									  ( primop 'match_fail'
										({'function_clause',_cor22})
									    -| [{'function_name',{'lc$^0',1}}] )
								      -| ['compiler_generated'] )
								  end
						      in  apply 'lc$^0'/1
							      (L)
						      -| ['list_comprehension'] )
						%% Line 1266
						<_cor62> when 'true' ->
						    %% Line 1267
						    apply 'get_fieldname_element'/3
							(S, ObjDef, Rest)
					      end
			  ( <_cor13> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor13})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor54> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','Object'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 1269
	  <S,{'object',_cor63,Fields},[{_X_RefType,FieldName}|Rest]> when 'true' ->
	      let <_cor26> =
		  %% Line 1270
		  call 'lists':'keysearch'
		      (FieldName, 1, Fields)
	      in  let <NewDef> =
		      %% Line 1270
		      apply 'check_fieldname_element'/2
			  (S, _cor26)
		  in  %% Line 1271
		      apply 'get_fieldname_element'/3
			  (S, NewDef, Rest)
	  %% Line 1272
	  <_X_S,Def,[]> when 'true' ->
	      %% Line 1273
	      Def
	  %% Line 1274
	  <_X_S,Def = {'typedef',_cor64,_cor65,_cor66,_cor67},[{_X_RefType,_X_FieldName}|_X_RestFName]> when %% Line 1275
													     ( 'true'
													       -| ['compiler_generated'] ) ->
	      %% Line 1276
	      'ok'
	  ( <_cor30,_cor29,_cor28> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor30,_cor29,_cor28})
		  -| [{'function_name',{'get_fieldname_element',3}}] )
	    -| ['compiler_generated'] )
	end
'check_fieldname_element'/2 =
    %% Line 1278
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,{'value',{_cor9,Def}}> when 'true' ->
	      %% Line 1279
	      apply 'check_fieldname_element'/2
		  (S, Def)
	  %% Line 1280
	  <S,TDef = {'typedef',_cor10,_cor11,_cor12,_cor13}> when ( 'true'
								    -| ['compiler_generated'] ) ->
	      %% Line 1281
	      apply 'check_type'/3
		  (S, TDef, _cor13)
	  %% Line 1282
	  <S,VDef = {'valuedef',_cor18,_cor19,_cor20,_cor21,_cor22,_cor23}> when ( 'true'
										   -| ['compiler_generated'] ) ->
	      %% Line 1283
	      apply 'check_value'/2
		  (S, VDef)
	  %% Line 1284
	  <S,Eref>
	      when let <_cor4> =
		    %% Line 1285
		    ( call ( 'erlang'
			     -| ['compiler_generated'] ):( 'is_record'
							   -| ['compiler_generated'] )
			  (Eref, 'Externaltypereference', 4)
		      -| ['compiler_generated'] )
		in  let <_cor5> =
			%% Line 1286
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'is_record'
							       -| ['compiler_generated'] )
			      (Eref, 'Externalvaluereference', 4)
			  -| ['compiler_generated'] )
		    in  %% Line 1285
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'or'
							       -| ['compiler_generated'] )
			      (_cor4, _cor5)
			  -| ['compiler_generated'] ) ->
	      %% Line 1287
	      case apply 'get_referenced_type'/2
		       (S, Eref) of
		<{_cor24,TDef}> when 'true' ->
		    %% Line 1288
		    apply 'check_fieldname_element'/2
			(S, TDef)
		( <_cor6> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor6})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1289
	  <S,Other> when 'true' ->
	      %% Line 1290
	      call 'erlang':'throw'
		  ({'error',{'assigned_object_error',[110|[111|[116|[95|[97|[115|[115|[105|[103|[110|[101|[100|[95|[111|[98|[106|[101|[99|[116]]]]]]]]]]]]]]]]]]],Other,S}})
	end
'transform_set_to_object_list'/2 =
    %% Line 1292
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[{Name,_X_UVal,Fields}|Objs],Acc> when 'true' ->
	      %% Line 1293
	      apply 'transform_set_to_object_list'/2
		  (Objs, [{Name,{'object','generatesyntax',Fields}}|Acc])
	  %% Line 1294
	  <['EXTENSIONMARK'|Objs],Acc> when 'true' ->
	      %% Line 1296
	      apply 'transform_set_to_object_list'/2
		  (Objs, Acc)
	  %% Line 1297
	  <[],Acc> when 'true' ->
	      %% Line 1298
	      Acc
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'transform_set_to_object_list',2}}] )
	    -| ['compiler_generated'] )
	end
'get_unique_valuelist'/3 =
    %% Line 1300
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <_X_S,ObjSet,{'unique','undefined'}> when 'true' ->
	      let <_cor5> =
		  %% Line 1301
		  ( fun (_cor3) ->
			case _cor3 of
			  <{N,{_cor9,_cor10,F}}> when 'true' ->
			      {N,'no_unique_value',F}
			  %% Line 1302
			  <V = {_cor11,_cor12,_cor13}> when 'true' ->
			      V
			  %% Line 1303
			  <{A,B}> when 'true' ->
			      {A,'no_unique_value',B}
			  ( <_cor4> when 'true' ->
				( primop 'match_fail'
				      ({'function_clause',_cor4})
				  -| [{'function_name',{'-get_unique_valuelist/3-fun-0-',1}}] )
			    -| ['compiler_generated'] )
			end
		    -| [{'id',{0,0,'-get_unique_valuelist/3-fun-0-'}}] )
	      in  %% Line 1301
		  call 'lists':'map'
		      (_cor5, %% Line 1304
			      ObjSet)
	  %% Line 1305
	  <S,ObjSet,{UFN,Opt}> when 'true' ->
	      %% Line 1306
	      apply 'get_unique_vlist'/5
		  (S, ObjSet, UFN, Opt, [])
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6})
		  -| [{'function_name',{'get_unique_valuelist',3}}] )
	    -| ['compiler_generated'] )
	end
'get_unique_vlist'/5 =
    %% Line 1309
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <_X_S,[],_cor18,_cor19,[]> when 'true' ->
	      %% Line 1310
	      ['EXTENSIONMARK']
	  %% Line 1311
	  <S,[],_cor20,Opt,Acc> when 'true' ->
	      let <_cor6> =
		  catch
		      let <_cor5> =
			  %% Line 1312
			  apply 'remove_duplicate_objects'/1
			      (Acc)
		      in  %% Line 1312
			  apply 'check_uniqueness'/1
			      (_cor5)
	      in  %% Line 1312
		  case _cor6 of
		    %% Line 1313
		    <{'asn1_error',_cor21}>
			when call 'erlang':'=/='
			      (Opt,
			       'OPTIONAL') ->
			%% Line 1314
			apply 'error'/1
			    ({'ObjectSet',[110|[111|[116|[32|[117|[110|[105|[113|[117|[101|[32|[111|[98|[106|[101|[99|[116|[115|[32|[105|[110|[32|[111|[98|[106|[101|[99|[116|[32|[115|[101|[116]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],S})
		    %% Line 1315
		    <{'asn1_error',_cor22}> when 'true' ->
			%% Line 1316
			call 'lists':'reverse'
			    (Acc)
		    %% Line 1317
		    <_cor23> when 'true' ->
			%% Line 1318
			call 'lists':'reverse'
			    (Acc)
		  end
	  %% Line 1320
	  <S,['EXTENSIONMARK'|Rest],UniqueFieldName,Opt,Acc> when 'true' ->
	      %% Line 1321
	      apply 'get_unique_vlist'/5
		  (S, Rest, UniqueFieldName, Opt, Acc)
	  %% Line 1322
	  <S,[{ObjName,Obj}|Rest],UniqueFieldName,Opt,Acc> when 'true' ->
	      %% Line 1323
	      case Obj of
		<{_cor24,_cor25,Fields}> when 'true' ->
		    let <_cor10> =
			%% Line 1325
			case apply 'get_unique_value'/3
				 (S, Fields, UniqueFieldName) of
			  %% Line 1326
			  <{'valuedef',_cor26,_cor27,_cor28,_cor29,V,_cor30}> when 'true' ->
			      [{ObjName,V,Fields}|[]]
			  %% Line 1327
			  <[]> when 'true' ->
			      []
			  %% Line 1329
			  <'no_unique_value'> when 'true' ->
			      [{ObjName,'no_unique_value',Fields}|[]]
			  ( <_cor9> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor9})
			    -| ['compiler_generated'] )
			end
		    in  let <_cor12> =
			    %% Line 1331
			    call 'erlang':'++'
				(_cor10, Acc)
			in  %% Line 1331
			    apply 'get_unique_vlist'/5
				(S, Rest, UniqueFieldName, Opt, _cor12)
		( <_cor8> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor8})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1333
	  <S,[V = {_cor31,_cor32,_cor33}|Rest],UniqueFieldName,Opt,Acc> when 'true' ->
	      %% Line 1334
	      apply 'get_unique_vlist'/5
		  (S, Rest, UniqueFieldName, Opt, [V|Acc])
	  ( <_cor17,_cor16,_cor15,_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16,_cor15,_cor14,_cor13})
		  -| [{'function_name',{'get_unique_vlist',5}}] )
	    -| ['compiler_generated'] )
	end
'get_unique_value'/3 =
    %% Line 1336
    fun (_cor2,_cor1,_cor0) ->
	%% Line 1337
	( case _cor2 of
	    ( <( {'state',_cor35,_rec124,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46}
		 -| ['compiler_generated'] )> when 'true' ->
		  %% Line 1338
		  case call 'lists':'keysearch'
			   (_cor0, 1, _cor1) of
		    %% Line 1339
		    <{'value',Field}> when 'true' ->
			%% Line 1340
			case call 'erlang':'element'
				 (2, Field) of
			  %% Line 1341
			  <VDef = {'valuedef',_cor48,_cor49,_cor50,_cor51,_cor52,_cor53}> when ( 'true'
												 -| ['compiler_generated'] ) ->
			      %% Line 1342
			      VDef
			  %% Line 1343
			  <{'ValueFromObject',Object,Name}> when 'true' ->
			      %% Line 1344
			      case Object of
				%% Line 1345
				<{'object',Ext = {'Externaltypereference',_cor54,_cor55,_cor56}}> when ( 'true'
													 -| ['compiler_generated'] ) ->
				    %% Line 1349
				    ( case call 'asn1_db':'dbget'
					       (_cor55, _cor56) of
					( <( {'typedef',_cor63,_cor64,_cor65,_rec127}
					     -| ['compiler_generated'] )> when 'true' ->
					      let <_cor16> =
						  %% Line 1350
						  call 'erlang':'element'
						      (3, _rec127)
					      in  %% Line 1350
						  apply 'get_unique_value'/3
						      (_cor55, _cor16, Name)
					  -| ['compiler_generated'] )
					( <_cor66> when 'true' ->
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'error'
										     -| ['compiler_generated'] )
						    (( {'badrecord','typedef'}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
				%% Line 1351
				<{'object',{_cor67,_cor68,ObjName}}> when 'true' ->
				    %% Line 1353
				    ( case call 'asn1_db':'dbget'
					       (_rec124, ObjName) of
					( <( {'typedef',_cor69,_cor70,_cor71,_rec128}
					     -| ['compiler_generated'] )> when 'true' ->
					      let <_cor21> =
						  %% Line 1354
						  call 'erlang':'element'
						      (3, _rec128)
					      in  %% Line 1354
						  apply 'get_unique_value'/3
						      (_rec124, _cor21, Name)
					  -| ['compiler_generated'] )
					( <_cor72> when 'true' ->
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'error'
										     -| ['compiler_generated'] )
						    (( {'badrecord','typedef'}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
				%% Line 1355
				<{'po',_cor73,_X_Params}>
				    when call 'erlang':'=:='
					  (_cor73,
					   Object) ->
				    %% Line 1356
				    call 'erlang':'exit'
					({'error',{'parameterized object not implemented yet',%% Line 1357
											      Object},_cor2})
				( <_cor22> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor22})
				  -| ['compiler_generated'] )
			      end
			  %% Line 1359
			  <Value>
			      when let <_cor23> =
				    call 'erlang':'is_atom'
					(Value)
				in  let <_cor24> =
					call 'erlang':'is_number'
					    (Value)
				    in  call 'erlang':'or'
					    (_cor23, _cor24) ->
			      %% Line 1360
			      {'valuedef','false','undefined','undefined','undefined',Value,_rec124}
			  %% Line 1361
			  <{'CHOICE',{C,Value}}>
			      when call 'erlang':'is_atom'
				    (C) ->
			      %% Line 1363
			      case Value of
				%% Line 1364
				<Scalar>
				    when let <_cor25> =
					  call 'erlang':'is_atom'
					      (Value)
				      in  let <_cor26> =
					      call 'erlang':'is_number'
						  (Value)
					  in  call 'erlang':'or'
						  (_cor25, _cor26) ->
				    %% Line 1365
				    {'valuedef','false','undefined','undefined','undefined',Value,_rec124}
				%% Line 1366
				<Eref = {'Externalvaluereference',_cor74,_cor75,_cor76}> when 'true' ->
				    let <_cor27> =
					%% Line 1367
					apply 'get_referenced_type'/2
					    (_cor2, Eref)
				    in  %% Line 1367
					call 'erlang':'element'
					    (2, _cor27)
				( <_cor28> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor28})
				  -| ['compiler_generated'] )
			      end
			  ( <_cor29> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor29})
			    -| ['compiler_generated'] )
			end
		    %% Line 1370
		    <'false'> when 'true' ->
			%% Line 1371
			case _cor1 of
			  %% Line 1372
			  <[{_cor77,{'typedef',_cor78,_cor79,_cor80,{'ObjectSet',_cor81,_cor82,_cor83,['EXTENSIONMARK']}}}|[]]> when 'true' ->
			      %% Line 1373
			      []
			  %% Line 1374
			  <_cor84> when 'true' ->
			      %% Line 1375
			      'no_unique_value'
			end
		    ( <_cor31> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor31})
		      -| ['compiler_generated'] )
		  end
	      -| ['compiler_generated'] )
	    ( <_cor47> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'check_uniqueness'/1 =
    %% Line 1379
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 1380
	    call 'lists':'keysort'
		(2, _cor0)
	in  %% Line 1380
	    apply 'check_uniqueness1'/1
		(_cor1)
'check_uniqueness1'/1 =
    %% Line 1382
    fun (_cor0) ->
	case _cor0 of
	  <[]> when 'true' ->
	      %% Line 1383
	      'true'
	  %% Line 1384
	  <[_cor2|[]]> when 'true' ->
	      %% Line 1385
	      'true'
	  %% Line 1386
	  <[{_cor3,N,_cor4}|[{_cor5,_cor6,_cor7}|_X_Rest]]>
	      when call 'erlang':'=:='
		    (_cor6,
		     N) ->
	      %% Line 1387
	      call 'erlang':'throw'
		  ({'asn1_error',{'objects in set must have unique values in UNIQUE fields',N}})
	  %% Line 1388
	  <[_cor8|Rest]> when 'true' ->
	      %% Line 1389
	      apply 'check_uniqueness1'/1
		  (Rest)
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'check_uniqueness1',1}}] )
	    -| ['compiler_generated'] )
	end
'instantiate_po'/4 =
    %% Line 1396
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <S = {'state',_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_X_OldArgs,_cor26,_cor27,_cor28,_cor29,_cor30},_X_ClassDef,Object = {'pobjectdef',_cor31,_cor32,_cor33,_cor34,_cor35,_cor36},ArgsList> when ( 'true'
																										       -| ['compiler_generated'] ) ->
	      let <FormalParams> =
		  %% Line 1397
		  apply 'get_pt_args'/1
		      (Object)
	      in  let <MatchedArgs> =
		      %% Line 1398
		      apply 'match_args'/4
			  (S, FormalParams, ArgsList, [])
		  in  let <_cor7> =
			  %% Line 1400
			  call 'erlang':'setelement'
			      (9, S, MatchedArgs)
		      in  let <_cor9> =
			      %% Line 1400
			      call 'erlang':'setelement'
				  (4, _cor7, Object)
			  in  %% Line 1401
			      apply 'check_object'/3
				  (_cor9, Object, {'Object',_cor35,'true',_cor36})
	  ( <_cor18,_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor18,_cor17,_cor16,_cor15})
		  -| [{'function_name',{'instantiate_po',4}}] )
	    -| ['compiler_generated'] )
	end
'instantiate_pos'/4 =
    %% Line 1409
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <S = {'state',_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_X_OldArgs,_cor25,_cor26,_cor27,_cor28,_cor29},ClassRef,ObjectSetDef,ArgsList> when 'true' ->
	      let <FormalParams> =
		  %% Line 1411
		  apply 'get_pt_args'/1
		      (ObjectSetDef)
	      in  let <_cor6> =
		      %% Line 1412
		      case apply 'get_pt_spec'/1
			       (ObjectSetDef) of
			%% Line 1413
			<{'valueset',Set}> when 'true' ->
			    %% Line 1416
			    {'ObjectSet',ClassRef,'true','undefined',Set}
			%% Line 1417
			<Set = {'ObjectSet',_cor30,_cor31,_cor32,_cor33}> when ( 'true'
										 -| ['compiler_generated'] ) ->
			    Set
			%% Line 1418
			<_cor34> when 'true' ->
			    %% Line 1419
			    apply 'error'/1
				({'type',[112|[97|[114|[97|[109|[101|[116|[101|[114|[105|[122|[101|[100|[32|[111|[98|[106|[101|[99|[116|[32|[115|[101|[116|[32|[102|[97|[105|[108|[117|[114|[101]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],S})
		      end
		  in  let <MatchedArgs> =
			  %% Line 1421
			  apply 'match_args'/4
			      (S, FormalParams, ArgsList, [])
		      in  let <_cor10> =
			      %% Line 1423
			      call 'erlang':'setelement'
				  (9, S, MatchedArgs)
			  in  let <_cor12> =
				  %% Line 1423
				  call 'erlang':'setelement'
				      (4, _cor10, ObjectSetDef)
			      in  %% Line 1424
				  apply 'check_object'/3
				      (_cor12, ObjectSetDef, _cor6)
	  ( <_cor17,_cor16,_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16,_cor15,_cor14})
		  -| [{'function_name',{'instantiate_pos',4}}] )
	    -| ['compiler_generated'] )
	end
'gen_incl'/3 =
    %% Line 1432
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,{_cor6,_cor7,Fields},CFields> when 'true' ->
	      %% Line 1433
	      apply 'gen_incl1'/3
		  (S, Fields, CFields)
	  ( <_cor5,_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4,_cor3})
		  -| [{'function_name',{'gen_incl',3}}] )
	    -| ['compiler_generated'] )
	end
'gen_incl1'/3 =
    %% Line 1435
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <_cor23,_cor24,[]> when 'true' ->
	      %% Line 1436
	      'false'
	  %% Line 1437
	  <S,Fields,[C|CFields]> when 'true' ->
	      %% Line 1438
	      case call 'erlang':'element'
		       (1, C) of
		%% Line 1439
		<'typefield'> when 'true' ->
		    %% Line 1440
		    'true'
		%% Line 1442
		<'objectfield'> when 'true' ->
		    let <_cor3> =
			%% Line 1443
			call 'erlang':'element'
			    (2, C)
		    in  %% Line 1443
			case call 'lists':'keysearch'
				 (_cor3, 1, Fields) of
			  %% Line 1444
			  <{'value',Field}> when 'true' ->
			      let <_cor5> =
				  %% Line 1445
				  case call 'erlang':'element'
					   (3, C) of
				    %% Line 1446
				    <{'type',_cor25,Ref,_cor26,_cor27,_cor28}> when 'true' ->
					Ref
				    %% Line 1447
				    <Eref = {'Externaltypereference',_cor29,_cor30,_cor31}> when ( 'true'
												   -| ['compiler_generated'] ) ->
					%% Line 1448
					Eref
				    ( <_cor4> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',_cor4})
				      -| ['compiler_generated'] )
				  end
			      in  let <ClassFields> =
				      %% Line 1450
				      apply 'get_objclass_fields'/2
					  (S, _cor5)
				  in  let <_cor13> =
					  %% Line 1452
					  case call 'erlang':'element'
						   (2, Field) of
					    %% Line 1453
					    <TDef = {'typedef',_cor32,_cor33,_cor34,_cor35}> when ( 'true'
												    -| ['compiler_generated'] ) ->
						%% Line 1454
						apply 'check_object'/3
						    (S, TDef, _cor35)
					    %% Line 1455
					    <ERef> when 'true' ->
						%% Line 1456
						case apply 'get_referenced_type'/2
							 (S, ERef) of
						  <{_cor40,T}> when 'true' ->
						      let <_cor11> =
							  %% Line 1457
							  apply 'object_to_check'/1
							      (T)
						      in  %% Line 1457
							  apply 'check_object'/3
							      (S, T, _cor11)
						  ( <_cor10> when 'true' ->
							primop 'match_fail'
							    ({'badmatch',_cor10})
						    -| ['compiler_generated'] )
						end
					  end
				      in  %% Line 1459
					  ( case _cor13 of
					      ( <( {'Object',_cor41,_cor42,_rec134}
						   -| ['compiler_generated'] )> when 'true' ->
						    case apply 'gen_incl'/3
							     (S, _rec134, %% Line 1460
									  ClassFields) of
						      %% Line 1461
						      <'true'> when 'true' ->
							  %% Line 1462
							  'true'
						      %% Line 1463
						      <_cor44> when 'true' ->
							  %% Line 1464
							  apply 'gen_incl1'/3
							      (S, Fields, CFields)
						    end
						-| ['compiler_generated'] )
					      ( <_cor43> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {'badrecord','Object'}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
			  %% Line 1466
			  <_cor45> when 'true' ->
			      %% Line 1467
			      apply 'gen_incl1'/3
				  (S, Fields, CFields)
			end
		%% Line 1469
		<_cor46> when 'true' ->
		    %% Line 1470
		    apply 'gen_incl1'/3
			(S, Fields, CFields)
	      end
	  ( <_cor22,_cor21,_cor20> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor22,_cor21,_cor20})
		  -| [{'function_name',{'gen_incl1',3}}] )
	    -| ['compiler_generated'] )
	end
'get_objclass_fields'/2 =
    %% Line 1473
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,Eref = {'Externaltypereference',_cor8,_cor9,_cor10}> when 'true' ->
	      %% Line 1474
	      case apply 'get_referenced_type'/2
		       (S, Eref) of
		<{_cor11,ClassDef}> when 'true' ->
		    %% Line 1475
		    apply 'get_objclass_fields'/2
			(S, ClassDef)
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1476
	  <S,CD = {'classdef',_cor12,_cor13,_cor14,{'Externaltypereference',_cor15,_cor16,_cor17}}> when 'true' ->
	      let <_rec135> =
		  %% Line 1477
		  ( {'Externaltypereference',_cor15,_cor16,_cor17}
		    -| ['compiler_generated'] )
	      in  %% Line 1477
		  apply 'get_objclass_fields'/2
		      (S, _rec135)
	  %% Line 1478
	  <_cor22,{'classdef',_cor23,_cor24,_cor25,CDef = {'objectclass',_cor26,_cor27}}> when %% Line 1479
											       ( 'true'
												 -| ['compiler_generated'] ) ->
	      _cor26
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'get_objclass_fields',2}}] )
	    -| ['compiler_generated'] )
	end
'gen_incl_set'/3 =
    %% Line 1484
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,Fields,{'typedef',_cor14,_cor15,_cor16,{'type',_cor17,Eref = {'Externaltypereference',_cor18,_cor19,_cor20},_cor21,_cor22,_cor23}}> when %% Line 1485
																		      ( 'true'
																			-| ['compiler_generated'] ) ->
	      %% Line 1487
	      case apply 'get_referenced_type'/2
		       (S, Eref) of
		<{_cor24,CDef}> when 'true' ->
		    %% Line 1488
		    apply 'gen_incl_set'/3
			(S, Fields, CDef)
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1489
	  <S,Fields,ClassDef> when 'true' ->
	      let <_cor4> =
		  catch
		      %% Line 1490
		      apply 'get_unique_fieldname'/2
			  (S, ClassDef)
	      in  %% Line 1490
		  case _cor4 of
		    %% Line 1491
		    <Tuple>
			when try
			      let <_cor5> =
				  call 'erlang':'tuple_size'
				      (_cor4)
			      in  call 'erlang':'=:='
				      (_cor5, 3)
			  of <Try> ->
			      Try
			  catch <T,R> ->
			      'false' ->
			%% Line 1492
			'false'
		    %% Line 1493
		    <_cor25> when 'true' ->
			%% Line 1495
			( case ClassDef of
			    ( <( {'classdef',_cor26,_cor27,_cor28,_rec138}
				 -| ['compiler_generated'] )> when 'true' ->
				  ( case _rec138 of
				      ( <( {'objectclass',_rec137,_cor30}
					   -| ['compiler_generated'] )> when 'true' ->
					    apply 'gen_incl_set1'/3
						(S, Fields, _rec137)
					-| ['compiler_generated'] )
				      ( <_cor31> when 'true' ->
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'error'
										   -| ['compiler_generated'] )
						  (( {'badrecord','objectclass'}
						     -| ['compiler_generated'] ))
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			    ( <_cor29> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','classdef'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		  end
	end
'gen_incl_set1'/3 =
    %% Line 1501
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <_cor9,[],_X_CFields> when 'true' ->
	      %% Line 1502
	      'false'
	  %% Line 1503
	  <_cor10,['EXTENSIONMARK'],_cor11> when 'true' ->
	      %% Line 1504
	      'true'
	  %% Line 1507
	  <_cor12,['EXTENSIONMARK'|_cor13],_cor14> when 'true' ->
	      %% Line 1508
	      'true'
	  %% Line 1509
	  <S,[Object|Rest],CFields> when 'true' ->
	      let <_cor3> =
		  %% Line 1510
		  call 'erlang':'tuple_size'
		      (Object)
	      in  let <Fields> =
		      %% Line 1510
		      call 'erlang':'element'
			  (_cor3, Object)
		  in  %% Line 1511
		      case apply 'gen_incl1'/3
			       (S, Fields, CFields) of
			%% Line 1512
			<'true'> when 'true' ->
			    %% Line 1513
			    'true'
			%% Line 1514
			<'false'> when 'true' ->
			    %% Line 1515
			    apply 'gen_incl_set1'/3
				(S, Rest, CFields)
			( <_cor5> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor5})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6})
		  -| [{'function_name',{'gen_incl_set1',3}}] )
	    -| ['compiler_generated'] )
	end
'check_objectdefn'/3 =
    %% Line 1518
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,Def,CDef = {'classdef',_cor22,_cor23,_cor24,_cor25}> when ( 'true'
									 -| ['compiler_generated'] ) ->
	      %% Line 1519
	      ( case _cor25 of
		  ( <( {'objectclass',_cor30,_rec139}
		       -| ['compiler_generated'] )> when 'true' ->
			%% Line 1521
			case Def of
			  %% Line 1522
			  <{'object','defaultsyntax',Fields}> when 'true' ->
			      %% Line 1523
			      apply 'check_defaultfields'/3
				  (S, Fields, _cor30)
			  %% Line 1524
			  <{'object','definedsyntax',Fields}> when 'true' ->
			      %% Line 1525
			      case _rec139 of
				<{_cor38,WSSpec}> when 'true' ->
				    let <_cor14> =
					catch
					    %% Line 1527
					    apply 'convert_definedsyntax'/5
						(S, Fields, WSSpec, _cor30, %% Line 1528
									    [])
				    in  let <_cor16> =
					    %% Line 1527
					    case _cor14 of
					      %% Line 1529
					      <{'asn1',{_X_ErrorType,ObjToken,ClassToken}}> when 'true' ->
						  %% Line 1530
						  call 'erlang':'throw'
						      ({'asn1',{'match error in object',ObjToken,%% Line 1531
												 'found in object',%% Line 1531
														   ClassToken,%% Line 1531
															      'found in class'}})
					      %% Line 1532
					      <Err = {'asn1',_cor39}> when 'true' ->
						  call 'erlang':'throw'
						      (Err)
					      %% Line 1533
					      <Err = {'EXIT',_cor40}> when 'true' ->
						  call 'erlang':'throw'
						      (Err)
					      %% Line 1534
					      <DefaultFields>
						  when call 'erlang':'is_list'
							(_cor14) ->
						  %% Line 1535
						  DefaultFields
					      ( <_cor15> when 'true' ->
						    primop 'match_fail'
							({'case_clause',_cor15})
						-| ['compiler_generated'] )
					    end
					in  %% Line 1537
					    {'object','defaultsyntax',_cor16}
				( <_cor13> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor13})
				  -| ['compiler_generated'] )
			      end
			  %% Line 1538
			  <{'object',_X_ObjectId}> when 'true' ->
			      %% Line 1539
			      'fixa'
			  %% Line 1540
			  <Other> when 'true' ->
			      %% Line 1541
			      call 'erlang':'exit'
				  ({'error',{'objectdefn',Other}})
			end
		    -| ['compiler_generated'] )
		  ( <_cor31> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','objectclass'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor21,_cor20,_cor19> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor21,_cor20,_cor19})
		  -| [{'function_name',{'check_objectdefn',3}}] )
	    -| ['compiler_generated'] )
	end
'check_defaultfields'/3 =
    %% Line 1544
    fun (_cor2,_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 1545
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor5) ->
			  case _cor5 of
			    <[{F,_cor24}|_cor4]> when 'true' ->
				let <_cor6> =
				    apply 'lc$^0'/1
					(_cor4)
				in  ( [F|_cor6]
				      -| ['compiler_generated'] )
			    ( <[_cor3|_cor4]> when 'true' ->
				  apply 'lc$^0'/1
				      (_cor4)
			      -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_cor5> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor5})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  apply 'lc$^0'/1
		      (_cor1)
	      -| ['list_comprehension'] )
	in  let <Present> =
		%% Line 1545
		call 'ordsets':'from_list'
		    (_cor7)
	    in  let <Mandatory0> =
		    %% Line 1546
		    apply 'get_mandatory_class_fields'/1
			(_cor0)
		in  let <Mandatory> =
			%% Line 1547
			call 'ordsets':'from_list'
			    (Mandatory0)
		    in  let <_cor16> =
			    %% Line 1548
			    ( letrec
				  'lc$^1'/1 =
				      fun (_cor13) ->
					  case _cor13 of
					    <[F|_cor12]> when 'true' ->
						let <_cor14> =
						    call 'erlang':'element'
							(2, F)
						in  let <_cor15> =
							apply 'lc$^1'/1
							    (_cor12)
						    in  ( [_cor14|_cor15]
							  -| ['compiler_generated'] )
					    <[]> when 'true' ->
						[]
					    ( <_cor13> when 'true' ->
						  ( primop 'match_fail'
							({'function_clause',_cor13})
						    -| [{'function_name',{'lc$^1',1}}] )
					      -| ['compiler_generated'] )
					  end
			      in  apply 'lc$^1'/1
				      (_cor0)
			      -| ['list_comprehension'] )
			in  let <All> =
				%% Line 1548
				call 'ordsets':'from_list'
				    (_cor16)
			    in  %% Line 1549
				case _cor2 of
				  <{'state',_cor25,_cor26,T,Obj,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35}> when 'true' ->
				      do  %% Line 1550
					  case call 'ordsets':'subtract'
						   (Present, All) of
					    %% Line 1551
					    <[]> when 'true' ->
						'ok'
					    %% Line 1553
					    <Invalid = [_cor36|_cor37]> when 'true' ->
						%% Line 1554
						apply 'asn1_error'/3
						    (_cor2, T, {'invalid_fields',Invalid,Obj})
					    ( <_cor19> when 'true' ->
						  primop 'match_fail'
						      ({'case_clause',_cor19})
					      -| ['compiler_generated'] )
					  end
					  %% Line 1556
					  case call 'ordsets':'subtract'
						   (Mandatory, Present) of
					    %% Line 1557
					    <[]> when 'true' ->
						%% Line 1558
						apply 'check_defaultfields_1'/4
						    (_cor2, _cor1, _cor0, [])
					    %% Line 1559
					    <Missing = [_cor38|_cor39]> when 'true' ->
						%% Line 1560
						apply 'asn1_error'/3
						    (_cor2, T, {'missing_mandatory_fields',Missing,Obj})
					    ( <_cor20> when 'true' ->
						  primop 'match_fail'
						      ({'case_clause',_cor20})
					      -| ['compiler_generated'] )
					  end
				  ( <_cor18> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_cor18})
				    -| ['compiler_generated'] )
				end
'check_defaultfields_1'/4 =
    %% Line 1563
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <_X_S,[],_X_ClassFields,Acc> when 'true' ->
	      let <_cor4> =
		  %% Line 1564
		  call 'lists':'reverse'
		      (Acc)
	      in  %% Line 1564
		  {'object','defaultsyntax',_cor4}
	  %% Line 1565
	  <S,[{FName,Spec}|Fields],ClassFields,Acc> when 'true' ->
	      let <CField> =
		  %% Line 1566
		  call 'lists':'keyfind'
		      (FName, 2, ClassFields)
	      in  %% Line 1567
		  case %% Line 1568
		       apply 'convert_to_defaultfield'/4
			   (S, FName, [Spec|Fields], CField) of
		    <{NewField,RestFields}> when 'true' ->
			%% Line 1569
			apply 'check_defaultfields_1'/4
			    (S, RestFields, ClassFields, [NewField|Acc])
		    ( <_cor6> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor6})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor10,_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8,_cor7})
		  -| [{'function_name',{'check_defaultfields_1',4}}] )
	    -| ['compiler_generated'] )
	end
'convert_definedsyntax'/5 =
    %% Line 1571
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <_X_S,[],[],_X_ClassFields,Acc> when 'true' ->
	      %% Line 1572
	      call 'lists':'reverse'
		  (Acc)
	  %% Line 1573
	  <S,Fields,WithSyntax,ClassFields,Acc> when 'true' ->
	      %% Line 1574
	      case %% Line 1575
		   apply 'match_field'/4
		       (S, Fields, WithSyntax, ClassFields) of
		<{MatchedField,RestFields,RestWS}> when 'true' ->
		    %% Line 1576
		    case <> of
		      %% Line 1577
		      <>
			  when call 'erlang':'is_list'
				(MatchedField) ->
			  let <_cor6> =
			      %% Line 1579
			      call 'lists':'append'
				  (MatchedField, Acc)
			  in  %% Line 1578
			      apply 'convert_definedsyntax'/5
				  (S, RestFields, RestWS, ClassFields, _cor6)
		      %% Line 1580
		      <> when 'true' ->
			  %% Line 1581
			  apply 'convert_definedsyntax'/5
			      (S, RestFields, RestWS, ClassFields, %% Line 1582
								   [MatchedField|Acc])
		    end
		( <_cor5> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor5})
		  -| ['compiler_generated'] )
	      end
	end
'get_mandatory_class_fields'/1 =
    %% Line 1585
    fun (_cor0) ->
	case _cor0 of
	  <[{'fixedtypevaluefield',Name,_cor8,_cor9,'MANDATORY'}|T]> when 'true' ->
	      let <_cor1> =
		  %% Line 1586
		  apply 'get_mandatory_class_fields'/1
		      (T)
	      in  %% Line 1586
		  [Name|_cor1]
	  %% Line 1587
	  <[{'objectfield',Name,_cor10,_cor11,'MANDATORY'}|T]> when 'true' ->
	      let <_cor2> =
		  %% Line 1588
		  apply 'get_mandatory_class_fields'/1
		      (T)
	      in  %% Line 1588
		  [Name|_cor2]
	  %% Line 1589
	  <[{'objectsetfield',Name,_cor12,'MANDATORY'}|T]> when 'true' ->
	      let <_cor3> =
		  %% Line 1590
		  apply 'get_mandatory_class_fields'/1
		      (T)
	      in  %% Line 1590
		  [Name|_cor3]
	  %% Line 1591
	  <[{'typefield',Name,'MANDATORY'}|T]> when 'true' ->
	      let <_cor4> =
		  %% Line 1592
		  apply 'get_mandatory_class_fields'/1
		      (T)
	      in  %% Line 1592
		  [Name|_cor4]
	  %% Line 1593
	  <[{'variabletypevaluefield',Name,_cor13,'MANDATORY'}|T]> when 'true' ->
	      let <_cor5> =
		  %% Line 1594
		  apply 'get_mandatory_class_fields'/1
		      (T)
	      in  %% Line 1594
		  [Name|_cor5]
	  %% Line 1595
	  <[{'variabletypevaluesetfield',%% Line 1596
					 Name,_cor14,%% Line 1596
						     'MANDATORY'}|%% Line 1596
								  T]> when 'true' ->
	      let <_cor6> =
		  %% Line 1597
		  apply 'get_mandatory_class_fields'/1
		      (T)
	      in  %% Line 1597
		  [Name|_cor6]
	  %% Line 1598
	  <[_cor15|T]> when 'true' ->
	      %% Line 1599
	      apply 'get_mandatory_class_fields'/1
		  (T)
	  %% Line 1600
	  <[]> when 'true' ->
	      []
	  ( <_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7})
		  -| [{'function_name',{'get_mandatory_class_fields',1}}] )
	    -| ['compiler_generated'] )
	end
'match_field'/4 =
    %% Line 1602
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 1603
	apply 'match_field'/5
	    (_cor3, _cor2, _cor1, _cor0, [])
'match_field'/5 =
    %% Line 1605
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <S,Fields,[W|Ws],ClassFields,Acc>
	      when call 'erlang':'is_list'
		    (W) ->
	      let <_cor5> =
		  catch
		      %% Line 1606
		      apply 'match_optional_field'/5
			  (S, Fields, W, ClassFields, [])
	      in  %% Line 1606
		  case _cor5 of
		    %% Line 1607
		    <{'EXIT',_cor12}> when 'true' ->
			%% Line 1608
			apply 'match_field'/4
			    (Fields, Ws, ClassFields, Acc)
		    %% Line 1611
		    <{Result,RestFields}>
			when call 'erlang':'is_list'
			      (Result) ->
			%% Line 1612
			{Result,RestFields,Ws}
		    %% Line 1613
		    <_cor13> when 'true' ->
			%% Line 1614
			apply 'match_field'/5
			    (S, Fields, Ws, ClassFields, Acc)
		  end
	  %% Line 1616
	  <S,Fields,WithSyntax,ClassFields,_X_Acc> when 'true' ->
	      %% Line 1617
	      apply 'match_mandatory_field'/5
		  (S, Fields, WithSyntax, ClassFields, [])
	end
'match_optional_field'/5 =
    %% Line 1619
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <_X_S,RestFields,[],_cor20,Ret> when 'true' ->
	      %% Line 1620
	      {Ret,RestFields}
	  %% Line 1622
	  <S,Fields,[W|Ws],ClassFields,Ret>
	      when call 'erlang':'is_list'
		    (W) ->
	      let <_cor5> =
		  catch
		      %% Line 1623
		      apply 'match_optional_field'/5
			  (S, Fields, W, ClassFields, [])
	      in  %% Line 1623
		  case _cor5 of
		    %% Line 1624
		    <{'EXIT',_cor21}>
			when try
			      let <_cor6> =
				  call 'erlang':'length'
				      (Ws)
			      in  call 'erlang':'>'
				      (_cor6, 0)
			  of <Try> ->
			      Try
			  catch <T,R> ->
			      'false' ->
			%% Line 1625
			apply 'match_optional_field'/5
			    (S, Fields, Ws, ClassFields, Ret)
		    %% Line 1626
		    <{'EXIT',_cor22}> when 'true' ->
			%% Line 1627
			{Ret,Fields}
		    %% Line 1628
		    <{'asn1',{'optional_matcherror',_cor23,_cor24}}>
			when try
			      let <_cor7> =
				  call 'erlang':'length'
				      (Ws)
			      in  call 'erlang':'>'
				      (_cor7, 0)
			  of <Try> ->
			      Try
			  catch <T,R> ->
			      'false' ->
			%% Line 1629
			apply 'match_optional_field'/5
			    (S, Fields, Ws, ClassFields, Ret)
		    %% Line 1630
		    <{'asn1',{'optional_matcherror',_cor25,_cor26}}> when 'true' ->
			%% Line 1631
			{Ret,Fields}
		    %% Line 1632
		    <{OptionalField,RestFields}> when 'true' ->
			let <_cor8> =
			    %% Line 1634
			    call 'lists':'append'
				(OptionalField, Ret)
			in  %% Line 1633
			    apply 'match_optional_field'/5
				(S, RestFields, Ws, ClassFields, _cor8)
		    ( <_cor9> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor9})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1637
	  <S,[{_cor27,_cor28,{'Externaltypereference',_cor29,_cor30,WorS}}|Rest],%% Line 1638
										 [_cor31|Ws],%% Line 1638
											     ClassFields,%% Line 1638
													 Ret>
	      when call 'erlang':'=:='
		    (_cor31,
		     %% Line 1638
		     WorS) ->
	      %% Line 1639
	      apply 'match_optional_field'/5
		  (S, Rest, Ws, ClassFields, Ret)
	  %% Line 1640
	  <S,[],_cor32,ClassFields,Ret> when 'true' ->
	      %% Line 1641
	      apply 'match_optional_field'/5
		  (S, [], [], ClassFields, Ret)
	  %% Line 1643
	  <S,[{WorS,_cor33}|Rest],[{_cor34,_cor35}|Ws],ClassFields,Ret>
	      when call 'erlang':'=:='
		    (_cor34,
		     WorS) ->
	      %% Line 1644
	      apply 'match_optional_field'/5
		  (S, Rest, Ws, ClassFields, Ret)
	  %% Line 1646
	  <S,[Setting|[]],DefinedSyntax,ClassFields,Ret>
	      when %% Line 1647
		call 'erlang':'is_list'
		    (Setting) ->
	      %% Line 1648
	      apply 'match_optional_field'/5
		  (S, Setting, DefinedSyntax, ClassFields, Ret)
	  %% Line 1650
	  <S,[Setting|Rest],[{_cor36,W}|Ws],ClassFields,Ret> when 'true' ->
	      let <_cor11> =
		  %% Line 1653
		  case Setting of
		    %% Line 1654
		    <Type = {'type',_cor37,_cor38,_cor39,_cor40,_cor41}> when ( 'true'
										-| ['compiler_generated'] ) ->
			Type
		    %% Line 1655
		    <{'ValueFromObject',_cor42,_cor43}> when 'true' ->
			Setting
		    %% Line 1656
		    <{'object',_cor44,_cor45}> when 'true' ->
			Setting
		    %% Line 1657
		    <{_cor46,_cor47,WordOrSetting}> when 'true' ->
			WordOrSetting
		    %% Line 1658
		    <Other> when 'true' ->
			Other
		  end
	      in  %% Line 1660
		  case call 'lists':'keysearch'
			   (W, 2, ClassFields) of
		    %% Line 1661
		    <'false'> when 'true' ->
			%% Line 1662
			call 'erlang':'throw'
			    ({'asn1',{'optional_matcherror',_cor11,W}})
		    %% Line 1663
		    <{'value',CField}> when 'true' ->
			%% Line 1664
			case %% Line 1665
			     apply 'convert_to_defaultfield'/4
				 (S, W, [_cor11|Rest], CField) of
			  <{NewField,RestFields}> when 'true' ->
			      %% Line 1666
			      apply 'match_optional_field'/5
				  (S, RestFields, Ws, ClassFields, [NewField|Ret])
			  ( <_cor13> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor13})
			    -| ['compiler_generated'] )
			end
		    ( <_cor14> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor14})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1668
	  <_X_S,[WorS|_X_Rest],[W|_X_Ws],_X_ClassFields,_X_Ret> when 'true' ->
	      %% Line 1669
	      call 'erlang':'throw'
		  ({'asn1',{'optional_matcherror',WorS,W}})
	  ( <_cor19,_cor18,_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor19,_cor18,_cor17,_cor16,_cor15})
		  -| [{'function_name',{'match_optional_field',5}}] )
	    -| ['compiler_generated'] )
	end
'match_mandatory_field'/5 =
    %% Line 1671
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <_X_S,[],[],_cor18,[Acc|[]]> when 'true' ->
	      %% Line 1672
	      {Acc,[],[]}
	  %% Line 1673
	  <_X_S,[],[],_cor19,Acc> when 'true' ->
	      %% Line 1674
	      {Acc,[],[]}
	  %% Line 1675
	  <S,[],[H|T],CF,Acc>
	      when call 'erlang':'is_list'
		    (H) ->
	      %% Line 1676
	      apply 'match_mandatory_field'/5
		  (S, [], T, CF, Acc)
	  %% Line 1677
	  <_X_S,[],WithSyntax,_cor20,_X_Acc> when 'true' ->
	      %% Line 1678
	      call 'erlang':'throw'
		  ({'asn1',{'mandatory_matcherror',[],WithSyntax}})
	  %% Line 1680
	  <_X_S,Fields,WithSyntax = [W|_X_Ws],_X_ClassFields,Acc>
	      when try
		    let <_cor5> =
			call 'erlang':'is_list'
			    (W)
		    in  let <_cor6> =
			    call 'erlang':'length'
				(Acc)
			in  let <_cor7> =
				call 'erlang':'>='
				    (_cor6, 1)
			    in  call 'erlang':'and'
				    (_cor5, _cor7)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 1681
	      {Acc,Fields,WithSyntax}
	  %% Line 1684
	  <S,[{_cor21,_cor22,{'Externaltypereference',_cor23,_cor24,WorS}}|Rest],%% Line 1685
										 [_cor25|Ws],%% Line 1685
											     ClassFields,%% Line 1685
													 Acc>
	      when call 'erlang':'=:='
		    (_cor25,
		     %% Line 1685
		     WorS) ->
	      %% Line 1686
	      apply 'match_mandatory_field'/5
		  (S, Rest, Ws, ClassFields, Acc)
	  %% Line 1688
	  <S,[{WorS,_cor26}|Rest],[{_cor27,_cor28}|Ws],ClassFields,Ret>
	      when call 'erlang':'=:='
		    (_cor27,
		     WorS) ->
	      %% Line 1689
	      apply 'match_mandatory_field'/5
		  (S, Rest, Ws, ClassFields, Ret)
	  %% Line 1691
	  <S,[Setting|Rest],[{_cor29,W}|Ws],ClassFields,Acc> when 'true' ->
	      let <_cor9> =
		  %% Line 1694
		  case Setting of
		    %% Line 1695
		    <{'object',_cor30,_cor31}> when 'true' ->
			Setting
		    %% Line 1696
		    <{_cor32,_cor33,WordOrSetting}> when 'true' ->
			WordOrSetting
		    %% Line 1697
		    <Type = {'type',_cor34,_cor35,_cor36,_cor37,_cor38}> when ( 'true'
										-| ['compiler_generated'] ) ->
			Type
		    %% Line 1698
		    <Other> when 'true' ->
			Other
		  end
	      in  %% Line 1700
		  case call 'lists':'keysearch'
			   (W, 2, ClassFields) of
		    %% Line 1701
		    <'false'> when 'true' ->
			%% Line 1702
			call 'erlang':'throw'
			    ({'asn1',{'mandatory_matcherror',_cor9,W}})
		    %% Line 1703
		    <{'value',CField}> when 'true' ->
			%% Line 1704
			case %% Line 1705
			     apply 'convert_to_defaultfield'/4
				 (S, W, [_cor9|Rest], CField) of
			  <{NewField,RestFields}> when 'true' ->
			      %% Line 1706
			      apply 'match_mandatory_field'/5
				  (S, RestFields, Ws, ClassFields, [NewField|Acc])
			  ( <_cor11> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor11})
			    -| ['compiler_generated'] )
			end
		    ( <_cor12> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor12})
		      -| ['compiler_generated'] )
		  end
	  %% Line 1709
	  <_X_S,[WorS|_X_Rest],[W|_X_Ws],_X_ClassFields,_X_Acc> when 'true' ->
	      %% Line 1710
	      call 'erlang':'throw'
		  ({'asn1',{'mandatory_matcherror',WorS,W}})
	  ( <_cor17,_cor16,_cor15,_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16,_cor15,_cor14,_cor13})
		  -| [{'function_name',{'match_mandatory_field',5}}] )
	    -| ['compiler_generated'] )
	end
'convert_to_defaultfield'/4 =
    %% Line 1715
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <S,ObjFieldName,[OFS|RestOFS],CField> when 'true' ->
	      %% Line 1717
	      ( case S of
		  ( <( {'state',_cor151,_rec143,_cor152,_cor153,_cor154,_cor155,_cor156,_cor157,_cor158,_cor159,_cor160,_cor161,_cor162}
		       -| ['compiler_generated'] )> when 'true' ->
			let <Strip_value_tag> =
			    %% Line 1719
			    ( fun (_cor7) ->
				  case _cor7 of
				    <{'value_tag',ValueSetting}> when 'true' ->
					ValueSetting
				    %% Line 1720
				    <VS> when 'true' ->
					VS
				  end
			      -| [{'id',{0,0,'-convert_to_defaultfield/4-fun-0-'}}] )
			in  let <ObjFieldSetting> =
				%% Line 1722
				apply Strip_value_tag
				    (OFS)
			    in  let <_cor16> =
				    %% Line 1723
				    ( letrec
					  'lc$^0'/1 =
					      fun (_cor13) ->
						  case _cor13 of
						    <[X|_cor12]> when 'true' ->
							let <_cor14> =
							    apply Strip_value_tag
								(X)
							in  let <_cor15> =
								apply 'lc$^0'/1
								    (_cor12)
							    in  ( [_cor14|_cor15]
								  -| ['compiler_generated'] )
						    <[]> when 'true' ->
							[]
						    ( <_cor13> when 'true' ->
							  ( primop 'match_fail'
								({'function_clause',_cor13})
							    -| [{'function_name',{'lc$^0',1}}] )
						      -| ['compiler_generated'] )
						  end
				      in  apply 'lc$^0'/1
					      (RestOFS)
				      -| ['list_comprehension'] )
				in  %% Line 1724
				    case call 'erlang':'element'
					     (1, CField) of
				      %% Line 1725
				      <'typefield'> when 'true' ->
					  let <_cor26> =
					      %% Line 1727
					      case ObjFieldSetting of
						%% Line 1728
						<TypeRec = {'type',_cor164,_cor165,_cor166,_cor167,_cor168}> when ( 'true'
														    -| ['compiler_generated'] ) ->
						    _cor165
						%% Line 1729
						<TDef = {'typedef',_cor174,_cor175,_cor176,_cor177}> when ( 'true'
													    -| ['compiler_generated'] ) ->
						    let <_rec145> =
							%% Line 1731
							apply 'check_type'/3
							    (S, TDef, _cor177)
						    in  let <_cor23> =
							    %% Line 1731
							    call 'erlang':'setelement'
								(5, TDef, _rec145)
							in  %% Line 1730
							    call 'erlang':'setelement'
								(2, _cor23, 'true')
						%% Line 1733
						<_cor187> when 'true' ->
						    ObjFieldSetting
					      end
					  in  let <_cor70> =
						  %% Line 1736
						  case <> of
						    %% Line 1737
						    <>
							when ( call ( 'erlang'
								   -| ['compiler_generated'] ):( 'is_record'
												 -| ['compiler_generated'] )
								(_cor26,
								 'typedef',
								 5)
							    -| ['compiler_generated'] ) ->
							{_cor26,_cor16}
						    %% Line 1738
						    <>
							when ( call ( 'erlang'
								   -| ['compiler_generated'] ):( 'is_record'
												 -| ['compiler_generated'] )
								(_cor26,
								 'ObjectClassFieldType',
								 5)
							    -| ['compiler_generated'] ) ->
							let <T> =
							    %% Line 1739
							    apply 'check_type'/3
								(S, {'typedef','false','undefined','undefined',ObjFieldSetting}, ObjFieldSetting)
							in  let <_cor29> =
								%% Line 1740
								apply 'oCFT_def'/2
								    (S, T)
							    in  %% Line 1740
								{_cor29,_cor16}
						    %% Line 1742
						    <>
							when try
							      let <_cor30> =
								  call 'erlang':'is_tuple'
								      (_cor26)
							      in  let <_cor31> =
								      call 'erlang':'element'
									  (1, _cor26)
								  in  let <_cor32> =
									  call 'erlang':'=:='
									      (_cor31, 'pt')
								      in  call 'erlang':'and'
									      (_cor30, _cor32)
							  of <Try> ->
							      Try
							  catch <T,R> ->
							      'false' ->
							let <T> =
							    %% Line 1745
							    apply 'check_type'/3
								(S, {'typedef','false','undefined','undefined',ObjFieldSetting}, ObjFieldSetting)
							in  %% Line 1746
							    case %% Line 1747
								 call 'erlang':'element'
								     (2, _cor26) of
							      <{'Externaltypereference',_cor188,_cor189,PtName}> when 'true' ->
								  let <NameList> =
								      %% Line 1748
								      [PtName|[_cor153|[]]]
								  in  let <_cor38> =
									  %% Line 1749
									  call 'asn1ct_gen':'list2name'
									      (NameList)
								      in  let <NewName> =
									      %% Line 1749
									      call 'erlang':'list_to_atom'
										  (_cor38)
									  in  let <NewTDef> =
										  %% Line 1750
										  {'typedef','true','undefined',NewName,%% Line 1751
															T}
									      in  do  %% Line 1752
										      call 'asn1_db':'dbput'
											  (_rec143, NewName, NewTDef)
										      do  %% Line 1754
											  apply 'insert_once'/3
											      (S, 'parameterized_objects', %% Line 1755
															   {NewName,'type',NewTDef})
											  %% Line 1756
											  {NewTDef,_cor16}
							      ( <_cor34> when 'true' ->
								    primop 'match_fail'
									({'badmatch',_cor34})
								-| ['compiler_generated'] )
							    end
						    %% Line 1757
						    <>
							when try
							      let <_cor43> =
								  call 'erlang':'is_tuple'
								      (_cor26)
							      in  let <_cor44> =
								      call 'erlang':'element'
									  (1, _cor26)
								  in  let <_cor45> =
									  call 'erlang':'=:='
									      (_cor44, 'SelectionType')
								      in  call 'erlang':'and'
									      (_cor43, _cor45)
							  of <Try> ->
							      Try
							  catch <T,R> ->
							      'false' ->
							let <T> =
							    %% Line 1758
							    apply 'check_type'/3
								(S, {'typedef','false','undefined','undefined',ObjFieldSetting}, %% Line 1759
																 ObjFieldSetting)
							in  let <Name> =
								%% Line 1760
								apply 'type_name'/2
								    (S, T)
							    in  %% Line 1761
								{{'typedef','true','undefined',Name,T},_cor16}
						    %% Line 1762
						    <> when 'true' ->
							let <_cor48> =
							    %% Line 1763
							    call 'asn1ct_gen':'get_inner'
								(_cor26)
							in  %% Line 1763
							    case call 'asn1ct_gen':'type'
								     (_cor48) of
							      %% Line 1764
							      <ERef = {'Externaltypereference',_cor216,_cor217,_cor218}>
								  when call 'erlang':'=:='
									(_cor217,
									 _rec143) ->
								  %% Line 1765
								  case apply 'get_referenced_type'/2
									   (S, ERef) of
								    <{RefMod,T}> when 'true' ->
									let <_cor52> =
									    %% Line 1766
									    call 'erlang':'setelement'
										(3, ERef, RefMod)
									in  %% Line 1766
									    apply 'check_and_save'/4
										(S, _cor52, T, _cor16)
								    ( <_cor49> when 'true' ->
									  primop 'match_fail'
									      ({'badmatch',_cor49})
								      -| ['compiler_generated'] )
								  end
							      %% Line 1768
							      <ERef = {'Externaltypereference',_cor223,_cor224,_cor225}> when 'true' ->
								  %% Line 1769
								  case apply 'get_referenced_type'/2
									   (S, ERef) of
								    <{RefMod,T}> when 'true' ->
									let <_cor56> =
									    %% Line 1770
									    call 'erlang':'setelement'
										(3, ERef, RefMod)
									in  %% Line 1770
									    apply 'check_and_save'/4
										(S, _cor56, T, _cor16)
								    ( <_cor53> when 'true' ->
									  primop 'match_fail'
									      ({'badmatch',_cor53})
								      -| ['compiler_generated'] )
								  end
							      %% Line 1771
							      <Bif>
								  when let <_cor57> =
									call 'erlang':'=:='
									    (Bif, {'primitive','bif'})
								    in  let <_cor58> =
									    call 'erlang':'=:='
										(Bif, {'constructed','bif'})
									in  call 'erlang':'or'
										(_cor57, _cor58) ->
								  let <T> =
								      %% Line 1772
								      apply 'check_type'/3
									  (S, {'typedef','false','undefined','undefined',ObjFieldSetting}, %% Line 1773
																	   ObjFieldSetting)
								  in  %% Line 1774
								      {{'typedef','true','undefined',Bif,T},_cor16}
							      %% Line 1775
							      <_cor230> when 'true' ->
								  %% Line 1777
								  case %% Line 1778
								       apply 'get_referenced_type'/2
									   (S, {'Externaltypereference','undefined',_rec143,ObjFieldSetting}) of
								    <{Mod,T}> when 'true' ->
									%% Line 1779
									case Mod of
									  %% Line 1780
									  <_cor244>
									      when call 'erlang':'=:='
										    (Mod,
										     _rec143) ->
									      %% Line 1781
									      {T,_cor16}
									  %% Line 1782
									  <ExtMod> when 'true' ->
									      %% Line 1783
									      case T of
										<{'typedef',_cor245,_cor246,Name,_cor247}> when 'true' ->
										    let <_rec153> = {%% Line 1784
											 ExtMod,%% Line 1784
												Name}
										    in  let <_cor67> =
											    %% Line 1784
											    call 'erlang':'setelement'
												(4, T, _rec153)
											in  %% Line 1784
											    {_cor67,_cor16}
										( <_cor63> when 'true' ->
										      primop 'match_fail'
											  ({'badmatch',_cor63})
										  -| ['compiler_generated'] )
									      end
									end
								    ( <_cor62> when 'true' ->
									  primop 'match_fail'
									      ({'badmatch',_cor62})
								      -| ['compiler_generated'] )
								  end
							    end
						  end
					      in  %% Line 1735
						  case _cor70 of
						    <{Type,SettingsLeft}> when 'true' ->
							%% Line 1788
							{{ObjFieldName,Type},SettingsLeft}
						    ( <_cor71> when 'true' ->
							  primop 'match_fail'
							      ({'badmatch',_cor71})
						      -| ['compiler_generated'] )
						  end
				      %% Line 1789
				      <'fixedtypevaluefield'> when 'true' ->
					  %% Line 1790
					  case ObjFieldName of
					    %% Line 1791
					    <Val>
						when call 'erlang':'is_atom'
						      (ObjFieldName) ->
						let <_cor83> =
						    %% Line 1795
						    case ObjFieldSetting of
						      %% Line 1796
						      <ValSetting = {'Externalvaluereference',_cor253,_cor254,_cor255}> when 'true' ->
							  %% Line 1797
							  ValSetting
						      %% Line 1798
						      <{'ValueFromObject',{_cor256,ObjRef},FieldName}> when 'true' ->
							  %% Line 1799
							  case apply 'get_referenced_type'/2
								   (S, ObjRef) of
							    <{_cor257,Object}> when 'true' ->
								%% Line 1801
								( case Object of
								    ( <( {'typedef',_cor258,_cor259,_cor260,_rec155}
									 -| ['compiler_generated'] )> when 'true' ->
									  let <ChObject> =
									      apply 'check_object'/3
										  (S, Object, _rec155)
									  in  let <_cor78> =
										  %% Line 1802
										  call 'erlang':'setelement'
										      (5, Object, ChObject)
									      in  %% Line 1802
										  apply 'get_fieldname_element'/3
										      (S, _cor78, %% Line 1803
												  FieldName)
								      -| ['compiler_generated'] )
								    ( <_cor261> when 'true' ->
									  ( call ( 'erlang'
										   -| ['compiler_generated'] ):( 'error'
														 -| ['compiler_generated'] )
										(( {'badrecord','typedef'}
										   -| ['compiler_generated'] ))
									    -| ['compiler_generated'] )
								      -| ['compiler_generated'] )
								  end
								  -| ['compiler_generated'] )
							    ( <_cor72> when 'true' ->
								  primop 'match_fail'
								      ({'badmatch',_cor72})
							      -| ['compiler_generated'] )
							  end
						      %% Line 1804
						      <ValSetting = {'valuedef',_cor267,_cor268,_cor269,_cor270,_cor271,_cor272}> when 'true' ->
							  %% Line 1805
							  ValSetting
						      %% Line 1806
						      <ValSetting = {'CHOICE',{Alt,_X_ChVal}}>
							  when call 'erlang':'is_atom'
								(Alt) ->
							  let <_cor81> =
							      %% Line 1807
							      call 'erlang':'element'
								  (3, CField)
							  in  %% Line 1807
							      {'valuedef','false','undefined','undefined',_cor81,%% Line 1808
														 ValSetting,_rec143}
						      %% Line 1810
						      <ValSetting> when 'true' ->
							  %% Line 1811
							  {'identifier','undefined',ValSetting}
						    end
						in  %% Line 1814
						    case _cor83 of
						      %% Line 1815
						      <{'valuedef',_cor286,_cor287,_cor288,_cor289,_cor290,_cor291}> when 'true' ->
							  let <_cor85> =
							      %% Line 1816
							      apply 'check_value'/2
								  (S, _cor83)
							  in  %% Line 1816
							      {{ObjFieldName,_cor85},_cor16}
						      %% Line 1817
						      <_cor292> when 'true' ->
							  let <_cor86> =
							      catch
								  %% Line 1819
								  apply 'get_referenced_type'/2
								      (S, _cor83)
							  in  let <_cor95> =
								  %% Line 1819
								  case _cor86 of
								    %% Line 1820
								    <{'error',_cor293}> when 'true' ->
									let <_cor89> =
									    %% Line 1823
									    call 'erlang':'element'
										(3, CField)
									in  let <NewValDef> =
										%% Line 1822
										{'valuedef','false','undefined',Val,_cor89,%% Line 1824
															   ObjFieldSetting,_rec143}
									    in  %% Line 1826
										apply 'check_value'/2
										    (S, NewValDef)
								    %% Line 1827
								    <{M,VDef = {'valuedef',_cor307,_cor308,_cor309,_cor310,_cor311,_cor312}}> when ( 'true'
																		     -| ['compiler_generated'] ) ->
									let <_cor91> =
									    %% Line 1828
									    apply 'update_state'/2
										(S, M)
									in  %% Line 1828
									    apply 'check_value'/2
										(_cor91, %% Line 1830
											 VDef)
								    %% Line 1831
								    <{M,VDef}> when 'true' ->
									let <_cor93> =
									    %% Line 1832
									    apply 'update_state'/2
										(S, M)
									in  let <_cor92> =
										%% Line 1835
										call 'erlang':'element'
										    (3, CField)
									    in  %% Line 1832
										apply 'check_value'/2
										    (_cor93, %% Line 1834
											     {'valuedef','false','undefined',Val,_cor92,%% Line 1836
																	VDef,%% Line 1837
																	     M})
								    ( <_cor94> when 'true' ->
									  primop 'match_fail'
									      ({'case_clause',_cor94})
								      -| ['compiler_generated'] )
								  end
							      in  %% Line 1839
								  {{ObjFieldName,_cor95},_cor16}
						    end
					    %% Line 1841
					    <Val> when 'true' ->
						%% Line 1842
						{{ObjFieldName,Val},_cor16}
					  end
				      %% Line 1844
				      <'fixedtypevaluesetfield'> when 'true' ->
					  %% Line 1845
					  {{ObjFieldName,ObjFieldSetting},_cor16}
				      %% Line 1846
				      <'objectfield'> when 'true' ->
					  let <CheckObject> =
					      %% Line 1848
					      ( fun (_cor105) ->
						    %% Line 1850
						    ( case _cor105 of
							( <( {'typedef',_cor313,_cor314,_cor315,_rec161}
							     -| ['compiler_generated'] )> when 'true' ->
							      let <_rec159> =
								  apply 'check_object'/3
								      (S, _cor105, _rec161)
							      in  let <_cor103> =
								      call 'erlang':'setelement'
									  (5, _cor105, _rec159)
								  in  call 'erlang':'setelement'
									  (2, _cor103, 'true')
							  -| ['compiler_generated'] )
							( <_cor316> when 'true' ->
							      ( call ( 'erlang'
								       -| ['compiler_generated'] ):( 'error'
												     -| ['compiler_generated'] )
								    (( {'badrecord','typedef'}
								       -| ['compiler_generated'] ))
								-| ['compiler_generated'] )
							  -| ['compiler_generated'] )
						      end
						      -| ['compiler_generated'] )
						-| [{'id',{0,0,'-convert_to_defaultfield/4-fun-1-'}}] )
					  in  let <_cor136> =
						  %% Line 1853
						  case ObjFieldSetting of
						    %% Line 1854
						    <Ref = {'Externalvaluereference',_cor322,_cor323,_cor324}> when ( 'true'
														      -| ['compiler_generated'] ) ->
							%% Line 1858
							case apply 'get_referenced_type'/2
								 (S, Ref) of
							  <{M,O}> when 'true' ->
							      let <_cor109> =
								  %% Line 1859
								  apply 'object_to_check'/1
								      (O)
							      in  do  %% Line 1859
								      apply 'check_object'/3
									  (S, O, _cor109)
								      %% Line 1860
								      call 'erlang':'setelement'
									  (3, Ref, M)
							  ( <_cor108> when 'true' ->
								primop 'match_fail'
								    ({'badmatch',_cor108})
							    -| ['compiler_generated'] )
							end
						    %% Line 1862
						    <{'ValueFromObject',{_cor329,ObjRef},FieldName}> when 'true' ->
							%% Line 1864
							case apply 'get_referenced_type'/2
								 (S, ObjRef) of
							  <{_cor330,Object}> when 'true' ->
							      %% Line 1866
							      ( case Object of
								  ( <( {'typedef',_cor331,_cor332,_cor333,_rec163}
								       -| ['compiler_generated'] )> when 'true' ->
									let <ChObject> =
									    apply 'check_object'/3
										(S, Object, _rec163)
									in  let <_cor118> =
										%% Line 1869
										call 'erlang':'setelement'
										    (5, Object, ChObject)
									    in  let <ObjFromObj> =
										    %% Line 1868
										    apply 'get_fieldname_element'/3
											(S, _cor118, %% Line 1870
												     FieldName)
										in  %% Line 1871
										    apply CheckObject
											(ObjFromObj)
								    -| ['compiler_generated'] )
								  ( <_cor334> when 'true' ->
									( call ( 'erlang'
										 -| ['compiler_generated'] ):( 'error'
													       -| ['compiler_generated'] )
									      (( {'badrecord','typedef'}
										 -| ['compiler_generated'] ))
									  -| ['compiler_generated'] )
								    -| ['compiler_generated'] )
								end
								-| ['compiler_generated'] )
							  ( <_cor112> when 'true' ->
								primop 'match_fail'
								    ({'badmatch',_cor112})
							    -| ['compiler_generated'] )
							end
						    %% Line 1872
						    <ObjDef = {'object',_cor340,_cor341}> when 'true' ->
							let <ClassName> =
							    %% Line 1879
							    call 'erlang':'element'
								(3, CField)
							in  let <_cor123> =
								%% Line 1881
								[_cor153|%% Line 1882
									 ['_'|[ObjFieldName|[]]]]
							    in  let <_cor124> =
								    %% Line 1881
								    call 'lists':'concat'
									(_cor123)
								in  let <InlinedObjName> =
									%% Line 1881
									call 'erlang':'list_to_atom'
									    (_cor124)
								    in  let <ObjSpec> =
									    %% Line 1884
									    {'Object',ClassName,'true',%% Line 1885
												       ObjDef}
									in  let <CheckedObj> =
										%% Line 1887
										apply 'check_object'/3
										    (S, {'typedef','false','undefined','undefined',ObjSpec}, ObjSpec)
									    in  let <InlObj> =
										    %% Line 1888
										    {'typedef','true','undefined',InlinedObjName,%% Line 1889
																 CheckedObj}
										in  let <ObjKey> = {%% Line 1890
											 InlinedObjName,%% Line 1890
													InlinedObjName}
										    in  do  %% Line 1892
											    apply 'insert_once'/3
												(S, 'inlined_objects', ObjKey)
											    let <_cor130> =
												%% Line 1895
												call 'erlang':'get'
												    ('top_module')
											    in  do  %% Line 1895
												    call 'asn1_db':'dbput'
													(_cor130, InlinedObjName, InlObj)
												    %% Line 1896
												    InlObj
						    %% Line 1897
						    <{'type',_cor355,Eref = {'Externaltypereference',_cor356,_cor357,_cor358},_cor359,_cor360,_cor361}> when ( 'true'
																			       -| ['compiler_generated'] ) ->
							%% Line 1898
							case apply 'get_referenced_type'/2
								 (S, Eref) of
							  <{_cor362,O}> when 'true' ->
							      %% Line 1899
							      apply CheckObject
								  (O)
							  ( <_cor131> when 'true' ->
								primop 'match_fail'
								    ({'badmatch',_cor131})
							    -| ['compiler_generated'] )
							end
						    %% Line 1900
						    <Other> when 'true' ->
							%% Line 1901
							case apply 'get_referenced_type'/2
								 (S, {'Externaltypereference','undefined',_rec143,Other}) of
							  <{_cor376,O}> when 'true' ->
							      %% Line 1902
							      apply CheckObject
								  (O)
							  ( <_cor134> when 'true' ->
								primop 'match_fail'
								    ({'badmatch',_cor134})
							    -| ['compiler_generated'] )
							end
						  end
					      in  %% Line 1904
						  {{ObjFieldName,_cor136},_cor16}
				      %% Line 1905
				      <'variabletypevaluefield'> when 'true' ->
					  %% Line 1906
					  {{ObjFieldName,ObjFieldSetting},_cor16}
				      %% Line 1907
				      <'variabletypevaluesetfield'> when 'true' ->
					  %% Line 1908
					  {{ObjFieldName,ObjFieldSetting},_cor16}
				      %% Line 1911
				      <'objectsetfield'> when 'true' ->
					  let <ObjSetSpec> =
					      %% Line 1912
					      apply 'get_objectset_def'/3
						  (S, ObjFieldSetting, CField)
					  in  %% Line 1917
					      ( case ObjSetSpec of
						  ( <( {'typedef',_cor377,_cor378,_cor379,_rec169}
						       -| ['compiler_generated'] )> when 'true' ->
							let <_rec167> =
							    apply 'check_object'/3
								(S, ObjSetSpec, _rec169)
							in  let <_cor143> =
								call 'erlang':'setelement'
								    (5, ObjSetSpec, _rec167)
							    in  let <_cor145> =
								    call 'erlang':'setelement'
									(2, _cor143, 'true')
								in  {{ObjFieldName,_cor145},_cor16}
						    -| ['compiler_generated'] )
						  ( <_cor380> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {'badrecord','typedef'}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
						-| ['compiler_generated'] )
				      ( <_cor146> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_cor146})
					-| ['compiler_generated'] )
				    end
		    -| ['compiler_generated'] )
		  ( <_cor163> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor150,_cor149,_cor148,_cor147> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor150,_cor149,_cor148,_cor147})
		  -| [{'function_name',{'convert_to_defaultfield',4}}] )
	    -| ['compiler_generated'] )
	end
'get_objectset_def'/3 =
    %% Line 1920
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,Ref,CField>
	      when let <_cor3> =
		    %% Line 1921
		    ( call ( 'erlang'
			     -| ['compiler_generated'] ):( 'is_record'
							   -| ['compiler_generated'] )
			  (Ref, 'Externaltypereference', 4)
		      -| ['compiler_generated'] )
		in  let <_cor4> =
			%% Line 1922
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'is_record'
							       -| ['compiler_generated'] )
			      (Ref, 'Externalvaluereference', 4)
			  -| ['compiler_generated'] )
		    in  %% Line 1921
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'or'
							       -| ['compiler_generated'] )
			      (_cor3, _cor4)
			  -| ['compiler_generated'] ) ->
	      %% Line 1923
	      case apply 'get_referenced_type'/2
		       (S, Ref) of
		<{_X_M,T}> when 'true' ->
		    %% Line 1924
		    apply 'get_objectset_def2'/3
			(S, T, CField)
		( <_cor5> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor5})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1925
	  <S,ObjectList,CField>
	      when call 'erlang':'is_list'
		    (ObjectList) ->
	      %% Line 1931
	      apply 'get_objectset_def2'/3
		  (S, ObjectList, CField)
	  %% Line 1932
	  <S,'EXTENSIONMARK',CField> when 'true' ->
	      %% Line 1934
	      apply 'get_objectset_def2'/3
		  (S, ['EXTENSIONMARK'], CField)
	  %% Line 1935
	  <_X_S,ObjFieldSetting = {'SingleValue',_cor16},CField> when 'true' ->
	      %% Line 1938
	      apply 'union_of_defed_objs'/2
		  (CField, ObjFieldSetting)
	  %% Line 1939
	  <_X_S,ObjFieldSetting = {{'SingleValue',_cor17},_cor18},CField> when 'true' ->
	      %% Line 1942
	      apply 'union_of_defed_objs'/2
		  (CField, ObjFieldSetting)
	  %% Line 1943
	  <S,{'object',_cor19,[{'type',_cor20,{'TypeFromObject',%% Line 1944
								{'object',RefedObj},%% Line 1945
										    FieldName},_cor21,_cor22,_cor23}|%% Line 1945
														     []]},%% Line 1945
															  _X_CField> when 'true' ->
	      %% Line 1948
	      case apply 'get_referenced_type'/2
		       (S, RefedObj) of
		<{_X_M,Def}> when 'true' ->
		    %% Line 1949
		    apply 'get_fieldname_element'/3
			(S, Def, FieldName)
		( <_cor6> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor6})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1950
	  <S,{'object',_cor24,[{'setting',_cor25,ERef = {'Externaltypereference',_cor26,_cor27,_cor28}}|[]]},CField> when %% Line 1951
															  ( 'true'
															    -| ['compiler_generated'] ) ->
	      %% Line 1952
	      case apply 'get_referenced_type'/2
		       (S, ERef) of
		<{_cor29,T}> when 'true' ->
		    %% Line 1953
		    apply 'get_objectset_def2'/3
			(S, T, CField)
		( <_cor7> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor7})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1954
	  <S,{'type',_cor30,ERef = {'Externaltypereference',_cor31,_cor32,_cor33},_cor34,_cor35,_cor36},_X_CField> when %% Line 1955
															( 'true'
															  -| ['compiler_generated'] ) ->
	      %% Line 1956
	      case apply 'get_referenced_type'/2
		       (S, ERef) of
		<{_cor37,T}> when 'true' ->
		    %% Line 1957
		    T
		( <_cor8> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor8})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1958
	  <S,ObjFieldSetting,CField>
	      when %% Line 1959
		call 'erlang':'is_atom'
		    (ObjFieldSetting) ->
	      %% Line 1960
	      ( case S of
		  ( <( {'state',_cor38,_rec170,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49}
		       -| ['compiler_generated'] )> when 'true' ->
			let <ERef> =
			    {'Externaltypereference','undefined',_rec170,%% Line 1961
									 ObjFieldSetting}
			in  %% Line 1962
			    case apply 'get_referenced_type'/2
				     (S, ERef) of
			      <{_cor51,T}> when 'true' ->
				  %% Line 1963
				  apply 'get_objectset_def2'/3
				      (S, T, CField)
			      ( <_cor12> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_cor12})
				-| ['compiler_generated'] )
			    end
		    -| ['compiler_generated'] )
		  ( <_cor50> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor15,_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14,_cor13})
		  -| [{'function_name',{'get_objectset_def',3}}] )
	    -| ['compiler_generated'] )
	end
'get_objectset_def2'/3 =
    %% Line 1965
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <_X_S,T = {'typedef',_cor14,_cor15,_cor16,{'Object',_cor17,_cor18,_cor19}},_X_CField> when 'true' ->
	      let <_rec171> =
		  %% Line 1967
		  {'ObjectSet',_cor17,'true','undefined',[_cor19|[]]}
	      in  %% Line 1967
		  call 'erlang':'setelement'
		      (5, T, _rec171)
	  %% Line 1968
	  <_X_S,Set,CField>
	      when call 'erlang':'is_list'
		    (Set) ->
	      %% Line 1969
	      case CField of
		<{_cor29,_cor30,Type,_cor31}> when 'true' ->
		    %% Line 1970
		    ( case Type of
			( <( {'type',_cor32,_rec173,_cor33,_cor34,_cor35}
			     -| ['compiler_generated'] )> when 'true' ->
			      %% Line 1971
			      {'typedef','false','undefined','undefined',{'ObjectSet',_rec173,'true','undefined',%% Line 1972
														 Set}}
			  -| ['compiler_generated'] )
			( <_cor36> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','type'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		( <_cor7> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor7})
		  -| ['compiler_generated'] )
	      end
	  %% Line 1973
	  <_X_S,T = {'typedef',_cor37,_cor38,_cor39,{'ObjectSet',_cor40,_cor41,_cor42,_cor43}},_X_CField> when 'true' ->
	      %% Line 1974
	      T
	  %% Line 1975
	  <S,T,_X_CField> when 'true' ->
	      %% Line 1976
	      call 'asn1ct':'warning'
		  ([103|[101|[116|[95|[111|[98|[106|[101|[99|[116|[115|[101|[116|[95|[100|[101|[102|[50|[58|[32|[117|[110|[99|[111|[110|[116|[114|[111|[108|[108|[101|[100|[32|[111|[98|[106|[101|[99|[116|[32|[115|[101|[116|[32|[115|[116|[114|[117|[99|[116|[117|[114|[101|[58|[126|[110|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 1977
																																													     [T|[]], %% Line 1977
																																														     S, %% Line 1977
																																															[103|[101|[116|[95|[111|[98|[106|[101|[99|[116|[115|[101|[116|[95|[100|[101|[102|[50|[58|[32|[117|[110|[99|[111|[110|[116|[114|[111|[108|[108|[101|[100|[32|[111|[98|[106|[101|[99|[116|[32|[115|[101|[116|[32|[115|[116|[114|[117|[99|[116|[117|[114|[101]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
	end
'type_name'/2 =
    %% Line 1979
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,{'type',_cor11,Def,_cor12,_cor13,_cor14}> when 'true' ->
	      %% Line 1980
	      ( case S of
		  ( <( {'state',_cor15,_rec174,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor5> =
			    %% Line 1981
			    call 'asn1ct_gen':'get_inner'
				(Def)
			in  %% Line 1981
			    case call 'asn1ct_gen':'type'
				     (_cor5) of
			      %% Line 1982
			      <{'Externaltypereference',_cor28,_cor29,Name}>
				  when call 'erlang':'=:='
					(_cor29,
					 _rec174) ->
				  %% Line 1983
				  Name
			      %% Line 1984
			      <{'Externaltypereference',_cor30,Mod,Name}> when 'true' ->
				  %% Line 1985
				  {Mod,Name}
			      %% Line 1986
			      <Bif>
				  when let <_cor6> =
					call 'erlang':'=:='
					    (Bif, {'primitive','bif'})
				    in  let <_cor7> =
					    call 'erlang':'=:='
						(Bif, {'constructed','bif'})
					in  call 'erlang':'or'
						(_cor6, _cor7) ->
				  %% Line 1987
				  Bif
			      ( <_cor8> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_cor8})
				-| ['compiler_generated'] )
			    end
		    -| ['compiler_generated'] )
		  ( <_cor27> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9})
		  -| [{'function_name',{'type_name',2}}] )
	    -| ['compiler_generated'] )
	end
'merged_name'/2 =
    %% Line 1990
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'state',_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,[],_cor21,_cor22,_cor23,_cor24},ERef> when 'true' ->
	      %% Line 1991
	      ERef
	  %% Line 1992
	  <S,ERef = {'Externaltypereference',_cor25,M,_cor26}> when 'true' ->
	      %% Line 1993
	      ( case S of
		  ( <( {'state',_cor27,_rec175,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor4> =
			    call 'lists':'member'
				(M, _cor34)
			in  case <_rec175,_cor4> of
			      %% Line 1994
			      <_cor53,_cor54>
				  when call 'erlang':'=:='
					(_cor53,
					 M) ->
				  %% Line 1995
				  ERef
			      %% Line 1996
			      <MergeM,'true'> when 'true' ->
				  let <NewName> =
				      %% Line 1998
				      apply 'renamed_reference'/2
					  (S, ERef)
				  in  %% Line 1999
				      {'Externaltypereference',_cor25,MergeM,NewName}
			      %% Line 2000
			      <_cor56,_cor57> when 'true' ->
				  %% Line 2001
				  ERef
			    end
		    -| ['compiler_generated'] )
		  ( <_cor39> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor12,_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11})
		  -| [{'function_name',{'merged_name',2}}] )
	    -| ['compiler_generated'] )
	end
'oCFT_def'/2 =
    %% Line 2004
    fun (_cor1,_cor0) ->
	%% Line 2005
	case apply 'get_OCFT_inner'/2
		 (_cor1, _cor0) of
	  %% Line 2006
	  <ERef = {'Externaltypereference',_cor8,_cor9,_cor10}> when 'true' ->
	      ERef
	  %% Line 2007
	  <{Name,Type}> when 'true' ->
	      {'typedef','true','undefined',Name,Type}
	  %% Line 2008
	  <'ASN1_OPEN_TYPE'> when 'true' ->
	      %% Line 2009
	      case _cor0 of
		<{'type',_cor11,_cor12,_cor13,_cor14,_cor15}> when 'true' ->
		    let <_cor4> =
			call 'erlang':'setelement'
			    (3, _cor0, 'ASN1_OPEN_TYPE')
		    in  {'typedef','true','undefined','undefined',_cor4}
		( <_cor16> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','type'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  ( <_cor5> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor5})
	    -| ['compiler_generated'] )
	end
'get_OCFT_inner'/2 =
    %% Line 2012
    fun (_cor1,_cor0) ->
	%% Line 2014
	( case _cor0 of
	    ( <( {'type',_cor16,_rec182,_cor17,_cor18,_cor19}
		 -| ['compiler_generated'] )> when 'true' ->
		  %% Line 2015
		  ( case _rec182 of
		      ( <( {'ObjectClassFieldType',_cor21,_cor22,_cor23,_rec183}
			   -| ['compiler_generated'] )> when 'true' ->
			    case _rec183 of
			      %% Line 2016
			      <{'fixedtypevaluefield',_cor25,InnerType}> when 'true' ->
				  %% Line 2017
				  ( case InnerType of
				      ( <( {'type',_cor26,_rec184,_cor27,_cor28,_cor29}
					   -| ['compiler_generated'] )> when 'true' ->
					    let <_cor9> =
						call 'asn1ct_gen':'get_inner'
						    (_rec184)
					    in  case call 'asn1ct_gen':'type'
							 (_cor9) of
						  %% Line 2018
						  <Bif>
						      when let <_cor10> =
							    call 'erlang':'=:='
								(Bif, {'primitive','bif'})
							in  let <_cor11> =
								call 'erlang':'=:='
								    (Bif, {'constructed','bif'})
							    in  call 'erlang':'or'
								    (_cor10, _cor11) ->
						      %% Line 2019
						      {Bif,InnerType}
						  %% Line 2020
						  <ERef = {'Externaltypereference',_cor31,_cor32,_cor33}> when 'true' ->
						      %% Line 2021
						      ERef
						  ( <_cor12> when 'true' ->
							primop 'match_fail'
							    ({'case_clause',_cor12})
						    -| ['compiler_generated'] )
						end
					-| ['compiler_generated'] )
				      ( <_cor30> when 'true' ->
					    ( call ( 'erlang'
						     -| ['compiler_generated'] ):( 'error'
										   -| ['compiler_generated'] )
						  (( {'badrecord','type'}
						     -| ['compiler_generated'] ))
					      -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
			      %% Line 2023
			      <'ASN1_OPEN_TYPE'> when 'true' ->
				  'ASN1_OPEN_TYPE'
			      ( <_cor13> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_cor13})
				-| ['compiler_generated'] )
			    end
			-| ['compiler_generated'] )
		      ( <_cor24> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','ObjectClassFieldType'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_cor20> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','type'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'union_of_defed_objs'/2 =
    %% Line 2028
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{_cor4,_cor5,_X_ObjClass = {'type',_cor6,ClassDef,_cor7,_cor8,_cor9},_cor10},ObjFieldSetting> when 'true' ->
	      %% Line 2029
	      {'typedef','false','undefined','undefined',{'ObjectSet',ClassDef,'true','undefined',%% Line 2030
												  ObjFieldSetting}}
	  %% Line 2031
	  <{_cor11,_cor12,DefObjClassRef = {'Externaltypereference',_cor13,_cor14,_cor15},_cor16},ObjFieldSetting> when %% Line 2032
															( 'true'
															  -| ['compiler_generated'] ) ->
	      %% Line 2033
	      {'typedef','false','undefined','undefined',{'ObjectSet',DefObjClassRef,'true','undefined',%% Line 2034
													ObjFieldSetting}}
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'union_of_defed_objs',2}}] )
	    -| ['compiler_generated'] )
	end
'check_value'/2 =
    %% Line 2037
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <OldS,V = {'pvaluesetdef',_cor40,_cor41,_cor42,_cor43,_cor44,_cor45}> when ( 'true'
										       -| ['compiler_generated'] ) ->
	      %% Line 2039
	      case _cor40 of
		%% Line 2040
		<'true'> when 'true' ->
		    V
		%% Line 2041
		<{'error',_cor50}> when 'true' ->
		    V
		%% Line 2042
		<'false'> when 'true' ->
		    %% Line 2043
		    ( case _cor44 of
			( <( {'type',_cor51,_rec185,_cor52,_cor53,_cor54}
			     -| ['compiler_generated'] )> when 'true' ->
			      case apply 'get_referenced_type'/2
				       (OldS, _rec185) of
				%% Line 2044
				<{_cor56,Class = {'classdef',_cor57,_cor58,_cor59,_cor60}}> when ( 'true'
												   -| ['compiler_generated'] ) ->
				    %% Line 2045
				    call 'erlang':'throw'
					({'pobjectsetdef'})
				%% Line 2046
				<_cor61> when 'true' ->
				    'continue'
			      end
			  -| ['compiler_generated'] )
			( <_cor55> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','type'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		( <_cor6> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor6})
		  -| ['compiler_generated'] )
	      end
	  %% Line 2049
	  <_X_OldS,V = {'pvaluedef',_cor62,_cor63,_cor64,_cor65,_cor66,_cor67}> when ( 'true'
										       -| ['compiler_generated'] ) ->
	      %% Line 2051
	      V
	  %% Line 2052
	  <OldS,V = {'typedef',_cor68,_cor69,_cor70,_cor71}> when ( 'true'
								    -| ['compiler_generated'] ) ->
	      %% Line 2057
	      case _cor71 of
		%% Line 2058
		<{'ObjectSet',ClassRef,_cor75,_cor76,_cor77}> when 'true' ->
		    %% Line 2059
		    case apply 'get_referenced_type'/2
			     (OldS, ClassRef) of
		      <{RefM,TSDef}> when 'true' ->
			  %% Line 2061
			  case TSDef of
			    %% Line 2062
			    <{'classdef',_cor78,_cor79,_cor80,_cor81}> when 'true' ->
				call 'erlang':'throw'
				    ({'objectsetdef'})
			    %% Line 2063
			    <{'typedef',_cor82,_cor83,_cor84,{'type',_cor85,Eref = {'Externaltypereference',_cor86,_cor87,_cor88},_cor89,_cor90,_cor91}}> when %% Line 2064
																			       ( 'true'
																				 -| ['compiler_generated'] ) ->
				let <_cor11> =
				    %% Line 2067
				    call 'erlang':'setelement'
					(2, _cor71, Eref)
				in  let <_cor15> =
					%% Line 2067
					call 'erlang':'setelement'
					    (5, V, _cor11)
				    in  %% Line 2067
					apply 'check_value'/2
					    (OldS, _cor15)
			    %% Line 2068
			    <{'typedef',_cor102,_cor103,_cor104,_cor105}> when 'true' ->
				let <Type> =
				    %% Line 2071
				    apply 'check_type'/3
					(OldS, TSDef, _cor105)
				in  %% Line 2075
				    ( case apply 'check_value'/2
					       (OldS, {'valuedef','false','undefined','undefined',Type,_cor77,RefM}) of
					( <( {'valuedef',_cor114,_cor115,_cor116,_cor117,_rec193,_cor118}
					     -| ['compiler_generated'] )> when 'true' ->
					      case Type of
						<{'type',_cor120,_cor121,_cor122,_cor123,_cor124}> when 'true' ->
						    let <_cor28> =
							call 'erlang':'setelement'
							    (4, Type, _rec193)
						    in  {'valueset',_cor28}
						( <_cor125> when 'true' ->
						      ( call ( 'erlang'
							       -| ['compiler_generated'] ):( 'error'
											     -| ['compiler_generated'] )
							    (( {'badrecord','type'}
							       -| ['compiler_generated'] ))
							-| ['compiler_generated'] )
						  -| ['compiler_generated'] )
					      end
					  -| ['compiler_generated'] )
					( <_cor119> when 'true' ->
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'error'
										     -| ['compiler_generated'] )
						    (( {'badrecord','valuedef'}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
			    ( <_cor29> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor29})
			      -| ['compiler_generated'] )
			  end
		      ( <_cor8> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor8})
			-| ['compiler_generated'] )
		    end
		%% Line 2077
		<_cor126> when 'true' ->
		    %% Line 2078
		    call 'erlang':'throw'
			({'objectsetdef'})
	      end
	  %% Line 2080
	  <S,{'valuedef',_cor127,Pos,Name,Type,%% Line 2081
					       {'valueset',Constr},_cor128}> when 'true' ->
	      let <_rec194> =
		  %% Line 2082
		  [Constr|[]]
	      in  %% Line 2082
		  case Type of
		    <{'type',_cor129,_cor130,_cor131,_cor132,_cor133}> when 'true' ->
			let <_cor34> =
			    call 'erlang':'setelement'
				(4, Type, _rec194)
			in  let <_cor36> =
				%% Line 2084
				apply 'check_type'/3
				    (S, {'typedef','false',Pos,Name,_cor34}, _cor34)
			    in  %% Line 2083
				{'valueset',_cor36}
		    ( <_cor134> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','type'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 2085
	  <S,V = {'valuedef',_cor135,_cor136,_cor137,_cor138,_cor139,_cor140}> when 'true' ->
	      %% Line 2087
	      case <_cor135,_cor136,_cor137,_cor138,_cor139,_cor140> of
		%% Line 2088
		<'true',_cor141,_cor142,_cor143,_cor144,_cor145> when 'true' ->
		    %% Line 2089
		    V
		%% Line 2090
		<'false',_cor146,_cor147,_cor148,_cor149,_cor150> when 'true' ->
		    %% Line 2091
		    apply 'check_valuedef'/2
			(S, V)
		( <_fol1538,_fol1539,_fol1540,_fol1541,_fol1542,_fol1543> when 'true' ->
		      let <_cor37> =
			  ( {'valuedef',_fol1538,_fol1539,_fol1540,_fol1541,_fol1542,_fol1543}
			    -| ['compiler_generated'] )
		      in  primop 'match_fail'
			      ({'case_clause',_cor37})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor39,_cor38> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor39,_cor38})
		  -| [{'function_name',{'check_value',2}}] )
	    -| ['compiler_generated'] )
	end
'check_valuedef'/2 =
    %% Line 2094
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S0 = {'state',_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,TopName,_cor95,_cor96},V0> when 'true' ->
	      %% Line 2095
	      case V0 of
		<{'valuedef',_cor97,_cor98,Name,Vtype,Value,ModName}> when 'true' ->
		    let <_cor5> =
			%% Line 2096
			call 'erlang':'setelement'
			    (2, V0, 'true')
		    in  %% Line 2097
			( case Vtype of
			    ( <( {'type',_cor106,_rec197,_cor107,_cor108,_cor109}
				 -| ['compiler_generated'] )> when 'true' ->
				  let <_cor14> =
				      %% Line 2099
				      call 'erlang':'setelement'
					  (7, S0, Name)
				  in  let <_cor15> =
					  %% Line 2099
					  call 'erlang':'setelement'
					      (6, _cor14, V0)
				      in  let <_cor16> =
					      %% Line 2099
					      call 'erlang':'setelement'
						  (5, _cor15, _rec197)
					  in  let <_cor18> =
						  %% Line 2099
						  call 'erlang':'setelement'
						      (4, _cor16, Vtype)
					      in  let <SVal> =
						      %% Line 2100
						      apply 'update_state'/2
							  (_cor18, ModName)
						  in  %% Line 2101
						      case _rec197 of
							%% Line 2102
							<Ext = {'Externaltypereference',_cor130,_cor131,RecName}> when 'true' ->
							    %% Line 2103
							    case apply 'get_referenced_type'/2
								     (_cor18, Ext) of
							      <{RefM,Type}> when 'true' ->
								  let <S2> =
								      %% Line 2105
								      apply 'update_state'/2
									  (_cor18, RefM)
								  in  %% Line 2106
								      case Type of
									%% Line 2107
									<{'classdef',_cor132,_cor133,_cor134,_cor135}> when 'true' ->
									    %% Line 2108
									    call 'erlang':'throw'
										({'objectdef'})
									%% Line 2109
									<{'typedef',_cor136,_cor137,_cor138,TypeSpec}> when 'true' ->
									    let <_cor27> =
										%% Line 2110
										case apply 'is_contextswitchtype'/1
											 (Type) of
										  %% Line 2111
										  <'true'> when 'true' ->
										      %% Line 2112
										      S2
										  %% Line 2113
										  <'false'> when 'true' ->
										      let <_rec200> =
											  %% Line 2114
											  [RecName|TopName]
										      in  %% Line 2114
											  case S2 of
											    <{'state',_cor139,_cor140,_cor141,_cor142,_cor143,_cor144,_cor145,_cor146,_cor147,_cor148,_cor149,_cor150,_cor151}> when 'true' ->
												call 'erlang':'setelement'
												    (12, S2, _rec200)
											    ( <_cor152> when 'true' ->
												  ( call ( 'erlang'
													   -| ['compiler_generated'] ):( 'error'
																	 -| ['compiler_generated'] )
													(( {'badrecord','state'}
													   -| ['compiler_generated'] ))
												    -| ['compiler_generated'] )
											      -| ['compiler_generated'] )
											  end
										  ( <_cor26> when 'true' ->
											primop 'match_fail'
											    ({'case_clause',_cor26})
										    -| ['compiler_generated'] )
										end
									    in  let <_cor31> =
										    %% Line 2117
										    call 'erlang':'setelement'
											(5, V0, TypeSpec)
										in  %% Line 2116
										    case %% Line 2117
											 apply 'check_value'/2
											     (_cor27, _cor31) of
										      <{'valuedef',_cor160,_cor161,_cor162,_cor163,CheckedVal,_cor164}> when 'true' ->
											  %% Line 2118
											  case _cor5 of
											    <{'valuedef',_cor165,_cor166,_cor167,_cor168,_cor169,_cor170}> when 'true' ->
												call 'erlang':'setelement'
												    (6, _cor5, CheckedVal)
											    ( <_cor171> when 'true' ->
												  ( call ( 'erlang'
													   -| ['compiler_generated'] ):( 'error'
																	 -| ['compiler_generated'] )
													(( {'badrecord','valuedef'}
													   -| ['compiler_generated'] ))
												    -| ['compiler_generated'] )
											      -| ['compiler_generated'] )
											  end
										      ( <_cor32> when 'true' ->
											    primop 'match_fail'
												({'badmatch',_cor32})
											-| ['compiler_generated'] )
										    end
									%% Line 2119
									<{'type',_cor172,_cor173,_cor174,_cor175,_cor176}> when 'true' ->
									    let <_rec204> =
										%% Line 2122
										[RecName|TopName]
									    in  %% Line 2122
										case S2 of
										  <{'state',_cor177,_cor178,_cor179,_cor180,_cor181,_cor182,_cor183,_cor184,_cor185,_cor186,_cor187,_cor188,_cor189}> when 'true' ->
										      let <_cor41> =
											  call 'erlang':'setelement'
											      (12, S2, _rec204)
										      in  %% Line 2123
											  case _cor5 of
											    <{'valuedef',_cor191,_cor192,_cor193,_cor194,_cor195,_cor196}> when 'true' ->
												let <_cor37> =
												    call 'erlang':'setelement'
													(5, _cor5, Type)
												in  case apply 'check_value'/2
													     (_cor41, _cor37) of
												      <{'valuedef',_cor198,_cor199,_cor200,_cor201,CheckedVal,_cor202}> when 'true' ->
													  %% Line 2124
													  call 'erlang':'setelement'
													      (6, _cor5, CheckedVal)
												      ( <_cor42> when 'true' ->
													    primop 'match_fail'
														({'badmatch',_cor42})
													-| ['compiler_generated'] )
												    end
											    ( <_cor197> when 'true' ->
												  ( call ( 'erlang'
													   -| ['compiler_generated'] ):( 'error'
																	 -| ['compiler_generated'] )
													(( {'badrecord','valuedef'}
													   -| ['compiler_generated'] ))
												    -| ['compiler_generated'] )
											      -| ['compiler_generated'] )
											  end
										  ( <_cor190> when 'true' ->
											( call ( 'erlang'
												 -| ['compiler_generated'] ):( 'error'
															       -| ['compiler_generated'] )
											      (( {'badrecord','state'}
												 -| ['compiler_generated'] ))
											  -| ['compiler_generated'] )
										    -| ['compiler_generated'] )
										end
									( <_cor45> when 'true' ->
									      primop 'match_fail'
										  ({'case_clause',_cor45})
									  -| ['compiler_generated'] )
								      end
							      ( <_cor21> when 'true' ->
								    primop 'match_fail'
									({'badmatch',_cor21})
								-| ['compiler_generated'] )
							    end
							%% Line 2126
							<'ANY'> when 'true' ->
							    %% Line 2127
							    case Value of
							      <{'opentypefieldvalue',ANYType,ANYValue}> when 'true' ->
								  %% Line 2132
								  ( case apply 'check_value'/2
									     (SVal, {'valuedef','false','undefined',Name,ANYType,ANYValue,ModName}) of
								      ( <( {'valuedef',_cor210,_cor211,_cor212,_cor213,_rec210,_cor214}
									   -| ['compiler_generated'] )> when 'true' ->
									    case _cor5 of
									      <{'valuedef',_cor216,_cor217,_cor218,_cor219,_cor220,_cor221}> when 'true' ->
										  call 'erlang':'setelement'
										      (6, _cor5, _rec210)
									      ( <_cor222> when 'true' ->
										    ( call ( 'erlang'
											     -| ['compiler_generated'] ):( 'error'
															   -| ['compiler_generated'] )
											  (( {'badrecord','valuedef'}
											     -| ['compiler_generated'] ))
										      -| ['compiler_generated'] )
										-| ['compiler_generated'] )
									    end
									-| ['compiler_generated'] )
								      ( <_cor215> when 'true' ->
									    ( call ( 'erlang'
										     -| ['compiler_generated'] ):( 'error'
														   -| ['compiler_generated'] )
										  (( {'badrecord','valuedef'}
										     -| ['compiler_generated'] ))
									      -| ['compiler_generated'] )
									-| ['compiler_generated'] )
								    end
								    -| ['compiler_generated'] )
							      ( <_cor46> when 'true' ->
								    primop 'match_fail'
									({'badmatch',_cor46})
								-| ['compiler_generated'] )
							    end
							%% Line 2133
							<'INTEGER'> when 'true' ->
							    %% Line 2134
							    case apply 'validate_integer'/4
								     (SVal, Value, [], _cor107) of
							      <'ok'> when 'true' ->
								  let <_rec211> =
								      %% Line 2135
								      apply 'normalize_value'/4
									  (SVal, Vtype, Value, [])
								  in  %% Line 2135
								      case _cor5 of
									<{'valuedef',_cor223,_cor224,_cor225,_cor226,_cor227,_cor228}> when 'true' ->
									    call 'erlang':'setelement'
										(6, _cor5, _rec211)
									( <_cor229> when 'true' ->
									      ( call ( 'erlang'
										       -| ['compiler_generated'] ):( 'error'
														     -| ['compiler_generated'] )
										    (( {'badrecord','valuedef'}
										       -| ['compiler_generated'] ))
										-| ['compiler_generated'] )
									  -| ['compiler_generated'] )
								      end
							      ( <_cor53> when 'true' ->
								    primop 'match_fail'
									({'badmatch',_cor53})
								-| ['compiler_generated'] )
							    end
							%% Line 2136
							<{'INTEGER',NamedNumberList}> when 'true' ->
							    %% Line 2137
							    case apply 'validate_integer'/4
								     (SVal, Value, NamedNumberList, _cor107) of
							      <'ok'> when 'true' ->
								  let <_rec213> =
								      %% Line 2138
								      apply 'normalize_value'/4
									  (SVal, Vtype, Value, [])
								  in  %% Line 2138
								      case _cor5 of
									<{'valuedef',_cor230,_cor231,_cor232,_cor233,_cor234,_cor235}> when 'true' ->
									    call 'erlang':'setelement'
										(6, _cor5, _rec213)
									( <_cor236> when 'true' ->
									      ( call ( 'erlang'
										       -| ['compiler_generated'] ):( 'error'
														     -| ['compiler_generated'] )
										    (( {'badrecord','valuedef'}
										       -| ['compiler_generated'] ))
										-| ['compiler_generated'] )
									  -| ['compiler_generated'] )
								      end
							      ( <_cor57> when 'true' ->
								    primop 'match_fail'
									({'badmatch',_cor57})
								-| ['compiler_generated'] )
							    end
							%% Line 2139
							<{'SEQUENCE',_cor237,_cor238,_cor239,Components}> when 'true' ->
							    %% Line 2140
							    case apply 'validate_sequence'/4
								     (SVal, Value, %% Line 2141
										   Components, _cor107) of
							      <{'ok',SeqVal}> when 'true' ->
								  let <_rec215> =
								      %% Line 2142
								      apply 'normalize_value'/4
									  (SVal, Vtype, %% Line 2143
											SeqVal, %% Line 2143
												TopName)
								  in  %% Line 2142
								      case _cor5 of
									<{'valuedef',_cor240,_cor241,_cor242,_cor243,_cor244,_cor245}> when 'true' ->
									    call 'erlang':'setelement'
										(6, _cor5, _rec215)
									( <_cor246> when 'true' ->
									      ( call ( 'erlang'
										       -| ['compiler_generated'] ):( 'error'
														     -| ['compiler_generated'] )
										    (( {'badrecord','valuedef'}
										       -| ['compiler_generated'] ))
										-| ['compiler_generated'] )
									  -| ['compiler_generated'] )
								      end
							      ( <_cor61> when 'true' ->
								    primop 'match_fail'
									({'badmatch',_cor61})
								-| ['compiler_generated'] )
							    end
							%% Line 2144
							<{'SelectionType',SelName,SelT}> when 'true' ->
							    let <CheckedT> =
								%% Line 2145
								apply 'check_selectiontype'/3
								    (SVal, SelName, SelT)
							    in  %% Line 2146
								case _cor5 of
								  <{'valuedef',_cor247,_cor248,_cor249,_cor250,_cor251,_cor252}> when 'true' ->
								      let <_cor68> =
									  call 'erlang':'setelement'
									      (5, _cor5, CheckedT)
								      in  %% Line 2147
									  case _cor18 of
									    <{'state',_cor254,_cor255,_cor256,_cor257,_cor258,_cor259,_cor260,_cor261,_cor262,_cor263,_cor264,_cor265,_cor266}> when 'true' ->
										let <_cor72> =
										    call 'erlang':'setelement'
											(6, _cor18, _cor68)
										in  %% Line 2148
										    ( case apply 'check_value'/2
											       (_cor72, _cor68) of
											( <( {'valuedef',_cor268,_cor269,_cor270,_cor271,_rec221,_cor272}
											     -| ['compiler_generated'] )> when 'true' ->
											      call 'erlang':'setelement'
												  (6, _cor5, _rec221)
											  -| ['compiler_generated'] )
											( <_cor273> when 'true' ->
											      ( call ( 'erlang'
												       -| ['compiler_generated'] ):( 'error'
																     -| ['compiler_generated'] )
												    (( {'badrecord','valuedef'}
												       -| ['compiler_generated'] ))
												-| ['compiler_generated'] )
											  -| ['compiler_generated'] )
										      end
										      -| ['compiler_generated'] )
									    ( <_cor267> when 'true' ->
										  ( call ( 'erlang'
											   -| ['compiler_generated'] ):( 'error'
															 -| ['compiler_generated'] )
											(( {'badrecord','state'}
											   -| ['compiler_generated'] ))
										    -| ['compiler_generated'] )
									      -| ['compiler_generated'] )
									  end
								  ( <_cor253> when 'true' ->
									( call ( 'erlang'
										 -| ['compiler_generated'] ):( 'error'
													       -| ['compiler_generated'] )
									      (( {'badrecord','valuedef'}
										 -| ['compiler_generated'] ))
									  -| ['compiler_generated'] )
								    -| ['compiler_generated'] )
								end
							%% Line 2149
							<_cor281> when 'true' ->
							    let <_rec222> =
								%% Line 2150
								apply 'normalize_value'/4
								    (SVal, Vtype, Value, TopName)
							    in  %% Line 2150
								case _cor5 of
								  <{'valuedef',_cor282,_cor283,_cor284,_cor285,_cor286,_cor287}> when 'true' ->
								      call 'erlang':'setelement'
									  (6, _cor5, _rec222)
								  ( <_cor288> when 'true' ->
									( call ( 'erlang'
										 -| ['compiler_generated'] ):( 'error'
													       -| ['compiler_generated'] )
									      (( {'badrecord','valuedef'}
										 -| ['compiler_generated'] ))
									  -| ['compiler_generated'] )
								    -| ['compiler_generated'] )
								end
						      end
			      -| ['compiler_generated'] )
			    ( <_cor110> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','type'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor2})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor84,_cor83> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor84,_cor83})
		  -| [{'function_name',{'check_valuedef',2}}] )
	    -| ['compiler_generated'] )
	end
'is_contextswitchtype'/1 =
    %% Line 2153
    fun (_cor0) ->
	case _cor0 of
	  <{'typedef',_cor2,_cor3,'EXTERNAL',_cor4}> when 'true' ->
	      %% Line 2154
	      'true'
	  %% Line 2155
	  <{'typedef',_cor5,_cor6,'EMBEDDED PDV',_cor7}> when 'true' ->
	      %% Line 2156
	      'true'
	  %% Line 2157
	  <{'typedef',_cor8,_cor9,'CHARACTER STRING',_cor10}> when 'true' ->
	      %% Line 2158
	      'true'
	  %% Line 2159
	  <_cor11> when 'true' ->
	      %% Line 2160
	      'false'
	end
'validate_integer'/4 =
    %% Line 2170
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <S,Ref = {'Externalvaluereference',_cor10,_cor11,Id},%% Line 2171
							       NamedNumberList,%% Line 2171
									       Constr> when 'true' ->
	      %% Line 2172
	      case call 'lists':'keysearch'
		       (Id, 1, NamedNumberList) of
		%% Line 2173
		<{'value',_cor12}> when 'true' ->
		    'ok'
		%% Line 2174
		<'false'> when 'true' ->
		    apply 'validate_integer_ref'/4
			(S, Ref, NamedNumberList, Constr)
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor4})
		  -| ['compiler_generated'] )
	      end
	  %% Line 2177
	  <S,Id,NamedNumberList,Constr>
	      when call 'erlang':'is_atom'
		    (Id) ->
	      %% Line 2178
	      case call 'lists':'keysearch'
		       (Id, 1, NamedNumberList) of
		%% Line 2179
		<{'value',_cor13}> when 'true' ->
		    'ok'
		%% Line 2180
		<'false'> when 'true' ->
		    apply 'validate_integer_ref'/4
			(S, Id, NamedNumberList, Constr)
		( <_cor5> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor5})
		  -| ['compiler_generated'] )
	      end
	  %% Line 2183
	  <_X_S,Value,_X_NamedNumberList,Constr>
	      when call 'erlang':'is_integer'
		    (Value) ->
	      %% Line 2184
	      apply 'check_integer_range'/2
		  (Value, Constr)
	  ( <_cor9,_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8,_cor7,_cor6})
		  -| [{'function_name',{'validate_integer',4}}] )
	    -| ['compiler_generated'] )
	end
'validate_integer_ref'/4 =
    %% Line 2186
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <S,Id,_cor11,_cor12>
	      when call 'erlang':'is_atom'
		    (Id) ->
	      %% Line 2187
	      apply 'error'/1
		  ({'value',[117|[110|[107|[110|[111|[119|[110|[32|[105|[110|[116|[101|[103|[101|[114|[32|[114|[101|[102|[101|[114|[101|[110|[115]]]]]]]]]]]]]]]]]]]]]]]],S})
	  %% Line 2188
	  <S,Ref,NamedNumberList,Constr> when 'true' ->
	      %% Line 2189
	      case apply 'get_referenced_type'/2
		       (S, Ref) of
		%% Line 2190
		<{M,V = {'valuedef',_cor13,_cor14,_cor15,_cor16,_cor17,_cor18}}> when ( 'true'
											-| ['compiler_generated'] ) ->
		    let <NewS> =
			%% Line 2191
			apply 'update_state'/2
			    (S, M)
		    in  %% Line 2192
			case apply 'check_value'/2
				 (NewS, V) of
			  %% Line 2193
			  <{'valuedef',_cor19,_cor20,_cor21,{'type',_cor22,'INTEGER',_cor23,_cor24,_cor25},Value,_cor26}> when 'true' ->
			      %% Line 2194
			      apply 'validate_integer'/4
				  (NewS, Value, NamedNumberList, Constr)
			  %% Line 2195
			  <_X_Err> when 'true' ->
			      apply 'error'/1
				  ({'value',[117|[110|[107|[110|[111|[119|[110|[32|[105|[110|[116|[101|[103|[101|[114|[32|[114|[101|[102|[101|[114|[101|[110|[115]]]]]]]]]]]]]]]]]]]]]]]],S})
			end
		%% Line 2197
		<_cor27> when 'true' ->
		    %% Line 2198
		    apply 'error'/1
			({'value',[117|[110|[107|[110|[111|[119|[110|[32|[105|[110|[116|[101|[103|[101|[114|[32|[114|[101|[102|[101|[114|[101|[110|[115]]]]]]]]]]]]]]]]]]]]]]]],S})
	      end
	end
'check_integer_range'/2 =
    %% Line 2203
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_Int,Constr>
	      when call 'erlang':'is_list'
		    (Constr) ->
	      %% Line 2204
	      'ok'
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'check_integer_range',2}}] )
	    -| ['compiler_generated'] )
	end
'is_space_list'/2 =
    %% Line 2210
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[H|[]],Acc> when 'true' ->
	      %% Line 2211
	      call 'lists':'reverse'
		  ([H|Acc])
	  %% Line 2212
	  <[H|['space'|T]],Acc> when 'true' ->
	      %% Line 2213
	      apply 'is_space_list'/2
		  (T, [H|Acc])
	  %% Line 2214
	  <[],Acc> when 'true' ->
	      %% Line 2215
	      call 'lists':'reverse'
		  (Acc)
	  %% Line 2216
	  <[H|T],Acc> when 'true' ->
	      %% Line 2217
	      apply 'is_space_list'/2
		  (T, [H|Acc])
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'is_space_list',2}}] )
	    -| ['compiler_generated'] )
	end
'validate_objectidentifier'/4 =
    %% Line 2219
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <S,OID,ERef = {'Externalvaluereference',_cor12,_cor13,_cor14},C> when %% Line 2220
										( 'true'
										  -| ['compiler_generated'] ) ->
	      %% Line 2221
	      apply 'validate_objectidentifier'/4
		  (S, OID, [ERef|[]], C)
	  %% Line 2222
	  <S,OID,Tup,C>
	      when call 'erlang':'is_tuple'
		    (Tup) ->
	      let <_cor4> =
		  %% Line 2223
		  call 'erlang':'tuple_to_list'
		      (Tup)
	      in  %% Line 2223
		  apply 'validate_objectidentifier'/4
		      (S, OID, _cor4, C)
	  %% Line 2224
	  <S,OID,L,_cor15> when 'true' ->
	      let <NewL> =
		  %% Line 2225
		  apply 'is_space_list'/2
		      (L, [])
	      in  %% Line 2226
		  case apply 'validate_objectidentifier1'/3
			   (S, OID, NewL) of
		    %% Line 2227
		    <NewL2>
			when call 'erlang':'is_list'
			      (NewL2) ->
			let <_cor6> =
			    call 'erlang':'list_to_tuple'
				(NewL2)
			in  {'ok',_cor6}
		    %% Line 2228
		    <Other> when 'true' ->
			{'ok',Other}
		  end
	end
'validate_objectidentifier1'/3 =
    %% Line 2231
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,OID,[Id = {'Externalvaluereference',_cor17,_cor18,_cor19}|T]> when %% Line 2232
										( 'true'
										  -| ['compiler_generated'] ) ->
	      let <_cor3> =
		  catch
		      %% Line 2233
		      apply 'get_referenced_type'/2
			  (S, Id)
	      in  %% Line 2233
		  case _cor3 of
		    %% Line 2234
		    <{M,V = {'valuedef',_cor20,_cor21,_cor22,_cor23,_cor24,_cor25}}> when ( 'true'
											    -| ['compiler_generated'] ) ->
			let <NewS> =
			    %% Line 2235
			    apply 'update_state'/2
				(S, M)
			in  %% Line 2236
			    case apply 'check_value'/2
				     (NewS, V) of
			      %% Line 2237
			      <{'valuedef','true',_cor26,_cor27,{'type',_cor28,ERef,_cor29,_cor30,_cor31},%% Line 2238
													  Value,_cor32}>
				  when %% Line 2238
				    call 'erlang':'is_tuple'
					(Value) ->
				  %% Line 2239
				  case apply 'is_object_id'/3
					   (OID, NewS, ERef) of
				    %% Line 2240
				    <'true'> when 'true' ->
					let <_cor5> =
					    %% Line 2242
					    call 'erlang':'tuple_to_list'
						(Value)
					in  let <_cor6> =
						%% Line 2242
						call 'lists':'reverse'
						    (_cor5)
					    in  %% Line 2242
						apply 'validate_oid'/5
						    ('true', NewS, 'rel_oid', T, _cor6)
				    %% Line 2243
				    <_cor33> when 'true' ->
					let <_cor7> =
					    %% Line 2244
					    apply 'to_string'/1
						(OID)
					in  let <_cor8> =
						%% Line 2244
						call 'erlang':'++'
						    ([105|[108|[108|[101|[103|[97|[108|[32]]]]]]]], _cor7)
					    in  %% Line 2244
						apply 'error'/1
						    ({'value',{_cor8,[Id|T]},S})
				  end
			      %% Line 2246
			      <_cor34> when 'true' ->
				  let <_cor10> =
				      %% Line 2247
				      apply 'to_string'/1
					  (OID)
				  in  let <_cor11> =
					  %% Line 2247
					  call 'erlang':'++'
					      ([105|[108|[108|[101|[103|[97|[108|[32]]]]]]]], _cor10)
				      in  %% Line 2247
					  apply 'error'/1
					      ({'value',{_cor11,[Id|T]},S})
			    end
		    %% Line 2249
		    <_cor35> when 'true' ->
			%% Line 2250
			apply 'validate_oid'/5
			    ('true', S, OID, [Id|T], [])
		  end
	  %% Line 2252
	  <S,OID,V> when 'true' ->
	      %% Line 2253
	      apply 'validate_oid'/5
		  ('true', S, OID, V, [])
	end
'validate_oid'/5 =
    %% Line 2255
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <'false',S,OID,V,Acc> when 'true' ->
	      let <_cor5> =
		  %% Line 2256
		  apply 'to_string'/1
		      (OID)
	      in  let <_cor6> =
		      %% Line 2256
		      call 'erlang':'++'
			  ([105|[108|[108|[101|[103|[97|[108|[32]]]]]]]], _cor5)
		  in  %% Line 2256
		      apply 'error'/1
			  ({'value',{_cor6,V,Acc},S})
	  %% Line 2257
	  <_cor49,_cor50,_cor51,[],Acc> when 'true' ->
	      %% Line 2258
	      call 'lists':'reverse'
		  (Acc)
	  %% Line 2259
	  <_cor52,S,OID,[Value|Vrest],Acc>
	      when call 'erlang':'is_integer'
		    (Value) ->
	      let <_cor7> =
		  %% Line 2260
		  apply 'valid_objectid'/3
		      (OID, Value, Acc)
	      in  %% Line 2260
		  apply 'validate_oid'/5
		      (_cor7, S, OID, Vrest, [Value|Acc])
	  %% Line 2261
	  <_cor53,S,OID,[{'NamedNumber',_X_Name,Value}|Vrest],Acc>
	      when %% Line 2262
		call 'erlang':'is_integer'
		    (Value) ->
	      let <_cor8> =
		  %% Line 2263
		  apply 'valid_objectid'/3
		      (OID, Value, Acc)
	      in  %% Line 2263
		  apply 'validate_oid'/5
		      (_cor8, S, OID, Vrest, [Value|Acc])
	  %% Line 2264
	  <_cor54,S,OID,[Id = {'Externalvaluereference',_cor55,_cor56,_cor57}|Vrest],Acc> when %% Line 2265
											       ( 'true'
												 -| ['compiler_generated'] ) ->
	      let <_cor9> =
		  catch
		      %% Line 2266
		      apply 'get_referenced_type'/2
			  (S, Id)
	      in  %% Line 2266
		  case _cor9 of
		    %% Line 2267
		    <{M,V = {'valuedef',_cor58,_cor59,_cor60,_cor61,_cor62,_cor63}}> when ( 'true'
											    -| ['compiler_generated'] ) ->
			let <NewS> =
			    %% Line 2268
			    apply 'update_state'/2
				(S, M)
			in  let <_cor17> =
				%% Line 2269
				case apply 'check_value'/2
					 (NewS, V) of
				  %% Line 2270
				  <{'valuedef','true',_cor64,_cor65,_cor66,Value,_cor67}> when 'true' ->
				      let <_cor13> =
					  %% Line 2271
					  ( fun (_cor11) ->
						case _cor11 of
						  <Int>
						      when call 'erlang':'is_integer'
							    (_cor11) ->
						      [Int|[]]
						  %% Line 2272
						  <L>
						      when call 'erlang':'is_list'
							    (_cor11) ->
						      L
						  %% Line 2273
						  <T>
						      when call 'erlang':'is_tuple'
							    (_cor11) ->
						      call 'erlang':'tuple_to_list'
							  (T)
						  ( <_cor12> when 'true' ->
							( primop 'match_fail'
							      ({'function_clause',_cor12})
							  -| [{'function_name',{'-validate_oid/5-fun-0-',1}}] )
						    -| ['compiler_generated'] )
						end
					    -| [{'id',{0,0,'-validate_oid/5-fun-0-'}}] )
				      in  %% Line 2271
					  apply _cor13
					      (%% Line 2274
					       Value)
				  %% Line 2275
				  <_cor68> when 'true' ->
				      let <_cor14> =
					  %% Line 2276
					  apply 'to_string'/1
					      (OID)
				      in  let <_cor15> =
					      %% Line 2276
					      call 'erlang':'++'
						  ([105|[108|[108|[101|[103|[97|[108|[32]]]]]]]], _cor14)
					  in  %% Line 2276
					      apply 'error'/1
						  ({'value',{_cor15,%% Line 2277
								    [Id|Vrest],%% Line 2277
									       Acc},%% Line 2277
										    S})
				end
			    in  %% Line 2279
				case _cor17 of
				  %% Line 2280
				  <List>
				      when call 'erlang':'is_list'
					    (_cor17) ->
				      let <_cor21> =
					  %% Line 2281
					  apply 'valid_objectid'/3
					      (OID, _cor17, Acc)
				      in  let <_cor19> =
					      %% Line 2282
					      call 'lists':'reverse'
						  (_cor17)
					  in  let <_cor20> =
						  %% Line 2282
						  call 'erlang':'++'
						      (_cor19, Acc)
					      in  %% Line 2281
						  apply 'validate_oid'/5
						      (_cor21, NewS, %% Line 2282
								     OID, %% Line 2282
									  Vrest, _cor20)
				  %% Line 2283
				  <_cor69> when 'true' ->
				      _cor17
				end
		    %% Line 2286
		    <_cor70> when 'true' ->
			%% Line 2287
			case apply 'reserved_objectid'/2
				 (_cor57, Acc) of
			  %% Line 2288
			  <Value>
			      when call 'erlang':'is_integer'
				    (Value) ->
			      let <_cor25> =
				  %% Line 2289
				  apply 'valid_objectid'/3
				      (OID, Value, Acc)
			      in  %% Line 2289
				  apply 'validate_oid'/5
				      (_cor25, %% Line 2290
					       S, %% Line 2290
						  OID, %% Line 2290
						       Vrest, %% Line 2290
							      [Value|Acc])
			  %% Line 2291
			  <'false'> when 'true' ->
			      let <_cor26> =
				  %% Line 2292
				  apply 'to_string'/1
				      (OID)
			      in  let <_cor27> =
				      %% Line 2292
				      call 'erlang':'++'
					  ([105|[108|[108|[101|[103|[97|[108|[32]]]]]]]], _cor26)
				  in  %% Line 2292
				      apply 'error'/1
					  ({'value',{_cor27,[Id|[Vrest|[]]],Acc},S})
			  ( <_cor28> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor28})
			    -| ['compiler_generated'] )
			end
		  end
	  %% Line 2295
	  <_cor74,S,OID,[{Atom,Value}|[]],[]>
	      when let <_cor30> =
		    %% Line 2296
		    call 'erlang':'is_atom'
			(Atom)
		in  let <_cor31> =
			%% Line 2296
			call 'erlang':'is_integer'
			    (Value)
		    in  %% Line 2296
			call 'erlang':'and'
			    (_cor30, _cor31) ->
	      %% Line 2299
	      ( case S of
		  ( <( {'state',_cor75,_rec225,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84,_cor85,_cor86}
		       -| ['compiler_generated'] )> when 'true' ->
			let <Rec> =
			    {'Externalvaluereference','undefined',_rec225,%% Line 2300
									  Atom}
			in  %% Line 2301
			    apply 'validate_objectidentifier1'/3
				(S, OID, [Rec|[Value|[]]])
		    -| ['compiler_generated'] )
		  ( <_cor87> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 2302
	  <_cor88,S,OID,[{Atom,EVRef = {'Externalvaluereference',_cor89,_cor90,_cor91}}|[]],[]>
	      when %% Line 2303
		call 'erlang':'is_atom'
		    (Atom) ->
	      let <Rec> =
		  %% Line 2306
		  {'Externalvaluereference','undefined',_cor90,%% Line 2307
							       Atom}
	      in  %% Line 2308
		  apply 'validate_objectidentifier1'/3
		      (S, OID, [Rec|[EVRef|[]]])
	  %% Line 2309
	  <_cor95,S,OID,[Atom|Rest],Acc>
	      when call 'erlang':'is_atom'
		    (Atom) ->
	      %% Line 2310
	      ( case S of
		  ( <( {'state',_cor96,_rec227,_cor97,_cor98,_cor99,_cor100,_cor101,_cor102,_cor103,_cor104,_cor105,_cor106,_cor107}
		       -| ['compiler_generated'] )> when 'true' ->
			let <Rec> =
			    {'Externalvaluereference','undefined',_rec227,%% Line 2311
									  Atom}
			in  %% Line 2312
			    apply 'validate_oid'/5
				('true', S, OID, [Rec|Rest], Acc)
		    -| ['compiler_generated'] )
		  ( <_cor108> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 2313
	  <_cor109,S,OID,V,Acc> when 'true' ->
	      let <_cor42> =
		  %% Line 2314
		  apply 'to_string'/1
		      (OID)
	      in  let <_cor43> =
		      %% Line 2314
		      call 'erlang':'++'
			  ([105|[108|[108|[101|[103|[97|[108|[32]]]]]]]], _cor42)
		  in  %% Line 2314
		      apply 'error'/1
			  ({'value',{_cor43,V,Acc},S})
	end
'is_object_id'/3 =
    %% Line 2316
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <OID,S,ERef = {'Externaltypereference',_cor9,_cor10,_cor11}> when 'true' ->
	      %% Line 2317
	      case apply 'get_referenced_type'/2
		       (S, ERef) of
		<{_cor12,OI}> when 'true' ->
		    %% Line 2318
		    ( case OI of
			( <( {'typedef',_cor13,_cor14,_cor15,_rec228}
			     -| ['compiler_generated'] )> when 'true' ->
			      apply 'is_object_id'/3
				  (OID, S, _rec228)
			  -| ['compiler_generated'] )
			( <_cor16> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','typedef'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  %% Line 2319
	  <'o_id',_X_S,'OBJECT IDENTIFIER'> when 'true' ->
	      %% Line 2320
	      'true'
	  %% Line 2321
	  <'rel_oid',_X_S,'RELATIVE-OID'> when 'true' ->
	      %% Line 2322
	      'true'
	  %% Line 2323
	  <_cor17,_X_S,'INTEGER'> when 'true' ->
	      %% Line 2324
	      'true'
	  %% Line 2325
	  <OID,S,{'type',_cor18,Def,_cor19,_cor20,_cor21}> when 'true' ->
	      %% Line 2326
	      apply 'is_object_id'/3
		  (OID, S, Def)
	  %% Line 2327
	  <_cor22,_X_S,_cor23> when 'true' ->
	      %% Line 2328
	      'false'
	end
'to_string'/1 =
    %% Line 2330
    fun (_cor0) ->
	case _cor0 of
	  <'o_id'> when 'true' ->
	      %% Line 2331
	      [79|[66|[74|[69|[67|[84|[32|[73|[68|[69|[78|[84|[73|[70|[73|[69|[82]]]]]]]]]]]]]]]]]
	  %% Line 2332
	  <'rel_oid'> when 'true' ->
	      %% Line 2333
	      [82|[69|[76|[65|[84|[73|[86|[69|[45|[79|[73|[68]]]]]]]]]]]]
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'to_string',1}}] )
	    -| ['compiler_generated'] )
	end
'reserved_objectid'/2 =
    %% Line 2336
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'itu-t',[]> when 'true' ->
	      0
	  %% Line 2337
	  <'ccitt',[]> when 'true' ->
	      0
	  %% Line 2339
	  <'recommendation',[0]> when 'true' ->
	      0
	  %% Line 2340
	  <'question',[0]> when 'true' ->
	      1
	  %% Line 2341
	  <'administration',[0]> when 'true' ->
	      2
	  %% Line 2342
	  <'network-operator',[0]> when 'true' ->
	      3
	  %% Line 2343
	  <'identified-organization',[0]> when 'true' ->
	      4
	  %% Line 2345
	  <'a',[0|[0]]> when 'true' ->
	      1
	  %% Line 2346
	  <'b',[0|[0]]> when 'true' ->
	      2
	  %% Line 2347
	  <'c',[0|[0]]> when 'true' ->
	      3
	  %% Line 2348
	  <'d',[0|[0]]> when 'true' ->
	      4
	  %% Line 2349
	  <'e',[0|[0]]> when 'true' ->
	      5
	  %% Line 2350
	  <'f',[0|[0]]> when 'true' ->
	      6
	  %% Line 2351
	  <'g',[0|[0]]> when 'true' ->
	      7
	  %% Line 2352
	  <'h',[0|[0]]> when 'true' ->
	      8
	  %% Line 2353
	  <'i',[0|[0]]> when 'true' ->
	      9
	  %% Line 2354
	  <'j',[0|[0]]> when 'true' ->
	      10
	  %% Line 2355
	  <'k',[0|[0]]> when 'true' ->
	      11
	  %% Line 2356
	  <'l',[0|[0]]> when 'true' ->
	      12
	  %% Line 2357
	  <'m',[0|[0]]> when 'true' ->
	      13
	  %% Line 2358
	  <'n',[0|[0]]> when 'true' ->
	      14
	  %% Line 2359
	  <'o',[0|[0]]> when 'true' ->
	      15
	  %% Line 2360
	  <'p',[0|[0]]> when 'true' ->
	      16
	  %% Line 2361
	  <'q',[0|[0]]> when 'true' ->
	      17
	  %% Line 2362
	  <'r',[0|[0]]> when 'true' ->
	      18
	  %% Line 2363
	  <'s',[0|[0]]> when 'true' ->
	      19
	  %% Line 2364
	  <'t',[0|[0]]> when 'true' ->
	      20
	  %% Line 2365
	  <'u',[0|[0]]> when 'true' ->
	      21
	  %% Line 2366
	  <'v',[0|[0]]> when 'true' ->
	      22
	  %% Line 2367
	  <'w',[0|[0]]> when 'true' ->
	      23
	  %% Line 2368
	  <'x',[0|[0]]> when 'true' ->
	      24
	  %% Line 2369
	  <'y',[0|[0]]> when 'true' ->
	      25
	  %% Line 2370
	  <'z',[0|[0]]> when 'true' ->
	      26
	  %% Line 2373
	  <'iso',[]> when 'true' ->
	      1
	  %% Line 2375
	  <'standard',[1]> when 'true' ->
	      0
	  %% Line 2376
	  <'member-body',[1]> when 'true' ->
	      2
	  %% Line 2377
	  <'identified-organization',[1]> when 'true' ->
	      3
	  %% Line 2379
	  <'joint-iso-itu-t',[]> when 'true' ->
	      2
	  %% Line 2380
	  <'joint-iso-ccitt',[]> when 'true' ->
	      2
	  %% Line 2382
	  <_cor4,_cor5> when 'true' ->
	      'false'
	end
'valid_objectid'/3 =
    %% Line 2384
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <_X_OID,[],_X_Acc> when 'true' ->
	      %% Line 2385
	      'true'
	  %% Line 2386
	  <OID,[H|T],Acc> when 'true' ->
	      %% Line 2387
	      case apply 'valid_objectid'/3
		       (OID, H, Acc) of
		%% Line 2388
		<'true'> when 'true' ->
		    %% Line 2389
		    apply 'valid_objectid'/3
			(OID, T, [H|Acc])
		%% Line 2390
		<_cor17> when 'true' ->
		    %% Line 2391
		    'false'
	      end
	  %% Line 2393
	  <'o_id',I,[]>
	      when let <_cor4> =
		    call 'erlang':'=:='
			(I, 0)
		in  let <_cor5> =
			call 'erlang':'=:='
			    (I, 1)
		    in  let <_cor6> =
			    call 'erlang':'=:='
				(I, 2)
			in  let <_cor7> =
				call 'erlang':'or'
				    (_cor5, _cor6)
			    in  call 'erlang':'or'
				    (_cor4, _cor7) ->
	      'true'
	  %% Line 2394
	  <'o_id',_X_I,[]> when 'true' ->
	      'false'
	  %% Line 2395
	  <'o_id',I,[0]>
	      when let <_cor8> =
		    call 'erlang':'>='
			(I, 0)
		in  let <_cor9> =
			call 'erlang':'=<'
			    (I, 4)
		    in  call 'erlang':'or'
			    (_cor8, _cor9) ->
	      'true'
	  %% Line 2396
	  <'o_id',_X_I,[0]> when 'true' ->
	      'false'
	  %% Line 2397
	  <'o_id',I,[1]>
	      when let <_cor10> =
		    call 'erlang':'=:='
			(I, 0)
		in  let <_cor11> =
			call 'erlang':'=:='
			    (I, 2)
		    in  let <_cor12> =
			    call 'erlang':'=:='
				(I, 3)
			in  let <_cor13> =
				call 'erlang':'or'
				    (_cor11, _cor12)
			    in  call 'erlang':'or'
				    (_cor10, _cor13) ->
	      'true'
	  %% Line 2398
	  <'o_id',_X_I,[1]> when 'true' ->
	      'false'
	  %% Line 2399
	  <'o_id',_X_I,[2]> when 'true' ->
	      'true'
	  %% Line 2400
	  <_cor18,_cor19,_cor20> when 'true' ->
	      'true'
	end
'validate_sequence'/4 =
    %% Line 2402
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <S = {'state',_cor11,_cor12,Vtype,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22},Value,_X_Components,_X_Constr> when 'true' ->
	      %% Line 2403
	      case Vtype of
		%% Line 2404
		<{'type',[{'tag','UNIVERSAL',8,'IMPLICIT',32}],_cor23,_cor24,_cor25,_cor26}> when 'true' ->
		    %% Line 2406
		    case Value of
		      %% Line 2407
		      <[{'identification',_cor27}|_X_RestVal]> when 'true' ->
			  let <_cor4> =
			      %% Line 2408
			      apply 'to_EXTERNAL1990'/2
				  (S, Value)
			  in  %% Line 2408
			      {'ok',_cor4}
		      %% Line 2409
		      <_cor28> when 'true' ->
			  %% Line 2410
			  {'ok',Value}
		    end
		%% Line 2412
		<_cor29> when 'true' ->
		    %% Line 2413
		    {'ok',Value}
	      end
	  ( <_cor10,_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8,_cor7})
		  -| [{'function_name',{'validate_sequence',4}}] )
	    -| ['compiler_generated'] )
	end
'to_EXTERNAL1990'/2 =
    %% Line 2416
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,[{'identification',{'CHOICE',{'syntax',Stx}}}|Rest]> when 'true' ->
	      %% Line 2417
	      apply 'to_EXTERNAL1990'/3
		  (S, Rest, [{'direct-reference',Stx}|[]])
	  %% Line 2418
	  <S,[{'identification',{'CHOICE',{'presentation-context-id',I}}}|Rest]> when 'true' ->
	      %% Line 2419
	      apply 'to_EXTERNAL1990'/3
		  (S, Rest, [{'indirect-reference',I}|[]])
	  %% Line 2420
	  <S,[{'identification',{'CHOICE',{'context-negotiation',[{_cor4,PCid}|[{_cor5,TrStx}|[]]]}}}|Rest]> when 'true' ->
	      %% Line 2421
	      apply 'to_EXTERNAL1990'/3
		  (S, Rest, [{'indirect-reference',PCid}|[{'direct-reference',TrStx}|[]]])
	  %% Line 2422
	  <S,_cor6> when 'true' ->
	      %% Line 2423
	      apply 'error'/1
		  ({'value',[105|[108|[108|[101|[103|[97|[108|[32|[118|[97|[108|[117|[101|[32|[105|[110|[32|[69|[88|[84|[69|[82|[78|[65|[76|[32|[116|[121|[112|[101]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],S})
	end
'to_EXTERNAL1990'/3 =
    %% Line 2425
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,[V = {'data-value-descriptor',_cor7}|Rest],Acc> when 'true' ->
	      %% Line 2426
	      apply 'to_EXTERNAL1990'/3
		  (S, Rest, [V|Acc])
	  %% Line 2427
	  <_X_S,[{'data-value',Val}|[]],Acc> when 'true' ->
	      let <Encoding> = {%% Line 2428
		   'encoding',%% Line 2428
			      {'CHOICE',{'octet-aligned',Val}}}
	      in  %% Line 2429
		  call 'lists':'reverse'
		      ([Encoding|Acc])
	  %% Line 2430
	  <S,_cor8,_cor9> when 'true' ->
	      %% Line 2431
	      apply 'error'/1
		  ({'value',[105|[108|[108|[101|[103|[97|[108|[32|[118|[97|[108|[117|[101|[32|[105|[110|[32|[69|[88|[84|[69|[82|[78|[65|[76|[32|[116|[121|[112|[101]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],S})
	end
'normalize_value'/4 =
    %% Line 2437
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <_cor14,_cor15,'mandatory',_cor16> when 'true' ->
	      %% Line 2438
	      'mandatory'
	  %% Line 2439
	  <_cor17,_cor18,'OPTIONAL',_cor19> when 'true' ->
	      %% Line 2440
	      'OPTIONAL'
	  %% Line 2441
	  <S0,Type,{'DEFAULT',Value},NameList> when 'true' ->
	      %% Line 2442
	      case S0 of
		<{'state',_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32}> when 'true' ->
		    let <_cor6> =
			call 'erlang':'setelement'
			    (6, S0, Value)
		    in  let <_cor8> =
			    catch
				%% Line 2443
				apply 'get_canonic_type'/3
				    (_cor6, Type, NameList)
			in  %% Line 2443
			    case _cor8 of
			      %% Line 2444
			      <{'BOOLEAN',CType,_cor34}> when 'true' ->
				  %% Line 2445
				  apply 'normalize_boolean'/3
				      (_cor6, Value, CType)
			      %% Line 2446
			      <{'INTEGER',CType,_cor35}> when 'true' ->
				  %% Line 2447
				  apply 'normalize_integer'/3
				      (_cor6, Value, CType)
			      %% Line 2448
			      <{'BIT STRING',CType,_cor36}> when 'true' ->
				  %% Line 2449
				  apply 'normalize_bitstring'/3
				      (_cor6, Value, CType)
			      %% Line 2450
			      <{'OCTET STRING',CType,_cor37}> when 'true' ->
				  %% Line 2451
				  apply 'normalize_octetstring'/3
				      (S0, Value, CType)
			      %% Line 2452
			      <{'NULL',_X_CType,_cor38}> when 'true' ->
				  %% Line 2454
				  'NULL'
			      %% Line 2455
			      <{'RELATIVE-OID',_cor39,_cor40}> when 'true' ->
				  %% Line 2456
				  apply 'normalize_relative_oid'/2
				      (_cor6, Value)
			      %% Line 2457
			      <{'OBJECT IDENTIFIER',_cor41,_cor42}> when 'true' ->
				  %% Line 2458
				  apply 'normalize_objectidentifier'/2
				      (_cor6, Value)
			      %% Line 2459
			      <{'ObjectDescriptor',_cor43,_cor44}> when 'true' ->
				  %% Line 2460
				  apply 'normalize_objectdescriptor'/1
				      (Value)
			      %% Line 2461
			      <{'REAL',_cor45,_cor46}> when 'true' ->
				  %% Line 2462
				  apply 'normalize_real'/1
				      (Value)
			      %% Line 2463
			      <{'ENUMERATED',CType,_cor47}> when 'true' ->
				  %% Line 2464
				  apply 'normalize_enumerated'/3
				      (_cor6, Value, CType)
			      %% Line 2465
			      <{'CHOICE',CType,NewNameList}> when 'true' ->
				  %% Line 2466
				  apply 'normalize_choice'/4
				      (_cor6, Value, CType, NewNameList)
			      %% Line 2467
			      <{'SEQUENCE',CType,NewNameList}> when 'true' ->
				  %% Line 2468
				  apply 'normalize_sequence'/4
				      (_cor6, Value, CType, NewNameList)
			      %% Line 2469
			      <{'SEQUENCE OF',CType,NewNameList}> when 'true' ->
				  %% Line 2470
				  apply 'normalize_seqof'/4
				      (_cor6, Value, CType, NewNameList)
			      %% Line 2471
			      <{'SET',CType,NewNameList}> when 'true' ->
				  %% Line 2472
				  apply 'normalize_set'/4
				      (_cor6, Value, CType, NewNameList)
			      %% Line 2473
			      <{'SET OF',CType,NewNameList}> when 'true' ->
				  %% Line 2474
				  apply 'normalize_setof'/4
				      (_cor6, Value, CType, NewNameList)
			      %% Line 2475
			      <{'restrictedstring',CType,_cor48}> when 'true' ->
				  %% Line 2476
				  apply 'normalize_restrictedstring'/3
				      (_cor6, Value, CType)
			      %% Line 2477
			      <{'ASN1_OPEN_TYPE',{'typefield',_X_TF},NL}> when 'true' ->
				  %% Line 2478
				  apply 'normalize_objectclassfieldvalue'/3
				      (_cor6, Value, NL)
			      %% Line 2479
			      <Err> when 'true' ->
				  do  %% Line 2480
				      call 'asn1ct':'warning'
					  ([99|[111|[117|[108|[100|[32|[110|[111|[116|[32|[99|[104|[101|[99|[107|[32|[100|[101|[102|[97|[117|[108|[116|[32|[118|[97|[108|[117|[101|[32|[126|[112|[126|[110|[84|[121|[112|[101|[58|[126|[110|[126|[112|[126|[110|[78|[97|[109|[101|[76|[105|[115|[116|[58|[126|[110|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 2481
																																																    [Value|[Type|[Err|[]]]], _cor6, %% Line 2481
																																																				    [99|[111|[117|[108|[100|[32|[110|[111|[116|[32|[99|[104|[101|[99|[107|[32|[100|[101|[102|[97|[117|[108|[116|[32|[118|[97|[108|[117|[101]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
				      %% Line 2482
				      Value
			    end
		( <_cor33> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','state'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 2484
	  <S,Type,Val,NameList> when 'true' ->
	      %% Line 2485
	      apply 'normalize_value'/4
		  (S, Type, {'DEFAULT',Val}, NameList)
	end
'normalize_boolean'/3 =
    %% Line 2487
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,{Name,Bool},CType>
	      when call 'erlang':'is_atom'
		    (Name) ->
	      %% Line 2488
	      apply 'normalize_boolean'/3
		  (S, Bool, CType)
	  %% Line 2489
	  <_cor6,'true',_cor7> when 'true' ->
	      %% Line 2490
	      'true'
	  %% Line 2491
	  <_cor8,'false',_cor9> when 'true' ->
	      %% Line 2492
	      'false'
	  %% Line 2493
	  <S,Bool = {'Externalvaluereference',_cor10,_cor11,_cor12},CType> when 'true' ->
	      %% Line 2494
	      apply 'get_normalized_value'/5
		  (S, Bool, CType, ( 'normalize_boolean'/3
				     -| [{'id',{0,0,'-normalize_boolean/3-fun-0-'}}] ), [])
	  %% Line 2495
	  <_cor13,Other,_cor14> when 'true' ->
	      %% Line 2496
	      call 'erlang':'throw'
		  ({'error',{'asn1',{'invalid default value',Other}}})
	end
'normalize_integer'/3 =
    %% Line 2498
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <_X_S,Int,_cor10>
	      when call 'erlang':'is_integer'
		    (Int) ->
	      %% Line 2499
	      Int
	  %% Line 2500
	  <_X_S,{Name,Int},_cor11>
	      when let <_cor3> =
		    call 'erlang':'is_atom'
			(Name)
		in  let <_cor4> =
			call 'erlang':'is_integer'
			    (Int)
		    in  call 'erlang':'and'
			    (_cor3, _cor4) ->
	      %% Line 2501
	      Int
	  %% Line 2502
	  <S,{Name,Int = {'Externalvaluereference',_cor12,_cor13,_cor14}},%% Line 2503
									  Type>
	      when %% Line 2503
		call 'erlang':'is_atom'
		    (Name) ->
	      %% Line 2504
	      apply 'normalize_integer'/3
		  (S, Int, Type)
	  %% Line 2505
	  <S,Int = {'Externalvaluereference',_cor15,_cor16,Name},Type> when 'true' ->
	      %% Line 2506
	      case Type of
		%% Line 2507
		<NNL>
		    when call 'erlang':'is_list'
			  (Type) ->
		    %% Line 2508
		    case call 'lists':'keysearch'
			     (Name, 1, NNL) of
		      %% Line 2509
		      <{'value',{_cor17,Val}}>
			  when call 'erlang':'=:='
				(_cor17,
				 Name) ->
			  %% Line 2510
			  Val
		      %% Line 2511
		      <'false'> when 'true' ->
			  %% Line 2512
			  apply 'get_normalized_value'/5
			      (S, Int, Type, %% Line 2513
					     ( 'normalize_integer'/3
					       -| [{'id',{0,0,'-normalize_integer/3-fun-0-'}}] ), %% Line 2513
												  [])
		      ( <_cor5> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_cor5})
			-| ['compiler_generated'] )
		    end
		%% Line 2515
		<_cor18> when 'true' ->
		    %% Line 2516
		    apply 'get_normalized_value'/5
			(S, Int, Type, ( 'normalize_integer'/3
					 -| [{'id',{0,0,'-normalize_integer/3-fun-1-'}}] ), [])
	      end
	  %% Line 2518
	  <_cor19,Int,_cor20> when 'true' ->
	      %% Line 2519
	      call 'erlang':'exit'
		  ({'Unknown INTEGER value',Int})
	end
'normalize_bitstring'/3 =
    %% Line 2524
    fun (_cor2,_cor1,_cor0) ->
	%% Line 2525
	case _cor1 of
	  %% Line 2526
	  <{'hstring',String}>
	      when call 'erlang':'is_list'
		    (String) ->
	      %% Line 2527
	      apply 'hstring_to_bitstring'/1
		  (String)
	  %% Line 2528
	  <{'bstring',String}>
	      when call 'erlang':'is_list'
		    (String) ->
	      %% Line 2529
	      apply 'bstring_to_bitstring'/1
		  (String)
	  %% Line 2530
	  <{'Externalvaluereference',_cor15,_cor16,_cor17}> when 'true' ->
	      %% Line 2531
	      apply 'get_normalized_value'/5
		  (_cor2, _cor1, _cor0, %% Line 2532
					( 'normalize_bitstring'/3
					  -| [{'id',{0,0,'-normalize_bitstring/3-fun-0-'}}] ), %% Line 2532
											       [])
	  %% Line 2533
	  <RecList>
	      when call 'erlang':'is_list'
		    (_cor1) ->
	      let <F> =
		  %% Line 2534
		  ( fun (_cor4) ->
			case _cor4 of
			  <{'Externalvaluereference',_cor18,_cor19,Name}> when 'true' ->
			      %% Line 2535
			      case call 'lists':'keymember'
				       (Name, 1, _cor0) of
				%% Line 2536
				<'true'> when 'true' ->
				    Name
				%% Line 2537
				<'false'> when 'true' ->
				    call 'erlang':'throw'
					({'error','false'})
				( <_cor3> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor3})
				  -| ['compiler_generated'] )
			      end
			  %% Line 2539
			  <Name>
			      when call 'erlang':'is_atom'
				    (_cor4) ->
			      %% Line 2541
			      Name
			  %% Line 2542
			  <Other> when 'true' ->
			      %% Line 2543
			      call 'erlang':'throw'
				  ({'error',Other})
			end
		    -| [{'id',{0,0,'-normalize_bitstring/3-fun-1-'}}] )
	      in  %% Line 2545
		  try
		      %% Line 2546
		      call 'lists':'map'
			  (F, RecList)
		  of <_cor7> ->
		      _cor7
		  catch <_cor10,_cor9,_cor8> ->
		      case <_cor10,_cor9,_cor8> of
			%% Line 2548
			<'throw',{'error',Reason},_cor20> when 'true' ->
			    do  %% Line 2549
				call 'asn1ct':'warning'
				    ([100|[101|[102|[97|[117|[108|[116|[32|[118|[97|[108|[117|[101|[32|[110|[111|[116|[32|[99|[111|[109|[112|[97|[116|[105|[98|[108|[101|[32|[119|[105|[116|[104|[32|[116|[121|[112|[101|[32|[100|[101|[102|[105|[110|[105|[116|[105|[111|[110|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 2551
																																											      [Reason|[]], _cor2, %% Line 2552
																																														  [100|[101|[102|[97|[117|[108|[116|[32|[118|[97|[108|[117|[101|[32|[110|[111|[116|[32|[99|[111|[109|[112|[97|[116|[105|[98|[108|[101|[32|[119|[105|[116|[104|[32|[116|[121|[112|[101|[32|[100|[101|[102|[105|[110|[105|[116|[105|[111|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
				_cor1
			( <_cor10,_cor9,_cor8> when 'true' ->
			      primop 'raise'
				  (_cor8, _cor9)
			  -| ['compiler_generated'] )
		      end
	  %% Line 2556
	  <Bs>
	      when call 'erlang':'is_bitstring'
		    (_cor1) ->
	      %% Line 2558
	      Bs
	  ( <_cor11> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor11})
	    -| ['compiler_generated'] )
	end
'hstring_to_binary'/1 =
    %% Line 2561
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 2562
	    apply 'hstring_to_bitstring'/1
		(_cor0)
	in  %% Line 2562
	    apply 'byte_align'/1
		(_cor1)
'bstring_to_binary'/1 =
    %% Line 2564
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 2565
	    apply 'bstring_to_bitstring'/1
		(_cor0)
	in  %% Line 2565
	    apply 'byte_align'/1
		(_cor1)
'byte_align'/1 =
    %% Line 2567
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 2568
	    call 'erlang':'bit_size'
		(_cor0)
	in  %% Line 2568
	    case call 'erlang':'rem'
		     (_cor1, 8) of
	      %% Line 2569
	      <0> when 'true' ->
		  _cor0
	      %% Line 2570
	      <N> when 'true' ->
		  let <_cor2> =
		      call 'erlang':'-'
			  (8, N)
		  in  #{#<_cor0>('all',1,'binary',['unsigned'|['big']]),
			#<0>(_cor2,1,'integer',['unsigned'|['big']])}#
	    end
'hstring_to_bitstring'/1 =
    %% Line 2573
    fun (_cor0) ->
	let <_cor3> =
	    %% Line 2574
	    call 'erlang':'length'
		(_cor0)
	in  let <_cor5> =
		call 'erlang':'*'
		    (_cor3, 4)
	    in  let <_cor4> =
		    call 'erlang':'+'
			(_cor5, 7)
		in  let <_cor2> =
			call 'erlang':'bsr'
			    (_cor4, 3)
		    in  let <_cor1> =
			    primop 'bs_init_writable'
				(_cor2)
			in  %% Line 2574
			    ( letrec
				  'lbc$^0'/2 =
				      fun (_cor9,_cor8) ->
					  case <_cor9,_cor8> of
					    <[D|_cor7],_cor8> when 'true' ->
						let <_cor10> =
						    apply 'hex_to_int'/1
							(D)
						in  let <_cor8> =
							( #{#<_cor8>('all',1,'binary',[]),
							    #<_cor10>(4,1,'integer',['unsigned'|['big']])}#
							  -| ['compiler_generated','single_use'] )
						    in  apply 'lbc$^0'/2
							    (_cor7, _cor8)
					    <[],_cor8> when 'true' ->
						_cor8
					    ( <_cor9,_cor8> when 'true' ->
						  ( primop 'match_fail'
							({'function_clause',_cor9,_cor8})
						    -| [{'function_name',{'lbc$^0',2}}] )
					      -| ['compiler_generated'] )
					  end
			      in  apply 'lbc$^0'/2
				      (_cor0, _cor1)
			      -| ['list_comprehension'] )
'bstring_to_bitstring'/1 =
    %% Line 2576
    fun (_cor0) ->
	let <_cor3> =
	    %% Line 2577
	    call 'erlang':'length'
		(_cor0)
	in  let <_cor4> =
		call 'erlang':'+'
		    (_cor3, 7)
	    in  let <_cor2> =
		    call 'erlang':'bsr'
			(_cor4, 3)
		in  let <_cor1> =
			primop 'bs_init_writable'
			    (_cor2)
		    in  %% Line 2577
			( letrec
			      'lbc$^0'/2 =
				  fun (_cor9,_cor8) ->
				      case <_cor9,_cor8> of
					<[D|_cor7],_cor8> when 'true' ->
					    let <_cor10> =
						call 'erlang':'-'
						    (D, 48)
					    in  let <_cor8> =
						    ( #{#<_cor8>('all',1,'binary',[]),
							#<_cor10>(1,1,'integer',['unsigned'|['big']])}#
						      -| ['compiler_generated','single_use'] )
						in  apply 'lbc$^0'/2
							(_cor7, _cor8)
					<[],_cor8> when 'true' ->
					    _cor8
					( <_cor9,_cor8> when 'true' ->
					      ( primop 'match_fail'
						    ({'function_clause',_cor9,_cor8})
						-| [{'function_name',{'lbc$^0',2}}] )
					  -| ['compiler_generated'] )
				      end
			  in  apply 'lbc$^0'/2
				  (_cor0, _cor1)
			  -| ['list_comprehension'] )
'hex_to_int'/1 =
    %% Line 2579
    fun (_cor0) ->
	case _cor0 of
	  <D>
	      when let <_cor1> =
		    call 'erlang':'=<'
			(48, _cor0)
		in  let <_cor2> =
			call 'erlang':'=<'
			    (_cor0, 57)
		    in  call 'erlang':'and'
			    (_cor1, _cor2) ->
	      call 'erlang':'-'
		  (D, 48)
	  %% Line 2580
	  <D>
	      when let <_cor3> =
		    call 'erlang':'=<'
			(65, _cor0)
		in  let <_cor4> =
			call 'erlang':'=<'
			    (_cor0, 70)
		    in  call 'erlang':'and'
			    (_cor3, _cor4) ->
	      call 'erlang':'-'
		  (D, 55)
	  ( <_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6})
		  -| [{'function_name',{'hex_to_int',1}}] )
	    -| ['compiler_generated'] )
	end
'normalize_octetstring'/3 =
    %% Line 2588
    fun (_cor2,_cor1,_cor0) ->
	%% Line 2589
	case _cor1 of
	  %% Line 2590
	  <{'bstring',String}> when 'true' ->
	      %% Line 2591
	      apply 'bstring_to_binary'/1
		  (String)
	  %% Line 2592
	  <{'hstring',String}> when 'true' ->
	      %% Line 2593
	      apply 'hstring_to_binary'/1
		  (String)
	  %% Line 2594
	  <Rec = {'Externalvaluereference',_cor10,_cor11,_cor12}> when ( 'true'
									 -| ['compiler_generated'] ) ->
	      %% Line 2595
	      apply 'get_normalized_value'/5
		  (_cor2, _cor1, _cor0, %% Line 2596
					( 'normalize_octetstring'/3
					  -| [{'id',{0,0,'-normalize_octetstring/3-fun-0-'}}] ), %% Line 2596
												 [])
	  %% Line 2597
	  <{Name,String}>
	      when call 'erlang':'is_atom'
		    (Name) ->
	      %% Line 2598
	      apply 'normalize_octetstring'/3
		  (_cor2, String, _cor0)
	  %% Line 2599
	  <_cor13> when 'true' ->
	      %% Line 2600
	      ( case _cor2 of
		  ( <( {'state',_cor14,_cor15,_cor16,_cor17,_rec230,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25}
		       -| ['compiler_generated'] )> when 'true' ->
			%% Line 2601
			apply 'asn1_error'/3
			    (_cor2, _rec230, 'illegal_octet_string_value')
		    -| ['compiler_generated'] )
		  ( <_cor26> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'normalize_objectidentifier'/2 =
    %% Line 2604
    fun (_cor1,_cor0) ->
	%% Line 2605
	case apply 'validate_objectidentifier'/4
		 (_cor1, 'o_id', _cor0, []) of
	  <{'ok',Val}> when 'true' ->
	      %% Line 2606
	      Val
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'normalize_relative_oid'/2 =
    %% Line 2608
    fun (_cor1,_cor0) ->
	%% Line 2609
	case apply 'validate_objectidentifier'/4
		 (_cor1, 'rel_oid', _cor0, []) of
	  <{'ok',Val}> when 'true' ->
	      %% Line 2610
	      Val
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'normalize_objectdescriptor'/1 =
    %% Line 2612
    fun (_cor0) ->
	_cor0
'normalize_real'/1 =
    %% Line 2615
    fun (_cor0) ->
	_cor0
'normalize_enumerated'/3 =
    %% Line 2618
    fun (_cor2,_cor1,_cor0) ->
	%% Line 2619
	case apply 'lookup_enum_value'/3
		 (_cor2, _cor1, _cor0) of
	  <{Id,_cor7}> when 'true' ->
	      %% Line 2620
	      Id
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'lookup_enum_value'/3 =
    %% Line 2622
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,Id,{Base,Ext}> when 'true' ->
	      let <_cor3> =
		  %% Line 2624
		  call 'erlang':'++'
		      (Base, Ext)
	      in  %% Line 2624
		  apply 'lookup_enum_value'/3
		      (S, Id, _cor3)
	  %% Line 2625
	  <S,{'Externalvaluereference',_cor10,_cor11,Id},NNL> when 'true' ->
	      %% Line 2626
	      apply 'lookup_enum_value'/3
		  (S, Id, NNL)
	  %% Line 2627
	  <S,Id,NNL>
	      when call 'erlang':'is_atom'
		    (Id) ->
	      %% Line 2628
	      case call 'lists':'keyfind'
		       (Id, 1, NNL) of
		%% Line 2629
		<Ret = {_cor12,_cor13}> when 'true' ->
		    %% Line 2630
		    Ret
		%% Line 2631
		<'false'> when 'true' ->
		    %% Line 2632
		    ( case S of
			( <( {'state',_cor14,_cor15,_cor16,_cor17,_rec231,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25}
			     -| ['compiler_generated'] )> when 'true' ->
			      apply 'asn1_error'/3
				  (S, _rec231, {'undefined',Id})
			  -| ['compiler_generated'] )
			( <_cor26> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		( <_cor6> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor6})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8,_cor7})
		  -| [{'function_name',{'lookup_enum_value',3}}] )
	    -| ['compiler_generated'] )
	end
'normalize_choice'/4 =
    %% Line 2635
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <S,{'CHOICE',{C,V}},CType,NameList>
	      when call 'erlang':'is_atom'
		    (C) ->
	      let <_cor4> =
		  catch
		      %% Line 2636
		      call 'lists':'keysearch'
			  (C, 3, CType)
	      in  %% Line 2636
		  case _cor4 of
		    %% Line 2637
		    <{'value',{'ComponentType',_cor16,Name,CT,_cor17,_cor18,_cor19}}> when 'true' ->
			let <_cor5> =
			    %% Line 2638
			    apply 'normalize_value'/4
				(S, CT, {'DEFAULT',V}, %% Line 2639
						       [Name|NameList])
			in  %% Line 2638
			    {C,_cor5}
		    %% Line 2640
		    <Other> when 'true' ->
			do  %% Line 2641
			    call 'asn1ct':'warning'
				([87|[114|[111|[110|[103|[32|[102|[111|[114|[109|[97|[116|[32|[111|[102|[32|[116|[121|[112|[101|[47|[118|[97|[108|[117|[101|[32|[126|[112|[47|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Other|[V|[]]], S, %% Line 2642
																															[87|[114|[111|[110|[103|[32|[102|[111|[114|[109|[97|[116|[32|[111|[102|[32|[116|[121|[112|[101|[47|[118|[97|[108|[117|[101]]]]]]]]]]]]]]]]]]]]]]]]]])
			    %% Line 2643
			    {C,V}
		  end
	  %% Line 2645
	  <S,{'DEFAULT',ValueList},CType,NameList>
	      when call 'erlang':'is_list'
		    (ValueList) ->
	      let <_cor9> =
		  %% Line 2646
		  ( fun (_cor7) ->
			apply 'normalize_choice'/4
			    (S, _cor7, CType, NameList)
		    -| [{'id',{0,0,'-normalize_choice/4-fun-0-'}}] )
	      in  %% Line 2646
		  call 'lists':'map'
		      (_cor9, ValueList)
	  %% Line 2647
	  <S,Val = {'Externalvaluereference',_cor20,_cor21,_cor22},CType,NameList> when 'true' ->
	      %% Line 2648
	      case apply 'get_referenced_type'/2
		       (S, Val) of
		<{M,{'valuedef',_cor23,_cor24,_cor25,_cor26,V,_cor27}}> when 'true' ->
		    let <_cor11> =
			%% Line 2649
			apply 'update_state'/2
			    (S, M)
		    in  %% Line 2649
			apply 'normalize_choice'/4
			    (_cor11, {'CHOICE',V}, CType, NameList)
		( <_cor10> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor10})
		  -| ['compiler_generated'] )
	      end
	  %% Line 2651
	  <S,CV = {Name,_X_ChoiceVal},CType,NameList>
	      when %% Line 2652
		call 'erlang':'is_atom'
		    (Name) ->
	      %% Line 2654
	      apply 'normalize_choice'/4
		  (S, {'CHOICE',CV}, CType, NameList)
	  %% Line 2655
	  <_X_S,V,_X_CType,_X_NameList> when 'true' ->
	      %% Line 2656
	      call 'erlang':'exit'
		  ({'error',{'bad_choice_value',V}})
	end
'normalize_sequence'/4 =
    %% Line 2667
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <S,Value,Components,NameList>
	      when %% Line 2668
		call 'erlang':'is_tuple'
		    (Components) ->
	      let <_cor4> =
		  %% Line 2669
		  call 'erlang':'tuple_to_list'
		      (Components)
	      in  let <_cor5> =
		      %% Line 2669
		      call 'lists':'flatten'
			  (_cor4)
		  in  %% Line 2669
		      apply 'normalize_sequence'/4
			  (S, Value, _cor5, %% Line 2670
					    NameList)
	  %% Line 2671
	  <S,{Name,Value},Components,NameList>
	      when let <_cor6> =
		    %% Line 2672
		    call 'erlang':'is_atom'
			(Name)
		in  let <_cor7> =
			%% Line 2672
			call 'erlang':'is_list'
			    (Value)
		    in  %% Line 2672
			call 'erlang':'and'
			    (_cor6, _cor7) ->
	      %% Line 2673
	      apply 'normalize_sequence'/4
		  (S, Value, Components, NameList)
	  %% Line 2674
	  <S,Value,Components,NameList> when 'true' ->
	      %% Line 2675
	      apply 'normalized_record'/5
		  ('SEQUENCE', S, Value, Components, NameList)
	end
'normalize_set'/4 =
    %% Line 2677
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <S,Value,Components,NameList>
	      when call 'erlang':'is_tuple'
		    (Components) ->
	      let <_cor4> =
		  %% Line 2678
		  call 'erlang':'tuple_to_list'
		      (Components)
	      in  let <_cor5> =
		      %% Line 2678
		      call 'lists':'flatten'
			  (_cor4)
		  in  %% Line 2678
		      apply 'normalize_set'/4
			  (S, Value, _cor5, NameList)
	  %% Line 2679
	  <S,{Name,Value},Components,NameList>
	      when let <_cor6> =
		    %% Line 2680
		    call 'erlang':'is_atom'
			(Name)
		in  let <_cor7> =
			%% Line 2680
			call 'erlang':'is_list'
			    (Value)
		    in  %% Line 2680
			call 'erlang':'and'
			    (_cor6, _cor7) ->
	      %% Line 2681
	      apply 'normalized_record'/5
		  ('SET', S, Value, Components, NameList)
	  %% Line 2682
	  <S,Value,Components,NameList> when 'true' ->
	      let <_cor8> =
		  %% Line 2683
		  call 'asn1ct_gen':'list2name'
		      (NameList)
	      in  let <NewName> =
		      %% Line 2683
		      call 'erlang':'list_to_atom'
			  (_cor8)
		  in  let <_cor10> =
			  %% Line 2684
			  call 'erlang':'length'
			      (Components)
		      in  %% Line 2684
			  case apply 'is_record_normalized'/4
				   (S, NewName, Value, _cor10) of
			    %% Line 2685
			    <'true'> when 'true' ->
				%% Line 2686
				Value
			    %% Line 2687
			    <_cor17> when 'true' ->
				let <SortedVal> =
				    %% Line 2688
				    apply 'sort_value'/2
					(Components, Value)
				in  %% Line 2689
				    apply 'normalized_record'/5
					('SET', S, SortedVal, Components, NameList)
			  end
	end
'sort_value'/2 =
    %% Line 2692
    fun (_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 2693
	    ( fun (_cor2) ->
		  case _cor2 of
		    <{'ComponentType',_cor8,Cname,_cor9,_cor10,_cor11,_cor12}> when 'true' ->
			Cname
		    ( <_cor3> when 'true' ->
			  ( primop 'match_fail'
				({'function_clause',_cor3})
			    -| [{'function_name',{'-sort_value/2-fun-0-',1}}] )
		      -| ['compiler_generated'] )
		  end
	      -| [{'id',{0,0,'-sort_value/2-fun-0-'}}] )
	in  let <ComponentNames> =
		%% Line 2693
		call 'lists':'map'
		    (_cor4, _cor1)
	    in  %% Line 2695
		apply 'sort_value1'/3
		    (ComponentNames, _cor0, [])
'sort_value1'/3 =
    %% Line 2696
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <_cor7,V = {'Externalvaluereference',_cor8,_cor9,_cor10},_cor11> when 'true' ->
	      %% Line 2698
	      V
	  %% Line 2699
	  <[N|Ns],Value,Acc> when 'true' ->
	      %% Line 2700
	      case call 'lists':'keysearch'
		       (N, 1, Value) of
		%% Line 2701
		<{'value',V}> when 'true' ->
		    apply 'sort_value1'/3
			(Ns, Value, [V|Acc])
		%% Line 2702
		<_cor12> when 'true' ->
		    apply 'sort_value1'/3
			(Ns, Value, Acc)
	      end
	  %% Line 2704
	  <[],_cor13,Acc> when 'true' ->
	      %% Line 2705
	      call 'lists':'reverse'
		  (Acc)
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5,_cor4})
		  -| [{'function_name',{'sort_value1',3}}] )
	    -| ['compiler_generated'] )
	end
'sort_val_if_set'/3 =
    %% Line 2707
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <['SET'|_cor6],Val,Type> when 'true' ->
	      %% Line 2708
	      apply 'sort_value'/2
		  (Type, Val)
	  %% Line 2709
	  <_cor7,Val,_cor8> when 'true' ->
	      %% Line 2710
	      Val
	end
'normalized_record'/5 =
    %% Line 2712
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor5> =
	    %% Line 2713
	    apply 'get_record_prefix_name'/1
		(_cor3)
	in  let <_cor6> =
		%% Line 2714
		call 'asn1ct_gen':'list2name'
		    (_cor0)
	    in  let <_cor7> =
		    %% Line 2713
		    call 'lists':'concat'
			([_cor5|%% Line 2714
				[_cor6|[]]])
		in  let <NewName> =
			%% Line 2713
			call 'erlang':'list_to_atom'
			    (_cor7)
		    in  let <_cor9> =
			    %% Line 2715
			    call 'erlang':'length'
				(_cor1)
			in  %% Line 2715
			    case apply 'is_record_normalized'/4
				     (_cor3, NewName, _cor2, _cor9) of
			      %% Line 2716
			      <'true'> when 'true' ->
				  _cor2
			      %% Line 2718
			      <_cor19> when 'true' ->
				  let <NoComps> =
				      %% Line 2719
				      call 'erlang':'length'
					  (_cor1)
				  in  %% Line 2720
				      case apply 'normalize_seq_or_set'/6
					       (_cor4, _cor3, _cor2, _cor1, _cor0, []) of
					%% Line 2721
					<ListOfVals>
					    when try
						  let <_cor11> =
						      call 'erlang':'length'
							  (ListOfVals)
						  in  call 'erlang':'=='
							  (_cor11, NoComps)
					      of <Try> ->
						  Try
					      catch <T,R> ->
						  'false' ->
					    %% Line 2722
					    call 'erlang':'list_to_tuple'
						([NewName|ListOfVals])
					%% Line 2723
					<_cor20> when 'true' ->
					    %% Line 2724
					    apply 'error'/1
						({'type',{'illegal','default','value',_cor2},_cor3})
				      end
			    end
'is_record_normalized'/4 =
    %% Line 2727
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <S,Name,V = {'Externalvaluereference',_cor14,_cor15,_cor16},NumComps> when 'true' ->
	      %% Line 2728
	      case apply 'get_referenced_type'/2
		       (S, V) of
		%% Line 2729
		<{_X_M,{'valuedef',_cor17,_cor18,_cor19,_X_T1,V2,_cor20}}> when 'true' ->
		    %% Line 2730
		    apply 'is_record_normalized'/4
			(S, Name, V2, NumComps)
		%% Line 2731
		<_cor21> when 'true' ->
		    'false'
	      end
	  %% Line 2733
	  <_X_S,Name,Value,NumComps>
	      when call 'erlang':'is_tuple'
		    (Value) ->
	      let <_cor7> =
		  %% Line 2734
		  call 'erlang':'tuple_size'
		      (Value)
	      in  let <_cor6> =
		      %% Line 2734
		      call 'erlang':'+'
			  (NumComps, 1)
		  in  %% Line 2734
		      ( case <> of
			  ( <>
				when call 'erlang':'=:='
				      (_cor7,
				       _cor6) ->
				let <_cor8> =
				    call 'erlang':'element'
					(1, Value)
				in  call 'erlang':'=:='
					(_cor8, Name)
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	  %% Line 2735
	  <_cor22,_cor23,_cor24,_cor25> when 'true' ->
	      %% Line 2736
	      'false'
	end
'normalize_seq_or_set'/6 =
    %% Line 2738
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <SorS,S,[{Cname,V}|Vs],%% Line 2739
				 [{'ComponentType',_cor30,_cor31,TS,_cor32,_cor33,_cor34}|Cs],%% Line 2740
											      NameList,%% Line 2740
												       Acc>
	      when call 'erlang':'=:='
		    (_cor31,
		     %% Line 2739
		     Cname) ->
	      %% Line 2742
	      ( case TS of
		  ( <( {'type',_cor35,_rec232,_cor36,_cor37,_cor38}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor9> =
			    case _rec232 of
			      %% Line 2743
			      <{'Externaltypereference',_cor40,_cor41,TName}> when 'true' ->
				  %% Line 2744
				  [TName|[]]
			      %% Line 2745
			      <_cor42> when 'true' ->
				  [Cname|NameList]
			    end
			in  let <NVal> =
				%% Line 2747
				apply 'normalize_value'/4
				    (S, TS, {'DEFAULT',V}, _cor9)
			    in  %% Line 2748
				apply 'normalize_seq_or_set'/6
				    (SorS, S, Vs, Cs, NameList, [NVal|Acc])
		    -| ['compiler_generated'] )
		  ( <_cor39> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','type'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 2749
	  <SorS,S,Values = [{_X_Cname1,_X_V}|_X_Vs],%% Line 2750
						    [{'ComponentType',_cor43,_cor44,_cor45,'OPTIONAL',_cor46,_cor47}|Cs],%% Line 2751
															 NameList,%% Line 2751
																  Acc> when 'true' ->
	      %% Line 2752
	      apply 'normalize_seq_or_set'/6
		  (SorS, S, Values, Cs, NameList, ['asn1_NOVALUE'|Acc])
	  %% Line 2753
	  <SorS,S,Values = [{_X_Cname1,_X_V}|_X_Vs],%% Line 2754
						    [{'ComponentType',_cor48,Cname2,TS,%% Line 2755
										       {'DEFAULT',Value},_cor49,_cor50}|%% Line 2755
															Cs],%% Line 2756
															    NameList,%% Line 2756
																     Acc> when 'true' ->
	      %% Line 2758
	      ( case TS of
		  ( <( {'type',_cor51,_rec233,_cor52,_cor53,_cor54}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor15> =
			    case _rec233 of
			      %% Line 2759
			      <{'Externaltypereference',_cor56,_cor57,TName}> when 'true' ->
				  %% Line 2760
				  [TName|[]]
			      %% Line 2761
			      <_cor58> when 'true' ->
				  [Cname2|NameList]
			    end
			in  let <NVal> =
				%% Line 2763
				apply 'normalize_value'/4
				    (S, TS, {'DEFAULT',Value}, _cor15)
			    in  %% Line 2764
				apply 'normalize_seq_or_set'/6
				    (SorS, S, Values, Cs, NameList, [NVal|Acc])
		    -| ['compiler_generated'] )
		  ( <_cor55> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','type'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 2765
	  <_X_SorS,_X_S,[],[],_cor59,Acc> when 'true' ->
	      %% Line 2766
	      call 'lists':'reverse'
		  (Acc)
	  %% Line 2770
	  <SorS,S,[],%% Line 2771
		     [{'ComponentType',_cor60,Name,TS,%% Line 2772
						      {'DEFAULT',Value},_cor61,_cor62}|%% Line 2772
										       Cs],%% Line 2773
											   NameList,%% Line 2773
												    Acc> when 'true' ->
	      %% Line 2775
	      ( case TS of
		  ( <( {'type',_cor63,_rec234,_cor64,_cor65,_cor66}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor21> =
			    case _rec234 of
			      %% Line 2776
			      <{'Externaltypereference',_cor68,_cor69,TName}> when 'true' ->
				  %% Line 2777
				  [TName|[]]
			      %% Line 2778
			      <_cor70> when 'true' ->
				  [Name|NameList]
			    end
			in  let <NVal> =
				%% Line 2780
				apply 'normalize_value'/4
				    (S, TS, {'DEFAULT',Value}, _cor21)
			    in  %% Line 2781
				apply 'normalize_seq_or_set'/6
				    (SorS, S, [], Cs, NameList, [NVal|Acc])
		    -| ['compiler_generated'] )
		  ( <_cor67> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','type'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 2782
	  <SorS,S,[],[{'ComponentType',_cor71,_cor72,_cor73,'OPTIONAL',_cor74,_cor75}|Cs],%% Line 2783
											  NameList,%% Line 2783
												   Acc> when 'true' ->
	      %% Line 2784
	      apply 'normalize_seq_or_set'/6
		  (SorS, S, [], Cs, NameList, ['asn1_NOVALUE'|Acc])
	  %% Line 2785
	  <SorS,S,Value = {'Externalvaluereference',_cor76,_cor77,_cor78},%% Line 2786
									  Cs,%% Line 2786
									     NameList,%% Line 2786
										      Acc> when 'true' ->
	      %% Line 2787
	      apply 'get_normalized_value'/5
		  (S, Value, Cs, ( 'normalize_seq_or_set'/6
				   -| [{'id',{0,0,'-normalize_seq_or_set/6-fun-0-'}}] ), %% Line 2788
											 [SorS|[NameList|[Acc|[]]]])
	  %% Line 2789
	  <_X_SorS,S,V,_cor79,_cor80,_cor81> when 'true' ->
	      %% Line 2790
	      apply 'error'/1
		  ({'type',{'illegal','default','value',V},S})
	end
'normalize_seqof'/4 =
    %% Line 2792
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 2793
	apply 'normalize_s_of'/5
	    ('SEQUENCE OF', _cor3, _cor2, _cor1, _cor0)
'normalize_setof'/4 =
    %% Line 2795
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 2796
	apply 'normalize_s_of'/5
	    ('SET OF', _cor3, _cor2, _cor1, _cor0)
'normalize_s_of'/5 =
    %% Line 2798
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <SorS,S,Value,Type,NameList>
	      when call 'erlang':'is_list'
		    (Value) ->
	      let <_cor7> =
		  %% Line 2799
		  ( fun (_cor5) ->
			{'DEFAULT',_cor5}
		    -| [{'id',{0,0,'-normalize_s_of/5-fun-0-'}}] )
	      in  let <DefValueList> =
		      %% Line 2799
		      call 'lists':'map'
			  (_cor7, Value)
		  in  let <Suffix> =
			  %% Line 2800
			  call 'asn1ct_gen':'constructed_suffix'
			      (SorS, Type)
		      in  %% Line 2801
			  ( case Type of
			      ( <( {'type',_cor28,_rec235,_cor29,_cor30,_cor31}
				   -| ['compiler_generated'] )> when 'true' ->
				    let <InnerType> =
					%% Line 2802
					call 'asn1ct_gen':'get_inner'
					    (_rec235)
				    in  let <WhatKind> =
					    %% Line 2803
					    call 'asn1ct_gen':'type'
						(InnerType)
					in  let <_cor16> =
						%% Line 2805
						case WhatKind of
						  %% Line 2806
						  <{'constructed','bif'}> when 'true' ->
						      %% Line 2807
						      [Suffix|NameList]
						  %% Line 2808
						  <{'Externaltypereference',_cor33,_cor34,Name}> when 'true' ->
						      %% Line 2809
						      [Name|[]]
						  %% Line 2810
						  <_cor35> when 'true' ->
						      []
						end
					    in  let <NormFun> =
						    %% Line 2812
						    ( fun (_cor18) ->
							  apply 'normalize_value'/4
							      (S, Type, _cor18, _cor16)
						      -| [{'id',{0,0,'-normalize_s_of/5-fun-1-'}}] )
						in  let <_cor21> =
							catch
							    %% Line 2814
							    call 'lists':'map'
								(NormFun, DefValueList)
						    in  %% Line 2814
							case _cor21 of
							  %% Line 2815
							  <List>
							      when call 'erlang':'is_list'
								    (_cor21) ->
							      %% Line 2816
							      List
							  %% Line 2817
							  <_cor36> when 'true' ->
							      do  %% Line 2818
								  call 'asn1ct':'warning'
								      ([126|[112|[32|[99|[111|[117|[108|[100|[32|[110|[111|[116|[32|[104|[97|[110|[100|[108|[101|[32|[118|[97|[108|[117|[101|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [SorS|[Value|[]]], S, %% Line 2819
																																	  [99|[111|[117|[108|[100|[32|[110|[111|[116|[32|[104|[97|[110|[100|[108|[101|[32|[118|[97|[108|[117|[101]]]]]]]]]]]]]]]]]]]]]])
								  %% Line 2820
								  Value
							end
				-| ['compiler_generated'] )
			      ( <_cor32> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','type'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
	  %% Line 2822
	  <SorS,S,Value = {'Externalvaluereference',_cor37,_cor38,_cor39},Type,NameList> when %% Line 2823
											      ( 'true'
												-| ['compiler_generated'] ) ->
	      %% Line 2824
	      apply 'get_normalized_value'/5
		  (S, Value, Type, ( 'normalize_s_of'/5
				     -| [{'id',{0,0,'-normalize_s_of/5-fun-2-'}}] ), %% Line 2825
										     [SorS|[NameList|[]]])
	  ( <_cor27,_cor26,_cor25,_cor24,_cor23> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor27,_cor26,_cor25,_cor24,_cor23})
		  -| [{'function_name',{'normalize_s_of',5}}] )
	    -| ['compiler_generated'] )
	end
'normalize_restrictedstring'/3 =
    %% Line 2839
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,[H|T],CType>
	      when let <_cor3> =
		    call 'erlang':'is_list'
			(H)
		in  let <_cor4> =
			call 'erlang':'is_tuple'
			    (H)
		    in  call 'erlang':'or'
			    (_cor3, _cor4) ->
	      let <_cor5> =
		  %% Line 2840
		  apply 'normalize_restrictedstring'/3
		      (S, H, CType)
	      in  let <_cor6> =
		      %% Line 2840
		      apply 'normalize_restrictedstring'/3
			  (S, T, CType)
		  in  %% Line 2840
		      [_cor5|_cor6]
	  %% Line 2842
	  <_X_S,CString,_cor10>
	      when call 'erlang':'is_list'
		    (CString) ->
	      %% Line 2843
	      CString
	  %% Line 2845
	  <S,ERef = {'Externalvaluereference',_cor11,_cor12,_cor13},CType> when ( 'true'
										  -| ['compiler_generated'] ) ->
	      %% Line 2846
	      apply 'get_normalized_value'/5
		  (S, ERef, CType, %% Line 2847
				   ( 'normalize_restrictedstring'/3
				     -| [{'id',{0,0,'-normalize_restrictedstring/3-fun-0-'}}] ), %% Line 2847
												 [])
	  %% Line 2849
	  <S,{Name,Val},CType>
	      when call 'erlang':'is_atom'
		    (Name) ->
	      %% Line 2850
	      apply 'normalize_restrictedstring'/3
		  (S, Val, CType)
	  ( <_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8,_cor7})
		  -| [{'function_name',{'normalize_restrictedstring',3}}] )
	    -| ['compiler_generated'] )
	end
'normalize_objectclassfieldvalue'/3 =
    %% Line 2852
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,{'opentypefieldvalue',Type,Value},NameList> when 'true' ->
	      %% Line 2858
	      apply 'normalize_value'/4
		  (S, Type, Value, NameList)
	  %% Line 2859
	  <_X_S,Other,_X_NameList> when 'true' ->
	      %% Line 2862
	      Other
	end
'get_normalized_value'/5 =
    %% Line 2864
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor5> =
	    catch
		%% Line 2865
		apply 'get_referenced_type'/2
		    (_cor4, _cor3)
	in  %% Line 2865
	    case _cor5 of
	      %% Line 2866
	      <{ExtM,_X_VDef = {'valuedef',_cor16,_cor17,_cor18,_X_T1,V,_cor19}}> when 'true' ->
		  let <V2> =
		      %% Line 2868
		      apply 'sort_val_if_set'/3
			  (_cor0, V, _cor2)
		  in  let <_cor7> =
			  %% Line 2869
			  apply 'update_state'/2
			      (_cor4, ExtM)
		      in  %% Line 2869
			  apply 'call_Func'/5
			      (_cor7, V2, _cor2, _cor1, _cor0)
	      %% Line 2870
	      <{'error',_cor20}> when 'true' ->
		  do  %% Line 2871
		      call 'asn1ct':'warning'
			  ([100|[101|[102|[97|[117|[108|[116|[32|[118|[97|[108|[117|[101|[32|[110|[111|[116|[32|[99|[111|[109|[112|[97|[114|[97|[98|[108|[101|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [_cor3|[]], _cor4)
		      _cor3
	      %% Line 2873
	      <{ExtM,NewVal}> when 'true' ->
		  let <V2> =
		      %% Line 2874
		      apply 'sort_val_if_set'/3
			  (_cor0, NewVal, _cor2)
		  in  let <_cor9> =
			  %% Line 2875
			  apply 'update_state'/2
			      (_cor4, ExtM)
		      in  %% Line 2875
			  apply 'call_Func'/5
			      (_cor9, V2, _cor2, _cor1, _cor0)
	      %% Line 2876
	      <_cor21> when 'true' ->
		  do  %% Line 2877
		      call 'asn1ct':'warning'
			  ([100|[101|[102|[97|[117|[108|[116|[32|[118|[97|[108|[117|[101|[32|[110|[111|[116|[32|[99|[111|[109|[112|[97|[114|[97|[98|[108|[101|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [_cor3|[]], _cor4, %% Line 2878
																													   [100|[101|[102|[97|[117|[108|[116|[32|[118|[97|[108|[117|[101|[32|[110|[111|[116|[32|[99|[111|[109|[112|[97|[114|[97|[98|[108|[101]]]]]]]]]]]]]]]]]]]]]]]]]]]])
		      _cor3
	    end
'call_Func'/5 =
    %% Line 2882
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 2883
	case _cor0 of
	  %% Line 2884
	  <[]> when 'true' ->
	      %% Line 2885
	      apply _cor1
		  (_cor4, _cor3, _cor2)
	  %% Line 2886
	  <[LastArg|[]]> when 'true' ->
	      %% Line 2887
	      apply _cor1
		  (_cor4, _cor3, _cor2, LastArg)
	  %% Line 2888
	  <[Arg1|[LastArg1|[]]]> when 'true' ->
	      %% Line 2889
	      apply _cor1
		  (Arg1, _cor4, _cor3, _cor2, LastArg1)
	  %% Line 2890
	  <[Arg1|[LastArg1|[LastArg2|[]]]]> when 'true' ->
	      %% Line 2891
	      apply _cor1
		  (Arg1, _cor4, _cor3, _cor2, LastArg1, LastArg2)
	  ( <_cor5> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor5})
	    -| ['compiler_generated'] )
	end
'get_canonic_type'/3 =
    %% Line 2895
    fun (_cor2,_cor1,_cor0) ->
	%% Line 2897
	( case _cor1 of
	    ( <( {'type',_cor17,_rec236,_cor18,_cor19,_cor20}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_cor11> =
		      case _rec236 of
			%% Line 2898
			<Name>
			    when call 'erlang':'is_atom'
				  (_rec236) ->
			    %% Line 2899
			    {Name,_cor1,_cor0}
			%% Line 2900
			<Ref = {'Externaltypereference',_cor22,_cor23,_cor24}> when ( 'true'
										      -| ['compiler_generated'] ) ->
			    %% Line 2901
			    case %% Line 2902
				 apply 'get_referenced_type'/2
				     (_cor2, Ref) of
			      <{_cor25,{'typedef',_cor26,_cor27,Name,RefedType}}> when 'true' ->
				  %% Line 2903
				  apply 'get_canonic_type'/3
				      (_cor2, RefedType, [Name|[]])
			      ( <_cor5> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_cor5})
				-| ['compiler_generated'] )
			    end
			%% Line 2904
			<{Name,T}>
			    when call 'erlang':'is_atom'
				  (Name) ->
			    %% Line 2905
			    {Name,T,_cor0}
			%% Line 2906
			<Seq = {'SEQUENCE',_cor28,_cor29,_cor30,_cor31}> when ( 'true'
										-| ['compiler_generated'] ) ->
			    %% Line 2907
			    {'SEQUENCE',_cor31,_cor0}
			%% Line 2908
			<Set = {'SET',_cor36,_cor37,_cor38,_cor39}> when ( 'true'
									   -| ['compiler_generated'] ) ->
			    %% Line 2909
			    {'SET',_cor39,_cor0}
			%% Line 2910
			<{'ObjectClassFieldType',_cor44,_cor45,_cor46,T}> when 'true' ->
			    %% Line 2911
			    {'ASN1_OPEN_TYPE',T,_cor0}
			( <_cor10> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor10})
			  -| ['compiler_generated'] )
		      end
		  in  case _cor11 of
			<{InnerType,NewType,NewNameList}> when 'true' ->
			    let <_cor13> =
				%% Line 2913
				call 'asn1ct_gen':'unify_if_string'
				    (InnerType)
			    in  %% Line 2913
				{_cor13,NewType,NewNameList}
			( <_cor12> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor12})
			  -| ['compiler_generated'] )
		      end
	      -| ['compiler_generated'] )
	    ( <_cor21> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','type'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'check_ptype'/3 =
    %% Line 2917
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,Type,Ts = {'type',_cor33,_cor34,_cor35,_cor36,_cor37}> when ( 'true'
									   -| ['compiler_generated'] ) ->
	      let <_cor23> =
		  %% Line 2922
		  case _cor34 of
		    %% Line 2923
		    <Seq = {'SEQUENCE',_cor43,_cor44,_cor45,_cor46}> when ( 'true'
									    -| ['compiler_generated'] ) ->
			let <Components> =
			    %% Line 2924
			    apply 'expand_components'/2
				(S, _cor46)
			in  let <_rec241> =
				%% Line 2925
				apply 'get_datastr_name'/1
				    (Type)
			    in  let <_cor11> =
				    %% Line 2926
				    call 'erlang':'setelement'
					(5, Seq, Components)
				in  let <_cor13> =
					%% Line 2925
					call 'erlang':'setelement'
					    (2, _cor11, _rec241)
				    in  %% Line 2925
					{'newt',_cor13,'unchanged','unchanged','no'}
		    %% Line 2927
		    <Set = {'SET',_cor56,_cor57,_cor58,_cor59}> when ( 'true'
								       -| ['compiler_generated'] ) ->
			let <Components> =
			    %% Line 2928
			    apply 'expand_components'/2
				(S, _cor59)
			in  let <_rec244> =
				%% Line 2929
				apply 'get_datastr_name'/1
				    (Type)
			    in  let <_cor19> =
				    %% Line 2930
				    call 'erlang':'setelement'
					(5, Set, Components)
				in  let <_cor21> =
					%% Line 2929
					call 'erlang':'setelement'
					    (2, _cor19, _rec244)
				    in  %% Line 2929
					{'newt',_cor21,'unchanged','unchanged','no'}
		    %% Line 2931
		    <_X_Other> when 'true' ->
			%% Line 2932
			{'newt','unchanged','unchanged','unchanged','no'}
		  end
	      in  %% Line 2934
		  case _cor23 of
		    %% Line 2935
		    <{'newt','unchanged',_cor69,_cor70,_cor71}> when 'true' ->
			%% Line 2936
			Ts
		    %% Line 2937
		    <{'newt',TDef,_cor72,_cor73,_cor74}> when 'true' ->
			%% Line 2938
			call 'erlang':'setelement'
			    (3, Ts, TDef)
		    ( <_cor27> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor27})
		      -| ['compiler_generated'] )
		  end
	  %% Line 2942
	  <_X_S,_X_PTDef,Ts = {'objectclass',_cor81,_cor82}> when ( 'true'
								    -| ['compiler_generated'] ) ->
	      %% Line 2943
	      call 'erlang':'throw'
		  ({'asn1_param_class',Ts})
	  ( <_cor32,_cor31,_cor30> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor32,_cor31,_cor30})
		  -| [{'function_name',{'check_ptype',3}}] )
	    -| ['compiler_generated'] )
	end
'check_type'/3 =
    %% Line 2948
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <_X_S,Type = {'typedef',_cor521,_cor522,_cor523,_cor524},Ts>
	      when %% Line 2949
		call 'erlang':'=:='
		    (_cor521,
		     'true') ->
	      %% Line 2950
	      Ts
	  %% Line 2951
	  <_X_S,Type = {'typedef',_cor525,_cor526,_cor527,_cor528},Ts>
	      when %% Line 2952
		call 'erlang':'=:='
		    (_cor525,
		     'idle') ->
	      %% Line 2953
	      Ts
	  %% Line 2954
	  <S = {'state',_cor529,_cor530,_cor531,_cor532,_cor533,_cor534,_cor535,_cor536,_cor537,_cor538,TopName,_cor539,_cor540},Type,Ts = {'type',_cor541,_cor542,_cor543,_cor544,_cor545}> when ( 'true'
																								    -| ['compiler_generated'] ) ->
	      let <Def,Tag,Constr,IsInlined> =
		  %% Line 2956
		  case apply 'match_parameters'/3
			   (S, _cor542, _cor536) of
		    %% Line 2957
		    <{'type',PTag,Dtmp,_X_Ctmp,_cor564,Inl}> when 'true' ->
			let <_cor25> =
			    %% Line 2958
			    apply 'merge_tags'/2
				(_cor541, PTag)
			in  %% Line 2958
			    <Dtmp,_cor25,_cor543,Inl>
		    %% Line 2959
		    <{'typedef',_cor575,_cor576,_cor577,{'type',PTag,Dtmp,_cor578,_cor579,Inl}}> when 'true' ->
			let <_cor30> =
			    %% Line 2960
			    apply 'merge_tags'/2
				(_cor541, PTag)
			in  %% Line 2960
			    <Dtmp,_cor30,_cor543,Inl>
		    %% Line 2961
		    <Dtmp> when 'true' ->
			%% Line 2962
			<Dtmp,_cor541,_cor543,_cor545>
		  end
	      in  let <TempNewDef> =
		      %% Line 2964
		      {'newt',Def,Tag,Constr,%% Line 2965
					     IsInlined}
		  in  let <TestFun> =
			  %% Line 2967
			  ( fun (_cor47) ->
				let <MaybeChoice> =
				    %% Line 2968
				    apply 'get_non_typedef'/2
					(S, _cor47)
				in  let <_cor45> =
					catch
					    %% Line 2969
					    ( case MaybeChoice of
						( <( {'typedef',_cor605,_cor606,_cor607,_rec257}
						     -| ['compiler_generated'] )> when 'true' ->
						      ( case _rec257 of
							  ( <( {'type',_cor609,_rec256,_cor610,_cor611,_cor612}
							       -| ['compiler_generated'] )> when 'true' ->
								_rec256
							    -| ['compiler_generated'] )
							  ( <_cor613> when 'true' ->
								( call ( 'erlang'
									 -| ['compiler_generated'] ):( 'error'
												       -| ['compiler_generated'] )
								      (( {'badrecord','type'}
									 -| ['compiler_generated'] ))
								  -| ['compiler_generated'] )
							    -| ['compiler_generated'] )
							end
							-| ['compiler_generated'] )
						  -| ['compiler_generated'] )
						( <_cor608> when 'true' ->
						      ( call ( 'erlang'
							       -| ['compiler_generated'] ):( 'error'
											     -| ['compiler_generated'] )
							    (( {'badrecord','typedef'}
							       -| ['compiler_generated'] ))
							-| ['compiler_generated'] )
						  -| ['compiler_generated'] )
					      end
					      -| ['compiler_generated'] )
				    in  %% Line 2969
					case _cor45 of
					  %% Line 2970
					  <{'CHOICE',_cor614}> when 'true' ->
					      %% Line 2971
					      apply 'maybe_illicit_implicit_tag'/2
						  ('choice', Tag)
					  %% Line 2972
					  <'ANY'> when 'true' ->
					      %% Line 2973
					      apply 'maybe_illicit_implicit_tag'/2
						  ('open_type', Tag)
					  %% Line 2974
					  <'ANY DEFINED BY'> when 'true' ->
					      %% Line 2975
					      apply 'maybe_illicit_implicit_tag'/2
						  ('open_type', Tag)
					  %% Line 2976
					  <'ASN1_OPEN_TYPE'> when 'true' ->
					      %% Line 2977
					      apply 'maybe_illicit_implicit_tag'/2
						  ('open_type', Tag)
					  %% Line 2978
					  <_cor615> when 'true' ->
					      %% Line 2979
					      Tag
					end
			    -| [{'id',{0,0,'-check_type/3-fun-0-'}}] )
		      in  let <_cor506> =
			      %% Line 2983
			      case Def of
				%% Line 2984
				<Ext = {'Externaltypereference',_cor616,_cor617,_cor618}> when ( 'true'
												 -| ['compiler_generated'] ) ->
				    let <RefMod,RefTypeDef,IsParamDef> =
					%% Line 2986
					case apply 'get_referenced_type'/2
						 (S, Ext) of
					  %% Line 2987
					  <{'undefined',TmpTDef}> when 'true' ->
					      let <_cor50> =
						  %% Line 2988
						  call 'erlang':'get'
						      ('top_module')
					      in  <_cor50,%% Line 2988
							  TmpTDef,%% Line 2988
								  'true'>
					  %% Line 2989
					  <{TmpRefMod,TmpRefDef}> when 'true' ->
					      %% Line 2990
					      <TmpRefMod,TmpRefDef,'false'>
					  ( <_cor51> when 'true' ->
						primop 'match_fail'
						    ({'case_clause',_cor51})
					    -| ['compiler_generated'] )
					end
				    in  do  %% Line 2992
					    case apply 'is_class'/2
						     (S, RefTypeDef) of
					      %% Line 2993
					      <'true'> when 'true' ->
						  call 'erlang':'throw'
						      ({'asn1_class',RefTypeDef})
					      %% Line 2994
					      <_cor619> when 'true' ->
						  'ok'
					    end
					    let <Ct> =
						%% Line 2996
						apply TestFun
						    (Ext)
					    in  %% Line 2998
						( case RefTypeDef of
						    ( <( {'typedef',_rec258,_cor620,_cor621,_cor622}
							 -| ['compiler_generated'] )> when 'true' ->
							  let <RefType,ExtRef> =
							      case _rec258 of
								%% Line 2999
								<'true'> when 'true' ->
								    %% Line 3000
								    <_cor622,Ext>
								%% Line 3001
								<_cor628> when 'true' ->
								    let <_cor62> =
									%% Line 3003
									call 'erlang':'setelement'
									    (2, RefTypeDef, 'idle')
								    in  let <_cor64> =
									    %% Line 3005
									    apply 'get_datastr_name'/1
										(_cor62)
									in  do  %% Line 3004
										call 'asn1_db':'dbput'
										    (RefMod, _cor64, _cor62)
										let <_rec261> =
										    %% Line 3008
										    apply 'load_asn1_module'/2
											(S, RefMod)
										in  let <_rec262> =
											%% Line 3009
											apply 'get_datastr_name'/1
											    (_cor62)
										    in  let <_cor68> =
											    %% Line 3011
											    call 'erlang':'setelement'
												(12, S, [])
											in  let <_cor69> =
												%% Line 3011
												call 'erlang':'setelement'
												    (11, _cor68, [])
											    in  let <_cor70> =
												    %% Line 3009
												    call 'erlang':'setelement'
													(5, _cor69, _rec262)
												in  let <_cor71> =
													%% Line 3010
													call 'erlang':'setelement'
													    (4, _cor70, _cor62)
												    in  let <_cor72> =
													    %% Line 3007
													    call 'erlang':'setelement'
														(3, _cor71, RefMod)
													in  let <_cor74> =
														%% Line 3008
														call 'erlang':'setelement'
														    (2, _cor72, _rec261)
													    in  let <RefType1> =
														    %% Line 3013
														    apply 'check_type'/3
															(_cor74, RefTypeDef, _cor622)
														in  let <_cor80> =
															%% Line 3016
															call 'erlang':'setelement'
															    (5, RefTypeDef, RefType1)
														    in  let <_cor82> =
															    %% Line 3016
															    call 'erlang':'setelement'
																(2, _cor80, 'true')
															in  let <TmpName> =
																%% Line 3017
																apply 'get_datastr_name'/1
																    (_cor82)
															    in  do  %% Line 3018
																    call 'asn1_db':'dbput'
																	(RefMod, %% Line 3019
																		 TmpName, _cor82)
																    let <_cor85> =
																	%% Line 3021
																	call 'erlang':'get'
																	    ('top_module')
																    in  let <_cor86> =
																	    %% Line 3021
																	    call 'erlang':'=='
																		(RefMod, _cor85)
																	in  do  %% Line 3021
																		case <_cor86,IsParamDef> of
																		  %% Line 3022
																		  <'true','true'> when 'true' ->
																		      let <Key> = {%% Line 3023
																			   TmpName,%% Line 3024
																				   'type',_cor82}
																		      in  %% Line 3026
																			  call 'asn1ct_gen':'insert_once'
																			      ('parameterized_objects', %% Line 3027
																							Key)
																		  %% Line 3028
																		  <_fol1859,_fol1860> when 'true' ->
																		      'ok'
																		end
																		%% Line 3030
																		<RefType1,{'Externaltypereference','undefined',RefMod,%% Line 3031
																								      TmpName}>
							      end
							  in  %% Line 3034
							      ( case RefType of
								  ( <( {'type',_cor658,_rec266,_cor659,_cor660,_cor661}
								       -| ['compiler_generated'] )> when 'true' ->
									let <_cor94> =
									    call 'asn1ct_gen':'get_inner'
										(_rec266)
									in  case call 'asn1ct_gen':'prim_bif'
										     (_cor94) of
									      %% Line 3035
									      <'true'> when 'true' ->
										  let <_rec267> =
										      %% Line 3037
										      {'typedef','false','undefined','undefined',RefType}
										  in  let <_cor98> =
											  %% Line 3037
											  call 'erlang':'setelement'
											      (4, S, _rec267)
										      in  let <_cor102> =
											      %% Line 3040
											      apply 'check_constraints'/2
												  (_cor98, Constr)
											  in  let <_cor103> =
												  %% Line 3040
												  call 'erlang':'++'
												      (_cor102, _cor659)
											      in  let <NewC> =
												      %% Line 3039
												      apply 'constraint_merge'/2
													  (_cor98, _cor103)
												  in  let <_rec271> =
													  %% Line 3044
													  apply 'merge_tags'/2
													      (Ct, _cor658)
												      in  %% Line 3045
													  case TempNewDef of
													    <{'newt',_rec273,_rec274,_rec275,_rec276}> when 'true' ->
														{'newt',_rec266,_rec271,NewC,_rec276}
													    ( <_cor692> when 'true' ->
														  ( call ( 'erlang'
															   -| ['compiler_generated'] ):( 'error'
																			 -| ['compiler_generated'] )
															(( {'badrecord','newt'}
															   -| ['compiler_generated'] ))
														    -| ['compiler_generated'] )
													      -| ['compiler_generated'] )
													  end
									      %% Line 3046
									      <_cor693> when 'true' ->
										  let <_rec279> =
										      %% Line 3049
										      apply 'merged_mod'/3
											  (S, RefMod, Ext)
										  in  %% Line 3049
										      case ExtRef of
											<{'Externaltypereference',_cor694,_cor695,_cor696}> when 'true' ->
											    let <_cor116> =
												call 'erlang':'setelement'
												    (3, ExtRef, _rec279)
											    in  let <_rec281> =
												    %% Line 3051
												    apply 'check_externaltypereference'/2
													(S, _cor116)
												in  let <_cor124> =
													%% Line 3052
													case _cor535 of
													  %% Line 3053
													  <'ber'> when 'true' ->
													      %% Line 3054
													      apply 'merge_tags'/2
														  (Ct, _cor658)
													  %% Line 3055
													  <_cor716> when 'true' ->
													      %% Line 3056
													      Ct
													end
												    in  %% Line 3051
													case TempNewDef of
													  <{'newt',_cor717,_cor718,_cor719,_cor720}> when 'true' ->
													      let <_cor127> =
														  %% Line 3052
														  call 'erlang':'setelement'
														      (3, TempNewDef, _cor124)
													      in  call 'erlang':'setelement'
														      (2, _cor127, _rec281)
													  ( <_cor721> when 'true' ->
														( call ( 'erlang'
															 -| ['compiler_generated'] ):( 'error'
																		       -| ['compiler_generated'] )
														      (( {'badrecord','newt'}
															 -| ['compiler_generated'] ))
														  -| ['compiler_generated'] )
													    -| ['compiler_generated'] )
													end
											( <_cor697> when 'true' ->
											      ( call ( 'erlang'
												       -| ['compiler_generated'] ):( 'error'
																     -| ['compiler_generated'] )
												    (( {'badrecord','Externaltypereference'}
												       -| ['compiler_generated'] ))
												-| ['compiler_generated'] )
											  -| ['compiler_generated'] )
										      end
									    end
								    -| ['compiler_generated'] )
								  ( <_cor662> when 'true' ->
									( call ( 'erlang'
										 -| ['compiler_generated'] ):( 'error'
													       -| ['compiler_generated'] )
									      (( {'badrecord','type'}
										 -| ['compiler_generated'] ))
									  -| ['compiler_generated'] )
								    -| ['compiler_generated'] )
								end
								-| ['compiler_generated'] )
						      -| ['compiler_generated'] )
						    ( <_cor623> when 'true' ->
							  ( call ( 'erlang'
								   -| ['compiler_generated'] ):( 'error'
												 -| ['compiler_generated'] )
								(( {'badrecord','typedef'}
								   -| ['compiler_generated'] ))
							    -| ['compiler_generated'] )
						      -| ['compiler_generated'] )
						  end
						  -| ['compiler_generated'] )
				%% Line 3060
				<'ANY'> when 'true' ->
				    let <Ct> =
					%% Line 3061
					apply 'maybe_illicit_implicit_tag'/2
					    ('open_type', Tag)
				    in  %% Line 3062
					case TempNewDef of
					  <{'newt',_cor722,_cor723,_cor724,_cor725}> when 'true' ->
					      let <_cor132> =
						  call 'erlang':'setelement'
						      (3, TempNewDef, Ct)
					      in  call 'erlang':'setelement'
						      (2, _cor132, 'ASN1_OPEN_TYPE')
					  ( <_cor726> when 'true' ->
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'error'
										       -| ['compiler_generated'] )
						      (( {'badrecord','newt'}
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
				%% Line 3063
				<{'ANY_DEFINED_BY',_cor727}> when 'true' ->
				    let <Ct> =
					%% Line 3064
					apply 'maybe_illicit_implicit_tag'/2
					    ('open_type', Tag)
				    in  %% Line 3065
					case TempNewDef of
					  <{'newt',_cor728,_cor729,_cor730,_cor731}> when 'true' ->
					      let <_cor136> =
						  call 'erlang':'setelement'
						      (3, TempNewDef, Ct)
					      in  call 'erlang':'setelement'
						      (2, _cor136, 'ASN1_OPEN_TYPE')
					  ( <_cor732> when 'true' ->
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'error'
										       -| ['compiler_generated'] )
						      (( {'badrecord','newt'}
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
				%% Line 3066
				<'INTEGER'> when 'true' ->
				    let <_cor141> =
					%% Line 3068
					case _cor535 of
					  <'ber'> when 'true' ->
					      {'tag','UNIVERSAL',2,'IMPLICIT',0}
					  <_cor746> when 'true' ->
					      []
					end
				    in  let <_rec288> =
					    %% Line 3068
					    apply 'merge_tags'/2
						(Tag, _cor141)
					in  %% Line 3067
					    case TempNewDef of
					      <{'newt',_cor747,_cor748,_cor749,_cor750}> when 'true' ->
						  call 'erlang':'setelement'
						      (3, TempNewDef, _rec288)
					      ( <_cor751> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {'badrecord','newt'}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
				%% Line 3070
				<{'INTEGER',NamedNumberList}> when 'true' ->
				    let <_cor145> =
					%% Line 3071
					apply 'check_integer'/2
					    (S, NamedNumberList)
				    in  let <_rec291> = {%% Line 3071
					     'INTEGER',_cor145}
					in  let <_cor150> =
						%% Line 3073
						case _cor535 of
						  <'ber'> when 'true' ->
						      {'tag','UNIVERSAL',2,'IMPLICIT',0}
						  <_cor765> when 'true' ->
						      []
						end
					    in  let <_rec292> =
						    %% Line 3073
						    apply 'merge_tags'/2
							(Tag, _cor150)
						in  %% Line 3071
						    case TempNewDef of
						      <{'newt',_cor766,_cor767,_cor768,_cor769}> when 'true' ->
							  let <_cor153> =
							      %% Line 3072
							      call 'erlang':'setelement'
								  (3, TempNewDef, _rec292)
							  in  call 'erlang':'setelement'
								  (2, _cor153, _rec291)
						      ( <_cor770> when 'true' ->
							    ( call ( 'erlang'
								     -| ['compiler_generated'] ):( 'error'
												   -| ['compiler_generated'] )
								  (( {'badrecord','newt'}
								     -| ['compiler_generated'] ))
							      -| ['compiler_generated'] )
							-| ['compiler_generated'] )
						    end
				%% Line 3074
				<'REAL'> when 'true' ->
				    do  %% Line 3075
					apply 'check_real'/2
					    (S, Constr)
					let <_cor158> =
					    %% Line 3077
					    case _cor535 of
					      <'ber'> when 'true' ->
						  {'tag','UNIVERSAL',9,'IMPLICIT',0}
					      <_cor784> when 'true' ->
						  []
					    end
					in  let <_rec295> =
						%% Line 3077
						apply 'merge_tags'/2
						    (Tag, _cor158)
					    in  %% Line 3077
						case TempNewDef of
						  <{'newt',_cor785,_cor786,_cor787,_cor788}> when 'true' ->
						      call 'erlang':'setelement'
							  (3, TempNewDef, _rec295)
						  ( <_cor789> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {'badrecord','newt'}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
				%% Line 3078
				<{'BIT STRING',NamedNumberList}> when 'true' ->
				    let <NewL> =
					%% Line 3079
					apply 'check_bitstring'/2
					    (S, NamedNumberList)
				    in  let <_rec298> = {%% Line 3080
					     'BIT STRING',%% Line 3080
							  NewL}
					in  let <_cor167> =
						%% Line 3082
						case _cor535 of
						  <'ber'> when 'true' ->
						      {'tag','UNIVERSAL',3,'IMPLICIT',0}
						  <_cor803> when 'true' ->
						      []
						end
					    in  let <_rec299> =
						    %% Line 3082
						    apply 'merge_tags'/2
							(Tag, _cor167)
						in  %% Line 3080
						    case TempNewDef of
						      <{'newt',_cor804,_cor805,_cor806,_cor807}> when 'true' ->
							  let <_cor170> =
							      %% Line 3081
							      call 'erlang':'setelement'
								  (3, TempNewDef, _rec299)
							  in  call 'erlang':'setelement'
								  (2, _cor170, _rec298)
						      ( <_cor808> when 'true' ->
							    ( call ( 'erlang'
								     -| ['compiler_generated'] ):( 'error'
												   -| ['compiler_generated'] )
								  (( {'badrecord','newt'}
								     -| ['compiler_generated'] ))
							      -| ['compiler_generated'] )
							-| ['compiler_generated'] )
						    end
				%% Line 3083
				<'NULL'> when 'true' ->
				    let <_cor175> =
					%% Line 3085
					case _cor535 of
					  <'ber'> when 'true' ->
					      {'tag','UNIVERSAL',5,'IMPLICIT',0}
					  <_cor822> when 'true' ->
					      []
					end
				    in  let <_rec302> =
					    %% Line 3085
					    apply 'merge_tags'/2
						(Tag, _cor175)
					in  %% Line 3084
					    case TempNewDef of
					      <{'newt',_cor823,_cor824,_cor825,_cor826}> when 'true' ->
						  call 'erlang':'setelement'
						      (3, TempNewDef, _rec302)
					      ( <_cor827> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {'badrecord','newt'}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
				%% Line 3086
				<'OBJECT IDENTIFIER'> when 'true' ->
				    do  %% Line 3087
					apply 'check_objectidentifier'/2
					    (S, Constr)
					let <_cor182> =
					    %% Line 3089
					    case _cor535 of
					      <'ber'> when 'true' ->
						  {'tag','UNIVERSAL',6,'IMPLICIT',0}
					      <_cor841> when 'true' ->
						  []
					    end
					in  let <_rec305> =
						%% Line 3089
						apply 'merge_tags'/2
						    (Tag, _cor182)
					    in  %% Line 3088
						case TempNewDef of
						  <{'newt',_cor842,_cor843,_cor844,_cor845}> when 'true' ->
						      call 'erlang':'setelement'
							  (3, TempNewDef, _rec305)
						  ( <_cor846> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {'badrecord','newt'}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
				%% Line 3090
				<'ObjectDescriptor'> when 'true' ->
				    let <_cor189> =
					%% Line 3092
					case _cor535 of
					  <'ber'> when 'true' ->
					      {'tag','UNIVERSAL',7,'IMPLICIT',0}
					  <_cor860> when 'true' ->
					      []
					end
				    in  let <_rec308> =
					    %% Line 3092
					    apply 'merge_tags'/2
						(Tag, _cor189)
					in  %% Line 3091
					    case TempNewDef of
					      <{'newt',_cor861,_cor862,_cor863,_cor864}> when 'true' ->
						  call 'erlang':'setelement'
						      (3, TempNewDef, _rec308)
					      ( <_cor865> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {'badrecord','newt'}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
				%% Line 3093
				<'EXTERNAL'> when 'true' ->
				    do  %% Line 3094
					apply 'put_once'/2
					    ('external', 'unchecked')
					let <_rec311> =
					    %% Line 3096
					    {'Externaltypereference','undefined',_cor530,%% Line 3097
											 'EXTERNAL'}
					in  let <_cor199> =
						%% Line 3099
						case _cor535 of
						  <'ber'> when 'true' ->
						      {'tag','UNIVERSAL',8,'IMPLICIT',32}
						  <_cor892> when 'true' ->
						      []
						end
					    in  let <_rec312> =
						    %% Line 3099
						    apply 'merge_tags'/2
							(Tag, _cor199)
						in  %% Line 3095
						    case TempNewDef of
						      <{'newt',_cor893,_cor894,_cor895,_cor896}> when 'true' ->
							  let <_cor202> =
							      %% Line 3098
							      call 'erlang':'setelement'
								  (3, TempNewDef, _rec312)
							  in  call 'erlang':'setelement'
								  (2, _cor202, _rec311)
						      ( <_cor897> when 'true' ->
							    ( call ( 'erlang'
								     -| ['compiler_generated'] ):( 'error'
												   -| ['compiler_generated'] )
								  (( {'badrecord','newt'}
								     -| ['compiler_generated'] ))
							      -| ['compiler_generated'] )
							-| ['compiler_generated'] )
						    end
				%% Line 3100
				<{'INSTANCE OF',DefinedObjectClass,Constraint}> when 'true' ->
				    let <IOFDef> =
					%% Line 3105
					apply 'check_instance_of'/3
					    (S, DefinedObjectClass, Constraint)
				    in  let <_cor208> =
					    %% Line 3107
					    case _cor535 of
					      <'ber'> when 'true' ->
						  {'tag','UNIVERSAL',8,'IMPLICIT',32}
					      <_cor911> when 'true' ->
						  []
					    end
					in  let <_rec316> =
						%% Line 3107
						apply 'merge_tags'/2
						    (Tag, _cor208)
					    in  %% Line 3106
						case TempNewDef of
						  <{'newt',_cor912,_cor913,_cor914,_cor915}> when 'true' ->
						      let <_cor211> =
							  %% Line 3107
							  call 'erlang':'setelement'
							      (3, TempNewDef, _rec316)
						      in  call 'erlang':'setelement'
							      (2, _cor211, IOFDef)
						  ( <_cor916> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {'badrecord','newt'}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
				%% Line 3108
				<{'ENUMERATED',NamedNumberList}> when 'true' ->
				    let <_cor213> =
					%% Line 3111
					apply 'check_enumerated'/3
					    (S, NamedNumberList, Constr)
				    in  let <_rec319> = {%% Line 3110
					     'ENUMERATED',_cor213}
					in  let <_cor218> =
						%% Line 3113
						case _cor535 of
						  <'ber'> when 'true' ->
						      {'tag','UNIVERSAL',10,'IMPLICIT',0}
						  <_cor930> when 'true' ->
						      []
						end
					    in  let <_rec320> =
						    %% Line 3113
						    apply 'merge_tags'/2
							(Tag, _cor218)
						in  %% Line 3114
						    case TempNewDef of
						      <{'newt',_rec322,_rec323,_rec324,_rec325}> when 'true' ->
							  {'newt',_rec319,_rec320,[],_rec325}
						      ( <_cor931> when 'true' ->
							    ( call ( 'erlang'
								     -| ['compiler_generated'] ):( 'error'
												   -| ['compiler_generated'] )
								  (( {'badrecord','newt'}
								     -| ['compiler_generated'] ))
							      -| ['compiler_generated'] )
							-| ['compiler_generated'] )
						    end
				%% Line 3115
				<'EMBEDDED PDV'> when 'true' ->
				    do  %% Line 3116
					apply 'put_once'/2
					    ('embedded_pdv', 'unchecked')
					let <_rec327> =
					    %% Line 3118
					    {'Externaltypereference','undefined',_cor530,%% Line 3119
											 'EMBEDDED PDV'}
					in  let <_cor228> =
						%% Line 3121
						case _cor535 of
						  <'ber'> when 'true' ->
						      {'tag','UNIVERSAL',11,'IMPLICIT',32}
						  <_cor958> when 'true' ->
						      []
						end
					    in  let <_rec328> =
						    %% Line 3121
						    apply 'merge_tags'/2
							(Tag, _cor228)
						in  %% Line 3117
						    case TempNewDef of
						      <{'newt',_cor959,_cor960,_cor961,_cor962}> when 'true' ->
							  let <_cor231> =
							      %% Line 3120
							      call 'erlang':'setelement'
								  (3, TempNewDef, _rec328)
							  in  call 'erlang':'setelement'
								  (2, _cor231, _rec327)
						      ( <_cor963> when 'true' ->
							    ( call ( 'erlang'
								     -| ['compiler_generated'] ):( 'error'
												   -| ['compiler_generated'] )
								  (( {'badrecord','newt'}
								     -| ['compiler_generated'] ))
							      -| ['compiler_generated'] )
							-| ['compiler_generated'] )
						    end
				%% Line 3122
				<'BOOLEAN'> when 'true' ->
				    do  %% Line 3123
					apply 'check_boolean'/2
					    (S, Constr)
					let <_cor236> =
					    %% Line 3125
					    case _cor535 of
					      <'ber'> when 'true' ->
						  {'tag','UNIVERSAL',1,'IMPLICIT',0}
					      <_cor977> when 'true' ->
						  []
					    end
					in  let <_rec332> =
						%% Line 3125
						apply 'merge_tags'/2
						    (Tag, _cor236)
					    in  %% Line 3124
						case TempNewDef of
						  <{'newt',_cor978,_cor979,_cor980,_cor981}> when 'true' ->
						      call 'erlang':'setelement'
							  (3, TempNewDef, _rec332)
						  ( <_cor982> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {'badrecord','newt'}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
				%% Line 3126
				<'OCTET STRING'> when 'true' ->
				    do  %% Line 3127
					apply 'check_octetstring'/2
					    (S, Constr)
					let <_cor243> =
					    %% Line 3129
					    case _cor535 of
					      <'ber'> when 'true' ->
						  {'tag','UNIVERSAL',4,'IMPLICIT',0}
					      <_cor996> when 'true' ->
						  []
					    end
					in  let <_rec335> =
						%% Line 3129
						apply 'merge_tags'/2
						    (Tag, _cor243)
					    in  %% Line 3128
						case TempNewDef of
						  <{'newt',_cor997,_cor998,_cor999,_cor1000}> when 'true' ->
						      call 'erlang':'setelement'
							  (3, TempNewDef, _rec335)
						  ( <_cor1001> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {'badrecord','newt'}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
				%% Line 3130
				<'NumericString'> when 'true' ->
				    do  %% Line 3131
					apply 'check_restrictedstring'/3
					    (S, Def, Constr)
					let <_cor250> =
					    %% Line 3133
					    case _cor535 of
					      <'ber'> when 'true' ->
						  {'tag','UNIVERSAL',18,'IMPLICIT',0}
					      <_cor1015> when 'true' ->
						  []
					    end
					in  let <_rec338> =
						%% Line 3133
						apply 'merge_tags'/2
						    (Tag, _cor250)
					    in  %% Line 3132
						case TempNewDef of
						  <{'newt',_cor1016,_cor1017,_cor1018,_cor1019}> when 'true' ->
						      call 'erlang':'setelement'
							  (3, TempNewDef, _rec338)
						  ( <_cor1020> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {'badrecord','newt'}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
				%% Line 3134
				<TString>
				    when let <_cor254> =
					  call 'erlang':'=:='
					      (Def, 'TeletexString')
				      in  let <_cor255> =
					      %% Line 3135
					      call 'erlang':'=:='
						  (Def, 'T61String')
					  in  call 'erlang':'or'
						  (_cor254, _cor255) ->
				    do  %% Line 3136
					apply 'check_restrictedstring'/3
					    (S, Def, Constr)
					let <_cor259> =
					    %% Line 3138
					    case _cor535 of
					      <'ber'> when 'true' ->
						  {'tag','UNIVERSAL',20,'IMPLICIT',0}
					      <_cor1034> when 'true' ->
						  []
					    end
					in  let <_rec341> =
						%% Line 3138
						apply 'merge_tags'/2
						    (Tag, _cor259)
					    in  %% Line 3137
						case TempNewDef of
						  <{'newt',_cor1035,_cor1036,_cor1037,_cor1038}> when 'true' ->
						      call 'erlang':'setelement'
							  (3, TempNewDef, _rec341)
						  ( <_cor1039> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {'badrecord','newt'}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
				%% Line 3139
				<'VideotexString'> when 'true' ->
				    do  %% Line 3140
					apply 'check_restrictedstring'/3
					    (S, Def, Constr)
					let <_cor266> =
					    %% Line 3142
					    case _cor535 of
					      <'ber'> when 'true' ->
						  {'tag','UNIVERSAL',21,'IMPLICIT',0}
					      <_cor1053> when 'true' ->
						  []
					    end
					in  let <_rec344> =
						%% Line 3142
						apply 'merge_tags'/2
						    (Tag, _cor266)
					    in  %% Line 3141
						case TempNewDef of
						  <{'newt',_cor1054,_cor1055,_cor1056,_cor1057}> when 'true' ->
						      call 'erlang':'setelement'
							  (3, TempNewDef, _rec344)
						  ( <_cor1058> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {'badrecord','newt'}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
				%% Line 3143
				<'UTCTime'> when 'true' ->
				    let <_cor273> =
					%% Line 3145
					case _cor535 of
					  <'ber'> when 'true' ->
					      {'tag','UNIVERSAL',23,'IMPLICIT',0}
					  <_cor1072> when 'true' ->
					      []
					end
				    in  let <_rec347> =
					    %% Line 3145
					    apply 'merge_tags'/2
						(Tag, _cor273)
					in  %% Line 3144
					    case TempNewDef of
					      <{'newt',_cor1073,_cor1074,_cor1075,_cor1076}> when 'true' ->
						  call 'erlang':'setelement'
						      (3, TempNewDef, _rec347)
					      ( <_cor1077> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {'badrecord','newt'}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
				%% Line 3146
				<'GeneralizedTime'> when 'true' ->
				    let <_cor280> =
					%% Line 3148
					case _cor535 of
					  <'ber'> when 'true' ->
					      {'tag','UNIVERSAL',24,'IMPLICIT',0}
					  <_cor1091> when 'true' ->
					      []
					end
				    in  let <_rec350> =
					    %% Line 3148
					    apply 'merge_tags'/2
						(Tag, _cor280)
					in  %% Line 3147
					    case TempNewDef of
					      <{'newt',_cor1092,_cor1093,_cor1094,_cor1095}> when 'true' ->
						  call 'erlang':'setelement'
						      (3, TempNewDef, _rec350)
					      ( <_cor1096> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {'badrecord','newt'}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
				%% Line 3149
				<'GraphicString'> when 'true' ->
				    do  %% Line 3150
					apply 'check_restrictedstring'/3
					    (S, Def, Constr)
					let <_cor287> =
					    %% Line 3152
					    case _cor535 of
					      <'ber'> when 'true' ->
						  {'tag','UNIVERSAL',25,'IMPLICIT',0}
					      <_cor1110> when 'true' ->
						  []
					    end
					in  let <_rec353> =
						%% Line 3152
						apply 'merge_tags'/2
						    (Tag, _cor287)
					    in  %% Line 3151
						case TempNewDef of
						  <{'newt',_cor1111,_cor1112,_cor1113,_cor1114}> when 'true' ->
						      call 'erlang':'setelement'
							  (3, TempNewDef, _rec353)
						  ( <_cor1115> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {'badrecord','newt'}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
				%% Line 3153
				<'VisibleString'> when 'true' ->
				    do  %% Line 3154
					apply 'check_restrictedstring'/3
					    (S, Def, Constr)
					let <_cor294> =
					    %% Line 3156
					    case _cor535 of
					      <'ber'> when 'true' ->
						  {'tag','UNIVERSAL',26,'IMPLICIT',0}
					      <_cor1129> when 'true' ->
						  []
					    end
					in  let <_rec356> =
						%% Line 3156
						apply 'merge_tags'/2
						    (Tag, _cor294)
					    in  %% Line 3155
						case TempNewDef of
						  <{'newt',_cor1130,_cor1131,_cor1132,_cor1133}> when 'true' ->
						      call 'erlang':'setelement'
							  (3, TempNewDef, _rec356)
						  ( <_cor1134> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {'badrecord','newt'}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
				%% Line 3157
				<'GeneralString'> when 'true' ->
				    do  %% Line 3158
					apply 'check_restrictedstring'/3
					    (S, Def, Constr)
					let <_cor301> =
					    %% Line 3160
					    case _cor535 of
					      <'ber'> when 'true' ->
						  {'tag','UNIVERSAL',27,'IMPLICIT',0}
					      <_cor1148> when 'true' ->
						  []
					    end
					in  let <_rec359> =
						%% Line 3160
						apply 'merge_tags'/2
						    (Tag, _cor301)
					    in  %% Line 3159
						case TempNewDef of
						  <{'newt',_cor1149,_cor1150,_cor1151,_cor1152}> when 'true' ->
						      call 'erlang':'setelement'
							  (3, TempNewDef, _rec359)
						  ( <_cor1153> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {'badrecord','newt'}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
				%% Line 3161
				<'PrintableString'> when 'true' ->
				    do  %% Line 3162
					apply 'check_restrictedstring'/3
					    (S, Def, Constr)
					let <_cor308> =
					    %% Line 3164
					    case _cor535 of
					      <'ber'> when 'true' ->
						  {'tag','UNIVERSAL',19,'IMPLICIT',0}
					      <_cor1167> when 'true' ->
						  []
					    end
					in  let <_rec362> =
						%% Line 3164
						apply 'merge_tags'/2
						    (Tag, _cor308)
					    in  %% Line 3163
						case TempNewDef of
						  <{'newt',_cor1168,_cor1169,_cor1170,_cor1171}> when 'true' ->
						      call 'erlang':'setelement'
							  (3, TempNewDef, _rec362)
						  ( <_cor1172> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {'badrecord','newt'}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
				%% Line 3165
				<'IA5String'> when 'true' ->
				    do  %% Line 3166
					apply 'check_restrictedstring'/3
					    (S, Def, Constr)
					let <_cor315> =
					    %% Line 3168
					    case _cor535 of
					      <'ber'> when 'true' ->
						  {'tag','UNIVERSAL',22,'IMPLICIT',0}
					      <_cor1186> when 'true' ->
						  []
					    end
					in  let <_rec365> =
						%% Line 3168
						apply 'merge_tags'/2
						    (Tag, _cor315)
					    in  %% Line 3167
						case TempNewDef of
						  <{'newt',_cor1187,_cor1188,_cor1189,_cor1190}> when 'true' ->
						      call 'erlang':'setelement'
							  (3, TempNewDef, _rec365)
						  ( <_cor1191> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {'badrecord','newt'}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
				%% Line 3169
				<'BMPString'> when 'true' ->
				    do  %% Line 3170
					apply 'check_restrictedstring'/3
					    (S, Def, Constr)
					let <_cor322> =
					    %% Line 3172
					    case _cor535 of
					      <'ber'> when 'true' ->
						  {'tag','UNIVERSAL',30,'IMPLICIT',0}
					      <_cor1205> when 'true' ->
						  []
					    end
					in  let <_rec368> =
						%% Line 3172
						apply 'merge_tags'/2
						    (Tag, _cor322)
					    in  %% Line 3171
						case TempNewDef of
						  <{'newt',_cor1206,_cor1207,_cor1208,_cor1209}> when 'true' ->
						      call 'erlang':'setelement'
							  (3, TempNewDef, _rec368)
						  ( <_cor1210> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {'badrecord','newt'}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
				%% Line 3173
				<'UniversalString'> when 'true' ->
				    do  %% Line 3174
					apply 'check_restrictedstring'/3
					    (S, Def, Constr)
					let <_cor329> =
					    %% Line 3176
					    case _cor535 of
					      <'ber'> when 'true' ->
						  {'tag','UNIVERSAL',28,'IMPLICIT',0}
					      <_cor1224> when 'true' ->
						  []
					    end
					in  let <_rec371> =
						%% Line 3176
						apply 'merge_tags'/2
						    (Tag, _cor329)
					    in  %% Line 3175
						case TempNewDef of
						  <{'newt',_cor1225,_cor1226,_cor1227,_cor1228}> when 'true' ->
						      call 'erlang':'setelement'
							  (3, TempNewDef, _rec371)
						  ( <_cor1229> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {'badrecord','newt'}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
				%% Line 3177
				<'UTF8String'> when 'true' ->
				    do  %% Line 3178
					apply 'check_restrictedstring'/3
					    (S, Def, Constr)
					let <_cor336> =
					    %% Line 3180
					    case _cor535 of
					      <'ber'> when 'true' ->
						  {'tag','UNIVERSAL',12,'IMPLICIT',0}
					      <_cor1243> when 'true' ->
						  []
					    end
					in  let <_rec374> =
						%% Line 3180
						apply 'merge_tags'/2
						    (Tag, _cor336)
					    in  %% Line 3179
						case TempNewDef of
						  <{'newt',_cor1244,_cor1245,_cor1246,_cor1247}> when 'true' ->
						      call 'erlang':'setelement'
							  (3, TempNewDef, _rec374)
						  ( <_cor1248> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {'badrecord','newt'}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
				%% Line 3181
				<'RELATIVE-OID'> when 'true' ->
				    do  %% Line 3182
					apply 'check_relative_oid'/2
					    (S, Constr)
					let <_cor343> =
					    %% Line 3184
					    case _cor535 of
					      <'ber'> when 'true' ->
						  {'tag','UNIVERSAL',13,'IMPLICIT',0}
					      <_cor1262> when 'true' ->
						  []
					    end
					in  let <_rec377> =
						%% Line 3184
						apply 'merge_tags'/2
						    (Tag, _cor343)
					    in  %% Line 3183
						case TempNewDef of
						  <{'newt',_cor1263,_cor1264,_cor1265,_cor1266}> when 'true' ->
						      call 'erlang':'setelement'
							  (3, TempNewDef, _rec377)
						  ( <_cor1267> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {'badrecord','newt'}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
				%% Line 3185
				<'CHARACTER STRING'> when 'true' ->
				    do  %% Line 3186
					apply 'put_once'/2
					    ('character_string', 'unchecked')
					let <_rec380> =
					    %% Line 3188
					    {'Externaltypereference','undefined',_cor530,%% Line 3189
											 'CHARACTER STRING'}
					in  let <_cor353> =
						%% Line 3191
						case _cor535 of
						  <'ber'> when 'true' ->
						      {'tag','UNIVERSAL',29,'IMPLICIT',32}
						  <_cor1294> when 'true' ->
						      []
						end
					    in  let <_rec381> =
						    %% Line 3191
						    apply 'merge_tags'/2
							(Tag, _cor353)
						in  %% Line 3187
						    case TempNewDef of
						      <{'newt',_cor1295,_cor1296,_cor1297,_cor1298}> when 'true' ->
							  let <_cor356> =
							      %% Line 3190
							      call 'erlang':'setelement'
								  (3, TempNewDef, _rec381)
							  in  call 'erlang':'setelement'
								  (2, _cor356, _rec380)
						      ( <_cor1299> when 'true' ->
							    ( call ( 'erlang'
								     -| ['compiler_generated'] ):( 'error'
												   -| ['compiler_generated'] )
								  (( {'badrecord','newt'}
								     -| ['compiler_generated'] ))
							      -| ['compiler_generated'] )
							-| ['compiler_generated'] )
						    end
				%% Line 3192
				<Seq = {'SEQUENCE',_cor1300,_cor1301,_cor1302,_cor1303}> when ( 'true'
												-| ['compiler_generated'] ) ->
				    let <_cor360> =
					%% Line 3194
					case TopName of
					  %% Line 3195
					  <[]> when 'true' ->
					      let <_cor358> =
						  %% Line 3196
						  apply 'get_datastr_name'/1
						      (Type)
					      in  %% Line 3196
						  [_cor358|[]]
					  %% Line 3198
					  <_cor1304> when 'true' ->
					      %% Line 3199
					      TopName
					end
				    in  let <_cor366> =
					    %% Line 3202
					    call 'erlang':'setelement'
						(12, S, _cor360)
					in  %% Line 3201
					    case %% Line 3202
						 apply 'check_sequence'/3
						     (_cor366, %% Line 3204
							       Type, _cor1303) of
					      <{TableCInf,Components}> when 'true' ->
						  let <_rec390> =
						      %% Line 3205
						      apply 'tablecinf_choose'/2
							  (Seq, TableCInf)
						  in  let <_cor370> =
							  %% Line 3206
							  call 'erlang':'setelement'
							      (5, Seq, Components)
						      in  let <_cor372> =
							      %% Line 3205
							      call 'erlang':'setelement'
								  (3, _cor370, _rec390)
							  in  let <_cor377> =
								  %% Line 3208
								  case _cor535 of
								    <'ber'> when 'true' ->
									{'tag','UNIVERSAL',16,'IMPLICIT',32}
								    <_cor1341> when 'true' ->
									[]
								  end
							      in  let <_rec388> =
								      %% Line 3208
								      apply 'merge_tags'/2
									  (Tag, _cor377)
								  in  %% Line 3205
								      case TempNewDef of
									<{'newt',_cor1342,_cor1343,_cor1344,_cor1345}> when 'true' ->
									    let <_cor380> =
										%% Line 3207
										call 'erlang':'setelement'
										    (3, TempNewDef, _rec388)
									    in  call 'erlang':'setelement'
										    (2, _cor380, _cor372)
									( <_cor1346> when 'true' ->
									      ( call ( 'erlang'
										       -| ['compiler_generated'] ):( 'error'
														     -| ['compiler_generated'] )
										    (( {'badrecord','newt'}
										       -| ['compiler_generated'] ))
										-| ['compiler_generated'] )
									  -| ['compiler_generated'] )
								      end
					      ( <_cor367> when 'true' ->
						    primop 'match_fail'
							({'badmatch',_cor367})
						-| ['compiler_generated'] )
					    end
				%% Line 3209
				<{'SEQUENCE OF',Components}> when 'true' ->
				    let <_cor382> =
					%% Line 3210
					apply 'check_sequenceof'/3
					    (S, Type, Components)
				    in  let <_rec393> = {%% Line 3210
					     'SEQUENCE OF',_cor382}
					in  let <_cor387> =
						%% Line 3212
						case _cor535 of
						  <'ber'> when 'true' ->
						      {'tag','UNIVERSAL',16,'IMPLICIT',32}
						  <_cor1360> when 'true' ->
						      []
						end
					    in  let <_rec394> =
						    %% Line 3212
						    apply 'merge_tags'/2
							(Tag, _cor387)
						in  %% Line 3210
						    case TempNewDef of
						      <{'newt',_cor1361,_cor1362,_cor1363,_cor1364}> when 'true' ->
							  let <_cor390> =
							      %% Line 3211
							      call 'erlang':'setelement'
								  (3, TempNewDef, _rec394)
							  in  call 'erlang':'setelement'
								  (2, _cor390, _rec393)
						      ( <_cor1365> when 'true' ->
							    ( call ( 'erlang'
								     -| ['compiler_generated'] ):( 'error'
												   -| ['compiler_generated'] )
								  (( {'badrecord','newt'}
								     -| ['compiler_generated'] ))
							      -| ['compiler_generated'] )
							-| ['compiler_generated'] )
						    end
				%% Line 3213
				<{'CHOICE',Components}> when 'true' ->
				    let <Ct> =
					%% Line 3214
					apply 'maybe_illicit_implicit_tag'/2
					    ('choice', Tag)
				    in  let <_cor393> =
					    %% Line 3215
					    apply 'check_choice'/3
						(S, Type, Components)
					in  let <_rec397> = {%% Line 3215
						 'CHOICE',_cor393}
					    in  %% Line 3215
						case TempNewDef of
						  <{'newt',_cor1366,_cor1367,_cor1368,_cor1369}> when 'true' ->
						      let <_cor396> =
							  call 'erlang':'setelement'
							      (3, TempNewDef, Ct)
						      in  call 'erlang':'setelement'
							      (2, _cor396, _rec397)
						  ( <_cor1370> when 'true' ->
							( call ( 'erlang'
								 -| ['compiler_generated'] ):( 'error'
											       -| ['compiler_generated'] )
							      (( {'badrecord','newt'}
								 -| ['compiler_generated'] ))
							  -| ['compiler_generated'] )
						    -| ['compiler_generated'] )
						end
				%% Line 3216
				<Set = {'SET',_cor1371,_cor1372,_cor1373,_cor1374}> when ( 'true'
											   -| ['compiler_generated'] ) ->
				    let <_cor400> =
					%% Line 3218
					case TopName of
					  %% Line 3219
					  <[]> when 'true' ->
					      let <_cor398> =
						  %% Line 3220
						  apply 'get_datastr_name'/1
						      (Type)
					      in  %% Line 3220
						  [_cor398|[]]
					  %% Line 3222
					  <_cor1375> when 'true' ->
					      %% Line 3223
					      TopName
					end
				    in  let <_cor406> =
					    %% Line 3226
					    call 'erlang':'setelement'
						(12, S, _cor400)
					in  %% Line 3225
					    case %% Line 3226
						 apply 'check_set'/3
						     (_cor406, %% Line 3227
							       Type, _cor1374) of
					      <{Sorted,TableCInf,Components}> when 'true' ->
						  let <_rec404> =
						      %% Line 3229
						      apply 'tablecinf_choose'/2
							  (Set, TableCInf)
						  in  let <_cor411> =
							  %% Line 3230
							  {'SET',_cor1371,Sorted,_rec404,Components}
						      in  let <_cor416> =
							      %% Line 3232
							      case _cor535 of
								<'ber'> when 'true' ->
								    {'tag','UNIVERSAL',17,'IMPLICIT',32}
								<_cor1408> when 'true' ->
								    []
							      end
							  in  let <_rec402> =
								  %% Line 3232
								  apply 'merge_tags'/2
								      (Tag, _cor416)
							      in  %% Line 3228
								  case TempNewDef of
								    <{'newt',_cor1409,_cor1410,_cor1411,_cor1412}> when 'true' ->
									let <_cor419> =
									    %% Line 3231
									    call 'erlang':'setelement'
										(3, TempNewDef, _rec402)
									in  call 'erlang':'setelement'
										(2, _cor419, _cor411)
								    ( <_cor1413> when 'true' ->
									  ( call ( 'erlang'
										   -| ['compiler_generated'] ):( 'error'
														 -| ['compiler_generated'] )
										(( {'badrecord','newt'}
										   -| ['compiler_generated'] ))
									    -| ['compiler_generated'] )
								      -| ['compiler_generated'] )
								  end
					      ( <_cor407> when 'true' ->
						    primop 'match_fail'
							({'badmatch',_cor407})
						-| ['compiler_generated'] )
					    end
				%% Line 3233
				<{'SET OF',Components}> when 'true' ->
				    let <_cor421> =
					%% Line 3234
					apply 'check_setof'/3
					    (S, Type, Components)
				    in  let <_rec411> = {%% Line 3234
					     'SET OF',_cor421}
					in  let <_cor426> =
						%% Line 3236
						case _cor535 of
						  <'ber'> when 'true' ->
						      {'tag','UNIVERSAL',17,'IMPLICIT',32}
						  <_cor1427> when 'true' ->
						      []
						end
					    in  let <_rec412> =
						    %% Line 3236
						    apply 'merge_tags'/2
							(Tag, _cor426)
						in  %% Line 3234
						    case TempNewDef of
						      <{'newt',_cor1428,_cor1429,_cor1430,_cor1431}> when 'true' ->
							  let <_cor429> =
							      %% Line 3235
							      call 'erlang':'setelement'
								  (3, TempNewDef, _rec412)
							  in  call 'erlang':'setelement'
								  (2, _cor429, _rec411)
						      ( <_cor1432> when 'true' ->
							    ( call ( 'erlang'
								     -| ['compiler_generated'] ):( 'error'
												   -| ['compiler_generated'] )
								  (( {'badrecord','newt'}
								     -| ['compiler_generated'] ))
							      -| ['compiler_generated'] )
							-| ['compiler_generated'] )
						    end
				%% Line 3239
				<{{'Externaltypereference',_cor1433,_cor1434,'TYPE-IDENTIFIER'},%% Line 3240
												[{'typefieldreference',_cor1435,'Type'}|[]]}> when 'true' ->
				    let <Ct> =
					%% Line 3241
					apply 'maybe_illicit_implicit_tag'/2
					    ('open_type', Tag)
				    in  %% Line 3242
					case TempNewDef of
					  <{'newt',_cor1436,_cor1437,_cor1438,_cor1439}> when 'true' ->
					      let <_cor433> =
						  call 'erlang':'setelement'
						      (3, TempNewDef, Ct)
					      in  call 'erlang':'setelement'
						      (2, _cor433, 'ASN1_OPEN_TYPE')
					  ( <_cor1440> when 'true' ->
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'error'
										       -| ['compiler_generated'] )
						      (( {'badrecord','newt'}
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
				%% Line 3244
				<{'pt',Ptype,ParaList}> when 'true' ->
				    %% Line 3248
				    case apply 'get_referenced_type'/2
					     (S, Ptype) of
				      <{_X_RefMod,Ptypedef}> when 'true' ->
					  do  %% Line 3249
					      apply 'notify_if_not_ptype'/2
						  (S, Ptypedef)
					      let <_cor443> =
						  %% Line 3251
						  ( letrec
							'lc$^0'/1 =
							    fun (_cor438) ->
								case _cor438 of
								  <[%% Line 3252
								    TmpParam|_cor437]> when 'true' ->
								      let <_cor441> =
									  apply 'match_parameters'/3
									      (S, TmpParam, _cor536)
								      in  let <_cor442> =
									      %% Line 3252
									      apply 'lc$^0'/1
										  (_cor437)
									  in  ( [_cor441|_cor442]
										-| ['compiler_generated'] )
								  <[]> when 'true' ->
								      []
								  ( <_cor438> when 'true' ->
									( primop 'match_fail'
									      ({'function_clause',_cor438})
									  -| [{'function_name',{'lc$^0',1}}] )
								    -| ['compiler_generated'] )
								end
						    in  apply 'lc$^0'/1
							    (%% Line 3252
							     ParaList)
						    -| ['list_comprehension'] )
					      in  %% Line 3254
						  ( case apply 'instantiate_ptype'/3
							     (S, Ptypedef, _cor443) of
						      ( <( {'type',_cor1454,_rec425,_cor1455,_cor1456,_cor1457}
							   -| ['compiler_generated'] )> when 'true' ->
							    let <_rec418> =
								%% Line 3255
								apply 'merge_tags'/2
								    (Tag, _cor1454)
							    in  %% Line 3257
								case TempNewDef of
								  <{'newt',_rec421,_rec422,_rec423,_rec424}> when 'true' ->
								      {'newt',_rec425,_rec418,_cor1455,'yes'}
								  ( <_cor1469> when 'true' ->
									( call ( 'erlang'
										 -| ['compiler_generated'] ):( 'error'
													       -| ['compiler_generated'] )
									      (( {'badrecord','newt'}
										 -| ['compiler_generated'] ))
									  -| ['compiler_generated'] )
								    -| ['compiler_generated'] )
								end
							-| ['compiler_generated'] )
						      ( <_cor1458> when 'true' ->
							    ( call ( 'erlang'
								     -| ['compiler_generated'] ):( 'error'
												   -| ['compiler_generated'] )
								  (( {'badrecord','type'}
								     -| ['compiler_generated'] ))
							      -| ['compiler_generated'] )
							-| ['compiler_generated'] )
						    end
						    -| ['compiler_generated'] )
				      ( <_cor435> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_cor435})
					-| ['compiler_generated'] )
				    end
				%% Line 3259
				<OCFT = {'ObjectClassFieldType',ClRef,_cor1470,_cor1471,_cor1472}> when 'true' ->
				    let <ClassSpec> =
					%% Line 3262
					apply 'check_class'/2
					    (S, ClRef)
				    in  let <_cor460> =
					    %% Line 3265
					    call 'erlang':'setelement'
						(3, OCFT, ClassSpec)
					in  let <NewTypeDef> =
						%% Line 3264
						apply 'maybe_open_type'/4
						    (S, ClassSpec, _cor460, %% Line 3265
									    Constr)
					    in  let <InnerTag> =
						    %% Line 3266
						    apply 'get_innertag'/2
							(S, NewTypeDef)
						in  let <MergedTag> =
							%% Line 3267
							apply 'merge_tags'/2
							    (Tag, InnerTag)
						    in  let <_cor465> =
							    %% Line 3269
							    case apply 'is_open_type'/1
								     (NewTypeDef) of
							      %% Line 3270
							      <'true'> when 'true' ->
								  %% Line 3271
								  apply 'maybe_illicit_implicit_tag'/2
								      ('open_type', MergedTag)
							      %% Line 3272
							      <_cor1478> when 'true' ->
								  %% Line 3273
								  MergedTag
							    end
							in  %% Line 3275
							    case TopName of
							      %% Line 3276
							      <[]>
								  when ( try
									  ( case <> of
									      ( <>
										    when ( call ( 'erlang'
											       -| ['compiler_generated'] ):( 'is_record'
															     -| ['compiler_generated'] )
											    (Type,
											     ( 'typedef'
											       -| ['compiler_generated'] ),
											     ( 5
											       -| ['compiler_generated'] ))
											-| ['compiler_generated'] ) ->
										    let <_cor471> =
											( call 'erlang':'element'
											      (4, Type)
											  -| ['compiler_generated'] )
										    in  ( call 'erlang':'=/='
											      (_cor471, 'undefined')
											  -| ['compiler_generated'] )
										-| ['compiler_generated'] )
									      ( <> when 'true' ->
										    'false'
										-| ['compiler_generated'] )
									    end
									    -| ['compiler_generated'] )
								      of <Try> ->
									  Try
								      catch <T,R> ->
									  'false'
								      -| ['compiler_generated'] ) ->
								  %% Line 3278
								  case %% Line 3279
								       apply 'simplify_type'/1
									   ({'type',[],NewTypeDef,[],[],'no'}) of
								    <{'type',_cor1479,Simplified,_cor1480,_cor1481,_cor1482}> when 'true' ->
									%% Line 3280
									case TempNewDef of
									  <{'newt',_cor1483,_cor1484,_cor1485,_cor1486}> when 'true' ->
									      let <_cor475> =
										  call 'erlang':'setelement'
										      (3, TempNewDef, _cor465)
									      in  call 'erlang':'setelement'
										      (2, _cor475, Simplified)
									  ( <_cor1487> when 'true' ->
										( call ( 'erlang'
											 -| ['compiler_generated'] ):( 'error'
														       -| ['compiler_generated'] )
										      (( {'badrecord','newt'}
											 -| ['compiler_generated'] ))
										  -| ['compiler_generated'] )
									    -| ['compiler_generated'] )
									end
								    ( <_cor473> when 'true' ->
									  primop 'match_fail'
									      ({'badmatch',_cor473})
								      -| ['compiler_generated'] )
								  end
							      %% Line 3281
							      <_cor1488> when 'true' ->
								  %% Line 3282
								  case TempNewDef of
								    <{'newt',_cor1489,_cor1490,_cor1491,_cor1492}> when 'true' ->
									let <_cor478> =
									    call 'erlang':'setelement'
										(3, TempNewDef, _cor465)
									in  call 'erlang':'setelement'
										(2, _cor478, NewTypeDef)
								    ( <_cor1493> when 'true' ->
									  ( call ( 'erlang'
										   -| ['compiler_generated'] ):( 'error'
														 -| ['compiler_generated'] )
										(( {'badrecord','newt'}
										   -| ['compiler_generated'] ))
									    -| ['compiler_generated'] )
								      -| ['compiler_generated'] )
								  end
							    end
				%% Line 3285
				<{'TypeFromObject',{'object',Object},TypeField}> when 'true' ->
				    %% Line 3287
				    ( case apply 'get_type_from_object'/3
					       (S, Object, TypeField) of
					( <( {'type',_rec434,_cor1494,_cor1495,_cor1496,_cor1497}
					     -| ['compiler_generated'] )> when 'true' ->
					      let <_rec431> =
						  apply 'merge_tags'/2
						      (Tag, _rec434)
					      in  %% Line 3288
						  case TempNewDef of
						    <{'newt',_cor1504,_cor1505,_cor1506,_cor1507}> when 'true' ->
							let <_cor489> =
							    call 'erlang':'setelement'
								(3, TempNewDef, _rec431)
							in  call 'erlang':'setelement'
								(2, _cor489, _cor1494)
						    ( <_cor1508> when 'true' ->
							  ( call ( 'erlang'
								   -| ['compiler_generated'] ):( 'error'
												 -| ['compiler_generated'] )
								(( {'badrecord','newt'}
								   -| ['compiler_generated'] ))
							    -| ['compiler_generated'] )
						      -| ['compiler_generated'] )
						  end
					  -| ['compiler_generated'] )
					( <_cor1498> when 'true' ->
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'error'
										     -| ['compiler_generated'] )
						    (( {'badrecord','type'}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
				%% Line 3290
				<{'valueset',Vtype}> when 'true' ->
				    let <_cor491> =
					%% Line 3291
					apply 'check_type'/3
					    (S, Type, Vtype)
				    in  let <_rec436> = {%% Line 3291
					     'valueset',_cor491}
					in  %% Line 3291
					    case TempNewDef of
					      <{'newt',_cor1509,_cor1510,_cor1511,_cor1512}> when 'true' ->
						  call 'erlang':'setelement'
						      (2, TempNewDef, _rec436)
					      ( <_cor1513> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {'badrecord','newt'}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
				%% Line 3292
				<{'SelectionType',Name,T}> when 'true' ->
				    %% Line 3294
				    ( case apply 'check_selectiontype'/3
					       (S, Name, T) of
					( <( {'type',_rec441,_cor1514,_cor1515,_cor1516,_cor1517}
					     -| ['compiler_generated'] )> when 'true' ->
					      let <_rec438> =
						  apply 'merge_tags'/2
						      (Tag, _rec441)
					      in  %% Line 3295
						  case TempNewDef of
						    <{'newt',_cor1524,_cor1525,_cor1526,_cor1527}> when 'true' ->
							let <_cor503> =
							    call 'erlang':'setelement'
								(3, TempNewDef, _rec438)
							in  call 'erlang':'setelement'
								(2, _cor503, _cor1514)
						    ( <_cor1528> when 'true' ->
							  ( call ( 'erlang'
								   -| ['compiler_generated'] ):( 'error'
												 -| ['compiler_generated'] )
								(( {'badrecord','newt'}
								   -| ['compiler_generated'] ))
							    -| ['compiler_generated'] )
						      -| ['compiler_generated'] )
						  end
					  -| ['compiler_generated'] )
					( <_cor1518> when 'true' ->
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'error'
										     -| ['compiler_generated'] )
						    (( {'badrecord','type'}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
				%% Line 3296
				<Other> when 'true' ->
				    %% Line 3297
				    call 'erlang':'exit'
					({'cant check',Other})
			      end
			  in  %% Line 3299
			      case _cor506 of
				<{'newt',TDef,NewTags,NewConstr,Inlined}> when 'true' ->
				    let <_rec443> =
					%% Line 3302
					apply 'check_constraints'/2
					    (S, NewConstr)
				    in  let <_cor514> =
					    %% Line 3303
					    ( fun (_cor512) ->
						  case _cor512 of
						    <TempTag = {'tag',_cor1529,_cor1530,{'default',TTx},_cor1531}> when 'true' ->
							%% Line 3304
							call 'erlang':'setelement'
							    (4, TempTag, TTx)
						    %% Line 3305
						    <Other> when 'true' ->
							Other
						  end
					      -| [{'id',{0,0,'-check_type/3-fun-1-'}}] )
					in  let <_rec444> =
						%% Line 3303
						call 'lists':'map'
						    (_cor514, %% Line 3306
							      NewTags)
					    in  %% Line 3303
						{'type',_rec444,TDef,_rec443,_cor544,Inlined}
				( <_cor508> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor508})
				  -| ['compiler_generated'] )
			      end
	  %% Line 3307
	  <_X_S,Type,Ts> when 'true' ->
	      %% Line 3308
	      call 'erlang':'exit'
		  ({'error',{'asn1','internal_error',Type,Ts}})
	end
'get_non_typedef'/2 =
    %% Line 3310
    fun (_cor1,_cor0) ->
	%% Line 3311
	case apply 'get_referenced_type'/2
		 (_cor1, _cor0) of
	  %% Line 3312
	  <{_cor5,{'typedef',_cor6,_cor7,_cor8,{'type',_cor9,Tref = {'Externaltypereference',_cor10,_cor11,_cor12},_cor13,_cor14,_cor15}}}> when 'true' ->
	      %% Line 3313
	      apply 'get_non_typedef'/2
		  (_cor1, Tref)
	  %% Line 3314
	  <{_cor16,Type}> when 'true' ->
	      %% Line 3315
	      Type
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor2})
	    -| ['compiler_generated'] )
	end
'simplify_comps'/1 =
    %% Line 3324
    fun (_cor0) ->
	%% Line 3325
	( letrec
	      'lc$^0'/1 =
		  fun (_cor3) ->
		      case _cor3 of
			<[Comp|_cor2]> when 'true' ->
			    let <_cor4> =
				apply 'simplify_comp'/1
				    (Comp)
			    in  let <_cor5> =
				    apply 'lc$^0'/1
					(_cor2)
				in  ( [_cor4|_cor5]
				      -| ['compiler_generated'] )
			<[]> when 'true' ->
			    []
			( <_cor3> when 'true' ->
			      ( primop 'match_fail'
				    ({'function_clause',_cor3})
				-| [{'function_name',{'lc$^0',1}}] )
			  -| ['compiler_generated'] )
		      end
	  in  apply 'lc$^0'/1
		  (_cor0)
	  -| ['list_comprehension'] )
'simplify_comp'/1 =
    %% Line 3327
    fun (_cor0) ->
	case _cor0 of
	  <C = {'ComponentType',_cor5,_cor6,Type0,_cor7,_cor8,_cor9}> when 'true' ->
	      let <Type> =
		  %% Line 3328
		  apply 'simplify_type'/1
		      (Type0)
	      in  %% Line 3329
		  call 'erlang':'setelement'
		      (4, C, Type)
	  %% Line 3330
	  <Other> when 'true' ->
	      Other
	end
'simplify_type'/1 =
    %% Line 3332
    fun (_cor0) ->
	case _cor0 of
	  <T = {'type',Tag,Inner,_cor5,_cor6,_cor7}> when 'true' ->
	      %% Line 3333
	      case Inner of
		%% Line 3334
		<{'ObjectClassFieldType',_cor8,_cor9,_cor10,{'fixedtypevaluefield',_cor11,Type}}> when 'true' ->
		    %% Line 3335
		    case Type of
		      <{'type',_cor12,_cor13,_cor14,_cor15,_cor16}> when 'true' ->
			  call 'erlang':'setelement'
			      (2, Type, Tag)
		      ( <_cor17> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','type'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		%% Line 3336
		<_cor18> when 'true' ->
		    %% Line 3337
		    T
	      end
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'simplify_type',1}}] )
	    -| ['compiler_generated'] )
	end
'tablecinf_choose'/2 =
    %% Line 3350
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <SetOrSeq,'false'> when 'true' ->
	      %% Line 3351
	      apply 'tablecinf_choose'/1
		  (SetOrSeq)
	  %% Line 3352
	  <_cor4,TableCInf> when 'true' ->
	      %% Line 3353
	      TableCInf
	end
'tablecinf_choose'/1 =
    %% Line 3354
    fun (_cor0) ->
	case _cor0 of
	  <{'SET',_cor2,_cor3,TCI,_cor4}> when 'true' ->
	      %% Line 3355
	      TCI
	  %% Line 3356
	  <{'SEQUENCE',_cor5,TCI,_cor6,_cor7}> when 'true' ->
	      %% Line 3357
	      TCI
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'tablecinf_choose',1}}] )
	    -| ['compiler_generated'] )
	end
'get_innertag'/2 =
    %% Line 3359
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_S,{'ObjectClassFieldType',_cor5,_cor6,_cor7,Type}> when 'true' ->
	      %% Line 3360
	      case Type of
		%% Line 3363
		<{'fixedtypevaluefield',_cor8,{'type',Tag,_cor9,_cor10,_cor11,_cor12}}> when 'true' ->
		    Tag
		%% Line 3364
		<{TypeFieldName,_cor13}>
		    when call 'erlang':'is_atom'
			  (TypeFieldName) ->
		    []
		%% Line 3365
		<_cor14> when 'true' ->
		    []
	      end
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'get_innertag',2}}] )
	    -| ['compiler_generated'] )
	end
'get_type_from_object'/3 =
    %% Line 3368
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,Object,TypeField>
	      when let <_cor3> =
		    %% Line 3369
		    ( call ( 'erlang'
			     -| ['compiler_generated'] ):( 'is_record'
							   -| ['compiler_generated'] )
			  (Object, 'Externaltypereference', 4)
		      -| ['compiler_generated'] )
		in  let <_cor4> =
			%% Line 3370
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'is_record'
							       -| ['compiler_generated'] )
			      (Object, 'Externalvaluereference', 4)
			  -| ['compiler_generated'] )
		    in  %% Line 3369
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'or'
							       -| ['compiler_generated'] )
			      (_cor3, _cor4)
			  -| ['compiler_generated'] ) ->
	      %% Line 3371
	      case apply 'get_referenced_type'/2
		       (S, Object) of
		<{_cor15,ObjectDef}> when 'true' ->
		    %% Line 3372
		    ( case ObjectDef of
			( <( {'typedef',_cor16,_cor17,_cor18,_rec454}
			     -| ['compiler_generated'] )> when 'true' ->
			      let <ObjSpec> =
				  apply 'check_object'/3
				      (S, ObjectDef, _rec454)
			      in  let <_cor11> =
				      %% Line 3373
				      call 'erlang':'setelement'
					  (5, ObjectDef, ObjSpec)
				  in  %% Line 3373
				      apply 'get_fieldname_element'/3
					  (S, _cor11, TypeField)
			  -| ['compiler_generated'] )
			( <_cor19> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','typedef'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		( <_cor5> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor5})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor14,_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14,_cor13,_cor12})
		  -| [{'function_name',{'get_type_from_object',3}}] )
	    -| ['compiler_generated'] )
	end
'is_class'/2 =
    %% Line 3375
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_S,{'classdef',_cor5,_cor6,_cor7,_cor8}> when 'true' ->
	      %% Line 3376
	      'true'
	  %% Line 3377
	  <S,{'typedef',_cor9,_cor10,_cor11,{'type',_cor12,Eref = {'Externaltypereference',_cor13,_cor14,_cor15},_cor16,_cor17,_cor18}}> when %% Line 3378
																	      ( 'true'
																		-| ['compiler_generated'] ) ->
	      %% Line 3379
	      apply 'is_class'/2
		  (S, Eref)
	  %% Line 3380
	  <S,Eref = {'Externaltypereference',_cor19,_cor20,_cor21}> when ( 'true'
									   -| ['compiler_generated'] ) ->
	      %% Line 3381
	      case apply 'get_referenced_type'/2
		       (S, Eref) of
		<{_cor22,NextDef}> when 'true' ->
		    %% Line 3382
		    apply 'is_class'/2
			(S, NextDef)
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 3383
	  <_cor23,_cor24> when 'true' ->
	      %% Line 3384
	      'false'
	end
'get_class_def'/2 =
    %% Line 3386
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_S,CD = {'classdef',_cor5,_cor6,_cor7,_cor8}> when 'true' ->
	      %% Line 3387
	      CD
	  %% Line 3388
	  <S,{'typedef',_cor9,_cor10,_cor11,{'type',_cor12,Eref = {'Externaltypereference',_cor13,_cor14,_cor15},_cor16,_cor17,_cor18}}> when %% Line 3389
																	      ( 'true'
																		-| ['compiler_generated'] ) ->
	      %% Line 3390
	      case apply 'get_referenced_type'/2
		       (S, Eref) of
		<{_cor19,NextDef}> when 'true' ->
		    %% Line 3391
		    apply 'get_class_def'/2
			(S, NextDef)
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor2})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'get_class_def',2}}] )
	    -| ['compiler_generated'] )
	end
'maybe_illicit_implicit_tag'/2 =
    %% Line 3393
    fun (_cor1,_cor0) ->
	%% Line 3394
	case _cor0 of
	  %% Line 3395
	  <[{'tag',_cor14,_cor15,'IMPLICIT',_cor16}|_X_T]> when 'true' ->
	      %% Line 3396
	      call 'erlang':'throw'
		  ({'error',{'asn1',{'implicit_tag_before',_cor1}}})
	  %% Line 3397
	  <[ChTag = {'tag',_cor17,_cor18,{'default',_cor19},_cor20}|T]> when 'true' ->
	      %% Line 3398
	      case _cor1 of
		%% Line 3399
		<'open_type'> when 'true' ->
		    let <_cor3> =
			%% Line 3400
			call 'erlang':'setelement'
			    (5, ChTag, 32)
		    in  let <_cor5> =
			    %% Line 3400
			    call 'erlang':'setelement'
				(4, _cor3, 'EXPLICIT')
			in  %% Line 3400
			    [_cor5|T]
		%% Line 3401
		<'choice'> when 'true' ->
		    let <_cor7> =
			%% Line 3402
			call 'erlang':'setelement'
			    (5, ChTag, 32)
		    in  let <_cor9> =
			    %% Line 3402
			    call 'erlang':'setelement'
				(4, _cor7, 'EXPLICIT')
			in  %% Line 3402
			    [_cor9|T]
		( <_cor10> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor10})
		  -| ['compiler_generated'] )
	      end
	  %% Line 3404
	  <_cor31> when 'true' ->
	      _cor0
	end
'merged_mod'/3 =
    %% Line 3409
    fun (_cor2,_cor1,_cor0) ->
	%% Line 3410
	case _cor2 of
	  %% Line 3411
	  <{'state',_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,[],_cor16,_cor17,_cor18,_cor19}> when 'true' ->
	      _cor1
	  %% Line 3413
	  <_cor20> when 'true' ->
	      %% Line 3414
	      ( case _cor0 of
		  ( <( {'Externaltypereference',_cor21,_rec458,_cor22}
		       -| ['compiler_generated'] )> when 'true' ->
			_rec458
		    -| ['compiler_generated'] )
		  ( <_cor23> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','Externaltypereference'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'maybe_open_type'/4 =
    %% Line 3423
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <S,ClassSpec = {'objectclass',Fs,_cor27},OCFT = %% Line 3424
							  {'ObjectClassFieldType',_cor28,_cor29,FieldRefList,_cor30},%% Line 3425
														     Constr> when 'true' ->
	      let <Type> =
		  %% Line 3426
		  apply 'get_ObjectClassFieldType'/3
		      (S, Fs, FieldRefList)
	      in  let <FieldNames> =
		      %% Line 3427
		      apply 'get_referenced_fieldname'/1
			  (FieldRefList)
		  in  %% Line 3428
		      case apply 'last_fieldname'/1
			       (FieldRefList) of
			%% Line 3429
			<{'valuefieldreference',_cor31}> when 'true' ->
			    let <_cor7> =
				%% Line 3431
				call 'erlang':'setelement'
				    (5, OCFT, Type)
			    in  %% Line 3430
				call 'erlang':'setelement'
				    (4, _cor7, FieldNames)
			%% Line 3432
			<{'typefieldreference',_cor37}> when 'true' ->
			    let <_cor10> =
				catch
				    %% Line 3433
				    apply 'get_unique_fieldname'/2
					(S, {'classdef','false','undefined','undefined',ClassSpec})
			    in  let <_cor9> =
				    %% Line 3434
				    call 'asn1ct_gen':'get_constraint'
					(Constr, 'componentrelation')
				in  %% Line 3433
				    case <_cor10,_cor9> of
				      %% Line 3435
				      <Tuple,_cor38>
					  when try
						let <_cor11> =
						    call 'erlang':'tuple_size'
							(Tuple)
						in  call 'erlang':'=:='
							(_cor11, 3)
					    of <Try> ->
						Try
					    catch <T,R> ->
						'false' ->
					  let <_cor13> =
					      %% Line 3437
					      call 'erlang':'setelement'
						  (5, OCFT, 'ASN1_OPEN_TYPE')
					  in  %% Line 3436
					      call 'erlang':'setelement'
						  (4, _cor13, FieldNames)
				      %% Line 3438
				      <_cor44,'no'> when 'true' ->
					  let <_cor16> =
					      %% Line 3440
					      call 'erlang':'setelement'
						  (5, OCFT, 'ASN1_OPEN_TYPE')
					  in  %% Line 3439
					      call 'erlang':'setelement'
						  (4, _cor16, FieldNames)
				      %% Line 3441
				      <_fol3291,_fol3292> when 'true' ->
					  let <_cor19> =
					      %% Line 3443
					      call 'erlang':'setelement'
						  (5, OCFT, Type)
					  in  %% Line 3442
					      call 'erlang':'setelement'
						  (4, _cor19, FieldNames)
				    end
			( <_cor22> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor22})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor26,_cor25,_cor24,_cor23> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor26,_cor25,_cor24,_cor23})
		  -| [{'function_name',{'maybe_open_type',4}}] )
	    -| ['compiler_generated'] )
	end
'last_fieldname'/1 =
    %% Line 3447
    fun (_cor0) ->
	case _cor0 of
	  <FieldRefList>
	      when call 'erlang':'is_list'
		    (_cor0) ->
	      %% Line 3448
	      call 'lists':'last'
		  (FieldRefList)
	  %% Line 3449
	  <{FieldName,_cor4}>
	      when call 'erlang':'is_atom'
		    (FieldName) ->
	      %% Line 3450
	      case call 'erlang':'atom_to_list'
		       (FieldName) of
		<[A|_cor5]> when 'true' ->
		    %% Line 3451
		    case apply 'is_lowercase'/1
			     (A) of
		      %% Line 3452
		      <'true'> when 'true' ->
			  %% Line 3453
			  {'valuefieldreference',FieldName}
		      %% Line 3454
		      <_cor6> when 'true' ->
			  %% Line 3455
			  {'typefieldreference',FieldName}
		    end
		( <_cor1> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor1})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3})
		  -| [{'function_name',{'last_fieldname',1}}] )
	    -| ['compiler_generated'] )
	end
'is_open_type'/1 =
    %% Line 3458
    fun (_cor0) ->
	case _cor0 of
	  <{'ObjectClassFieldType',_cor2,_cor3,_cor4,'ASN1_OPEN_TYPE'}> when 'true' ->
	      %% Line 3459
	      'true'
	  %% Line 3460
	  <{'ObjectClassFieldType',_cor5,_cor6,_cor7,_cor8}> when 'true' ->
	      %% Line 3461
	      'false'
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'is_open_type',1}}] )
	    -| ['compiler_generated'] )
	end
'notify_if_not_ptype'/2 =
    %% Line 3464
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,{'pvaluesetdef',_cor13,_cor14,_cor15,_cor16,Type,_cor17}> when 'true' ->
	      %% Line 3465
	      ( case Type of
		  ( <( {'type',_cor18,_rec463,_cor19,_cor20,_cor21}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec463 of
			  %% Line 3466
			  <Ref = {'Externaltypereference',_cor23,_cor24,_cor25}> when ( 'true'
											-| ['compiler_generated'] ) ->
			      %% Line 3467
			      case apply 'get_referenced_type'/2
				       (S, Ref) of
				%% Line 3468
				<{_cor26,{'classdef',_cor27,_cor28,_cor29,_cor30}}> when 'true' ->
				    %% Line 3469
				    call 'erlang':'throw'
					('pobjectsetdef')
				%% Line 3470
				<{_cor31,{'typedef',_cor32,_cor33,_cor34,_cor35}}> when 'true' ->
				    %% Line 3471
				    call 'erlang':'throw'
					('pvalueset')
				( <_cor4> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor4})
				  -| ['compiler_generated'] )
			      end
			  %% Line 3473
			  <T = {'type',_cor36,_cor37,_cor38,_cor39,_cor40}> when ( 'true'
										   -| ['compiler_generated'] ) ->
			      %% Line 3474
			      call 'erlang':'throw'
				  ('pvalueset')
			  ( <_cor5> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor5})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor22> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','type'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 3476
	  <_X_S,PT = {'ptypedef',_cor41,_cor42,_cor43,_cor44,_cor45}> when 'true' ->
	      %% Line 3479
	      case _cor45 of
		%% Line 3480
		<{'objectclass',_cor51,_cor52}> when 'true' ->
		    call 'erlang':'throw'
			({'asn1_class',PT})
		%% Line 3481
		<_cor53> when 'true' ->
		    'ok'
	      end
	  %% Line 3483
	  <S,{'pobjectsetdef',_cor54,_cor55,_cor56,_cor57,Cl,_cor58}> when 'true' ->
	      %% Line 3484
	      case Cl of
		%% Line 3485
		<{'Externaltypereference',_cor59,_cor60,_cor61}> when 'true' ->
		    %% Line 3486
		    case apply 'get_referenced_type'/2
			     (S, Cl) of
		      %% Line 3487
		      <{_cor62,{'classdef',_cor63,_cor64,_cor65,_cor66}}> when 'true' ->
			  %% Line 3488
			  call 'erlang':'throw'
			      ('pobjectsetdef')
		      %% Line 3489
		      <{_cor67,{'typedef',_cor68,_cor69,_cor70,_cor71}}> when 'true' ->
			  %% Line 3490
			  call 'erlang':'throw'
			      ('pvalueset')
		      ( <_cor9> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_cor9})
			-| ['compiler_generated'] )
		    end
		%% Line 3492
		<_cor72> when 'true' ->
		    %% Line 3493
		    call 'erlang':'throw'
			('pobjectsetdef')
	      end
	  %% Line 3495
	  <_X_S,PT> when 'true' ->
	      %% Line 3496
	      call 'erlang':'throw'
		  ({'error',{[115|[117|[112|[112|[111|[115|[101|[100|[32|[116|[111|[32|[98|[101|[32|[97|[32|[112|[97|[114|[97|[109|[101|[116|[101|[114|[105|[122|[101|[100|[32|[116|[121|[112|[101]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],PT}})
	end
'instantiate_ptype'/3 =
    %% Line 3498
    fun (_cor2,_cor1,_cor0) ->
	%% Line 3499
	case _cor1 of
	  <{'ptypedef',_cor25,_cor26,_cor27,Args,Type}> when 'true' ->
	      %% Line 3500
	      case Type of
		<{'type',_cor28,_cor29,_cor30,_cor31,_cor32}> when 'true' ->
		    let <_cor6> =
			call 'erlang':'setelement'
			    (6, Type, 'yes')
		    in  let <NewType> =
			    apply 'check_ptype'/3
				(_cor2, _cor1, _cor6)
			in  let <MatchedArgs> =
				%% Line 3501
				apply 'match_args'/4
				    (_cor2, Args, _cor0, [])
			    in  %% Line 3502
				( case _cor2 of
				    ( <( {'state',_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_rec466,_cor41,_cor42,_cor43,_cor44,_cor45}
					 -| ['compiler_generated'] )> when 'true' ->
					  let <_rec467> =
					      %% Line 3503
					      call 'erlang':'++'
						  (MatchedArgs, _rec466)
					  in  let <_cor14> =
						  %% Line 3503
						  call 'erlang':'setelement'
						      (11, _cor2, [])
					      in  let <_cor15> =
						      %% Line 3503
						      call 'erlang':'setelement'
							  (9, _cor14, _rec467)
						  in  let <_cor17> =
							  %% Line 3503
							  call 'erlang':'setelement'
							      (4, _cor15, NewType)
						      in  let <_cor21> =
							      %% Line 3505
							      call 'erlang':'setelement'
								  (6, _cor1, NewType)
							  in  %% Line 3505
							      apply 'check_type'/3
								  (_cor17, _cor21, NewType)
				      -| ['compiler_generated'] )
				    ( <_cor46> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','state'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
		( <_cor33> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','type'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'get_datastr_name'/1 =
    %% Line 3507
    fun (_cor0) ->
	case _cor0 of
	  <{'typedef',_cor2,_cor3,N,_cor4}> when 'true' ->
	      %% Line 3508
	      N
	  %% Line 3509
	  <{'classdef',_cor5,_cor6,N,_cor7}> when 'true' ->
	      %% Line 3510
	      N
	  %% Line 3511
	  <{'valuedef',_cor8,_cor9,N,_cor10,_cor11,_cor12}> when 'true' ->
	      %% Line 3512
	      N
	  %% Line 3513
	  <{'ptypedef',_cor13,_cor14,N,_cor15,_cor16}> when 'true' ->
	      %% Line 3514
	      N
	  %% Line 3515
	  <{'pvaluedef',_cor17,_cor18,N,_cor19,_cor20,_cor21}> when 'true' ->
	      %% Line 3516
	      N
	  %% Line 3517
	  <{'pvaluesetdef',_cor22,_cor23,N,_cor24,_cor25,_cor26}> when 'true' ->
	      %% Line 3518
	      N
	  %% Line 3519
	  <{'pobjectdef',_cor27,_cor28,N,_cor29,_cor30,_cor31}> when 'true' ->
	      %% Line 3520
	      N
	  %% Line 3521
	  <{'pobjectsetdef',_cor32,_cor33,N,_cor34,_cor35,_cor36}> when 'true' ->
	      %% Line 3522
	      N
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'get_datastr_name',1}}] )
	    -| ['compiler_generated'] )
	end
'get_pt_args'/1 =
    %% Line 3525
    fun (_cor0) ->
	case _cor0 of
	  <{'ptypedef',_cor2,_cor3,_cor4,Args,_cor5}> when 'true' ->
	      %% Line 3526
	      Args
	  %% Line 3527
	  <{'pvaluesetdef',_cor6,_cor7,_cor8,Args,_cor9,_cor10}> when 'true' ->
	      %% Line 3528
	      Args
	  %% Line 3529
	  <{'pvaluedef',_cor11,_cor12,_cor13,Args,_cor14,_cor15}> when 'true' ->
	      %% Line 3530
	      Args
	  %% Line 3531
	  <{'pobjectdef',_cor16,_cor17,_cor18,Args,_cor19,_cor20}> when 'true' ->
	      %% Line 3532
	      Args
	  %% Line 3533
	  <{'pobjectsetdef',_cor21,_cor22,_cor23,Args,_cor24,_cor25}> when 'true' ->
	      %% Line 3534
	      Args
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'get_pt_args',1}}] )
	    -| ['compiler_generated'] )
	end
'get_pt_spec'/1 =
    %% Line 3536
    fun (_cor0) ->
	case _cor0 of
	  <{'ptypedef',_cor2,_cor3,_cor4,_cor5,Type}> when 'true' ->
	      %% Line 3537
	      Type
	  %% Line 3538
	  <{'pvaluedef',_cor6,_cor7,_cor8,_cor9,_cor10,Value}> when 'true' ->
	      %% Line 3539
	      Value
	  %% Line 3540
	  <{'pvaluesetdef',_cor11,_cor12,_cor13,_cor14,_cor15,VS}> when 'true' ->
	      %% Line 3541
	      VS
	  %% Line 3542
	  <{'pobjectdef',_cor16,_cor17,_cor18,_cor19,_cor20,Def}> when 'true' ->
	      %% Line 3543
	      Def
	  %% Line 3544
	  <{'pobjectsetdef',_cor21,_cor22,_cor23,_cor24,_cor25,Def}> when 'true' ->
	      %% Line 3545
	      Def
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'get_pt_spec',1}}] )
	    -| ['compiler_generated'] )
	end
'match_args'/4 =
    %% Line 3578
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <S,FA = [FormArg|Ft],AA = [ActArg|At],Acc> when 'true' ->
	      %% Line 3579
	      ( case S of
		  ( <( {'state',_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_rec470,_cor28,_cor29,_cor30,_cor31,_cor32}
		       -| ['compiler_generated'] )> when 'true' ->
			%% Line 3580
			case apply 'categorize_arg'/3
				 (S, FormArg, ActArg) of
			  %% Line 3581
			  <[CategorizedArg|[]]> when 'true' ->
			      let <_rec471> =
				  %% Line 3583
				  [{FormArg,CategorizedArg}|_rec470]
			      in  let <_cor10> =
				      %% Line 3582
				      call 'erlang':'setelement'
					  (9, S, _rec471)
				  in  %% Line 3582
				      apply 'match_args'/4
					  (_cor10, %% Line 3584
						   Ft, %% Line 3584
						       At, %% Line 3584
							   [{FormArg,CategorizedArg}|Acc])
			  %% Line 3585
			  <CategorizedArgs> when 'true' ->
			      let <_rec473> =
				  %% Line 3586
				  call 'erlang':'++'
				      (CategorizedArgs, _rec470)
			      in  let <_cor15> =
				      %% Line 3586
				      call 'erlang':'setelement'
					  (9, S, _rec473)
				  in  let <_cor11> =
					  %% Line 3587
					  call 'erlang':'++'
					      (CategorizedArgs, AA)
				      in  %% Line 3586
					  apply 'match_args'/4
					      (_cor15, %% Line 3587
						       FA, _cor11, %% Line 3587
								   Acc)
			end
		    -| ['compiler_generated'] )
		  ( <_cor33> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 3589
	  <_X_S,[],[],Acc> when 'true' ->
	      %% Line 3590
	      call 'lists':'reverse'
		  (Acc)
	  %% Line 3591
	  <_cor62,_cor63,_cor64,_cor65> when 'true' ->
	      %% Line 3592
	      call 'erlang':'throw'
		  ({'error',{'asn1',{'wrong_number_of_arguments'}}})
	end
'categorize_arg'/3 =
    %% Line 3597
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,{Governor,Param},ActArg> when 'true' ->
	      let <_cor4> =
		  %% Line 3598
		  apply 'governor_category'/2
		      (S, Governor)
	      in  let <_cor3> =
		      %% Line 3598
		      apply 'parameter_name_style'/2
			  (Param, ActArg)
		  in  %% Line 3598
		      case <_cor4,_cor3> of
			%% Line 3601
			<'type','beginning_lowercase'> when 'true' ->
			    %% Line 3602
			    apply 'categorize'/4
				(S, 'value', Governor, ActArg)
			%% Line 3603
			<'type','beginning_uppercase'> when 'true' ->
			    %% Line 3604
			    apply 'categorize'/3
				(S, 'value_set', ActArg)
			%% Line 3607
			<{'class',ClassRef},'beginning_lowercase'> when 'true' ->
			    %% Line 3608
			    apply 'categorize'/4
				(S, 'object', ActArg, ClassRef)
			%% Line 3609
			<{'class',ClassRef},'beginning_uppercase'> when 'true' ->
			    %% Line 3610
			    apply 'categorize'/4
				(S, 'object_set', ActArg, ClassRef)
			%% Line 3611
			<_fol3443,_fol3444> when 'true' ->
			    %% Line 3612
			    [ActArg|[]]
		      end
	  %% Line 3614
	  <S,FormalArg,ActualArg> when 'true' ->
	      %% Line 3616
	      case FormalArg of
		%% Line 3617
		<{'Externaltypereference',_cor12,_cor13,Name}> when 'true' ->
		    %% Line 3618
		    case apply 'is_class_name'/1
			     (Name) of
		      %% Line 3619
		      <'true'> when 'true' ->
			  %% Line 3620
			  apply 'categorize'/3
			      (S, 'class', ActualArg)
		      %% Line 3621
		      <_cor14> when 'true' ->
			  %% Line 3622
			  apply 'categorize'/3
			      (S, 'type', ActualArg)
		    end
		%% Line 3624
		<FA> when 'true' ->
		    %% Line 3625
		    call 'erlang':'throw'
			({'error',{'unexpected_formal_argument',FA}})
	      end
	end
'governor_category'/2 =
    %% Line 3628
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,{'type',_cor7,Eref = {'Externaltypereference',_cor8,_cor9,_cor10},_cor11,_cor12,_cor13}> when %% Line 3629
													   ( 'true'
													     -| ['compiler_generated'] ) ->
	      %% Line 3630
	      apply 'governor_category'/2
		  (S, Eref)
	  %% Line 3631
	  <_X_S,{'type',_cor14,_cor15,_cor16,_cor17,_cor18}> when 'true' ->
	      %% Line 3632
	      'type'
	  %% Line 3633
	  <S,Ref = {'Externaltypereference',_cor19,_cor20,_cor21}> when ( 'true'
									  -| ['compiler_generated'] ) ->
	      %% Line 3634
	      case apply 'is_class'/2
		       (S, Ref) of
		%% Line 3635
		<'true'> when 'true' ->
		    %% Line 3636
		    {'class',Ref}
		%% Line 3637
		<_cor22> when 'true' ->
		    %% Line 3638
		    'type'
	      end
	  %% Line 3640
	  <_cor23,Class>
	      when let <_cor3> =
		    %% Line 3641
		    call 'erlang':'=:='
			(Class, 'TYPE-IDENTIFIER')
		in  let <_cor4> =
			%% Line 3641
			call 'erlang':'=:='
			    (Class, 'ABSTRACT-SYNTAX')
		    in  %% Line 3641
			call 'erlang':'or'
			    (_cor3, _cor4) ->
	      %% Line 3642
	      'class'
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'governor_category',2}}] )
	    -| ['compiler_generated'] )
	end
'parameter_name_style'/2 =
    %% Line 3651
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_cor4,{'Externaltypereference',_cor5,_cor6,Name}> when 'true' ->
	      %% Line 3652
	      apply 'name_category'/1
		  (Name)
	  %% Line 3653
	  <_cor7,{'Externalvaluereference',_cor8,_cor9,Name}> when 'true' ->
	      %% Line 3654
	      apply 'name_category'/1
		  (Name)
	  %% Line 3655
	  <_cor10,{'valueset',_cor11}> when 'true' ->
	      %% Line 3657
	      'beginning_uppercase'
	  %% Line 3658
	  <{'Externalvaluereference',_cor12,_cor13,_cor14},_cor15> when 'true' ->
	      %% Line 3659
	      'beginning_lowercase'
	  %% Line 3660
	  <{'Externaltypereference',_cor16,_cor17,Name},_cor18> when 'true' ->
	      %% Line 3661
	      apply 'name_category'/1
		  (Name)
	  %% Line 3662
	  <_cor19,_cor20> when 'true' ->
	      %% Line 3663
	      'undefined'
	end
'name_category'/1 =
    %% Line 3665
    fun (_cor0) ->
	case _cor0 of
	  <Atom>
	      when call 'erlang':'is_atom'
		    (_cor0) ->
	      let <_cor1> =
		  %% Line 3666
		  call 'erlang':'atom_to_list'
		      (Atom)
	      in  %% Line 3666
		  apply 'name_category'/1
		      (_cor1)
	  %% Line 3667
	  <[H|T]> when 'true' ->
	      %% Line 3668
	      case apply 'is_lowercase'/1
		       (H) of
		%% Line 3669
		<'true'> when 'true' ->
		    %% Line 3670
		    'beginning_lowercase'
		%% Line 3671
		<_cor5> when 'true' ->
		    %% Line 3672
		    case apply 'is_class_name'/1
			     (T) of
		      %% Line 3673
		      <'true'> when 'true' ->
			  %% Line 3674
			  'entirely_uppercase'
		      %% Line 3675
		      <_cor6> when 'true' ->
			  %% Line 3676
			  'beginning_uppercase'
		    end
	      end
	  %% Line 3679
	  <_cor7> when 'true' ->
	      %% Line 3680
	      'undefined'
	end
'is_lowercase'/1 =
    %% Line 3682
    fun (_cor0) ->
	case _cor0 of
	  <X>
	      when let <_cor1> =
		    call 'erlang':'>='
			(_cor0, 65)
		in  let <_cor2> =
			call 'erlang':'=<'
			    (_cor0, 87)
		    in  call 'erlang':'and'
			    (_cor1, _cor2) ->
	      %% Line 3683
	      'false'
	  %% Line 3684
	  <_cor4> when 'true' ->
	      %% Line 3685
	      'true'
	end
'is_class_name'/1 =
    %% Line 3687
    fun (_cor0) ->
	case _cor0 of
	  <Name>
	      when call 'erlang':'is_atom'
		    (_cor0) ->
	      let <_cor1> =
		  %% Line 3688
		  call 'erlang':'atom_to_list'
		      (Name)
	      in  %% Line 3688
		  apply 'is_class_name'/1
		      (_cor1)
	  %% Line 3689
	  <Name> when 'true' ->
	      let <_cor8> =
		  %% Line 3690
		  ( letrec
			'lc$^0'/1 =
			    fun (_cor6) ->
				case _cor6 of
				  <[X|_cor3]>
				      when let <_cor4> =
					    call 'erlang':'>='
						(X, 97)
					in  let <_cor5> =
						call 'erlang':'=<'
						    (X, 119)
					    in  call 'erlang':'and'
						    (_cor4, _cor5) ->
				      let <_cor7> =
					  apply 'lc$^0'/1
					      (_cor3)
				      in  ( [X|_cor7]
					    -| ['compiler_generated'] )
				  ( <[X|_cor3]> when 'true' ->
					apply 'lc$^0'/1
					    (_cor3)
				    -| ['compiler_generated'] )
				  <[]> when 'true' ->
				      []
				  ( <_cor6> when 'true' ->
					( primop 'match_fail'
					      ({'function_clause',_cor6})
					  -| [{'function_name',{'lc$^0',1}}] )
				    -| ['compiler_generated'] )
				end
		    in  apply 'lc$^0'/1
			    (Name)
		    -| ['list_comprehension'] )
	      in  %% Line 3690
		  case _cor8 of
		    %% Line 3691
		    <[]> when 'true' ->
			%% Line 3692
			'true'
		    %% Line 3693
		    <_cor11> when 'true' ->
			%% Line 3694
			'false'
		  end
	end
'categorize'/3 =
    %% Line 3700
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <_X_S,'type',{'object',_cor22,Type}> when 'true' ->
	      let <Def> =
		  %% Line 3703
		  ( fun (_cor7) ->
			case _cor7 of
			  <D = {'type',_cor23,_cor24,_cor25,_cor26,_cor27}> when 'true' ->
			      let <_cor6> =
				  %% Line 3704
				  apply 'new_reference_name'/1
				      ([116|[121|[112|[101|[95|[97|[114|[103|[117|[109|[101|[110|[116]]]]]]]]]]]]])
			      in  let <_cor5> =
				      %% Line 3705
				      call 'erlang':'setelement'
					  (6, D, 'yes')
				  in  %% Line 3704
				      {'typedef','false','undefined',_cor6,_cor5}
			  %% Line 3706
			  <{'setting',_cor34,Eref = {'Externaltypereference',_cor35,_cor36,_cor37}}> when ( 'true'
													    -| ['compiler_generated'] ) ->
			      %% Line 3707
			      Eref
			  %% Line 3708
			  <D> when 'true' ->
			      %% Line 3709
			      D
			end
		    -| [{'id',{0,0,'-categorize/3-fun-0-'}}] )
	      in  %% Line 3711
		  ( letrec
			'lc$^0'/1 =
			    fun (_cor12) ->
				case _cor12 of
				  <[X|_cor11]> when 'true' ->
				      let <_cor13> =
					  apply Def
					      (X)
				      in  let <_cor14> =
					      apply 'lc$^0'/1
						  (_cor11)
					  in  ( [_cor13|_cor14]
						-| ['compiler_generated'] )
				  <[]> when 'true' ->
				      []
				  ( <_cor12> when 'true' ->
					( primop 'match_fail'
					      ({'function_clause',_cor12})
					  -| [{'function_name',{'lc$^0',1}}] )
				    -| ['compiler_generated'] )
				end
		    in  apply 'lc$^0'/1
			    (Type)
		    -| ['list_comprehension'] )
	  %% Line 3712
	  <_X_S,'type',Def = {'type',_cor38,_cor39,_cor40,_cor41,_cor42}> when ( 'true'
										 -| ['compiler_generated'] ) ->
	      let <_cor18> =
		  %% Line 3713
		  apply 'new_reference_name'/1
		      ([116|[121|[112|[101|[95|[97|[114|[103|[117|[109|[101|[110|[116]]]]]]]]]]]]])
	      in  let <_cor17> =
		      %% Line 3714
		      call 'erlang':'setelement'
			  (6, Def, 'yes')
		  in  %% Line 3713
		      [{'typedef','false','undefined',_cor18,_cor17}|%% Line 3714
								     []]
	  %% Line 3715
	  <_cor49,_cor50,Def> when 'true' ->
	      %% Line 3716
	      [Def|[]]
	end
'categorize'/4 =
    %% Line 3717
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <S,'object_set',Def,ClassRef> when 'true' ->
	      let <_cor4> =
		  %% Line 3720
		  apply 'parse_objectset'/1
		      (Def)
	      in  let <NewObjSetSpec> =
		      %% Line 3719
		      apply 'check_object'/3
			  (S, Def, {'ObjectSet',ClassRef,'true','undefined',_cor4})
		  in  let <Name> =
			  %% Line 3721
			  apply 'new_reference_name'/1
			      ([111|[98|[106|[101|[99|[116|[95|[115|[101|[116|[95|[97|[114|[103|[117|[109|[101|[110|[116]]]]]]]]]]]]]]]]]]])
		      in  let <_cor7> =
			      %% Line 3722
			      apply 'save_object_set_instance'/3
				  (S, Name, NewObjSetSpec)
			  in  %% Line 3722
			      [_cor7|[]]
	  %% Line 3723
	  <_X_S,'object',Def,_X_ClassRef> when 'true' ->
	      %% Line 3725
	      [Def|[]]
	  %% Line 3726
	  <_X_S,'value',_X_Type,Value = {'valuedef',_cor14,_cor15,_cor16,_cor17,_cor18,_cor19}> when ( 'true'
												       -| ['compiler_generated'] ) ->
	      %% Line 3727
	      [Value|[]]
	  %% Line 3728
	  <S,'value',Type,Value> when 'true' ->
	      %% Line 3730
	      ( case S of
		  ( <( {'state',_cor20,_rec477,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31}
		       -| ['compiler_generated'] )> when 'true' ->
			[{'valuedef','false','undefined','undefined',Type,Value,_rec477}|[]]
		    -| ['compiler_generated'] )
		  ( <_cor32> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor13,_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12,_cor11,_cor10})
		  -| [{'function_name',{'categorize',4}}] )
	    -| ['compiler_generated'] )
	end
'parse_objectset'/1 =
    %% Line 3733
    fun (_cor0) ->
	case _cor0 of
	  <{'valueset',{'type',_cor2,Ref = {'Externaltypereference',_cor3,_cor4,_cor5},_cor6,_cor7,_cor8}}> when 'true' ->
	      %% Line 3734
	      Ref
	  %% Line 3735
	  <{'valueset',Set}> when 'true' ->
	      %% Line 3736
	      Set
	  %% Line 3737
	  <{'type',_cor9,Ref = {'Externaltypereference',_cor10,_cor11,_cor12},_cor13,_cor14,_cor15}> when ( 'true'
													    -| ['compiler_generated'] ) ->
	      %% Line 3738
	      Ref
	  %% Line 3739
	  <Set> when 'true' ->
	      %% Line 3741
	      Set
	end
'check_constraints'/2 =
    %% Line 3746
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,C>
	      when call 'erlang':'is_list'
		    (C) ->
	      %% Line 3747
	      apply 'check_constraints'/3
		  (S, C, [])
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'check_constraints',2}}] )
	    -| ['compiler_generated'] )
	end
'resolv_tuple_or_list'/2 =
    %% Line 3749
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,List>
	      when call 'erlang':'is_list'
		    (List) ->
	      let <_cor4> =
		  %% Line 3750
		  ( fun (_cor2) ->
			apply 'resolv_value'/2
			    (S, _cor2)
		    -| [{'id',{0,0,'-resolv_tuple_or_list/2-fun-0-'}}] )
	      in  %% Line 3750
		  call 'lists':'map'
		      (_cor4, List)
	  %% Line 3751
	  <S,{Lb,Ub}> when 'true' ->
	      let <_cor6> =
		  %% Line 3752
		  apply 'resolv_value'/2
		      (S, Lb)
	      in  let <_cor5> =
		      %% Line 3752
		      apply 'resolv_value'/2
			  (S, Ub)
		  in  %% Line 3752
		      {_cor6,_cor5}
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'resolv_tuple_or_list',2}}] )
	    -| ['compiler_generated'] )
	end
'resolv_value'/2 =
    %% Line 3758
    fun (_cor1,_cor0) ->
	%% Line 3759
	( case _cor1 of
	    ( <( {'state',_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_rec478,_cor14,_cor15,_cor16,_cor17,_cor18}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <Id> =
		      apply 'match_parameters'/3
			  (_cor1, _cor0, _rec478)
		  in  %% Line 3760
		      apply 'resolv_value1'/2
			  (_cor1, Id)
	      -| ['compiler_generated'] )
	    ( <_cor19> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'resolv_value1'/2 =
    %% Line 3762
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,ERef = {'Externalvaluereference',_cor14,_cor15,Name}> when 'true' ->
	      let <_cor4> =
		  catch
		      %% Line 3763
		      ( case S of
			  ( <( {'state',_cor16,_cor17,_rec479,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27}
			       -| ['compiler_generated'] )> when 'true' ->
				apply 'resolve_namednumber'/3
				    (S, _rec479, Name)
			    -| ['compiler_generated'] )
			  ( <_cor28> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','state'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	      in  %% Line 3763
		  case _cor4 of
		    %% Line 3764
		    <V>
			when call 'erlang':'is_integer'
			      (_cor4) ->
			%% Line 3765
			V
		    %% Line 3766
		    <_cor29> when 'true' ->
			%% Line 3767
			case apply 'get_referenced_type'/2
				 (S, ERef) of
			  %% Line 3768
			  <{Err,_X_Reason}>
			      when let <_cor5> =
				    call 'erlang':'=:='
					(Err, 'error')
				in  let <_cor6> =
					call 'erlang':'=:='
					    (Err, 'EXIT')
				    in  call 'erlang':'or'
					    (_cor5, _cor6) ->
			      %% Line 3769
			      call 'erlang':'throw'
				  ({'error',{'asn1',{'undefined_type_or_value',%% Line 3770
									       Name}}})
			  %% Line 3771
			  <{_X_M,VDef}> when 'true' ->
			      %% Line 3772
			      apply 'resolv_value1'/2
				  (S, VDef)
			  ( <_cor7> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor7})
			    -| ['compiler_generated'] )
			end
		  end
	  %% Line 3775
	  <S,{'gt',V}> when 'true' ->
	      %% Line 3776
	      case apply 'resolv_value1'/2
		       (S, V) of
		%% Line 3777
		<Int>
		    when call 'erlang':'is_integer'
			  (Int) ->
		    %% Line 3778
		    call 'erlang':'+'
			(Int, 1)
		%% Line 3779
		<Other> when 'true' ->
		    %% Line 3780
		    call 'erlang':'throw'
			({'error',{'asn1',{'not_integer_value',Other}}})
	      end
	  %% Line 3782
	  <S,{'lt',V}> when 'true' ->
	      %% Line 3783
	      case apply 'resolv_value1'/2
		       (S, V) of
		%% Line 3784
		<Int>
		    when call 'erlang':'is_integer'
			  (Int) ->
		    %% Line 3785
		    call 'erlang':'-'
			(Int, 1)
		%% Line 3786
		<Other> when 'true' ->
		    %% Line 3787
		    call 'erlang':'throw'
			({'error',{'asn1',{'not_integer_value',Other}}})
	      end
	  %% Line 3789
	  <S,{'ValueFromObject',{'object',Object},[{'valuefieldreference',%% Line 3790
									  FieldName}|%% Line 3790
										     []]}> when 'true' ->
	      %% Line 3793
	      apply 'resolve_value_from_object'/3
		  (S, Object, FieldName)
	  %% Line 3794
	  <_cor30,{'valuedef','true',_cor31,_cor32,_cor33,V,_cor34}> when 'true' ->
	      %% Line 3795
	      V
	  %% Line 3796
	  <S,{'valuedef',_cor35,_cor36,_cor37,_X_T,%% Line 3797
						   {'ValueFromObject',{'object',Object},%% Line 3798
											[{'valuefieldreference',%% Line 3799
														FieldName}|%% Line 3799
															   []]},_cor38}> when 'true' ->
	      %% Line 3800
	      apply 'resolve_value_from_object'/3
		  (S, Object, FieldName)
	  %% Line 3801
	  <S,VDef = {'valuedef',_cor39,_cor40,_cor41,_cor42,_cor43,_cor44}> when 'true' ->
	      %% Line 3802
	      case apply 'check_value'/2
		       (S, VDef) of
		<{'valuedef',_cor45,_cor46,_cor47,_cor48,Val,_cor49}> when 'true' ->
		    %% Line 3803
		    Val
		( <_cor11> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor11})
		  -| ['compiler_generated'] )
	      end
	  %% Line 3804
	  <_cor50,V> when 'true' ->
	      %% Line 3805
	      V
	end
'resolve_value_from_object'/3 =
    %% Line 3806
    fun (_cor2,_cor1,_cor0) ->
	%% Line 3807
	case apply 'get_referenced_type'/2
		 (_cor2, _cor1) of
	  <{_cor14,ObjTDef}> when 'true' ->
	      %% Line 3808
	      ( case ObjTDef of
		  ( <( {'typedef',_cor15,_cor16,_cor17,_rec480}
		       -| ['compiler_generated'] )> when 'true' ->
			%% Line 3809
			( case apply 'check_object'/3
				   (_cor2, ObjTDef, _rec480) of
			    ( <( {'Object',_cor19,_cor20,_rec481}
				 -| ['compiler_generated'] )> when 'true' ->
				  case _rec481 of
				    <{_cor22,_cor23,Components}> when 'true' ->
					%% Line 3810
					case call 'lists':'keysearch'
						 (_cor0, 1, Components) of
					  %% Line 3811
					  <{'value',{_cor24,{'valuedef',_cor25,_cor26,_cor27,_cor28,Val,_cor29}}}> when 'true' ->
					      %% Line 3812
					      Val
					  %% Line 3813
					  <_cor30> when 'true' ->
					      %% Line 3814
					      apply 'error'/1
						  ({'value',[105|[108|[108|[101|[103|[97|[108|[32|[118|[97|[108|[117|[101|[32|[105|[110|[32|[99|[111|[110|[115|[116|[114|[97|[105|[110|[116]]]]]]]]]]]]]]]]]]]]]]]]]]],_cor2})
					end
				    ( <_cor9> when 'true' ->
					  primop 'match_fail'
					      ({'badmatch',_cor9})
				      -| ['compiler_generated'] )
				  end
			      -| ['compiler_generated'] )
			    ( <_cor21> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','Object'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		  ( <_cor18> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','typedef'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'resolve_namednumber'/3 =
    %% Line 3818
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,{'typedef',_cor9,_cor10,_cor11,Type},Name> when 'true' ->
	      %% Line 3819
	      ( case Type of
		  ( <( {'type',_cor12,_rec482,_cor13,_cor14,_cor15}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec482 of
			  %% Line 3820
			  <{'ENUMERATED',NameList}> when 'true' ->
			      %% Line 3821
			      apply 'resolve_namednumber_1'/4
				  (S, Name, NameList, Type)
			  %% Line 3822
			  <{'INTEGER',NameList}> when 'true' ->
			      %% Line 3823
			      apply 'resolve_namednumber_1'/4
				  (S, Name, NameList, Type)
			  %% Line 3824
			  <_cor17> when 'true' ->
			      %% Line 3825
			      'not_enumerated'
			end
		    -| ['compiler_generated'] )
		  ( <_cor16> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','type'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6})
		  -| [{'function_name',{'resolve_namednumber',3}}] )
	    -| ['compiler_generated'] )
	end
'resolve_namednumber_1'/4 =
    %% Line 3828
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 3829
	( case _cor0 of
	    ( <( {'type',_cor12,_cor13,_rec483,_cor14,_cor15}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <NamedNumberList> =
		      apply 'check_enumerated'/3
			  (_cor3, _cor1, _rec483)
		  in  %% Line 3830
		      case apply 'lookup_enum_value'/3
			       (_cor3, _cor2, NamedNumberList) of
			<{_cor17,N}> when 'true' ->
			    %% Line 3831
			    N
			( <_cor7> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor7})
			  -| ['compiler_generated'] )
		      end
	      -| ['compiler_generated'] )
	    ( <_cor16> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','type'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'check_constraints'/3 =
    %% Line 3833
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,[{'ContainedSubtype',Type}|Rest],Acc> when 'true' ->
	      %% Line 3834
	      ( case Type of
		  ( <( {'type',_cor27,_rec484,_cor28,_cor29,_cor30}
		       -| ['compiler_generated'] )> when 'true' ->
			case apply 'get_referenced_type'/2
				 (S, _rec484) of
			  <{RefMod,CTDef}> when 'true' ->
			      let <_rec485> =
				  %% Line 3835
				  apply 'load_asn1_module'/2
				      (S, RefMod)
			      in  let <_rec486> =
				      %% Line 3836
				      apply 'get_datastr_name'/1
					  (CTDef)
				  in  %% Line 3835
				      case S of
					<{'state',_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44}> when 'true' ->
					    let <_cor9> =
						%% Line 3836
						call 'erlang':'setelement'
						    (5, S, _rec486)
					    in  let <_cor10> =
						    %% Line 3836
						    call 'erlang':'setelement'
							(4, _cor9, CTDef)
						in  let <_cor11> =
							call 'erlang':'setelement'
							    (3, _cor10, RefMod)
						    in  let <_cor13> =
							    call 'erlang':'setelement'
								(2, _cor11, _rec485)
							in  %% Line 3837
							    ( case CTDef of
								( <( {'typedef',_cor59,_cor60,_cor61,_rec489}
								     -| ['compiler_generated'] )> when 'true' ->
								      %% Line 3838
								      ( case apply 'check_type'/3
										 (_cor13, _cor35, _rec489) of
									  ( <( {'type',_cor63,_cor64,_rec490,_cor65,_cor66}
									       -| ['compiler_generated'] )> when 'true' ->
										let <_cor22> =
										    call 'erlang':'++'
											(_rec490, Acc)
										in  apply 'check_constraints'/3
											(S, Rest, _cor22)
									    -| ['compiler_generated'] )
									  ( <_cor67> when 'true' ->
										( call ( 'erlang'
											 -| ['compiler_generated'] ):( 'error'
														       -| ['compiler_generated'] )
										      (( {'badrecord','type'}
											 -| ['compiler_generated'] ))
										  -| ['compiler_generated'] )
									    -| ['compiler_generated'] )
									end
									-| ['compiler_generated'] )
								  -| ['compiler_generated'] )
								( <_cor62> when 'true' ->
								      ( call ( 'erlang'
									       -| ['compiler_generated'] ):( 'error'
													     -| ['compiler_generated'] )
									    (( {'badrecord','typedef'}
									       -| ['compiler_generated'] ))
									-| ['compiler_generated'] )
								  -| ['compiler_generated'] )
							      end
							      -| ['compiler_generated'] )
					( <_cor45> when 'true' ->
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'error'
										     -| ['compiler_generated'] )
						    (( {'badrecord','state'}
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
			  ( <_cor5> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor5})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor31> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','type'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 3839
	  <S,[C|Rest],Acc> when 'true' ->
	      let <_cor23> =
		  %% Line 3840
		  apply 'check_constraint'/2
		      (S, C)
	      in  %% Line 3840
		  apply 'check_constraints'/3
		      (S, Rest, [_cor23|Acc])
	  %% Line 3841
	  <S,[],Acc> when 'true' ->
	      %% Line 3842
	      apply 'constraint_merge'/2
		  (S, Acc)
	  ( <_cor26,_cor25,_cor24> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor26,_cor25,_cor24})
		  -| [{'function_name',{'check_constraints',3}}] )
	    -| ['compiler_generated'] )
	end
'range_check'/1 =
    %% Line 3845
    fun (_cor0) ->
	case _cor0 of
	  <F = {FixV,_cor2}>
	      when call 'erlang':'=:='
		    (_cor2,
		     FixV) ->
	      %% Line 3847
	      F
	  %% Line 3848
	  <VR = {Lb,Ub}>
	      when call 'erlang':'<'
		    (Lb,
		     Ub) ->
	      %% Line 3849
	      VR
	  %% Line 3850
	  <Err = {_cor3,_cor4}> when 'true' ->
	      %% Line 3851
	      call 'erlang':'throw'
		  ({'error',{'asn1',{'illegal_size_constraint',Err}}})
	  %% Line 3852
	  <Value> when 'true' ->
	      %% Line 3853
	      Value
	end
'check_constraint'/2 =
    %% Line 3855
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,Ext = {'Externaltypereference',_cor89,_cor90,_cor91}> when ( 'true'
									  -| ['compiler_generated'] ) ->
	      %% Line 3856
	      apply 'check_externaltypereference'/2
		  (S, Ext)
	  %% Line 3859
	  <S,{'SizeConstraint',{Lb,Ub}}>
	      when let <_cor2> =
		    %% Line 3860
		    call 'erlang':'is_list'
			(Lb)
		in  let <_cor4> =
			%% Line 3860
			try
			    let <_cor3> =
				call 'erlang':'tuple_size'
				    (Lb)
			    in  call 'erlang':'=:='
				    (_cor3, 2)
			of <Try> ->
			    Try
			catch <T,R> ->
			    'false'
		    in  %% Line 3860
			call 'erlang':'or'
			    (_cor2, _cor4) ->
	      let <_cor5> =
		  %% Line 3861
		  apply 'resolv_tuple_or_list'/2
		      (S, Lb)
	      in  let <NewLb> =
		      %% Line 3861
		      apply 'range_check'/1
			  (_cor5)
		  in  let <_cor7> =
			  %% Line 3862
			  apply 'resolv_tuple_or_list'/2
			      (S, Ub)
		      in  let <NewUb> =
			      %% Line 3862
			      apply 'range_check'/1
				  (_cor7)
			  in  %% Line 3863
			      {'SizeConstraint',{NewLb,NewUb}}
	  %% Line 3864
	  <S,{'SizeConstraint',{Lb,Ub}}> when 'true' ->
	      let <_cor10> =
		  %% Line 3865
		  apply 'resolv_value'/2
		      (S, Lb)
	      in  let <_cor9> =
		      %% Line 3865
		      apply 'resolv_value'/2
			  (S, Ub)
		  in  %% Line 3865
		      case <_cor10,_cor9> of
			%% Line 3866
			<FixV,_cor92>
			    when call 'erlang':'=:='
				  (_cor92,
				   FixV) ->
			    %% Line 3867
			    {'SizeConstraint',FixV}
			%% Line 3868
			<Low,High>
			    when call 'erlang':'<'
				  (Low,
				   High) ->
			    %% Line 3869
			    {'SizeConstraint',{Low,High}}
			%% Line 3870
			<_fol3506,_fol3507> when 'true' ->
			    %% Line 3871
			    let <Err> = {_fol3506,_fol3507}
			    in  call 'erlang':'throw'
				    ({'error',{'asn1',{'illegal_size_constraint',Err}}})
		      end
	  %% Line 3873
	  <S,{'SizeConstraint',Lb}> when 'true' ->
	      let <_cor12> =
		  %% Line 3874
		  apply 'resolv_value'/2
		      (S, Lb)
	      in  %% Line 3874
		  {'SizeConstraint',_cor12}
	  %% Line 3876
	  <S,{'SingleValue',L}>
	      when call 'erlang':'is_list'
		    (L) ->
	      let <F> =
		  %% Line 3877
		  ( fun (_cor13) ->
			apply 'resolv_value'/2
			    (S, _cor13)
		    -| [{'id',{0,0,'-check_constraint/2-fun-0-'}}] )
	      in  let <_cor16> =
		      %% Line 3878
		      call 'lists':'map'
			  (F, L)
		  in  let <_cor17> =
			  %% Line 3878
			  call 'lists':'sort'
			      (_cor16)
		      in  %% Line 3878
			  {'SingleValue',_cor17}
	  %% Line 3880
	  <S,{'SingleValue',V}>
	      when call 'erlang':'is_integer'
		    (V) ->
	      let <Val> =
		  %% Line 3881
		  apply 'resolv_value'/2
		      (S, V)
	      in  %% Line 3883
		  {'SingleValue',Val}
	  %% Line 3884
	  <S,{'SingleValue',V}> when 'true' ->
	      let <_cor19> =
		  %% Line 3885
		  apply 'resolv_value'/2
		      (S, V)
	      in  %% Line 3885
		  {'SingleValue',_cor19}
	  %% Line 3887
	  <S,{'ValueRange',{Lb,Ub}}> when 'true' ->
	      let <_cor21> =
		  %% Line 3888
		  apply 'resolv_value'/2
		      (S, Lb)
	      in  let <_cor20> =
		      %% Line 3888
		      apply 'resolv_value'/2
			  (S, Ub)
		  in  %% Line 3888
		      {'ValueRange',{_cor21,_cor20}}
	  %% Line 3890
	  <S,{VR = {'ValueRange',{_X_Lb,_X_Ub}},Rest}> when 'true' ->
	      let <_cor22> =
		  %% Line 3891
		  apply 'check_constraint'/2
		      (S, VR)
	      in  %% Line 3891
		  {_cor22,Rest}
	  %% Line 3892
	  <_X_S,{'PermittedAlphabet',PA}> when 'true' ->
	      let <_cor23> =
		  %% Line 3893
		  apply 'permitted_alphabet_cnstr'/1
		      (PA)
	      in  %% Line 3893
		  {'PermittedAlphabet',_cor23}
	  %% Line 3895
	  <S,{'valueset',Type}> when 'true' ->
	      %% Line 3896
	      ( case S of
		  ( <( {'state',_cor93,_cor94,_cor95,_rec491,_cor96,_cor97,_cor98,_cor99,_cor100,_cor101,_cor102,_cor103,_cor104}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor26> =
			    apply 'check_type'/3
				(S, _rec491, Type)
			in  {'valueset',_cor26}
		    -| ['compiler_generated'] )
		  ( <_cor105> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 3898
	  <_X_S,ST = {'simpletable',Type}>
	      when call 'erlang':'is_atom'
		    (Type) ->
	      %% Line 3900
	      ST
	  %% Line 3901
	  <S,{'simpletable',Type}> when 'true' ->
	      let <_cor28> =
		  %% Line 3902
		  case Type of
		    %% Line 3903
		    <{'type',_cor106,D,_cor107,_cor108,_cor109}> when 'true' ->
			D
		    %% Line 3904
		    <{'SingleValue',ObjRef = {'Externalvaluereference',_cor110,_cor111,_cor112}}> when 'true' ->
			%% Line 3905
			ObjRef
		    ( <_cor27> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor27})
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 3907
		  ( case S of
		      ( <( {'state',_cor113,_cor114,_cor115,_cor116,_cor117,_cor118,_cor119,_rec492,_cor120,_cor121,_cor122,_cor123,_cor124}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <C> =
				apply 'match_parameters'/3
				    (S, _cor28, _rec492)
			    in  %% Line 3908
				case C of
				  %% Line 3909
				  <{'Externaltypereference',_cor126,_cor127,_cor128}> when 'true' ->
				      %% Line 3911
				      ( case apply 'check_externaltypereference'/2
						 (S, C) of
					  ( <( {'Externaltypereference',_cor129,_cor130,_rec493}
					       -| ['compiler_generated'] )> when 'true' ->
						{'simpletable',_rec493}
					    -| ['compiler_generated'] )
					  ( <_cor131> when 'true' ->
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'error'
										       -| ['compiler_generated'] )
						      (( {'badrecord','Externaltypereference'}
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
				  %% Line 3912
				  <{'type',_cor132,ExtTypeRef = {'Externaltypereference',_cor133,_cor134,_cor135},_cor136,_cor137,_cor138}> when 'true' ->
				      %% Line 3914
				      ( case apply 'check_externaltypereference'/2
						 (S, ExtTypeRef) of
					  ( <( {'Externaltypereference',_cor139,_cor140,_rec494}
					       -| ['compiler_generated'] )> when 'true' ->
						{'simpletable',_rec494}
					    -| ['compiler_generated'] )
					  ( <_cor141> when 'true' ->
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'error'
										       -| ['compiler_generated'] )
						      (( {'badrecord','Externaltypereference'}
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
				  %% Line 3915
				  <{'valueset',{'type',_cor142,ERef = {'Externaltypereference',_cor143,_cor144,_cor145},_cor146,_cor147,_cor148}}> when 'true' ->
				      %% Line 3916
				      case apply 'get_referenced_type'/2
					       (S, ERef) of
					<{_cor149,TDef}> when 'true' ->
					    %% Line 3917
					    ( case TDef of
						( <( {'typedef',_cor150,_cor151,_cor152,_rec495}
						     -| ['compiler_generated'] )> when 'true' ->
						      case _rec495 of
							%% Line 3918
							<{'ObjectSet',_cor154,_cor155,_cor156,_cor157}> when 'true' ->
							    let <_rec496> =
								%% Line 3919
								( {'ObjectSet',_cor154,_cor155,_cor156,_cor157}
								  -| ['compiler_generated'] )
							    in  do  %% Line 3919
								    apply 'check_object'/3
									(S, TDef, _rec496)
								    %% Line 3920
								    {'simpletable',_cor145}
							%% Line 3921
							<Err> when 'true' ->
							    %% Line 3922
							    call 'erlang':'exit'
								({'error',{'internal_error',Err}})
						      end
						  -| ['compiler_generated'] )
						( <_cor153> when 'true' ->
						      ( call ( 'erlang'
							       -| ['compiler_generated'] ):( 'error'
											     -| ['compiler_generated'] )
							    (( {'badrecord','typedef'}
							       -| ['compiler_generated'] ))
							-| ['compiler_generated'] )
						  -| ['compiler_generated'] )
					      end
					      -| ['compiler_generated'] )
					( <_cor39> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_cor39})
					  -| ['compiler_generated'] )
				      end
				  %% Line 3924
				  <{'Externalvaluereference',_cor165,_cor166,_cor167}> when 'true' ->
				      %% Line 3926
				      case apply 'get_referenced_type'/2
					       (S, C) of
					<{_cor168,TorVDef}> when 'true' ->
					    let <GetObjectSet> =
						%% Line 3928
						( fun (_cor52) ->
						      case _cor52 of
							<{'typedef',_cor169,_cor170,_cor171,O = {'Object',_cor172,_cor173,_cor174}}> when ( 'true'
																	    -| ['compiler_generated'] ) ->
							    %% Line 3929
							    {'ObjectSet',_cor172,'true','undefined',%% Line 3930
												    {'SingleValue',C}}
							%% Line 3931
							<{'valuedef',_cor178,_cor179,_cor180,Cl = {'type',_cor181,_cor182,_cor183,_cor184,_cor185},O = {'Externalvaluereference',_cor186,_cor187,_cor188},_cor189}> when 'true' ->
							    %% Line 3935
							    {'ObjectSet',_cor182,'true','undefined',%% Line 3936
												    {'SingleValue',O}}
							%% Line 3937
							<Err> when 'true' ->
							    %% Line 3938
							    call 'erlang':'exit'
								({'error',{'internal_error','simpletable_constraint',Err}})
						      end
						  -| [{'id',{0,0,'-check_constraint/2-fun-1-'}}] )
					    in  let <ObjSet> =
						    %% Line 3940
						    apply GetObjectSet
							(TorVDef)
						in  let <_cor56> =
							%% Line 3941
							apply 'check_object'/3
							    (S, Type, ObjSet)
						    in  %% Line 3941
							{'simpletable',_cor56}
					( <_cor47> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_cor47})
					  -| ['compiler_generated'] )
				      end
				  %% Line 3942
				  <{'ObjectSet',_cor195,_cor196,_cor197,_cor198}> when 'true' ->
				      do  %% Line 3943
					  call 'io':'format'
					      ([65|[76|[69|[82|[84|[58|[32|[115|[105|[109|[112|[108|[101|[116|[97|[98|[108|[101|[32|[102|[111|[114|[98|[105|[100|[100|[101|[110|[32|[99|[97|[115|[101|[33|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [])
					  let <_cor57> =
					      %% Line 3944
					      apply 'check_object'/3
						  (S, Type, C)
					  in  %% Line 3944
					      {'simpletable',_cor57}
				  %% Line 3945
				  <{'ValueFromObject',{_cor199,ORef},FieldName}> when 'true' ->
				      %% Line 3947
				      case apply 'get_referenced_type'/2
					       (S, ORef) of
					<{_cor200,Object}> when 'true' ->
					    %% Line 3949
					    ( case Object of
						( <( {'typedef',_cor201,_cor202,_cor203,_rec500}
						     -| ['compiler_generated'] )> when 'true' ->
						      let <ChObject> =
							  apply 'check_object'/3
							      (S, Object, _rec500)
						      in  let <_cor64> =
							      %% Line 3952
							      call 'erlang':'setelement'
								  (5, Object, ChObject)
							  in  let <ObjFromObj> =
								  %% Line 3951
								  apply 'get_fieldname_element'/3
								      (S, _cor64, %% Line 3953
										  FieldName)
							      in  %% Line 3954
								  {'simpletable',ObjFromObj}
						  -| ['compiler_generated'] )
						( <_cor204> when 'true' ->
						      ( call ( 'erlang'
							       -| ['compiler_generated'] ):( 'error'
											     -| ['compiler_generated'] )
							    (( {'badrecord','typedef'}
							       -| ['compiler_generated'] ))
							-| ['compiler_generated'] )
						  -| ['compiler_generated'] )
					      end
					      -| ['compiler_generated'] )
					( <_cor58> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_cor58})
					  -| ['compiler_generated'] )
				      end
				  %% Line 3958
				  <_cor210> when 'true' ->
				      do  %% Line 3959
					  apply 'check_type'/3
					      (S, _cor116, Type)
					  %% Line 3960
					  ( case _cor28 of
					      ( <( {'Externaltypereference',_cor224,_cor225,_rec503}
						   -| ['compiler_generated'] )> when 'true' ->
						    %% Line 3961
						    {'simpletable',_rec503}
						-| ['compiler_generated'] )
					      ( <_cor226> when 'true' ->
						    ( call ( 'erlang'
							     -| ['compiler_generated'] ):( 'error'
											   -| ['compiler_generated'] )
							  (( {'badrecord','Externaltypereference'}
							     -| ['compiler_generated'] ))
						      -| ['compiler_generated'] )
						-| ['compiler_generated'] )
					    end
					    -| ['compiler_generated'] )
				end
			-| ['compiler_generated'] )
		      ( <_cor125> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  %% Line 3964
	  <S,{'componentrelation',{'objectset',Opos,Objset},Id}> when 'true' ->
	      %% Line 3967
	      ( case S of
		  ( <( {'state',_cor227,_cor228,_cor229,_cor230,_cor231,_cor232,_cor233,_rec504,_cor234,_cor235,_cor236,_cor237,_cor238}
		       -| ['compiler_generated'] )> when 'true' ->
			let <RealObjset> =
			    apply 'match_parameters'/3
				(S, Objset, _rec504)
			in  let <_cor78> =
				%% Line 3969
				case RealObjset of
				  %% Line 3970
				  <{'Externaltypereference',_cor240,_cor241,_cor242}> when 'true' ->
				      RealObjset
				  %% Line 3971
				  <{'type',_cor243,{'Externaltypereference',_cor244,_cor245,_cor246},_cor247,_cor248,_cor249}> when 'true' ->
				      ( {'Externaltypereference',_cor244,_cor245,_cor246}
					-| ['compiler_generated'] )
				  %% Line 3972
				  <{'valueset',OS = {'type',_cor255,{'Externaltypereference',_cor256,_cor257,_cor258},_cor259,_cor260,_cor261}}> when 'true' ->
				      ( {'Externaltypereference',_cor256,_cor257,_cor258}
					-| ['compiler_generated'] )
				  ( <_cor77> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_cor77})
				    -| ['compiler_generated'] )
				end
			    in  let <Ext> =
				    %% Line 3974
				    apply 'check_externaltypereference'/2
					(S, _cor78)
				in  %% Line 3975
				    {'componentrelation',{'objectset',Opos,Ext},Id}
		    -| ['compiler_generated'] )
		  ( <_cor239> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 3977
	  <S,Type = {'type',_cor267,_cor268,_cor269,_cor270,_cor271}> when ( 'true'
									     -| ['compiler_generated'] ) ->
	      %% Line 3978
	      ( case S of
		  ( <( {'state',_cor272,_cor273,_cor274,_rec507,_cor275,_cor276,_cor277,_cor278,_cor279,_cor280,_cor281,_cor282,_cor283}
		       -| ['compiler_generated'] )> when 'true' ->
			case apply 'check_type'/3
				 (S, _rec507, Type) of
			  <{'type',_cor285,Def,_cor286,_cor287,_cor288}> when 'true' ->
			      %% Line 3979
			      Def
			  ( <_cor83> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor83})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor284> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 3981
	  <S,C>
	      when call 'erlang':'is_list'
		    (C) ->
	      let <_cor86> =
		  %% Line 3982
		  ( fun (_cor84) ->
			apply 'check_constraint'/2
			    (S, _cor84)
		    -| [{'id',{0,0,'-check_constraint/2-fun-2-'}}] )
	      in  %% Line 3982
		  call 'lists':'map'
		      (_cor86, C)
	  %% Line 3984
	  <_X_S,Any> when 'true' ->
	      %% Line 3986
	      Any
	end
'permitted_alphabet_cnstr'/1 =
    %% Line 3988
    fun (_cor0) ->
	case _cor0 of
	  <T>
	      when call 'erlang':'is_tuple'
		    (_cor0) ->
	      %% Line 3989
	      apply 'permitted_alphabet_cnstr'/1
		  ([T|[]])
	  %% Line 3990
	  <L>
	      when call 'erlang':'is_list'
		    (_cor0) ->
	      let <VRexpand> =
		  %% Line 3991
		  ( fun (_cor2) ->
			case _cor2 of
			  <{'ValueRange',{A,B}}> when 'true' ->
			      let <_cor1> =
				  %% Line 3992
				  apply 'expand_valuerange'/2
				      (A, B)
			      in  %% Line 3992
				  {'SingleValue',_cor1}
			  %% Line 3993
			  <Other> when 'true' ->
			      %% Line 3994
			      Other
			end
		    -| [{'id',{0,0,'-permitted_alphabet_cnstr/1-fun-0-'}}] )
	      in  let <L2> =
		      %% Line 3996
		      call 'lists':'map'
			  (VRexpand, L)
		  in  let <L3> =
			  %% Line 3998
			  apply 'permitted_alphabet_intersection'/1
			      (L2)
		      in  %% Line 3999
			  case apply 'permitted_alphabet_union'/1
				   (L3) of
			    <[Res|[]]> when 'true' ->
				%% Line 4000
				Res
			    ( <_cor7> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor7})
			      -| ['compiler_generated'] )
			  end
	  ( <_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8})
		  -| [{'function_name',{'permitted_alphabet_cnstr',1}}] )
	    -| ['compiler_generated'] )
	end
'expand_valuerange'/2 =
    %% Line 4002
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[A|[]],[_cor6|[]]>
	      when call 'erlang':'=:='
		    (_cor6,
		     A) ->
	      %% Line 4003
	      [A|[]]
	  %% Line 4004
	  <[A|[]],[B|[]]>
	      when call 'erlang':'<'
		    (A,
		     B) ->
	      let <_cor2> =
		  %% Line 4005
		  call 'erlang':'+'
		      (A, 1)
	      in  let <_cor3> =
		      %% Line 4005
		      apply 'expand_valuerange'/2
			  ([_cor2|[]], [B|[]])
		  in  %% Line 4005
		      [A|_cor3]
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'expand_valuerange',2}}] )
	    -| ['compiler_generated'] )
	end
'permitted_alphabet_intersection'/1 =
    %% Line 4007
    fun (_cor0) ->
	%% Line 4008
	apply 'permitted_alphabet_merge'/3
	    (_cor0, 'intersection', [])
'permitted_alphabet_union'/1 =
    %% Line 4010
    fun (_cor0) ->
	%% Line 4011
	apply 'permitted_alphabet_merge'/3
	    (_cor0, 'union', [])
'permitted_alphabet_merge'/3 =
    %% Line 4013
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[],_cor11,Acc> when 'true' ->
	      %% Line 4014
	      call 'lists':'reverse'
		  (Acc)
	  %% Line 4015
	  <[{'SingleValue',L1}|%% Line 4016
			       [UorI|%% Line 4017
				     [{'SingleValue',L2}|Rest]]],_cor12,%% Line 4017
									Acc>
	      when let <_cor13> =
		    call 'erlang':'=:='
			(_cor12, %% Line 4017
				 UorI)
		in  let <_cor14> =
			let <_cor3> =
			    %% Line 4018
			    call 'erlang':'is_list'
				(L1)
			in  let <_cor4> =
				%% Line 4018
				call 'erlang':'is_list'
				    (L2)
			    in  %% Line 4018
				call 'erlang':'and'
				    (_cor3, _cor4)
		    in  call 'erlang':'and'
			    (_cor13, _cor14) ->
	      let <_cor5> =
		  %% Line 4019
		  call 'ordsets':'from_list'
		      (L1)
	      in  let <_cor6> =
		      %% Line 4019
		      call 'ordsets':'from_list'
			  (L2)
		  in  let <UI> =
			  %% Line 4019
			  call 'ordsets':UorI
			      ([_cor5|[_cor6|[]]])
		      in  %% Line 4020
			  apply 'permitted_alphabet_merge'/3
			      ([{'SingleValue',UI}|Rest], UorI, Acc)
	  %% Line 4021
	  <[C1|Rest],UorI,Acc> when 'true' ->
	      %% Line 4022
	      apply 'permitted_alphabet_merge'/3
		  (Rest, UorI, [C1|Acc])
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'permitted_alphabet_merge',3}}] )
	    -| ['compiler_generated'] )
	end
'constraint_merge'/2 =
    %% Line 4033
    fun (_cor1,_cor0) ->
	let <Cs> =
	    %% Line 4034
	    apply 'constraint_merge_1'/2
		(_cor1, _cor0)
	in  %% Line 4035
	    apply 'normalize_cs'/1
		(Cs)
'normalize_cs'/1 =
    %% Line 4037
    fun (_cor0) ->
	case _cor0 of
	  <[{'SingleValue',[V|[]]}|Cs]> when 'true' ->
	      let <_cor1> =
		  %% Line 4038
		  apply 'normalize_cs'/1
		      (Cs)
	      in  %% Line 4038
		  [{'SingleValue',V}|_cor1]
	  %% Line 4039
	  <[{'SingleValue',L0 = [_cor12|_cor13]}|Cs]> when 'true' ->
	      %% Line 4040
	      case call 'lists':'usort'
		       (L0) of
		<L = [H|T]> when 'true' ->
		    let <_cor5> =
			%% Line 4041
			case apply 'is_range'/2
				 (H, T) of
			  %% Line 4042
			  <'false'> when 'true' ->
			      {'SingleValue',L}
			  %% Line 4043
			  <'true'> when 'true' ->
			      let <_cor3> =
				  call 'lists':'last'
				      (T)
			      in  {'ValueRange',{H,_cor3}}
			  ( <_cor4> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor4})
			    -| ['compiler_generated'] )
			end
		    in  let <_cor6> =
			    %% Line 4044
			    apply 'normalize_cs'/1
				(Cs)
			in  %% Line 4041
			    [_cor5|_cor6]
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 4045
	  <[{'ValueRange',{Sv,_cor14}}|Cs]>
	      when call 'erlang':'=:='
		    (_cor14,
		     Sv) ->
	      let <_cor7> =
		  %% Line 4046
		  apply 'normalize_cs'/1
		      (Cs)
	      in  %% Line 4046
		  [{'SingleValue',Sv}|_cor7]
	  %% Line 4047
	  <[{'ValueRange',{'MIN','MAX'}}|Cs]> when 'true' ->
	      %% Line 4048
	      apply 'normalize_cs'/1
		  (Cs)
	  %% Line 4049
	  <[{'SizeConstraint',C0}|Cs]> when 'true' ->
	      %% Line 4050
	      case apply 'normalize_size_constraint'/1
		       (C0) of
		%% Line 4051
		<'none'> when 'true' ->
		    %% Line 4052
		    apply 'normalize_cs'/1
			(Cs)
		%% Line 4053
		<C> when 'true' ->
		    let <_cor8> =
			%% Line 4054
			apply 'normalize_cs'/1
			    (Cs)
		    in  %% Line 4054
			[{'SizeConstraint',C}|_cor8]
	      end
	  %% Line 4056
	  <[H|T]> when 'true' ->
	      let <_cor10> =
		  %% Line 4057
		  apply 'normalize_cs'/1
		      (T)
	      in  %% Line 4057
		  [H|_cor10]
	  %% Line 4058
	  <[]> when 'true' ->
	      []
	  ( <_cor11> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11})
		  -| [{'function_name',{'normalize_cs',1}}] )
	    -| ['compiler_generated'] )
	end
'normalize_size_constraint'/1 =
    %% Line 4072
    fun (_cor0) ->
	case _cor0 of
	  <Sv>
	      when call 'erlang':'is_integer'
		    (_cor0) ->
	      %% Line 4073
	      {Sv,Sv}
	  %% Line 4074
	  <{Root,Ext}>
	      when call 'erlang':'is_list'
		    (Ext) ->
	      let <_cor1> =
		  %% Line 4075
		  apply 'normalize_size_constraint'/1
		      (Root)
	      in  %% Line 4075
		  {_cor1,[]}
	  %% Line 4076
	  <{{_cor9,_cor10},Ext}>
	      when call 'erlang':'is_integer'
		    (Ext) ->
	      %% Line 4077
	      apply 'normalize_size_constraint'/1
		  (Ext)
	  %% Line 4078
	  <[H|T]> when 'true' ->
	      let <_cor2> =
		  %% Line 4079
		  call 'lists':'last'
		      (T)
	      in  %% Line 4079
		  {H,_cor2}
	  %% Line 4080
	  <{0,'MAX'}> when 'true' ->
	      %% Line 4081
	      'none'
	  %% Line 4082
	  <Range = {Lb,Ub}>
	      when %% Line 4083
		try
		    let <_cor3> =
			call 'erlang':'is_integer'
			    (Lb)
		    in  ( let <_cor6> =
			      ( case <> of
				  ( <>
					when ( call 'erlang':'is_integer'
						(Ub)
					    -| ['compiler_generated'] ) ->
					'true'
				    -| ['compiler_generated'] )
				  ( <> when 'true' ->
					( call 'erlang':'=:='
					      (Ub, 'MAX')
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			  in  ( call 'erlang':'and'
				    (_cor3, ( _cor6
					      -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 4084
	      Range
	  ( <_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8})
		  -| [{'function_name',{'normalize_size_constraint',1}}] )
	    -| ['compiler_generated'] )
	end
'is_range'/2 =
    %% Line 4086
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Prev,[H|T]>
	      when try
		    let <_cor2> =
			call 'erlang':'-'
			    (H, 1)
		    in  call 'erlang':'=:='
			    (Prev, _cor2)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      apply 'is_range'/2
		  (H, T)
	  %% Line 4087
	  <_cor5,[_cor6|_cor7]> when 'true' ->
	      'false'
	  %% Line 4088
	  <_cor8,[]> when 'true' ->
	      'true'
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'is_range',2}}] )
	    -| ['compiler_generated'] )
	end
'constraint_merge_1'/2 =
    %% Line 4090
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_S,C = [H|[]]>
	      when call 'erlang':'is_tuple'
		    (H) ->
	      %% Line 4091
	      C
	  %% Line 4092
	  <_X_S,[]> when 'true' ->
	      %% Line 4093
	      []
	  %% Line 4094
	  <S,C> when 'true' ->
	      let <C1> =
		  %% Line 4096
		  apply 'filter_extensions'/1
		      (C)
	      in  let <_cor5> =
		      %% Line 4099
		      ( fun (_cor3) ->
			    case _cor3 of
			      <X>
				  when call 'erlang':'is_list'
					(_cor3) ->
				  apply 'constraint_intersection'/2
				      (S, X)
			      %% Line 4100
			      <X> when 'true' ->
				  X
			    end
			-| [{'id',{0,0,'-constraint_merge_1/2-fun-0-'}}] )
		  in  let <C2> =
			  %% Line 4099
			  call 'lists':'map'
			      (_cor5, %% Line 4101
				      C1)
		      in  let <_cor9> =
			      %% Line 4103
			      ( fun (_cor7) ->
				    case _cor7 of
				      <X>
					  when call 'erlang':'is_list'
						(_cor7) ->
					  apply 'constraint_union'/2
					      (S, X)
				      %% Line 4104
				      <X> when 'true' ->
					  X
				    end
				-| [{'id',{0,0,'-constraint_merge_1/2-fun-1-'}}] )
			  in  let <C3> =
				  %% Line 4103
				  call 'lists':'map'
				      (_cor9, %% Line 4105
					      C2)
			      in  let <SVs> =
				      %% Line 4109
				      apply 'get_constraints'/2
					  (C3, 'SingleValue')
				  in  let <CombSV> =
					  %% Line 4110
					  apply 'intersection_of_sv'/2
					      (S, SVs)
				      in  let <VRs> =
					      %% Line 4112
					      apply 'get_constraints'/2
						  (C3, 'ValueRange')
					  in  let <CombVR> =
						  %% Line 4113
						  apply 'intersection_of_vr'/2
						      (S, VRs)
					      in  let <SZs> =
						      %% Line 4115
						      apply 'get_constraints'/2
							  (C3, 'SizeConstraint')
						  in  let <CombSZ> =
							  %% Line 4116
							  apply 'intersection_of_size'/2
							      (S, SZs)
						      in  let <_cor20> =
							      %% Line 4117
							      call 'ordsets':'from_list'
								  (C3)
							  in  let <_cor17> =
								  %% Line 4118
								  call 'erlang':'++'
								      (VRs, SVs)
							      in  let <_cor18> =
								      %% Line 4118
								      call 'erlang':'++'
									  (SZs, _cor17)
								  in  let <_cor19> =
									  %% Line 4118
									  call 'ordsets':'from_list'
									      (_cor18)
								      in  let <RestC> =
									      %% Line 4117
									      call 'ordsets':'subtract'
										  (_cor20, _cor19)
									  in  let <_cor22> =
										  %% Line 4123
										  call 'erlang':'++'
										      (CombSZ, RestC)
									      in  let <Cs> =
										      %% Line 4123
										      apply 'combine_constraints'/4
											  (S, CombSV, CombVR, _cor22)
										  in  %% Line 4124
										      ( letrec
											    'lc$^0'/1 =
												fun (_cor29) ->
												    case _cor29 of
												      <[X|_cor25]>
													  when let <_cor26> =
														%% Line 4125
														call 'erlang':'=/='
														    (X, 'intersection')
													    in  let <_cor27> =
														    %% Line 4126
														    call 'erlang':'=/='
															(X, 'union')
														in  %% Line 4125
														    call 'erlang':'and'
															(_cor26, _cor27) ->
													  let <_cor30> =
													      apply 'lc$^0'/1
														  (_cor25)
													  in  ( [X|_cor30]
														-| ['compiler_generated'] )
												      ( <[X|_cor25]> when 'true' ->
													    apply 'lc$^0'/1
														(_cor25)
													-| ['compiler_generated'] )
												      <[]> when 'true' ->
													  []
												      ( <_cor29> when 'true' ->
													    ( primop 'match_fail'
														  ({'function_clause',_cor29})
													      -| [{'function_name',{'lc$^0',1}}] )
													-| ['compiler_generated'] )
												    end
											in  let <_cor28> =
												call 'lists':'flatten'
												    (Cs)
											    in  apply 'lc$^0'/1
												    (_cor28)
											-| ['list_comprehension'] )
	end
'constraint_union'/2 =
    %% Line 4132
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_S,[]> when 'true' ->
	      %% Line 4133
	      []
	  %% Line 4134
	  <_X_S,C = [_X_E|[]]> when 'true' ->
	      %% Line 4135
	      C
	  %% Line 4136
	  <S,C>
	      when call 'erlang':'is_list'
		    (C) ->
	      %% Line 4137
	      case call 'lists':'member'
		       ('union', C) of
		%% Line 4138
		<'true'> when 'true' ->
		    %% Line 4139
		    apply 'constraint_union1'/3
			(S, C, [])
		%% Line 4140
		<_cor5> when 'true' ->
		    %% Line 4141
		    C
	      end
	  %% Line 4151
	  <_X_S,C> when 'true' ->
	      %% Line 4152
	      [C|[]]
	end
'constraint_union1'/3 =
    %% Line 4154
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,[{'ValueRange',{Lb1,Ub1}}|['union'|%% Line 4155
						[{'ValueRange',{Lb2,Ub2}}|Rest]]],%% Line 4155
										  Acc> when 'true' ->
	      let <_cor4> =
		  %% Line 4156
		  apply 'c_min'/2
		      (Lb1, Lb2)
	      in  let <_cor3> =
		      %% Line 4156
		      call 'erlang':'max'
			  (Ub1, Ub2)
		  in  let <AunionB> = {%% Line 4156
			   'ValueRange',%% Line 4156
					{_cor4,_cor3}}
		      in  %% Line 4157
			  apply 'constraint_union1'/3
			      (S, [AunionB|Rest], Acc)
	  %% Line 4158
	  <S,[A = {'SingleValue',_cor15}|['union'|[B = {'SingleValue',_cor16}|Rest]]],Acc> when 'true' ->
	      let <AunionB> =
		  %% Line 4159
		  apply 'constraint_union_sv'/2
		      (S, [A|[B|[]]])
	      in  let <_cor7> =
		      %% Line 4160
		      call 'erlang':'++'
			  (Acc, AunionB)
		  in  %% Line 4160
		      apply 'constraint_union1'/3
			  (S, Rest, _cor7)
	  %% Line 4161
	  <S,[A = {'SingleValue',_cor17}|['union'|[B = {'ValueRange',_cor18}|Rest]]],Acc> when 'true' ->
	      let <AunionB> =
		  %% Line 4162
		  apply 'union_sv_vr'/3
		      (S, A, B)
	      in  let <_cor9> =
		      %% Line 4163
		      call 'erlang':'++'
			  (AunionB, Rest)
		  in  %% Line 4163
		      apply 'constraint_union1'/3
			  (S, _cor9, Acc)
	  %% Line 4164
	  <S,[A = {'ValueRange',_cor19}|['union'|[B = {'SingleValue',_cor20}|Rest]]],Acc> when 'true' ->
	      let <AunionB> =
		  %% Line 4165
		  apply 'union_sv_vr'/3
		      (S, B, A)
	      in  let <_cor11> =
		      %% Line 4166
		      call 'erlang':'++'
			  (AunionB, Rest)
		  in  %% Line 4166
		      apply 'constraint_union1'/3
			  (S, _cor11, Acc)
	  %% Line 4167
	  <S,['union'|Rest],Acc> when 'true' ->
	      %% Line 4168
	      apply 'constraint_union1'/3
		  (S, Rest, Acc)
	  %% Line 4169
	  <S,[A|Rest],Acc> when 'true' ->
	      %% Line 4170
	      apply 'constraint_union1'/3
		  (S, Rest, [A|Acc])
	  %% Line 4171
	  <_X_S,[],Acc> when 'true' ->
	      %% Line 4172
	      Acc
	  ( <_cor14,_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14,_cor13,_cor12})
		  -| [{'function_name',{'constraint_union1',3}}] )
	    -| ['compiler_generated'] )
	end
'constraint_union_sv'/2 =
    %% Line 4174
    fun (_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 4175
	    ( fun (_cor2) ->
		  case _cor2 of
		    <{_cor9,V}> when 'true' ->
			V
		    ( <_cor3> when 'true' ->
			  ( primop 'match_fail'
				({'function_clause',_cor3})
			    -| [{'function_name',{'-constraint_union_sv/2-fun-0-',1}}] )
		      -| ['compiler_generated'] )
		  end
	      -| [{'id',{0,0,'-constraint_union_sv/2-fun-0-'}}] )
	in  let <Values> =
		%% Line 4175
		call 'lists':'map'
		    (_cor4, _cor0)
	    in  %% Line 4176
		case call 'ordsets':'from_list'
			 (Values) of
		  %% Line 4177
		  <[]> when 'true' ->
		      []
		  %% Line 4178
		  <[N|[]]> when 'true' ->
		      [{'SingleValue',N}|[]]
		  %% Line 4179
		  <L> when 'true' ->
		      [{'SingleValue',L}|[]]
		end
'c_min'/2 =
    %% Line 4181
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'MIN',_cor4> when 'true' ->
	      'MIN'
	  %% Line 4182
	  <_cor5,'MIN'> when 'true' ->
	      'MIN'
	  %% Line 4183
	  <A,B> when 'true' ->
	      call 'erlang':'min'
		  (A, B)
	end
'union_sv_vr'/3 =
    %% Line 4185
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <_X_S,{'SingleValue',SV},VR>
	      when %% Line 4186
		call 'erlang':'is_integer'
		    (SV) ->
	      %% Line 4187
	      apply 'union_sv_vr'/3
		  (_X_S, {'SingleValue',[SV|[]]}, VR)
	  %% Line 4188
	  <_X_S,{'SingleValue',SV},{'ValueRange',{VLb,VUb}}>
	      when %% Line 4189
		call 'erlang':'is_list'
		    (SV) ->
	      let <_cor3> =
		  %% Line 4190
		  call 'erlang':'++'
		      (SV, [VLb|[VUb|[]]])
	      in  let <L> =
		      %% Line 4190
		      call 'lists':'sort'
			  (_cor3)
		  in  let <Lb,L1> =
			  %% Line 4191
			  case call 'lists':'member'
				   ('MIN', L) of
			    %% Line 4192
			    <'true'> when 'true' ->
				let <_cor5> =
				    call 'erlang':'--'
					(L, ['MIN'])
				in  <'MIN',_cor5>
			    %% Line 4193
			    <'false'> when 'true' ->
				let <_cor7> =
				    call 'erlang':'hd'
					(L)
				in  let <_cor6> =
					call 'erlang':'tl'
					    (L)
				    in  <_cor7,_cor6>
			    ( <_cor8> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor8})
			      -| ['compiler_generated'] )
			  end
		      in  let <_cor12> =
			      %% Line 4195
			      case call 'lists':'member'
				       ('MAX', L1) of
				%% Line 4196
				<'true'> when 'true' ->
				    'MAX'
				%% Line 4197
				<'false'> when 'true' ->
				    call 'lists':'last'
					(L1)
				( <_cor11> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor11})
				  -| ['compiler_generated'] )
			      end
			  in  do  %% Line 4199
				  case SV of
				    %% Line 4200
				    <[H|[]]> when 'true' ->
					'ok'
				    %% Line 4201
				    <_cor18> when 'true' ->
					'ok'
				  end
				  %% Line 4210
				  [{'ValueRange',{Lb,_cor12}}|[]]
	  ( <_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17,_cor16,_cor15})
		  -| [{'function_name',{'union_sv_vr',3}}] )
	    -| ['compiler_generated'] )
	end
'get_constraints'/2 =
    %% Line 4218
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <L = [{CType,_cor4}|[]],_cor5>
	      when call 'erlang':'=:='
		    (_cor5,
		     CType) ->
	      %% Line 4219
	      L
	  %% Line 4220
	  <C,CType> when 'true' ->
	      %% Line 4221
	      apply 'keysearch_allwithkey'/3
		  (CType, 1, C)
	end
'keysearch_allwithkey'/3 =
    %% Line 4231
    fun (_cor2,_cor1,_cor0) ->
	let <_cor6> =
	    %% Line 4232
	    ( fun (_cor4) ->
		  case _cor4 of
		    <X>
			when call 'erlang':'is_tuple'
			      (_cor4) ->
			%% Line 4233
			case call 'erlang':'element'
				 (_cor1, X) of
			  %% Line 4234
			  <_cor10>
			      when call 'erlang':'=:='
				    (_cor10,
				     _cor2) ->
			      'true'
			  %% Line 4235
			  <_cor11> when 'true' ->
			      'false'
			end
		    %% Line 4237
		    <_cor12> when 'true' ->
			'false'
		  end
	      -| [{'id',{0,0,'-keysearch_allwithkey/3-fun-0-'}}] )
	in  %% Line 4232
	    call 'lists':'filter'
		(_cor6, _cor0)
'filter_extensions'/1 =
    %% Line 4244
    fun (_cor0) ->
	case _cor0 of
	  <[L|[]]>
	      when call 'erlang':'is_list'
		    (L) ->
	      let <_cor1> =
		  %% Line 4245
		  apply 'filter_extensions'/1
		      (L)
	      in  %% Line 4245
		  [_cor1|[]]
	  %% Line 4246
	  <C = [_X_H|[]]> when 'true' ->
	      %% Line 4247
	      C
	  %% Line 4248
	  <C>
	      when call 'erlang':'is_list'
		    (_cor0) ->
	      %% Line 4249
	      apply 'filter_extensions'/3
		  (C, [], [])
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'filter_extensions',1}}] )
	    -| ['compiler_generated'] )
	end
'filter_extensions'/3 =
    %% Line 4251
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[],Acc,[]> when 'true' ->
	      %% Line 4252
	      Acc
	  %% Line 4253
	  <[],Acc,[EC|ExtAcc]> when 'true' ->
	      let <CwoExt> =
		  %% Line 4254
		  apply 'remove_extension'/2
		      (ExtAcc, [])
	      in  %% Line 4255
		  call 'erlang':'++'
		      (CwoExt, [EC|Acc])
	  %% Line 4256
	  <[C = {A,_X_E}|T],Acc,ExtAcc>
	      when call 'erlang':'is_tuple'
		    (A) ->
	      %% Line 4257
	      apply 'filter_extensions'/3
		  (T, Acc, [C|ExtAcc])
	  %% Line 4258
	  <[C = {'SizeConstraint',{A,_X_B}}|T],Acc,ExtAcc>
	      when let <_cor4> =
		    %% Line 4259
		    call 'erlang':'is_list'
			(A)
		in  let <_cor5> =
			%% Line 4259
			call 'erlang':'is_tuple'
			    (A)
		    in  %% Line 4259
			call 'erlang':'or'
			    (_cor4, _cor5) ->
	      %% Line 4260
	      apply 'filter_extensions'/3
		  (T, Acc, [C|ExtAcc])
	  %% Line 4261
	  <[C = {'PermittedAlphabet',{{'SingleValue',_cor11},E}}|T],Acc,ExtAcc>
	      when let <_cor6> =
		    %% Line 4262
		    call 'erlang':'is_tuple'
			(E)
		in  let <_cor7> =
			%% Line 4262
			call 'erlang':'is_list'
			    (E)
		    in  %% Line 4262
			call 'erlang':'or'
			    (_cor6, _cor7) ->
	      %% Line 4263
	      apply 'filter_extensions'/3
		  (T, Acc, [C|ExtAcc])
	  %% Line 4264
	  <[H|T],Acc,ExtAcc> when 'true' ->
	      %% Line 4265
	      apply 'filter_extensions'/3
		  (T, [H|Acc], ExtAcc)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'filter_extensions',3}}] )
	    -| ['compiler_generated'] )
	end
'remove_extension'/2 =
    %% Line 4267
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],Acc> when 'true' ->
	      %% Line 4268
	      Acc
	  %% Line 4269
	  <[{'SizeConstraint',{A,_X_B}}|R],Acc> when 'true' ->
	      %% Line 4270
	      apply 'remove_extension'/2
		  (R, [{'SizeConstraint',A}|Acc])
	  %% Line 4271
	  <[{C,_X_E}|R],Acc>
	      when call 'erlang':'is_tuple'
		    (C) ->
	      %% Line 4272
	      apply 'remove_extension'/2
		  (R, [C|Acc])
	  %% Line 4273
	  <[{'PermittedAlphabet',{A = {'SingleValue',_cor6},%% Line 4274
							    E}}|%% Line 4274
								R],%% Line 4274
								   Acc>
	      when let <_cor2> =
		    %% Line 4275
		    call 'erlang':'is_tuple'
			(E)
		in  let <_cor3> =
			%% Line 4275
			call 'erlang':'is_list'
			    (E)
		    in  %% Line 4275
			call 'erlang':'or'
			    (_cor2, _cor3) ->
	      %% Line 4276
	      apply 'remove_extension'/2
		  (R, [{'PermittedAlphabet',A}|Acc])
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'remove_extension',2}}] )
	    -| ['compiler_generated'] )
	end
'constraint_intersection'/2 =
    %% Line 4282
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_S,[]> when 'true' ->
	      %% Line 4283
	      []
	  %% Line 4284
	  <_X_S,C = [_X_E|[]]> when 'true' ->
	      %% Line 4285
	      C
	  %% Line 4286
	  <S,C>
	      when call 'erlang':'is_list'
		    (C) ->
	      %% Line 4288
	      case call 'lists':'member'
		       ('intersection', C) of
		%% Line 4289
		<'true'> when 'true' ->
		    %% Line 4290
		    apply 'constraint_intersection1'/3
			(S, C, [])
		%% Line 4291
		<_cor5> when 'true' ->
		    %% Line 4292
		    C
	      end
	  %% Line 4294
	  <_X_S,C> when 'true' ->
	      %% Line 4295
	      [C|[]]
	end
'constraint_intersection1'/3 =
    %% Line 4297
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,[A|['intersection'|[B|Rest]]],Acc> when 'true' ->
	      let <AisecB> =
		  %% Line 4298
		  apply 'c_intersect'/3
		      (S, A, B)
	      in  let <_cor4> =
		      %% Line 4299
		      call 'erlang':'++'
			  (AisecB, Rest)
		  in  %% Line 4299
		      apply 'constraint_intersection1'/3
			  (S, _cor4, Acc)
	  %% Line 4300
	  <S,[A|Rest],Acc> when 'true' ->
	      %% Line 4301
	      apply 'constraint_intersection1'/3
		  (S, Rest, [A|Acc])
	  %% Line 4302
	  <_cor8,[],[C|[]]> when 'true' ->
	      %% Line 4303
	      C
	  %% Line 4304
	  <_cor9,[],Acc> when 'true' ->
	      %% Line 4305
	      call 'lists':'reverse'
		  (Acc)
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5})
		  -| [{'function_name',{'constraint_intersection1',3}}] )
	    -| ['compiler_generated'] )
	end
'c_intersect'/3 =
    %% Line 4307
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,C1 = {'SingleValue',_cor6},C2 = {'SingleValue',_cor7}> when 'true' ->
	      %% Line 4308
	      apply 'intersection_of_sv'/2
		  (S, [C1|[C2|[]]])
	  %% Line 4309
	  <S,C1 = {'ValueRange',_cor8},C2 = {'ValueRange',_cor9}> when 'true' ->
	      %% Line 4310
	      apply 'intersection_of_vr'/2
		  (S, [C1|[C2|[]]])
	  %% Line 4311
	  <S,C1 = {'ValueRange',_cor10},C2 = {'SingleValue',_cor11}> when 'true' ->
	      %% Line 4312
	      apply 'intersection_sv_vr'/3
		  (S, [C2|[]], [C1|[]])
	  %% Line 4313
	  <S,C1 = {'SingleValue',_cor12},C2 = {'ValueRange',_cor13}> when 'true' ->
	      %% Line 4314
	      apply 'intersection_sv_vr'/3
		  (S, [C1|[]], [C2|[]])
	  %% Line 4315
	  <_X_S,C1,C2> when 'true' ->
	      %% Line 4316
	      [C1|[C2|[]]]
	end
'combine_constraints'/4 =
    %% Line 4331
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <_X_S,[],VR,CComb> when 'true' ->
	      %% Line 4332
	      call 'erlang':'++'
		  (VR, CComb)
	  %% Line 4334
	  <_X_S,SV,[],CComb> when 'true' ->
	      %% Line 4335
	      call 'erlang':'++'
		  (SV, CComb)
	  %% Line 4337
	  <S,SV,VR,CComb> when 'true' ->
	      let <C> =
		  %% Line 4338
		  apply 'intersection_sv_vr'/3
		      (S, SV, VR)
	      in  %% Line 4339
		  call 'erlang':'++'
		      (C, CComb)
	end
'intersection_sv_vr'/3 =
    %% Line 4342
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <_X_S,[C1 = {'SingleValue',SV}|[]],[C2 = {'ValueRange',{_X_Lb,_X_Ub}}|[]]>
	      when %% Line 4343
		call 'erlang':'is_integer'
		    (SV) ->
	      %% Line 4344
	      case apply 'is_int_in_vr'/2
		       (SV, C2) of
		%% Line 4345
		<'true'> when 'true' ->
		    [C1|[]]
		%% Line 4346
		<_cor11> when 'true' ->
		    %% Line 4349
		    [C1|[C2|[]]]
	      end
	  %% Line 4351
	  <_X_S,[C1 = {'SingleValue',SV}|[]],[C2|[]]>
	      when %% Line 4352
		call 'erlang':'is_list'
		    (SV) ->
	      let <_cor6> =
		  %% Line 4353
		  ( fun (_cor4) ->
			apply 'is_int_in_vr'/2
			    (_cor4, C2)
		    -| [{'id',{0,0,'-intersection_sv_vr/3-fun-0-'}}] )
	      in  %% Line 4353
		  case call 'lists':'filter'
			   (_cor6, SV) of
		    %% Line 4354
		    <[]> when 'true' ->
			%% Line 4358
			[C1|[C2|[]]]
		    %% Line 4359
		    <[V|[]]> when 'true' ->
			[{'SingleValue',V}|[]]
		    %% Line 4360
		    <L> when 'true' ->
			[{'SingleValue',L}|[]]
		  end
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'intersection_sv_vr',3}}] )
	    -| ['compiler_generated'] )
	end
'intersection_of_size'/2 =
    %% Line 4366
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_cor19,[]> when 'true' ->
	      %% Line 4367
	      []
	  %% Line 4368
	  <_cor20,C = [_X_SZ|[]]> when 'true' ->
	      %% Line 4369
	      C
	  %% Line 4370
	  <S,[SZ|[_cor21|Rest]]>
	      when call 'erlang':'=:='
		    (_cor21,
		     SZ) ->
	      %% Line 4371
	      apply 'intersection_of_size'/2
		  (S, [SZ|Rest])
	  %% Line 4372
	  <S,C = [C1 = {_cor22,Int}|[{_cor23,Range}|Rest]]>
	      when let <_cor2> =
		    %% Line 4373
		    call 'erlang':'is_integer'
			(Int)
		in  let <_cor3> =
			%% Line 4373
			call 'erlang':'is_tuple'
			    (Range)
		    in  %% Line 4373
			call 'erlang':'and'
			    (_cor2, _cor3) ->
	      %% Line 4374
	      case Range of
		%% Line 4375
		<{Lb,Ub}>
		    when let <_cor4> =
			  call 'erlang':'>='
			      (Int, Lb)
		      in  let <_cor5> =
			      %% Line 4376
			      call 'erlang':'=<'
				  (Int, Ub)
			  in  call 'erlang':'and'
				  (_cor4, _cor5) ->
		    %% Line 4377
		    apply 'intersection_of_size'/2
			(S, [C1|Rest])
		%% Line 4378
		<{{Lb,Ub},Ext}>
		    when try
			  let <_cor6> =
			      call 'erlang':'is_list'
				  (Ext)
			  in  let <_cor7> =
				  call 'erlang':'>='
				      (Int, Lb)
			      in  let <_cor8> =
				      call 'erlang':'=<'
					  (Int, Ub)
				  in  let <_cor9> =
					  call 'erlang':'and'
					      (_cor7, _cor8)
				      in  call 'erlang':'and'
					      (_cor6, _cor9)
		      of <Try> ->
			  Try
		      catch <T,R> ->
			  'false' ->
		    %% Line 4379
		    apply 'intersection_of_size'/2
			(S, [C1|Rest])
		%% Line 4380
		<_cor24> when 'true' ->
		    %% Line 4381
		    call 'erlang':'throw'
			({'error',{'asn1',{'illegal_size_constraint',C}}})
	      end
	  %% Line 4383
	  <S,[C1 = {_cor25,Range}|[C2 = {_cor26,Int}|Rest]]>
	      when let <_cor11> =
		    %% Line 4384
		    call 'erlang':'is_integer'
			(Int)
		in  let <_cor12> =
			%% Line 4384
			call 'erlang':'is_tuple'
			    (Range)
		    in  %% Line 4384
			call 'erlang':'and'
			    (_cor11, _cor12) ->
	      %% Line 4385
	      apply 'intersection_of_size'/2
		  (S, [C2|[C1|Rest]])
	  %% Line 4386
	  <S,[{_cor27,{Lb1,Ub1}}|[{_cor28,{Lb2,Ub2}}|Rest]]> when 'true' ->
	      let <_cor13> =
		  %% Line 4387
		  call 'ordsets':'from_list'
		      ([Lb1|[Lb2|[]]])
	      in  let <Lb> =
		      %% Line 4387
		      apply 'greatest_LB'/1
			  (_cor13)
		  in  let <_cor15> =
			  %% Line 4388
			  call 'ordsets':'from_list'
			      ([Ub1|[Ub2|[]]])
		      in  let <Ub> =
			      %% Line 4388
			      apply 'smallest_UB'/1
				  (_cor15)
			  in  %% Line 4389
			      apply 'intersection_of_size'/2
				  (S, [{'SizeConstraint',{Lb,Ub}}|Rest])
	  %% Line 4390
	  <_cor29,SZ> when 'true' ->
	      %% Line 4391
	      call 'erlang':'throw'
		  ({'error',{'asn1',{'illegal_size_constraint',SZ}}})
	end
'intersection_of_vr'/2 =
    %% Line 4393
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_cor8,[]> when 'true' ->
	      %% Line 4394
	      []
	  %% Line 4395
	  <_cor9,VR = [_X_C|[]]> when 'true' ->
	      %% Line 4396
	      VR
	  %% Line 4397
	  <S,[{_cor10,{Lb1,Ub1}}|[{_cor11,{Lb2,Ub2}}|Rest]]> when 'true' ->
	      let <_cor2> =
		  %% Line 4398
		  call 'ordsets':'from_list'
		      ([Lb1|[Lb2|[]]])
	      in  let <Lb> =
		      %% Line 4398
		      apply 'greatest_LB'/1
			  (_cor2)
		  in  let <_cor4> =
			  %% Line 4399
			  call 'ordsets':'from_list'
			      ([Ub1|[Ub2|[]]])
		      in  let <Ub> =
			      %% Line 4399
			      apply 'smallest_UB'/1
				  (_cor4)
			  in  %% Line 4400
			      apply 'intersection_of_vr'/2
				  (S, [{'ValueRange',{Lb,Ub}}|Rest])
	  %% Line 4401
	  <_X_S,VR> when 'true' ->
	      %% Line 4403
	      call 'erlang':'throw'
		  ({'error',{'asn1',{'illegal_value_range_constraint',VR}}})
	end
'intersection_of_sv'/2 =
    %% Line 4405
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_cor13,[]> when 'true' ->
	      %% Line 4406
	      []
	  %% Line 4407
	  <_cor14,SV = [_X_C|[]]> when 'true' ->
	      %% Line 4408
	      SV
	  %% Line 4409
	  <S,[SV|[_cor15|Rest]]>
	      when call 'erlang':'=:='
		    (_cor15,
		     SV) ->
	      %% Line 4410
	      apply 'intersection_of_sv'/2
		  (S, [SV|Rest])
	  %% Line 4411
	  <S,[{_cor16,Int}|[{_cor17,SV}|Rest]]>
	      when let <_cor2> =
		    call 'erlang':'is_integer'
			(Int)
		in  let <_cor3> =
			%% Line 4412
			call 'erlang':'is_list'
			    (SV)
		    in  call 'erlang':'and'
			    (_cor2, _cor3) ->
	      let <SV2> =
		  %% Line 4413
		  apply 'intersection_of_sv1'/3
		      (S, Int, SV)
	      in  %% Line 4414
		  apply 'intersection_of_sv'/2
		      (S, [SV2|Rest])
	  %% Line 4415
	  <S,[{_cor18,SV}|[{_cor19,Int}|Rest]]>
	      when let <_cor5> =
		    call 'erlang':'is_integer'
			(Int)
		in  let <_cor6> =
			%% Line 4416
			call 'erlang':'is_list'
			    (SV)
		    in  call 'erlang':'and'
			    (_cor5, _cor6) ->
	      let <SV2> =
		  %% Line 4417
		  apply 'intersection_of_sv1'/3
		      (S, Int, SV)
	      in  %% Line 4418
		  apply 'intersection_of_sv'/2
		      (S, [SV2|Rest])
	  %% Line 4419
	  <S,[{_cor20,SV1}|[{_cor21,SV2}|Rest]]>
	      when let <_cor8> =
		    call 'erlang':'is_list'
			(SV1)
		in  let <_cor9> =
			%% Line 4420
			call 'erlang':'is_list'
			    (SV2)
		    in  call 'erlang':'and'
			    (_cor8, _cor9) ->
	      let <SV3> =
		  %% Line 4421
		  apply 'common_set'/2
		      (SV1, SV2)
	      in  %% Line 4422
		  apply 'intersection_of_sv'/2
		      (S, [SV3|Rest])
	  %% Line 4423
	  <_X_S,SV> when 'true' ->
	      %% Line 4425
	      call 'erlang':'throw'
		  ({'error',{'asn1',{'illegal_single_value_constraint',SV}}})
	end
'intersection_of_sv1'/3 =
    %% Line 4427
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <_X_S,Int,SV>
	      when let <_cor3> =
		    call 'erlang':'is_integer'
			(Int)
		in  let <_cor4> =
			call 'erlang':'is_list'
			    (SV)
		    in  call 'erlang':'and'
			    (_cor3, _cor4) ->
	      %% Line 4428
	      case call 'lists':'member'
		       (Int, SV) of
		%% Line 4429
		<'true'> when 'true' ->
		    {'SingleValue',Int}
		%% Line 4430
		<_cor9> when 'true' ->
		    %% Line 4432
		    call 'erlang':'throw'
			({'error',{'asn1',{'illegal_single_value_constraint',Int,SV}}})
	      end
	  %% Line 4434
	  <_X_S,SV1,SV2> when 'true' ->
	      %% Line 4436
	      call 'erlang':'throw'
		  ({'error',{'asn1',{'illegal_single_value_constraint',SV1,SV2}}})
	end
'greatest_LB'/1 =
    %% Line 4438
    fun (_cor0) ->
	case _cor0 of
	  <[H|[]]> when 'true' ->
	      %% Line 4439
	      H
	  %% Line 4440
	  <L> when 'true' ->
	      let <_cor1> =
		  %% Line 4441
		  call 'lists':'reverse'
		      (L)
	      in  %% Line 4441
		  apply 'greatest_LB1'/1
		      (_cor1)
	end
'greatest_LB1'/1 =
    %% Line 4442
    fun (_cor0) ->
	case _cor0 of
	  <['MIN'|[H2|_X_T]]> when 'true' ->
	      %% Line 4443
	      H2
	  %% Line 4444
	  <[H|_X_T]> when 'true' ->
	      %% Line 4445
	      H
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'greatest_LB1',1}}] )
	    -| ['compiler_generated'] )
	end
'smallest_UB'/1 =
    %% Line 4446
    fun (_cor0) ->
	%% Line 4447
	call 'erlang':'hd'
	    (_cor0)
'common_set'/2 =
    %% Line 4449
    fun (_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 4450
	    ( fun (_cor2) ->
		  call 'lists':'member'
		      (_cor2, _cor1)
	      -| [{'id',{0,0,'-common_set/2-fun-0-'}}] )
	in  %% Line 4450
	    call 'lists':'filter'
		(_cor4, _cor0)
'is_int_in_vr'/2 =
    %% Line 4452
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Int,{_cor12,{'MIN','MAX'}}>
	      when call 'erlang':'is_integer'
		    (Int) ->
	      %% Line 4453
	      'true'
	  %% Line 4454
	  <Int,{_cor13,{'MIN',Ub}}>
	      when let <_cor2> =
		    call 'erlang':'is_integer'
			(Int)
		in  let <_cor3> =
			call 'erlang':'=<'
			    (Int, Ub)
		    in  call 'erlang':'and'
			    (_cor2, _cor3) ->
	      %% Line 4455
	      'true'
	  %% Line 4456
	  <Int,{_cor14,{Lb,'MAX'}}>
	      when let <_cor4> =
		    call 'erlang':'is_integer'
			(Int)
		in  let <_cor5> =
			call 'erlang':'>='
			    (Int, Lb)
		    in  call 'erlang':'and'
			    (_cor4, _cor5) ->
	      %% Line 4457
	      'true'
	  %% Line 4458
	  <Int,{_cor15,{Lb,Ub}}>
	      when try
		    let <_cor6> =
			call 'erlang':'is_integer'
			    (Int)
		    in  let <_cor7> =
			    call 'erlang':'>='
				(Int, Lb)
			in  let <_cor8> =
				call 'erlang':'=<'
				    (Int, Ub)
			    in  let <_cor9> =
				    call 'erlang':'and'
					(_cor7, _cor8)
				in  call 'erlang':'and'
					(_cor6, _cor9)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 4459
	      'true'
	  %% Line 4460
	  <_cor16,_cor17> when 'true' ->
	      %% Line 4461
	      'false'
	end
'check_imported'/3 =
    %% Line 4464
    fun (_cor2,_cor1,_cor0) ->
	%% Line 4465
	apply 'check_imported'/4
	    (_cor2, _cor1, _cor0, 'false')
'check_imported'/4 =
    %% Line 4466
    fun (_cor3,_cor2,_cor1,_cor0) ->
	do  %% Line 4467
	    case call 'asn1_db':'dbget'
		     (_cor2, 'MODULE') of
	      %% Line 4468
	      <'undefined'>
		  when call 'erlang':'=:='
			(_cor0,
			 'true') ->
		  let <ErrStr> =
		      %% Line 4469
		      call 'io_lib':'format'
			  ([84|[121|[112|[101|[32|[126|[115|[32|[105|[109|[112|[111|[114|[116|[101|[100|[32|[102|[114|[111|[109|[32|[110|[111|[110|[32|[101|[120|[105|[115|[116|[105|[110|[103|[32|[109|[111|[100|[117|[108|[101|[32|[126|[115|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [_cor1|[_cor2|[]]])
		  in  %% Line 4470
		      apply 'error'/1
			  ({'imported',ErrStr,_cor3})
	      %% Line 4471
	      <'undefined'> when 'true' ->
		  do  %% Line 4472
		      apply 'parse_and_save'/2
			  (_cor3, _cor2)
		      %% Line 4473
		      apply 'check_imported'/4
			  (_cor3, _cor2, _cor1, 'true')
	      %% Line 4474
	      <Im = {'module',_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19}> when ( 'true'
											       -| ['compiler_generated'] ) ->
		  %% Line 4475
		  case apply 'is_exported'/2
			   (Im, _cor1) of
		    %% Line 4476
		    <'false'> when 'true' ->
			let <ErrStr> =
			    %% Line 4477
			    call 'io_lib':'format'
				([73|[109|[112|[111|[114|[116|[101|[100|[32|[116|[121|[112|[101|[32|[126|[115|[32|[110|[111|[116|[32|[101|[120|[112|[111|[114|[116|[101|[100|[32|[102|[114|[111|[109|[32|[109|[111|[100|[117|[108|[101|[32|[126|[115|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [_cor1|[_cor2|[]]])
			in  %% Line 4478
			    apply 'error'/1
				({'imported',ErrStr,_cor3})
		    %% Line 4479
		    <_cor20> when 'true' ->
			'ok'
		  end
	      ( <_cor7> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor7})
		-| ['compiler_generated'] )
	    end
	    %% Line 4483
	    'ok'
'is_exported'/2 =
    %% Line 4485
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Module = {'module',_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16},Name> when ( 'true'
												   -| ['compiler_generated'] ) ->
	      %% Line 4486
	      case _cor13 of
		<{'exports',Exports}> when 'true' ->
		    %% Line 4487
		    case Exports of
		      %% Line 4488
		      <'all'> when 'true' ->
			  %% Line 4489
			  'true'
		      %% Line 4490
		      <[]> when 'true' ->
			  %% Line 4491
			  'false'
		      %% Line 4492
		      <L>
			  when call 'erlang':'is_list'
				(Exports) ->
			  %% Line 4493
			  case call 'lists':'keysearch'
				   (Name, 4, Exports) of
			    %% Line 4494
			    <'false'> when 'true' ->
				'false'
			    %% Line 4495
			    <_cor25> when 'true' ->
				'true'
			  end
		      ( <_cor6> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_cor6})
			-| ['compiler_generated'] )
		    end
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'is_exported',2}}] )
	    -| ['compiler_generated'] )
	end
'check_externaltypereference'/2 =
    %% Line 4500
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,Etref = {'Externaltypereference',_cor15,Emod,_cor16}> when 'true' ->
	      %% Line 4501
	      ( case S of
		  ( <( {'state',_cor17,_rec509,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28}
		       -| ['compiler_generated'] )> when 'true' ->
			%% Line 4503
			case Emod of
			  %% Line 4504
			  <_cor43>
			      when call 'erlang':'=:='
				    (Emod,
				     _rec509) ->
			      %% Line 4506
			      apply 'check_reference'/2
				  (S, Etref)
			  %% Line 4507
			  <_cor44> when 'true' ->
			      %% Line 4509
			      case call 'lists':'member'
				       (Emod, _cor24) of
				%% Line 4510
				<'true'> when 'true' ->
				    %% Line 4511
				    apply 'check_reference'/2
					(S, Etref)
				%% Line 4512
				<'false'> when 'true' ->
				    %% Line 4513
				    case apply 'get_referenced_type'/2
					     (S, Etref) of
				      <{NewMod,_cor45}> when 'true' ->
					  %% Line 4514
					  call 'erlang':'setelement'
					      (3, Etref, NewMod)
				      ( <_cor8> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_cor8})
					-| ['compiler_generated'] )
				    end
				( <_cor11> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor11})
				  -| ['compiler_generated'] )
			      end
			end
		    -| ['compiler_generated'] )
		  ( <_cor29> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14,_cor13})
		  -| [{'function_name',{'check_externaltypereference',2}}] )
	    -| ['compiler_generated'] )
	end
'check_reference'/2 =
    %% Line 4518
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,{'Externaltypereference',Pos,Emod,Name}> when 'true' ->
	      %% Line 4519
	      ( case S of
		  ( <( {'state',_cor12,_rec512,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23}
		       -| ['compiler_generated'] )> when 'true' ->
			%% Line 4520
			case call 'asn1_db':'dbget'
				 (_rec512, Name) of
			  %% Line 4521
			  <'undefined'> when 'true' ->
			      %% Line 4522
			      case apply 'imported'/2
				       (S, Name) of
				%% Line 4523
				<{'ok',Imodule}> when 'true' ->
				    do  %% Line 4524
					apply 'check_imported'/3
					    (S, Imodule, Name)
					%% Line 4525
					{'Externaltypereference','undefined',Imodule,Name}
				%% Line 4532
				<_cor25> when 'true' ->
				    %% Line 4534
				    case apply 'get_renamed_reference'/3
					     (S, Name, Emod) of
				      <{M,T}> when 'true' ->
					  let <NewName> =
					      %% Line 4535
					      call 'asn1ct':'get_name_of_def'
						  (T)
					  in  let <NewPos> =
						  %% Line 4536
						  call 'asn1ct':'get_pos_of_def'
						      (T)
					      in  %% Line 4537
						  {'Externaltypereference',NewPos,%% Line 4538
										  M,%% Line 4539
										    NewName}
				      ( <_cor5> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_cor5})
					-| ['compiler_generated'] )
				    end
			      end
			  %% Line 4541
			  <_cor26> when 'true' ->
			      %% Line 4546
			      {'Externaltypereference',Pos,_rec512,Name}
			end
		    -| ['compiler_generated'] )
		  ( <_cor24> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10})
		  -| [{'function_name',{'check_reference',2}}] )
	    -| ['compiler_generated'] )
	end
'get_referenced_type'/2 =
    %% Line 4550
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,Ext = {'Externaltypereference',_cor23,_cor24,_cor25}> when ( 'true'
									  -| ['compiler_generated'] ) ->
	      %% Line 4551
	      ( case S of
		  ( <( {'state',_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_rec513,_cor33,_cor34,_cor35,_cor36,_cor37}
		       -| ['compiler_generated'] )> when 'true' ->
			case apply 'match_parameters'/3
				 (S, Ext, _rec513) of
			  %% Line 4552
			  <_cor39>
			      when call 'erlang':'=:='
				    (_cor39,
				     Ext) ->
			      %% Line 4554
			      case _cor27 of
				%% Line 4555
				<_cor53>
				    when call 'erlang':'=:='
					  (_cor27,
					   _cor24) ->
				    %% Line 4556
				    apply 'get_referenced1'/4
					(S, _cor24, _cor25, _cor23)
				%% Line 4557
				<_cor54> when 'true' ->
				    %% Line 4558
				    case call 'lists':'member'
					     (_cor24, _cor33) of
				      %% Line 4559
				      <'true'> when 'true' ->
					  %% Line 4560
					  apply 'get_referenced1'/4
					      (S, _cor24, _cor25, _cor23)
				      %% Line 4561
				      <'false'> when 'true' ->
					  %% Line 4562
					  apply 'get_referenced'/4
					      (S, _cor24, _cor25, _cor23)
				      ( <_cor9> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_cor9})
					-| ['compiler_generated'] )
				    end
			      end
			  %% Line 4565
			  <ERef = {'Externaltypereference',_cor68,_cor69,_cor70}> when 'true' ->
			      %% Line 4566
			      apply 'get_referenced_type'/2
				  (S, ERef)
			  %% Line 4567
			  <Other> when 'true' ->
			      %% Line 4568
			      {'undefined',Other}
			end
		    -| ['compiler_generated'] )
		  ( <_cor38> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 4570
	  <S = {'state',_cor71,Emod,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82},ERef = %% Line 4571
															 {'Externalvaluereference',P,_cor83,%% Line 4572
																			    Eval}>
	      when call 'erlang':'=:='
		    (_cor83,
		     %% Line 4571
		     Emod) ->
	      %% Line 4573
	      case apply 'match_parameters'/3
		       (S, ERef, _cor77) of
		%% Line 4574
		<_cor97>
		    when call 'erlang':'=:='
			  (_cor97,
			   ERef) ->
		    %% Line 4575
		    apply 'get_referenced1'/4
			(S, Emod, Eval, P)
		%% Line 4576
		<OtherERef = {'Externalvaluereference',_cor98,_cor99,_cor100}> when ( 'true'
										      -| ['compiler_generated'] ) ->
		    %% Line 4577
		    apply 'get_referenced_type'/2
			(S, OtherERef)
		%% Line 4578
		<Value> when 'true' ->
		    %% Line 4579
		    {Emod,Value}
	      end
	  %% Line 4581
	  <S,ERef = {'Externalvaluereference',Pos,Emod,%% Line 4582
						       Eval}> when 'true' ->
	      %% Line 4583
	      ( case S of
		  ( <( {'state',_cor101,_cor102,_cor103,_cor104,_cor105,_cor106,_cor107,_rec517,_cor108,_cor109,_cor110,_cor111,_cor112}
		       -| ['compiler_generated'] )> when 'true' ->
			case apply 'match_parameters'/3
				 (S, ERef, _rec517) of
			  %% Line 4584
			  <_cor114>
			      when call 'erlang':'=:='
				    (_cor114,
				     ERef) ->
			      %% Line 4585
			      case call 'lists':'member'
				       (Emod, _cor108) of
				%% Line 4586
				<'true'> when 'true' ->
				    %% Line 4587
				    apply 'get_referenced1'/4
					(S, Emod, Eval, Pos)
				%% Line 4588
				<'false'> when 'true' ->
				    %% Line 4589
				    apply 'get_referenced'/4
					(S, Emod, Eval, Pos)
				( <_cor19> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor19})
				  -| ['compiler_generated'] )
			      end
			  %% Line 4591
			  <OtherERef> when 'true' ->
			      %% Line 4592
			      apply 'get_referenced_type'/2
				  (S, OtherERef)
			end
		    -| ['compiler_generated'] )
		  ( <_cor113> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 4594
	  <S,{'identifier',Pos,Name}> when 'true' ->
	      %% Line 4595
	      apply 'get_referenced1'/4
		  (S, 'undefined', Name, Pos)
	  %% Line 4596
	  <_X_S,Type> when 'true' ->
	      %% Line 4597
	      {'undefined',Type}
	end
'get_referenced'/4 =
    %% Line 4605
    fun (_cor3,_cor2,_cor1,_cor0) ->
	do  %% Line 4607
	    apply 'parse_and_save'/2
		(_cor3, _cor2)
	    %% Line 4609
	    case call 'asn1_db':'dbget'
		     (_cor2, _cor1) of
	      %% Line 4610
	      <'undefined'> when 'true' ->
		  %% Line 4612
		  case call 'asn1_db':'dbget'
			   (_cor2, 'MODULE') of
		    %% Line 4613
		    <'undefined'> when 'true' ->
			%% Line 4614
			call 'erlang':'throw'
			    ({'error',{'asn1',{'module_not_found',_cor2}}})
		    %% Line 4615
		    <_cor11> when 'true' ->
			let <NewS> =
			    %% Line 4616
			    apply 'update_state'/2
				(_cor3, _cor2)
			in  %% Line 4617
			    apply 'get_imported'/4
				(NewS, _cor1, _cor2, _cor0)
		  end
	      %% Line 4619
	      <T = {'typedef',_cor12,_cor13,_cor14,_cor15}> when ( 'true'
								   -| ['compiler_generated'] ) ->
		  %% Line 4621
		  {_cor2,T}
	      %% Line 4622
	      <V> when 'true' ->
		  %% Line 4624
		  {_cor2,V}
	    end
'get_referenced1'/4 =
    %% Line 4627
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 4628
	( case _cor3 of
	    ( <( {'state',_cor13,_rec519,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24}
		 -| ['compiler_generated'] )> when 'true' ->
		  case call 'asn1_db':'dbget'
			   (_rec519, _cor1) of
		    %% Line 4629
		    <'undefined'> when 'true' ->
			%% Line 4632
			apply 'get_imported'/4
			    (_cor3, _cor1, _cor2, _cor0)
		    %% Line 4633
		    <T> when 'true' ->
			%% Line 4634
			{_rec519,T}
		  end
	      -| ['compiler_generated'] )
	    ( <_cor25> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'get_imported'/4 =
    %% Line 4637
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 4639
	case apply 'imported'/2
		 (_cor3, _cor2) of
	  %% Line 4640
	  <{'ok',Imodule}> when 'true' ->
	      do  %% Line 4641
		  apply 'parse_and_save'/2
		      (_cor3, Imodule)
		  %% Line 4642
		  case call 'asn1_db':'dbget'
			   (Imodule, 'MODULE') of
		    %% Line 4643
		    <'undefined'> when 'true' ->
			%% Line 4644
			call 'erlang':'throw'
			    ({'error',{'asn1',{'module_not_found',Imodule}}})
		    %% Line 4645
		    <Im = {'module',_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18}> when ( 'true'
												     -| ['compiler_generated'] ) ->
			%% Line 4646
			case apply 'is_exported'/2
				 (Im, _cor2) of
			  %% Line 4647
			  <'false'> when 'true' ->
			      %% Line 4648
			      call 'erlang':'throw'
				  ({'error',%% Line 4649
					    {'asn1',{'not_exported',{Im,_cor2}}}})
			  %% Line 4650
			  <_cor19> when 'true' ->
			      %% Line 4652
			      apply 'get_referenced_type'/2
				  (_cor3, %% Line 4653
					  {'Externaltypereference',_cor0,%% Line 4654
									 Imodule,_cor2})
			end
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor5})
		      -| ['compiler_generated'] )
		  end
	  %% Line 4658
	  <_cor20> when 'true' ->
	      %% Line 4659
	      apply 'get_renamed_reference'/3
		  (_cor3, _cor2, _cor1)
	end
'check_and_save'/4 =
    %% Line 4662
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <S = {'state',_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69},ERef = {'Externaltypereference',_cor70,M,_cor71},TDef = {'typedef','false',_cor72,_cor73,_cor74},Settings>
	      when %% Line 4663
		call 'erlang':'/='
		    (_cor58,
		     M) ->
	      let <_rec521> =
		  %% Line 4665
		  apply 'load_asn1_module'/2
		      (S, M)
	      in  let <_rec522> =
		      %% Line 4666
		      apply 'get_datastr_name'/1
			  (TDef)
		  in  let <_cor13> =
			  %% Line 4666
			  call 'erlang':'setelement'
			      (5, S, _rec522)
		      in  let <_cor14> =
			      %% Line 4666
			      call 'erlang':'setelement'
				  (4, _cor13, TDef)
			  in  let <_cor15> =
				  %% Line 4665
				  call 'erlang':'setelement'
				      (3, _cor14, M)
			      in  let <_cor17> =
				      %% Line 4665
				      call 'erlang':'setelement'
					  (2, _cor15, _rec521)
				  in  let <Type> =
					  %% Line 4667
					  apply 'check_type'/3
					      (_cor17, TDef, _cor74)
				      in  let <_cor23> =
					      %% Line 4669
					      call 'erlang':'setelement'
						  (5, TDef, Type)
					  in  let <_cor25> =
						  %% Line 4668
						  call 'erlang':'setelement'
						      (2, _cor23, 'true')
					      in  let <_cor27> =
						      %% Line 4670
						      apply 'get_datastr_name'/1
							  (TDef)
						  in  do  %% Line 4670
							  call 'asn1_db':'dbput'
							      (M, _cor27, _cor25)
							  let <_cor28> =
							      %% Line 4671
							      apply 'merged_name'/2
								  (S, ERef)
							  in  %% Line 4671
							      {_cor28,Settings}
	  %% Line 4672
	  <S,Eref = {'Externaltypereference',_cor98,M,N},PTDef = %% Line 4673
								 {'ptypedef',_cor99,_cor100,Name,Params,_cor101},%% Line 4673
														 Settings> when 'true' ->
	      let <_rec526> =
		  %% Line 4677
		  apply 'load_asn1_module'/2
		      (S, M)
	      in  %% Line 4677
		  case S of
		    <{'state',_cor102,_cor103,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_cor110,_cor111,_cor112,_cor113,_cor114}> when 'true' ->
			let <_cor31> =
			    %% Line 4678
			    call 'erlang':'setelement'
				(5, S, Name)
			in  let <_cor32> =
				%% Line 4678
				call 'erlang':'setelement'
				    (4, _cor31, PTDef)
			    in  let <_cor33> =
				    call 'erlang':'setelement'
					(3, _cor32, M)
				in  let <_cor35> =
					call 'erlang':'setelement'
					    (2, _cor33, _rec526)
				    in  let <_cor37> =
					    %% Line 4679
					    call 'erlang':'length'
						(Params)
					in  %% Line 4679
					    case call 'lists':'split'
						     (_cor37, Settings) of
					      <{Args,RestSettings}> when 'true' ->
						  let <Type> =
						      %% Line 4680
						      apply 'check_type'/3
							  (_cor35, PTDef, {'type',[],{'pt',Eref,Args},[],[],'no'})
						  in  let <ERefName> =
							  %% Line 4681
							  apply 'new_reference_name'/1
							      (N)
						      in  let <ERefNew> =
							      %% Line 4682
							      {'Externaltypereference','undefined',_cor103,ERefName}
							  in  let <NewTDef> =
								  %% Line 4683
								  {'typedef','true','undefined',ERefName,%% Line 4684
													 Type}
							      in  do  %% Line 4685
								      apply 'insert_once'/3
									  (S, 'parameterized_objects', {ERefName,'type',NewTDef})
								      %% Line 4686
								      ( case ERefNew of
									  ( <( {'Externaltypereference',_cor142,_cor143,_rec530}
									       -| ['compiler_generated'] )> when 'true' ->
										do  call 'asn1_db':'dbput'
											(_cor103, _rec530, %% Line 4687
													   NewTDef)
										    %% Line 4688
										    {ERefNew,RestSettings}
									    -| ['compiler_generated'] )
									  ( <_cor144> when 'true' ->
										( call ( 'erlang'
											 -| ['compiler_generated'] ):( 'error'
														       -| ['compiler_generated'] )
										      (( {'badrecord','Externaltypereference'}
											 -| ['compiler_generated'] ))
										  -| ['compiler_generated'] )
									    -| ['compiler_generated'] )
									end
									-| ['compiler_generated'] )
					      ( <_cor38> when 'true' ->
						    primop 'match_fail'
							({'badmatch',_cor38})
						-| ['compiler_generated'] )
					    end
		    ( <_cor115> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','state'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 4689
	  <_X_S,ERef,TDef,Settings> when 'true' ->
	      let <_rec531> =
		  %% Line 4691
		  call 'asn1ct':'get_name_of_def'
		      (TDef)
	      in  %% Line 4691
		  case ERef of
		    <{'Externaltypereference',_cor145,_cor146,_cor147}> when 'true' ->
			let <_cor52> =
			    call 'erlang':'setelement'
				(4, ERef, _rec531)
			in  {_cor52,Settings}
		    ( <_cor148> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','Externaltypereference'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	end
'save_object_set_instance'/3 =
    %% Line 4693
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,Name,ObjSetSpec = {'ObjectSet',_cor13,_cor14,_cor15,_cor16}> when %% Line 4694
									       ( 'true'
										 -| ['compiler_generated'] ) ->
	      let <NewObjSet> =
		  %% Line 4695
		  {'typedef','true','undefined',Name,ObjSetSpec}
	      in  %% Line 4696
		  ( case S of
		      ( <( {'state',_cor17,_rec533,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28}
			   -| ['compiler_generated'] )> when 'true' ->
			    do  call 'asn1_db':'dbput'
				    (_rec533, Name, NewObjSet)
				do  %% Line 4697
				    case <_cor13,_cor14,_cor15,_cor16> of
				      %% Line 4698
				      <_cor30,_cor31,{'unique','undefined'},_cor32> when 'true' ->
					  'ok'
				      %% Line 4700
				      <_fol3985,_fol3986,_fol3987,_fol3988> when 'true' ->
					  let <ObjSetKey> = {%% Line 4703
					       Name,%% Line 4703
						    'objectset',%% Line 4703
								NewObjSet}
					  in  %% Line 4705
					      apply 'insert_once'/3
						  (S, 'parameterized_objects', ObjSetKey)
				    end
				    %% Line 4707
				    {'Externaltypereference','undefined',_rec533,Name}
			-| ['compiler_generated'] )
		      ( <_cor29> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  ( <_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11,_cor10})
		  -| [{'function_name',{'save_object_set_instance',3}}] )
	    -| ['compiler_generated'] )
	end
'load_asn1_module'/2 =
    %% Line 4712
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'state',Mod,M,_cor4,_cor5,_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14},_cor15>
	      when call 'erlang':'=:='
		    (_cor15,
		     M) ->
	      %% Line 4713
	      Mod
	  %% Line 4714
	  <_cor16,M> when 'true' ->
	      %% Line 4715
	      call 'asn1_db':'dbget'
		  (M, 'MODULE')
	end
'parse_and_save'/2 =
    %% Line 4717
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S = {'state',_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21},Module> when ( 'true'
																  -| ['compiler_generated'] ) ->
	      %% Line 4719
	      case apply 'asn1db_member'/3
		       (S, _cor15, Module) of
		%% Line 4720
		<'true'> when 'true' ->
		    %% Line 4721
		    'ok'
		%% Line 4722
		<_cor35> when 'true' ->
		    %% Line 4723
		    case call 'asn1ct':'parse_and_save'
			     (Module, S) of
		      %% Line 4724
		      <'ok'> when 'true' ->
			  %% Line 4725
			  apply 'save_asn1db_uptodate'/3
			      (S, _cor15, Module)
		      %% Line 4726
		      <Err> when 'true' ->
			  %% Line 4727
			  Err
		    end
	      end
	  ( <_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7})
		  -| [{'function_name',{'parse_and_save',2}}] )
	    -| ['compiler_generated'] )
	end
'asn1db_member'/3 =
    %% Line 4731
    fun (_cor2,_cor1,_cor0) ->
	let <Asn1dbUTL> =
	    %% Line 4732
	    apply 'get_asn1db_uptodate'/1
		(_cor2)
	in  %% Line 4733
	    call 'lists':'member'
		({_cor1,_cor0}, Asn1dbUTL)
'save_asn1db_uptodate'/3 =
    %% Line 4735
    fun (_cor2,_cor1,_cor0) ->
	let <Asn1dbUTL> =
	    %% Line 4736
	    apply 'get_asn1db_uptodate'/1
		(_cor2)
	in  let <Asn1dbUTL2> =
		%% Line 4737
		call 'lists':'keydelete'
		    (_cor0, 2, Asn1dbUTL)
	    in  %% Line 4738
		apply 'put_asn1db_uptodate'/1
		    ([{_cor1,_cor0}|Asn1dbUTL2])
'get_asn1db_uptodate'/1 =
    %% Line 4740
    fun (_cor0) ->
	%% Line 4741
	case call 'erlang':'get'
		 ('asn1db_uptodate') of
	  %% Line 4742
	  <'undefined'> when 'true' ->
	      ( case _cor0 of
		  ( <( {'state',_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_rec536,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18}
		       -| ['compiler_generated'] )> when 'true' ->
			[{_rec536,_cor8}|[]]
		    -| ['compiler_generated'] )
		  ( <_cor19> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 4743
	  <L> when 'true' ->
	      L
	end
'put_asn1db_uptodate'/1 =
    %% Line 4746
    fun (_cor0) ->
	%% Line 4747
	call 'erlang':'put'
	    ('asn1db_uptodate', _cor0)
'update_state'/2 =
    %% Line 4749
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,'undefined'> when 'true' ->
	      %% Line 4750
	      S
	  %% Line 4751
	  <S = {'state',_cor11,ModuleName,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22},_cor23>
	      when call 'erlang':'=:='
		    (_cor23,
		     ModuleName) ->
	      %% Line 4752
	      S
	  %% Line 4753
	  <S,ModuleName> when 'true' ->
	      %% Line 4754
	      ( case S of
		  ( <( {'state',_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_rec538,_cor32,_cor33,_cor34,_cor35}
		       -| ['compiler_generated'] )> when 'true' ->
			case call 'lists':'member'
				 (ModuleName, _rec538) of
			  %% Line 4755
			  <'true'> when 'true' ->
			      %% Line 4756
			      S
			  %% Line 4757
			  <_cor37> when 'true' ->
			      do  %% Line 4758
				  apply 'parse_and_save'/2
				      (S, ModuleName)
				  %% Line 4759
				  case call 'asn1_db':'dbget'
					   (ModuleName, 'MODULE') of
				    %% Line 4760
				    <RefedMod = {'module',_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45}> when ( 'true'
															   -| ['compiler_generated'] ) ->
					let <_cor5> =
					    %% Line 4761
					    call 'erlang':'setelement'
						(3, S, ModuleName)
					in  %% Line 4761
					    call 'erlang':'setelement'
						(2, _cor5, RefedMod)
				    %% Line 4762
				    <_cor60> when 'true' ->
					call 'erlang':'throw'
					    ({'error',{'asn1',{'module_does_not_exist',ModuleName}}})
				  end
			end
		    -| ['compiler_generated'] )
		  ( <_cor36> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'get_renamed_reference'/3 =
    %% Line 4767
    fun (_cor2,_cor1,_cor0) ->
	%% Line 4768
	case apply 'renamed_reference'/3
		 (_cor2, _cor1, _cor0) of
	  %% Line 4769
	  <'undefined'> when 'true' ->
	      %% Line 4770
	      call 'erlang':'throw'
		  ({'error',{'asn1',{'undefined_type',_cor1}}})
	  %% Line 4771
	  <NewTypeName>
	      when call 'erlang':'=/='
		    (NewTypeName,
		     _cor1) ->
	      %% Line 4772
	      apply 'get_referenced1'/4
		  (_cor2, _cor0, NewTypeName, 'undefined')
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor3})
	    -| ['compiler_generated'] )
	end
'renamed_reference'/2 =
    %% Line 4774
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,{'Externaltypereference',_cor5,Module,Name}> when 'true' ->
	      %% Line 4775
	      case apply 'renamed_reference'/3
		       (S, Name, Module) of
		%% Line 4776
		<'undefined'> when 'true' ->
		    %% Line 4777
		    Name
		%% Line 4778
		<Other> when 'true' ->
		    %% Line 4779
		    Other
	      end
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'renamed_reference',2}}] )
	    -| ['compiler_generated'] )
	end
'renamed_reference'/3 =
    %% Line 4781
    fun (_cor2,_cor1,_cor0) ->
	%% Line 4784
	case call 'asn1ct_table':'exists'
		 ('renamed_defs') of
	  %% Line 4785
	  <'false'> when 'true' ->
	      'undefined'
	  %% Line 4786
	  <'true'> when 'true' ->
	      %% Line 4787
	      case call 'asn1ct_table':'match'
		       ('renamed_defs', {'$1',_cor1,_cor0}) of
		%% Line 4788
		<[]> when 'true' ->
		    %% Line 4789
		    case call 'asn1ct_table':'exists'
			     ('original_imports') of
		      %% Line 4790
		      <'false'> when 'true' ->
			  %% Line 4791
			  'undefined'
		      %% Line 4792
		      <'true'> when 'true' ->
			  %% Line 4793
			  case call 'asn1ct_table':'match'
				   ('original_imports', {_cor0,'$1'}) of
			    %% Line 4794
			    <[]> when 'true' ->
				%% Line 4795
				'undefined'
			    %% Line 4796
			    <[[ImportsList|[]]|[]]> when 'true' ->
				%% Line 4797
				case apply 'get_importmoduleoftype'/2
					 (ImportsList, _cor1) of
				  %% Line 4798
				  <'undefined'> when 'true' ->
				      %% Line 4799
				      'undefined'
				  %% Line 4800
				  <NextMod> when 'true' ->
				      %% Line 4801
				      apply 'renamed_reference'/3
					  (_cor2, _cor1, NextMod)
				end
			    ( <_cor4> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor4})
			      -| ['compiler_generated'] )
			  end
		      ( <_cor5> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_cor5})
			-| ['compiler_generated'] )
		    end
		%% Line 4805
		<[[NewTypeName|[]]|[]]> when 'true' ->
		    %% Line 4806
		    NewTypeName
		( <_cor6> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor6})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor7> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor7})
	    -| ['compiler_generated'] )
	end
'get_importmoduleoftype'/2 =
    %% Line 4810
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[I|Is],Name> when 'true' ->
	      %% Line 4812
	      ( case I of
		  ( <( {'SymbolsFromModule',_rec540,_cor11,_cor12}
		       -| ['compiler_generated'] )> when 'true' ->
			case call 'lists':'keysearch'
				 (Name, 4, _rec540) of
			  %% Line 4813
			  <{'value',_X_Ref}> when 'true' ->
			      %% Line 4814
			      ( case _cor11 of
				  ( <( {'Externaltypereference',_cor17,_cor18,_rec541}
				       -| ['compiler_generated'] )> when 'true' ->
					_rec541
				    -| ['compiler_generated'] )
				  ( <_cor19> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','Externaltypereference'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			  %% Line 4815
			  <_cor20> when 'true' ->
			      %% Line 4816
			      apply 'get_importmoduleoftype'/2
				  (Is, Name)
			end
		    -| ['compiler_generated'] )
		  ( <_cor13> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','SymbolsFromModule'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 4818
	  <[],_cor21> when 'true' ->
	      %% Line 4819
	      'undefined'
	  ( <_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9})
		  -| [{'function_name',{'get_importmoduleoftype',2}}] )
	    -| ['compiler_generated'] )
	end
'match_parameters'/3 =
    %% Line 4822
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <_X_S,Name,[]> when 'true' ->
	      %% Line 4823
	      Name
	  %% Line 4825
	  <_X_S,{'Externaltypereference',_cor32,_cor33,Name},[{{'Externaltypereference',_cor34,_cor35,_cor36},NewName}|_X_T]>
	      when call 'erlang':'=:='
		    (_cor36,
		     Name) ->
	      %% Line 4826
	      NewName
	  %% Line 4827
	  <_X_S,{'Externaltypereference',_cor37,_cor38,Name},[{{_cor39,{'Externaltypereference',_cor40,_cor41,_cor42}},NewName}|_X_T]>
	      when call 'erlang':'=:='
		    (_cor42,
		     Name) ->
	      %% Line 4828
	      NewName
	  %% Line 4829
	  <_X_S,{'Externalvaluereference',_cor43,_cor44,Name},[{{'Externalvaluereference',_cor45,_cor46,_cor47},NewName}|_X_T]>
	      when call 'erlang':'=:='
		    (_cor47,
		     Name) ->
	      %% Line 4830
	      NewName
	  %% Line 4831
	  <_X_S,{'Externalvaluereference',_cor48,_cor49,Name},[{{_cor50,{'Externalvaluereference',_cor51,_cor52,_cor53}},NewName}|_X_T]>
	      when call 'erlang':'=:='
		    (_cor53,
		     Name) ->
	      %% Line 4832
	      NewName
	  %% Line 4833
	  <_X_S,{'type',_cor54,{'Externaltypereference',_cor55,M,Name},_cor56,_cor57,_cor58},%% Line 4834
											     [{{'Externaltypereference',_cor59,_cor60,_cor61},Type}|[]]>
	      when let <_cor62> =
		    call 'erlang':'=:='
			(_cor60, %% Line 4834
				 M)
		in  let <_cor63> =
			call 'erlang':'=:='
			    (_cor61, %% Line 4834
				     Name)
		    in  call 'erlang':'and'
			    (_cor62, _cor63) ->
	      %% Line 4835
	      Type
	  %% Line 4836
	  <_X_S,{'valueset',{'type',_cor64,{'Externaltypereference',_cor65,_cor66,Name},_cor67,_cor68,_cor69}},%% Line 4837
													       [{{_cor70,{'Externaltypereference',_cor71,_cor72,_cor73}},{'valueset',{'type',_cor74,NewName,_cor75,_cor76,_cor77}}}|_X_T]>
	      when call 'erlang':'=:='
		    (_cor73,
		     %% Line 4837
		     Name) ->
	      %% Line 4838
	      NewName
	  %% Line 4839
	  <_X_S,{'valueset',{'type',_cor78,{'Externaltypereference',_cor79,_cor80,Name},_cor81,_cor82,_cor83}},%% Line 4840
													       [{{_cor84,{'Externaltypereference',_cor85,_cor86,_cor87}},NewName = %% Line 4841
																						   {'type',_cor88,{'Externaltypereference',_cor89,_cor90,_cor91},_cor92,_cor93,_cor94}}|%% Line 4841
																																	_X_T]>
	      when call 'erlang':'=:='
		    (_cor87,
		     %% Line 4840
		     Name) ->
	      %% Line 4842
	      ( {'Externaltypereference',_cor89,_cor90,_cor91}
		-| ['compiler_generated'] )
	  %% Line 4843
	  <_X_S,{'valueset',{'type',_cor100,{'Externaltypereference',_cor101,_cor102,Name},_cor103,_cor104,_cor105}},%% Line 4844
														     [{{_cor106,{'Externaltypereference',_cor107,_cor108,_cor109}},NewName}|_X_T]>
	      when call 'erlang':'=:='
		    (_cor109,
		     %% Line 4844
		     Name) ->
	      %% Line 4845
	      NewName
	  %% Line 4848
	  <S,{'valueset',T = {'type',_cor110,{'pt',_cor111,_X_Args},_cor112,_cor113,_cor114}},_X_Parameters> when 'true' ->
	      let <_cor6> =
		  catch
		      %% Line 4849
		      ( case S of
			  ( <( {'state',_cor115,_cor116,_cor117,_rec544,_cor118,_cor119,_cor120,_cor121,_cor122,_cor123,_cor124,_cor125,_cor126}
			       -| ['compiler_generated'] )> when 'true' ->
				apply 'check_type'/3
				    (S, {'typedef','false','undefined',_rec544,T}, T)
			    -| ['compiler_generated'] )
			  ( <_cor127> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','state'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	      in  %% Line 4849
		  case _cor6 of
		    %% Line 4850
		    <'pobjectsetdef'> when 'true' ->
			%% Line 4853
			case apply 'get_referenced_type'/2
				 (S, _cor111) of
			  <{_cor134,ObjDef}> when 'true' ->
			      let <_cor13> =
				  %% Line 4856
				  case ObjDef of
				    %% Line 4857
				    <{'pvaluesetdef',_cor135,_cor136,_cor137,_cor138,TDef,_cor139}> when 'true' ->
					%% Line 4858
					( case TDef of
					    ( <( {'type',_cor140,_rec546,_cor141,_cor142,_cor143}
						 -| ['compiler_generated'] )> when 'true' ->
						  _rec546
					      -| ['compiler_generated'] )
					    ( <_cor144> when 'true' ->
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'error'
											 -| ['compiler_generated'] )
							(( {'badrecord','type'}
							   -| ['compiler_generated'] ))
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
					  -| ['compiler_generated'] )
				    %% Line 4859
				    <{'pobjectsetdef',_cor145,_cor146,_cor147,_cor148,ClRef,_cor149}> when 'true' ->
					ClRef
				    ( <_cor12> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',_cor12})
				      -| ['compiler_generated'] )
				  end
			      in  %% Line 4862
				  case apply 'get_referenced_type'/2
					   (S, _cor13) of
				    <{HomeMod,_cor150}> when 'true' ->
					%% Line 4864
					case _cor13 of
					  <{'Externaltypereference',_cor151,_cor152,_cor153}> when 'true' ->
					      let <_cor18> =
						  call 'erlang':'setelement'
						      (3, _cor13, HomeMod)
					      in  let <ObjectSet> =
						      %% Line 4866
						      {'ObjectSet',_cor18,'true','undefined',T}
						  in  let <ObjSpec> =
							  %% Line 4867
							  apply 'check_object'/3
							      (S, {'typedef','false','undefined','undefined',ObjectSet}, ObjectSet)
						      in  let <_cor22> =
							      %% Line 4868
							      apply 'get_datastr_name'/1
								  (ObjDef)
							  in  %% Line 4868
							      ( case S of
								  ( <( {'state',_cor155,_cor156,_cor157,_cor158,_cor159,_cor160,_cor161,_cor162,_cor163,_cor164,_rec548,_cor165,_cor166}
								       -| ['compiler_generated'] )> when 'true' ->
									let <_cor25> =
									    call 'asn1ct_gen':'list2name'
										([_cor22|_rec548])
									in  let <Name> =
										call 'erlang':'list_to_atom'
										    (_cor25)
									    in  %% Line 4869
										apply 'save_object_set_instance'/3
										    (S, Name, ObjSpec)
								    -| ['compiler_generated'] )
								  ( <_cor167> when 'true' ->
									( call ( 'erlang'
										 -| ['compiler_generated'] ):( 'error'
													       -| ['compiler_generated'] )
									      (( {'badrecord','state'}
										 -| ['compiler_generated'] ))
									  -| ['compiler_generated'] )
								    -| ['compiler_generated'] )
								end
								-| ['compiler_generated'] )
					  ( <_cor154> when 'true' ->
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'error'
										       -| ['compiler_generated'] )
						      (( {'badrecord','Externaltypereference'}
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
				    ( <_cor15> when 'true' ->
					  primop 'match_fail'
					      ({'badmatch',_cor15})
				      -| ['compiler_generated'] )
				  end
			  ( <_cor10> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor10})
			    -| ['compiler_generated'] )
			end
		    %% Line 4870
		    <'pvaluesetdef'> when 'true' ->
			apply 'error'/1
			    ({'pvaluesetdef',[112|[97|[114|[97|[109|[101|[116|[101|[114|[105|[122|[101|[100|[32|[118|[97|[108|[117|[101|[115|[101|[116]]]]]]]]]]]]]]]]]]]]]],S})
		    %% Line 4871
		    <{'error',_X_Reason}> when 'true' ->
			apply 'error'/1
			    ({'type',[101|[114|[114|[111|[114|[32|[105|[110|[32|[112|[97|[114|[97|[109|[101|[116|[101|[114]]]]]]]]]]]]]]]]]],S})
		    %% Line 4872
		    <Ts = {'type',_cor168,_cor169,_cor170,_cor171,_cor172}> when ( 'true'
										   -| ['compiler_generated'] ) ->
			_cor169
		    ( <_cor28> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor28})
		      -| ['compiler_generated'] )
		  end
	  %% Line 4875
	  <S,{'valueset',{'pos',{'objectset',_cor178,POSref},Args}},Parameters> when 'true' ->
	      %% Line 4876
	      apply 'match_parameters'/3
		  (S, {'valueset',{'type',[],{'pt',POSref,Args},[],[],'no'}}, Parameters)
	  %% Line 4877
	  <S,Name,[_X_H|T]> when 'true' ->
	      %% Line 4879
	      apply 'match_parameters'/3
		  (S, Name, T)
	  ( <_cor31,_cor30,_cor29> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor31,_cor30,_cor29})
		  -| [{'function_name',{'match_parameters',3}}] )
	    -| ['compiler_generated'] )
	end
'imported'/2 =
    %% Line 4881
    fun (_cor1,_cor0) ->
	%% Line 4882
	( case _cor1 of
	    ( <( {'state',_rec551,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20}
		 -| ['compiler_generated'] )> when 'true' ->
		  ( case _rec551 of
		      ( <( {'module',_cor22,_cor23,_cor24,_cor25,_cor26,_rec550,_cor27,_cor28}
			   -| ['compiler_generated'] )> when 'true' ->
			    case _rec550 of
			      <{'imports',Ilist}> when 'true' ->
				  %% Line 4883
				  apply 'imported1'/2
				      (_cor0, Ilist)
			      ( <_cor6> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_cor6})
				-| ['compiler_generated'] )
			    end
			-| ['compiler_generated'] )
		      ( <_cor29> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','module'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_cor21> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'imported1'/2 =
    %% Line 4885
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Name,%% Line 4886
		[{'SymbolsFromModule',Symlist,%% Line 4887
					      {'Externaltypereference',_cor5,_cor6,ModuleName},_cor7}|%% Line 4887
												      T]> when 'true' ->
	      %% Line 4888
	      case call 'lists':'keysearch'
		       (Name, 4, Symlist) of
		%% Line 4889
		<{'value',_X_V}> when 'true' ->
		    %% Line 4890
		    {'ok',ModuleName}
		%% Line 4891
		<_cor8> when 'true' ->
		    %% Line 4892
		    apply 'imported1'/2
			(Name, T)
	      end
	  %% Line 4894
	  <_X_Name,[]> when 'true' ->
	      %% Line 4895
	      'false'
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'imported1',2}}] )
	    -| ['compiler_generated'] )
	end
'check_named_number_list'/2 =
    %% Line 4898
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_S,[]> when 'true' ->
	      %% Line 4899
	      []
	  %% Line 4900
	  <_X_S,NNL = [{_cor17,_cor18}|_cor19]> when 'true' ->
	      %% Line 4902
	      NNL
	  %% Line 4903
	  <S,NNL0> when 'true' ->
	      %% Line 4905
	      ( case S of
		  ( <( {'state',_cor20,_cor21,_rec552,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31}
		       -| ['compiler_generated'] )> when 'true' ->
			%% Line 4906
			case apply 'check_unique'/2
				 (NNL0, 2) of
			  %% Line 4907
			  <[]> when 'true' ->
			      let <_cor10> =
				  %% Line 4908
				  ( letrec
					'lc$^0'/1 =
					    fun (_cor7) ->
						case _cor7 of
						  <[{'NamedNumber',Id,Val}|_cor6]> when 'true' ->
						      let <_cor8> =
							  apply 'resolve_valueref'/2
							      (S, Val)
						      in  let <_cor9> =
							      apply 'lc$^0'/1
								  (_cor6)
							  in  ( [{Id,_cor8}|_cor9]
								-| ['compiler_generated'] )
						  ( <[_cor5|_cor6]> when 'true' ->
							apply 'lc$^0'/1
							    (_cor6)
						    -| ['compiler_generated'] )
						  <[]> when 'true' ->
						      []
						  ( <_cor7> when 'true' ->
							( primop 'match_fail'
							      ({'function_clause',_cor7})
							  -| [{'function_name',{'lc$^0',1}}] )
						    -| ['compiler_generated'] )
						end
				    in  apply 'lc$^0'/1
					    (NNL0)
				    -| ['list_comprehension'] )
			      in  let <NNL> =
				      %% Line 4909
				      call 'lists':'keysort'
					  (2, _cor10)
				  in  %% Line 4910
				      case apply 'check_unique'/2
					       (NNL, 2) of
					%% Line 4911
					<[]> when 'true' ->
					    %% Line 4912
					    NNL
					%% Line 4913
					<[Val|_cor33]> when 'true' ->
					    %% Line 4914
					    apply 'asn1_error'/3
						(S, _rec552, {'value_reused',Val})
					( <_cor13> when 'true' ->
					      primop 'match_fail'
						  ({'case_clause',_cor13})
					  -| ['compiler_generated'] )
				      end
			  %% Line 4916
			  <[H|_cor34]> when 'true' ->
			      %% Line 4917
			      apply 'asn1_error'/3
				  (S, _rec552, {'namelist_redefinition',H})
			  ( <_cor14> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor14})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor32> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'resolve_valueref'/2 =
    %% Line 4920
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,{'Externalvaluereference',_cor4,Mod,Name}> when 'true' ->
	      %% Line 4921
	      apply 'dbget_ex'/3
		  (S, Mod, Name)
	  %% Line 4922
	  <_cor5,Val>
	      when call 'erlang':'is_integer'
		    (Val) ->
	      %% Line 4923
	      Val
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'resolve_valueref',2}}] )
	    -| ['compiler_generated'] )
	end
'check_integer'/2 =
    %% Line 4925
    fun (_cor1,_cor0) ->
	%% Line 4926
	apply 'check_named_number_list'/2
	    (_cor1, _cor0)
'check_bitstring'/2 =
    %% Line 4928
    fun (_cor1,_cor0) ->
	let <NNL> =
	    %% Line 4929
	    apply 'check_named_number_list'/2
		(_cor1, _cor0)
	in  do  %% Line 4930
		( letrec
		      'lc$^0'/1 =
			  fun (_cor5) ->
			      case _cor5 of
				<[%% Line 4931
				  {_cor14,Bit}|_cor4]>
				    when %% Line 4931
				      call 'erlang':'<'
					  (Bit,
					   0) ->
				    ( case _cor1 of
					( <( {'state',_cor15,_cor16,_rec553,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26}
					     -| ['compiler_generated'] )> when 'true' ->
					      do  apply 'asn1_error'/3
						      (_cor1, _rec553, {'invalid_bit_number',Bit})
						  %% Line 4931
						  apply 'lc$^0'/1
						      (_cor4)
					  -| ['compiler_generated'] )
					( <_cor27> when 'true' ->
					      ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'error'
										     -| ['compiler_generated'] )
						    (( {'badrecord','state'}
						       -| ['compiler_generated'] ))
						-| ['result_not_wanted','compiler_generated'] )
					  -| ['compiler_generated'] )
				      end
				      -| ['compiler_generated'] )
				( <[_cor3|_cor4]> when 'true' ->
				      %% Line 4931
				      apply 'lc$^0'/1
					  (_cor4)
				  -| ['compiler_generated'] )
				<[]> when 'true' ->
				    []
				( <_cor5> when 'true' ->
				      ( primop 'match_fail'
					    ({'function_clause',_cor5})
					-| [{'function_name',{'lc$^0',1}}] )
				  -| ['compiler_generated'] )
			      end
		  in  apply 'lc$^0'/1
			  (%% Line 4931
			   NNL)
		  -| ['list_comprehension'] )
		%% Line 4932
		NNL
'check_real'/2 =
    %% Line 4934
    fun (_cor1,_cor0) ->
	%% Line 4935
	'ok'
'check_instance_of'/3 =
    %% Line 4942
    fun (_cor2,_cor1,_cor0) ->
	do  %% Line 4943
	    apply 'check_type_identifier'/2
		(_cor2, _cor1)
	    %% Line 4944
	    apply 'iof_associated_type'/2
		(_cor2, _cor0)
'check_type_identifier'/2 =
    %% Line 4946
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,Eref = {'Externaltypereference',_cor11,_cor12,Class}> when 'true' ->
	      %% Line 4947
	      case apply 'get_referenced_type'/2
		       (S, Eref) of
		%% Line 4948
		<{_cor13,{'classdef',_cor14,_cor15,'TYPE-IDENTIFIER',_cor16}}> when 'true' ->
		    %% Line 4949
		    'ok'
		%% Line 4950
		<{_cor17,{'classdef',_cor18,_cor19,_cor20,NextEref = {'Externaltypereference',_cor21,_cor22,_cor23}}}> when 'true' ->
		    %% Line 4951
		    apply 'check_type_identifier'/2
			(S, NextEref)
		%% Line 4952
		<{_cor24,TD = {'typedef',_cor25,_cor26,_cor27,{'type',_cor28,{'Externaltypereference',_cor29,_cor30,_cor31},_cor32,_cor33,_cor34}}}> when 'true' ->
		    let <_fol4207> =
			%% Line 4953
			( {'Externaltypereference',_cor29,_cor30,_cor31}
			  -| ['compiler_generated'] )
		    in  %% Line 4953
			apply 'check_type_identifier'/2
			    (S, _fol4207)
		%% Line 4954
		<_cor44> when 'true' ->
		    %% Line 4955
		    ( case S of
			( <( {'state',_cor45,_cor46,_rec556,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56}
			     -| ['compiler_generated'] )> when 'true' ->
			      apply 'asn1_error'/3
				  (S, _rec556, {'illegal_instance_of',Class})
			  -| ['compiler_generated'] )
			( <_cor57> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
	      end
	  ( <_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9})
		  -| [{'function_name',{'check_type_identifier',2}}] )
	    -| ['compiler_generated'] )
	end
'iof_associated_type'/2 =
    %% Line 4958
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,[]> when 'true' ->
	      do  %% Line 4961
		  case call 'erlang':'get'
			   ('instance_of') of
		    %% Line 4962
		    <'undefined'> when 'true' ->
			let <AssociateSeq> =
			    %% Line 4963
			    apply 'iof_associated_type1'/2
				(S, [])
			in  %% Line 4965
			    ( case S of
				( <( {'state',_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_rec557,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35}
				     -| ['compiler_generated'] )> when 'true' ->
				      let <_cor10> =
					  case _rec557 of
					    %% Line 4966
					    <'ber'> when 'true' ->
						let <_cor8> =
						    %% Line 4967
						    case _rec557 of
						      <'ber'> when 'true' ->
							  {'tag','UNIVERSAL',8,'IMPLICIT',32}
						      <_cor50> when 'true' ->
							  []
						    end
						in  %% Line 4967
						    [_cor8|[]]
					    %% Line 4968
					    <_cor51> when 'true' ->
						[]
					  end
				      in  let <TypeDef> =
					      %% Line 4970
					      {'typedef','true','undefined',%% Line 4971
									    'INSTANCE OF',%% Line 4972
											  {'type',_cor10,%% Line 4973
													 AssociateSeq,[],[],'no'}}
					  in  do  %% Line 4974
						  call 'asn1_db':'dbput'
						      (_cor25, 'INSTANCE OF', TypeDef)
						  %% Line 4975
						  apply 'instance_of_decl'/1
						      (_cor25)
				  -| ['compiler_generated'] )
				( <_cor36> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','state'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
		    %% Line 4977
		    <_cor78> when 'true' ->
			%% Line 4978
			( case S of
			    ( <( {'state',_cor79,_rec561,_cor80,_cor81,_cor82,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90}
				 -| ['compiler_generated'] )> when 'true' ->
				  do  apply 'instance_of_decl'/1
					  (_rec561)
				      'ok'
			      -| ['compiler_generated'] )
			    ( <_cor91> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','state'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
		  end
		  %% Line 4981
		  ( case S of
		      ( <( {'state',_cor92,_rec562,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100,_cor101,_cor102,_cor103}
			   -| ['compiler_generated'] )> when 'true' ->
			    {'Externaltypereference','undefined',_rec562,'INSTANCE OF'}
			-| ['compiler_generated'] )
		      ( <_cor104> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  %% Line 4982
	  <S,C> when 'true' ->
	      %% Line 4983
	      apply 'iof_associated_type1'/2
		  (S, C)
	end
'iof_associated_type1'/2 =
    %% Line 4985
    fun (_cor1,_cor0) ->
	%% Line 4986
	case %% Line 4987
	     apply 'instance_of_constraints'/2
		 (_cor1, _cor0) of
	  <{TableCInf,Comp1Cnstr,Comp2Cnstr,Comp2tablecinf}> when 'true' ->
	      %% Line 4989
	      ( case _cor1 of
		  ( <( {'state',_cor21,_rec563,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor7> =
			    %% Line 4991
			    case _cor0 of
			      %% Line 4992
			      <[]> when 'true' ->
				  'ASN1_OPEN_TYPE'
			      %% Line 4993
			      <_cor34> when 'true' ->
				  {'typefield','Type'}
			    end
			in  let <ObjIdTag,C1TypeTag> =
				%% Line 4996
				case _cor26 of
				  %% Line 4997
				  <'ber'> when 'true' ->
				      %% Line 4998
				      <[{'UNIVERSAL',8}],[{'tag','UNIVERSAL',6,'IMPLICIT',0}]>
				  %% Line 5003
				  <_cor48> when 'true' ->
				      <[{'UNIVERSAL','INTEGER'}],[]>
				end
			    in  let <TypeIdentifierRef> =
				    %% Line 5005
				    {'Externaltypereference','undefined',_rec563,%% Line 5006
										 'TYPE-IDENTIFIER'}
				in  let <ObjectIdentifier> =
					%% Line 5008
					{'ObjectClassFieldType',TypeIdentifierRef,%% Line 5009
										  [],%% Line 5011
										     {'id',[]},%% Line 5012
											       {'fixedtypevaluefield','id',{'type',[],'OBJECT IDENTIFIER',[],[],'no'}}}
				    in  let <Typefield> =
					    %% Line 5015
					    {'ObjectClassFieldType',TypeIdentifierRef,%% Line 5016
										      [],%% Line 5018
											 {'Type',[]},_cor7}
					in  let <IOFComponents> =
						%% Line 5021
						[{'ComponentType','undefined','type-id',%% Line 5022
											{'type',C1TypeTag,%% Line 5023
													  ObjectIdentifier,%% Line 5024
															   Comp1Cnstr,[],'no'},%% Line 5025
																	       'mandatory',%% Line 5026
																			   ObjIdTag,'undefined'}|%% Line 5027
																						 [{'ComponentType','undefined','value',%% Line 5028
																										       {'type',[{'tag','CONTEXT',0,'EXPLICIT',32}],%% Line 5032
																																   Typefield,%% Line 5033
																																	     Comp2Cnstr,%% Line 5034
																																			Comp2tablecinf,'no'},%% Line 5035
																																					     'mandatory',%% Line 5036
																																							 [{'CONTEXT',0}],'undefined'}|%% Line 5036
																																										      []]]
					    in  let <_cor18> =
						    %% Line 5038
						    apply 'simplify_comps'/1
							(IOFComponents)
						in  %% Line 5037
						    {'SEQUENCE','false',TableCInf,'undefined',_cor18}
		    -| ['compiler_generated'] )
		  ( <_cor33> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'instance_of_constraints'/2 =
    %% Line 5043
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_cor14,[]> when 'true' ->
	      %% Line 5044
	      {'false',[],[],[]}
	  %% Line 5045
	  <S,[{'simpletable',Type}|[]]> when 'true' ->
	      %% Line 5046
	      case Type of
		<{'type',_cor15,{'Externaltypereference',_cor16,_cor17,Name},_cor18,_cor19,_cor20}> when 'true' ->
		    %% Line 5047
		    ( case S of
			( <( {'state',_cor21,_rec565,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32}
			     -| ['compiler_generated'] )> when 'true' ->
			      let <ObjectSetRef> =
				  %% Line 5048
				  {'Externaltypereference','undefined',_rec565,%% Line 5049
									       Name}
			      in  let <CRel> =
				      %% Line 5050
				      [{'componentrelation',{'objectset',%% Line 5051
									 'undefined',%% Line 5052
										     ObjectSetRef},%% Line 5053
												   [{'innermost',%% Line 5054
														 [{'Externalvaluereference','undefined',_rec565,%% Line 5055
																				'type'}|%% Line 5055
																					[]]}|%% Line 5055
																					     []]}|%% Line 5055
																						  []]
				  in  let <TableCInf> =
					  %% Line 5057
					  {'simpletableattributes',{_rec565,Name},%% Line 5058
										  'type-id',%% Line 5059
											    1,%% Line 5060
											      'id',%% Line 5061
												   'id',%% Line 5062
													[]}
				      in  %% Line 5063
					  {TableCInf,[{'simpletable',Name}|[]],CRel,[{'objfun',ObjectSetRef}|[]]}
			  -| ['compiler_generated'] )
			( <_cor33> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor2})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12})
		  -| [{'function_name',{'instance_of_constraints',2}}] )
	    -| ['compiler_generated'] )
	end
'check_enumerated'/3 =
    %% Line 5071
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <_X_S,NNList = [{Name,Number}|_X_Rest],_X_Constr>
	      when let <_cor3> =
		    call 'erlang':'is_atom'
			(Name)
		in  let <_cor4> =
			call 'erlang':'is_integer'
			    (Number)
		    in  call 'erlang':'and'
			    (_cor3, _cor4) ->
	      %% Line 5073
	      NNList
	  %% Line 5074
	  <_X_S,NNList = {[{Name,Number}|_X_Rest],L},_X_Constr>
	      when try
		    let <_cor5> =
			call 'erlang':'is_atom'
			    (Name)
		    in  let <_cor6> =
			    call 'erlang':'is_integer'
				(Number)
			in  let <_cor7> =
				call 'erlang':'is_list'
				    (L)
			    in  let <_cor8> =
				    call 'erlang':'and'
					(_cor6, _cor7)
				in  call 'erlang':'and'
					(_cor5, _cor8)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      %% Line 5076
	      NNList
	  %% Line 5077
	  <S,NamedNumberList,_X_Constr> when 'true' ->
	      %% Line 5078
	      apply 'check_enum'/5
		  (S, NamedNumberList, [], [], [])
	end
'check_enum'/5 =
    %% Line 5083
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <S,[{'NamedNumber',Id,Num}|T],Acc1,Acc2,Root>
	      when call 'erlang':'is_integer'
		    (Num) ->
	      %% Line 5084
	      apply 'check_enum'/5
		  (S, T, [{Id,Num}|Acc1], Acc2, Root)
	  %% Line 5085
	  <S,['EXTENSIONMARK'|T],Acc1,Acc2,_X_Root> when 'true' ->
	      let <NewAcc2> =
		  %% Line 5086
		  call 'lists':'keysort'
		      (2, Acc1)
	      in  let <_cor6> =
		      %% Line 5087
		      call 'lists':'reverse'
			  (Acc2)
		  in  let <NewList> =
			  %% Line 5087
			  apply 'enum_number'/5
			      (_cor6, NewAcc2, 0, [], [])
		      in  let <_cor8> =
			      %% Line 5088
			      apply 'enum_counts'/1
				  (NewList)
			  in  let <_cor9> =
				  %% Line 5088
				  apply 'check_enum'/5
				      (S, T, [], [], _cor8)
			      in  %% Line 5088
				  {NewList,_cor9}
	  %% Line 5089
	  <S,[Id|T],Acc1,Acc2,Root>
	      when call 'erlang':'is_atom'
		    (Id) ->
	      %% Line 5090
	      apply 'check_enum'/5
		  (S, T, Acc1, [Id|Acc2], Root)
	  %% Line 5091
	  <_X_S,[],Acc1,Acc2,Root> when 'true' ->
	      let <NewAcc2> =
		  %% Line 5092
		  call 'lists':'keysort'
		      (2, Acc1)
	      in  let <_cor11> =
		      %% Line 5093
		      call 'lists':'reverse'
			  (Acc2)
		  in  %% Line 5093
		      apply 'enum_number'/5
			  (_cor11, NewAcc2, 0, [], Root)
	  ( <_cor16,_cor15,_cor14,_cor13,_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor16,_cor15,_cor14,_cor13,_cor12})
		  -| [{'function_name',{'check_enum',5}}] )
	    -| ['compiler_generated'] )
	end
'enum_number'/5 =
    %% Line 5098
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <Identifiers,NamedNumbers,Cnt,Acc,[]> when 'true' ->
	      %% Line 5099
	      apply 'enum_number'/4
		  (Identifiers, NamedNumbers, Cnt, Acc)
	  %% Line 5100
	  <Identifiers,NamedNumbers,_X_Cnt,Acc,CountL> when 'true' ->
	      %% Line 5101
	      apply 'enum_extnumber'/4
		  (Identifiers, NamedNumbers, Acc, CountL)
	end
'enum_number'/4 =
    %% Line 5103
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[H|T],[{Id,Num}|T2],Cnt,Acc>
	      when call 'erlang':'>'
		    (Num,
		     Cnt) ->
	      let <_cor4> =
		  %% Line 5104
		  call 'erlang':'+'
		      (Cnt, 1)
	      in  %% Line 5104
		  apply 'enum_number'/4
		      (T, [{Id,Num}|T2], _cor4, [{H,Cnt}|Acc])
	  %% Line 5105
	  <[H|T],[{Id,Num}|T2],Cnt,Acc>
	      when call 'erlang':'<'
		    (Num,
		     Cnt) ->
	      let <_cor5> =
		  %% Line 5106
		  call 'erlang':'+'
		      (Cnt, 1)
	      in  %% Line 5106
		  apply 'enum_number'/4
		      (T, T2, _cor5, [{H,Cnt}|[{Id,Num}|Acc]])
	  %% Line 5107
	  <[],L2,_X_Cnt,Acc> when 'true' ->
	      let <_cor6> =
		  %% Line 5108
		  call 'lists':'reverse'
		      (Acc)
	      in  %% Line 5108
		  call 'lists':'append'
		      ([_cor6|[L2|[]]])
	  %% Line 5109
	  <L,[{Id,Num}|T2],Cnt,Acc> when 'true' ->
	      let <_cor7> =
		  %% Line 5110
		  call 'erlang':'+'
		      (Cnt, 1)
	      in  %% Line 5110
		  apply 'enum_number'/4
		      (L, T2, _cor7, [{Id,Num}|Acc])
	  %% Line 5111
	  <[H|T],[],Cnt,Acc> when 'true' ->
	      let <_cor8> =
		  %% Line 5112
		  call 'erlang':'+'
		      (Cnt, 1)
	      in  %% Line 5112
		  apply 'enum_number'/4
		      (T, [], _cor8, [{H,Cnt}|Acc])
	  ( <_cor12,_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11,_cor10,_cor9})
		  -| [{'function_name',{'enum_number',4}}] )
	    -| ['compiler_generated'] )
	end
'enum_extnumber'/4 =
    %% Line 5114
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <Identifiers,NamedNumbers,Acc,[C|[]]> when 'true' ->
	      do  %% Line 5115
		  apply 'check_add_enum_numbers'/2
		      (NamedNumbers, [C|[]])
		  %% Line 5116
		  apply 'enum_number'/4
		      (Identifiers, NamedNumbers, C, Acc)
	  %% Line 5117
	  <[H|T],[{Id,Num}|T2],Acc,[C|Counts]>
	      when call 'erlang':'>'
		    (Num,
		     C) ->
	      %% Line 5118
	      apply 'enum_extnumber'/4
		  (T, [{Id,Num}|T2], [{H,C}|Acc], Counts)
	  %% Line 5119
	  <[],L2,Acc,Cnt> when 'true' ->
	      do  %% Line 5120
		  apply 'check_add_enum_numbers'/2
		      (L2, Cnt)
		  let <_cor4> =
		      %% Line 5121
		      call 'lists':'reverse'
			  (Acc)
		  in  %% Line 5121
		      call 'lists':'concat'
			  ([_cor4|[L2|[]]])
	  %% Line 5122
	  <_X_Identifiers,[{Id,Num}|_X_T2],_X_Acc,[C|_cor9]>
	      when call 'erlang':'<'
		    (Num,
		     C) ->
	      %% Line 5124
	      call 'erlang':'exit'
		  ({'error',{'asn1',[65|[100|[100|[105|[116|[105|[111|[110|[97|[108|[69|[110|[117|[109|[101|[114|[97|[116|[105|[111|[110|[32|[101|[108|[101|[109|[101|[110|[116|[32|[119|[105|[116|[104|[32|[115|[97|[109|[101|[32|[110|[117|[109|[98|[101|[114|[32|[97|[115|[32|[114|[111|[111|[116|[32|[101|[108|[101|[109|[101|[110|[116]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],{Id,Num}}})
	  %% Line 5125
	  <Identifiers,[{Id,Num}|T2],Acc,[_X_C|Counts]> when 'true' ->
	      %% Line 5126
	      apply 'enum_extnumber'/4
		  (Identifiers, T2, [{Id,Num}|Acc], Counts)
	  %% Line 5127
	  <[H|T],[],Acc,[C|Counts]> when 'true' ->
	      %% Line 5128
	      apply 'enum_extnumber'/4
		  (T, [], [{H,C}|Acc], Counts)
	  ( <_cor8,_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6,_cor5})
		  -| [{'function_name',{'enum_extnumber',4}}] )
	    -| ['compiler_generated'] )
	end
'enum_counts'/1 =
    %% Line 5130
    fun (_cor0) ->
	case _cor0 of
	  <[]> when 'true' ->
	      %% Line 5131
	      [0]
	  %% Line 5132
	  <L> when 'true' ->
	      let <_cor5> =
		  %% Line 5133
		  ( letrec
			'lc$^0'/1 =
			    fun (_cor3) ->
				case _cor3 of
				  <[{_cor16,I}|_cor2]> when 'true' ->
				      let <_cor4> =
					  apply 'lc$^0'/1
					      (_cor2)
				      in  ( [I|_cor4]
					    -| ['compiler_generated'] )
				  ( <[_cor1|_cor2]> when 'true' ->
					apply 'lc$^0'/1
					    (_cor2)
				    -| ['compiler_generated'] )
				  <[]> when 'true' ->
				      []
				  ( <_cor3> when 'true' ->
					( primop 'match_fail'
					      ({'function_clause',_cor3})
					  -| [{'function_name',{'lc$^0',1}}] )
				    -| ['compiler_generated'] )
				end
		    in  apply 'lc$^0'/1
			    (L)
		    -| ['list_comprehension'] )
	      in  let <_cor7> =
		      %% Line 5134
		      call 'lists':'max'
			  (_cor5)
		  in  let <AddEnumLb> =
			  %% Line 5134
			  call 'erlang':'+'
			      (_cor7, 1)
		      in  let <_cor14> =
			      %% Line 5135
			      ( fun (_cor11,_cor10) ->
				    call 'lists':'delete'
					(_cor11, _cor10)
				-| [{'id',{0,0,'-enum_counts/1-fun-0-'}}] )
			  in  let <_cor9> =
				  %% Line 5136
				  call 'lists':'seq'
				      (0, AddEnumLb)
			      in  %% Line 5135
				  call 'lists':'foldl'
				      (_cor14, _cor9, _cor5)
	end
'check_add_enum_numbers'/2 =
    %% Line 5138
    fun (_cor1,_cor0) ->
	let <Max> =
	    %% Line 5139
	    call 'lists':'max'
		(_cor0)
	in  let <Fun> =
		%% Line 5140
		( fun (_cor4) ->
		      case _cor4 of
			<El = {_cor9,N}>
			    when call 'erlang':'<'
				  (N,
				   Max) ->
			    %% Line 5141
			    case call 'lists':'member'
				     (N, _cor0) of
			      %% Line 5142
			      <'false'> when 'true' ->
				  %% Line 5143
				  call 'erlang':'exit'
				      ({'error',{'asn1',[65|[100|[100|[105|[116|[105|[111|[110|[97|[108|[69|[110|[117|[109|[101|[114|[97|[116|[105|[111|[110|[32|[101|[108|[101|[109|[101|[110|[116|[32|[119|[105|[116|[104|[32|[115|[97|[109|[101|[32|[110|[117|[109|[98|[101|[114|[32|[97|[115|[32|[114|[111|[111|[116|[32|[101|[108|[101|[109|[101|[110|[116]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],El}})
			      %% Line 5144
			      <_cor10> when 'true' ->
				  %% Line 5145
				  'ok'
			    end
			%% Line 5147
			<_cor11> when 'true' ->
			    %% Line 5148
			    'ok'
		      end
		  -| [{'id',{0,0,'-check_add_enum_numbers/2-fun-0-'}}] )
	    in  %% Line 5150
		call 'lists':'foreach'
		    (Fun, _cor1)
'check_boolean'/2 =
    %% Line 5153
    fun (_cor1,_cor0) ->
	%% Line 5154
	'ok'
'check_octetstring'/2 =
    %% Line 5156
    fun (_cor1,_cor0) ->
	%% Line 5157
	'ok'
'check_sequence'/3 =
    %% Line 5165
    fun (_cor2,_cor1,_cor0) ->
	let <Components> =
	    %% Line 5166
	    apply 'expand_components'/2
		(_cor2, _cor0)
	in  let <_cor8> =
		%% Line 5167
		( letrec
		      'lc$^0'/1 =
			  fun (_cor6) ->
			      case _cor6 of
				<[C|_cor5]>
				    when ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'is_record'
									     -| ['compiler_generated'] )
					    (C,
					     'ComponentType',
					     7)
					-| ['compiler_generated'] ) ->
				    let <_cor7> =
					apply 'lc$^0'/1
					    (_cor5)
				    in  ( [C|_cor7]
					  -| ['compiler_generated'] )
				( <[C|_cor5]> when 'true' ->
				      apply 'lc$^0'/1
					  (_cor5)
				  -| ['compiler_generated'] )
				<[]> when 'true' ->
				    []
				( <_cor6> when 'true' ->
				      ( primop 'match_fail'
					    ({'function_clause',_cor6})
					-| [{'function_name',{'lc$^0',1}}] )
				  -| ['compiler_generated'] )
			      end
		  in  apply 'lc$^0'/1
			  (Components)
		  -| ['list_comprehension'] )
	    in  %% Line 5167
		case apply 'check_unique'/2
			 (_cor8, %% Line 5168
				 3) of
		  %% Line 5169
		  <[]> when 'true' ->
		      let <Components2> =
			  %% Line 5171
			  apply 'maybe_automatic_tags'/2
			      (_cor2, Components)
		      in  let <NewComps> =
			      %% Line 5174
			      apply 'check_each_component2'/3
				  (_cor2, _cor1, Components2)
			  in  do  %% Line 5175
				  apply 'check_unique_sequence_tags'/2
				      (_cor2, NewComps)
				  %% Line 5184
				  case apply 'componentrelation_leadingattr'/2
					   (_cor2, NewComps) of
				    <{CRelInf,NewComps2}> when 'true' ->
					let <CompListWithTblInf> =
					    %% Line 5189
					    apply 'get_tableconstraint_info'/3
						(_cor2, _cor1, NewComps2)
					in  let <NewComps3> =
						%% Line 5191
						apply 'textual_order'/1
						    (CompListWithTblInf)
					    in  let <NewComps4> =
						    %% Line 5192
						    apply 'simplify_comps'/1
							(NewComps3)
						in  let <CompListTuple> =
							%% Line 5193
							apply 'complist_as_tuple'/1
							    (NewComps4)
						    in  %% Line 5194
							{CRelInf,CompListTuple}
				    ( <_cor11> when 'true' ->
					  primop 'match_fail'
					      ({'badmatch',_cor11})
				      -| ['compiler_generated'] )
				  end
		  %% Line 5195
		  <Dupl> when 'true' ->
		      %% Line 5196
		      call 'erlang':'throw'
			  ({'error',{'asn1',{'duplicate_components',Dupl}}})
		end
'complist_as_tuple'/1 =
    %% Line 5199
    fun (_cor0) ->
	%% Line 5200
	apply 'complist_as_tuple'/5
	    (_cor0, [], [], [], 'root')
'complist_as_tuple'/5 =
    %% Line 5202
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <[{'EXTENSIONMARK',_cor15,_cor16}|T],Acc,Ext,Acc2,'root'> when 'true' ->
	      %% Line 5203
	      apply 'complist_as_tuple'/5
		  (T, Acc, Ext, Acc2, 'ext')
	  %% Line 5204
	  <[{'EXTENSIONMARK',_cor17,_cor18}|T],Acc,Ext,Acc2,'ext'> when 'true' ->
	      %% Line 5205
	      apply 'complist_as_tuple'/5
		  (T, Acc, Ext, Acc2, 'root2')
	  %% Line 5206
	  <[{'EXTENSIONMARK',_cor19,_cor20}|_X_T],_X_Acc,_X_Ext,_X_Acc2,'root2'> when 'true' ->
	      %% Line 5207
	      call 'erlang':'throw'
		  ({'error',{'asn1',{'too_many_extension_marks'}}})
	  %% Line 5208
	  <[C|T],Acc,Ext,Acc2,'root'> when 'true' ->
	      %% Line 5209
	      apply 'complist_as_tuple'/5
		  (T, [C|Acc], Ext, Acc2, 'root')
	  %% Line 5210
	  <[C|T],Acc,Ext,Acc2,'ext'> when 'true' ->
	      %% Line 5211
	      apply 'complist_as_tuple'/5
		  (T, Acc, [C|Ext], Acc2, 'ext')
	  %% Line 5212
	  <[C|T],Acc,Ext,Acc2,'root2'> when 'true' ->
	      %% Line 5213
	      apply 'complist_as_tuple'/5
		  (T, Acc, Ext, [C|Acc2], 'root2')
	  %% Line 5214
	  <[],Acc,_X_Ext,_X_Acc2,'root'> when 'true' ->
	      %% Line 5215
	      call 'lists':'reverse'
		  (Acc)
	  %% Line 5216
	  <[],Acc,Ext,_X_Acc2,'ext'> when 'true' ->
	      let <_cor6> =
		  %% Line 5217
		  call 'lists':'reverse'
		      (Acc)
	      in  let <_cor5> =
		      %% Line 5217
		      call 'lists':'reverse'
			  (Ext)
		  in  %% Line 5217
		      {_cor6,_cor5}
	  %% Line 5218
	  <[],Acc,Ext,Acc2,'root2'> when 'true' ->
	      let <_cor9> =
		  %% Line 5219
		  call 'lists':'reverse'
		      (Acc)
	      in  let <_cor8> =
		      %% Line 5219
		      call 'lists':'reverse'
			  (Ext)
		  in  let <_cor7> =
			  %% Line 5219
			  call 'lists':'reverse'
			      (Acc2)
		      in  %% Line 5219
			  {_cor9,_cor8,_cor7}
	  ( <_cor14,_cor13,_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14,_cor13,_cor12,_cor11,_cor10})
		  -| [{'function_name',{'complist_as_tuple',5}}] )
	    -| ['compiler_generated'] )
	end
'expand_components'/2 =
    %% Line 5221
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,[{'COMPONENTS OF',Type}|T]> when 'true' ->
	      %% Line 5222
	      ( case Type of
		  ( <( {'type',_cor11,_rec567,_cor12,_cor13,_cor14}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor4> =
			    apply 'get_referenced_type'/2
				(S, _rec567)
			in  let <CompList> =
				apply 'expand_components2'/2
				    (S, _cor4)
			    in  let <_cor7> =
				    %% Line 5223
				    apply 'expand_components'/2
					(S, CompList)
				in  let <_cor6> =
					%% Line 5223
					apply 'expand_components'/2
					    (S, T)
				    in  %% Line 5223
					call 'erlang':'++'
					    (_cor7, _cor6)
		    -| ['compiler_generated'] )
		  ( <_cor15> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','type'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 5224
	  <S,[H|T]> when 'true' ->
	      let <_cor8> =
		  %% Line 5225
		  apply 'expand_components'/2
		      (S, T)
	      in  %% Line 5225
		  [H|_cor8]
	  %% Line 5226
	  <_cor16,[]> when 'true' ->
	      %% Line 5227
	      []
	  ( <_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9})
		  -| [{'function_name',{'expand_components',2}}] )
	    -| ['compiler_generated'] )
	end
'expand_components2'/2 =
    %% Line 5228
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_S,{_cor15,{'typedef',_cor16,_cor17,_cor18,{'type',_cor19,Seq = {'SEQUENCE',_cor20,_cor21,_cor22,_cor23},_cor24,_cor25,_cor26}}}> when %% Line 5229
																		    ( 'true'
																		      -| ['compiler_generated'] ) ->
	      %% Line 5230
	      case _cor23 of
		%% Line 5231
		<{R1,_X_Ext,R2}> when 'true' ->
		    call 'erlang':'++'
			(R1, R2)
		%% Line 5232
		<{Root,_X_Ext}> when 'true' ->
		    Root
		%% Line 5233
		<Root> when 'true' ->
		    apply 'take_only_rootset'/1
			(Root)
	      end
	  %% Line 5235
	  <_X_S,{_cor31,{'typedef',_cor32,_cor33,_cor34,{'type',_cor35,Set = {'SET',_cor36,_cor37,_cor38,_cor39},_cor40,_cor41,_cor42}}}> when %% Line 5236
																	       ( 'true'
																		 -| ['compiler_generated'] ) ->
	      %% Line 5237
	      case _cor39 of
		%% Line 5238
		<{R1,_X_Ext,R2}> when 'true' ->
		    call 'erlang':'++'
			(R1, R2)
		%% Line 5239
		<{Root,_X_Ext}> when 'true' ->
		    Root
		%% Line 5240
		<Root> when 'true' ->
		    apply 'take_only_rootset'/1
			(Root)
	      end
	  %% Line 5242
	  <_X_S,{_cor47,{'typedef',_cor48,_cor49,_cor50,RefType = {'type',_cor51,{'Externaltypereference',_cor52,_cor53,_cor54},_cor55,_cor56,_cor57}}}> when 'true' ->
	      %% Line 5243
	      [{'COMPONENTS OF',RefType}|[]]
	  %% Line 5244
	  <S,{_cor58,PT = {'pt',_cor59,_cor60}}> when 'true' ->
	      let <PTType> =
		  %% Line 5245
		  apply 'check_type'/3
		      (S, PT, {'type',[],PT,[],[],'no'})
	      in  %% Line 5246
		  apply 'expand_components2'/2
		      (S, {'dummy',{'typedef','false','undefined','undefined',PTType}})
	  %% Line 5247
	  <S,{_cor61,OCFT = {'ObjectClassFieldType',_cor62,_cor63,_cor64,_cor65}}> when 'true' ->
	      let <UncheckedType> =
		  %% Line 5248
		  {'type',[],OCFT,[],[],'no'}
	      in  let <Type> =
		      %% Line 5249
		      apply 'check_type'/3
			  (S, {'typedef','false','undefined','undefined',UncheckedType}, UncheckedType)
		  in  let <_cor11> =
			  %% Line 5250
			  apply 'oCFT_def'/2
			      (S, Type)
		      in  %% Line 5250
			  apply 'expand_components2'/2
			      (S, {'undefined',_cor11})
	  %% Line 5251
	  <S,{_cor66,ERef = {'Externaltypereference',_cor67,_cor68,_cor69}}> when ( 'true'
										    -| ['compiler_generated'] ) ->
	      let <_cor12> =
		  %% Line 5252
		  apply 'get_referenced_type'/2
		      (S, ERef)
	      in  %% Line 5252
		  apply 'expand_components2'/2
		      (S, _cor12)
	  %% Line 5253
	  <_X_S,Err> when 'true' ->
	      %% Line 5254
	      call 'erlang':'throw'
		  ({'error',{'asn1',{'illegal_COMPONENTS_OF',Err}}})
	end
'take_only_rootset'/1 =
    %% Line 5256
    fun (_cor0) ->
	case _cor0 of
	  <[]> when 'true' ->
	      %% Line 5257
	      []
	  %% Line 5258
	  <[{'EXTENSIONMARK',_cor3,_cor4}|_X_T]> when 'true' ->
	      %% Line 5259
	      []
	  %% Line 5260
	  <[H|T]> when 'true' ->
	      let <_cor1> =
		  %% Line 5261
		  apply 'take_only_rootset'/1
		      (T)
	      in  %% Line 5261
		  [H|_cor1]
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'take_only_rootset',1}}] )
	    -| ['compiler_generated'] )
	end
'check_unique_sequence_tags'/2 =
    %% Line 5263
    fun (_cor1,_cor0) ->
	let <_cor19> =
	    %% Line 5264
	    case apply 'complist_as_tuple'/1
		     (_cor0) of
	      %% Line 5265
	      <{R1,Ext,R2}> when 'true' ->
		  let <_cor9> =
		      %% Line 5266
		      ( letrec
			    'lc$^0'/1 =
				fun (_cor4) ->
				    case _cor4 of
				      <[C = %% Line 5267
					    {'ComponentType',_cor23,_cor24,_cor25,_cor26,_cor27,_cor28}|_cor3]> when 'true' ->
					  let <_cor7> =
					      call 'erlang':'setelement'
						  (5, C, 'OPTIONAL')
					  in  let <_cor8> =
						  %% Line 5267
						  apply 'lc$^0'/1
						      (_cor3)
					      in  ( [_cor7|_cor8]
						    -| ['compiler_generated'] )
				      ( <[_cor2|_cor3]> when 'true' ->
					    %% Line 5267
					    apply 'lc$^0'/1
						(_cor3)
					-| ['compiler_generated'] )
				      <[]> when 'true' ->
					  %% Line 5267
					  R2
				      ( <_cor4> when 'true' ->
					    ( primop 'match_fail'
						  ({'function_clause',_cor4})
					      -| [{'function_name',{'lc$^0',1}}] )
					-| ['compiler_generated'] )
				    end
			in  apply 'lc$^0'/1
				(%% Line 5267
				 Ext)
			-| ['list_comprehension'] )
		  in  %% Line 5266
		      call 'erlang':'++'
			  (R1, _cor9)
	      %% Line 5268
	      <{R1,Ext}> when 'true' ->
		  let <_cor17> =
		      %% Line 5269
		      ( letrec
			    'lc$^1'/1 =
				fun (_cor12) ->
				    case _cor12 of
				      <[C = %% Line 5270
					    {'ComponentType',_cor36,_cor37,_cor38,_cor39,_cor40,_cor41}|_cor11]> when 'true' ->
					  let <_cor15> =
					      call 'erlang':'setelement'
						  (5, C, 'OPTIONAL')
					  in  let <_cor16> =
						  %% Line 5270
						  apply 'lc$^1'/1
						      (_cor11)
					      in  ( [_cor15|_cor16]
						    -| ['compiler_generated'] )
				      ( <[_cor10|_cor11]> when 'true' ->
					    %% Line 5270
					    apply 'lc$^1'/1
						(_cor11)
					-| ['compiler_generated'] )
				      <[]> when 'true' ->
					  []
				      ( <_cor12> when 'true' ->
					    ( primop 'match_fail'
						  ({'function_clause',_cor12})
					      -| [{'function_name',{'lc$^1',1}}] )
					-| ['compiler_generated'] )
				    end
			in  apply 'lc$^1'/1
				(%% Line 5270
				 Ext)
			-| ['list_comprehension'] )
		  in  %% Line 5269
		      call 'erlang':'++'
			  (R1, _cor17)
	      %% Line 5271
	      <_cor49> when 'true' ->
		  _cor0
	    end
	in  %% Line 5274
	    apply 'check_unique_sequence_tags0'/2
		(_cor1, _cor19)
'check_unique_sequence_tags0'/2 =
    %% Line 5276
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,[{'ComponentType',_cor4,_cor5,_cor6,'mandatory',_cor7,_cor8}|Rest]> when 'true' ->
	      %% Line 5277
	      apply 'check_unique_sequence_tags0'/2
		  (S, Rest)
	  %% Line 5278
	  <S,[C = {'ComponentType',_cor9,_cor10,_cor11,_cor12,_cor13,_cor14}|Rest]> when 'true' ->
	      %% Line 5279
	      apply 'check_unique_sequence_tags1'/3
		  (S, Rest, [C|[]])
	  %% Line 5280
	  <S,[_X_ExtensionMarker|Rest]> when 'true' ->
	      %% Line 5281
	      apply 'check_unique_sequence_tags0'/2
		  (S, Rest)
	  %% Line 5282
	  <_X_S,[]> when 'true' ->
	      %% Line 5283
	      'true'
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'check_unique_sequence_tags0',2}}] )
	    -| ['compiler_generated'] )
	end
'check_unique_sequence_tags1'/3 =
    %% Line 5285
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,[C = {'ComponentType',_cor11,_cor12,_cor13,_cor14,_cor15,_cor16}|Rest],Acc> when ( 'true'
												-| ['compiler_generated'] ) ->
	      %% Line 5286
	      case _cor14 of
		%% Line 5287
		<'mandatory'> when 'true' ->
		    let <_cor5> =
			%% Line 5288
			call 'lists':'reverse'
			    ([C|Acc])
		    in  do  %% Line 5288
			    apply 'check_unique_tags'/2
				(S, _cor5)
			    %% Line 5289
			    apply 'check_unique_sequence_tags'/2
				(S, Rest)
		%% Line 5290
		<_cor23> when 'true' ->
		    %% Line 5291
		    apply 'check_unique_sequence_tags1'/3
			(S, Rest, [C|Acc])
	      end
	  %% Line 5293
	  <S,[H|Rest],Acc> when 'true' ->
	      %% Line 5294
	      apply 'check_unique_sequence_tags1'/3
		  (S, Rest, [H|Acc])
	  %% Line 5295
	  <S,[],Acc> when 'true' ->
	      let <_cor7> =
		  %% Line 5296
		  call 'lists':'reverse'
		      (Acc)
	      in  %% Line 5296
		  apply 'check_unique_tags'/2
		      (S, _cor7)
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'check_unique_sequence_tags1',3}}] )
	    -| ['compiler_generated'] )
	end
'check_sequenceof'/3 =
    %% Line 5298
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,Type,Component = {'type',_cor7,_cor8,_cor9,_cor10,_cor11}> when ( 'true'
									       -| ['compiler_generated'] ) ->
	      let <_cor3> =
		  %% Line 5299
		  apply 'check_type'/3
		      (S, Type, Component)
	      in  %% Line 5299
		  apply 'simplify_type'/1
		      (_cor3)
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5,_cor4})
		  -| [{'function_name',{'check_sequenceof',3}}] )
	    -| ['compiler_generated'] )
	end
'check_set'/3 =
    %% Line 5301
    fun (_cor2,_cor1,_cor0) ->
	%% Line 5302
	case apply 'check_sequence'/3
		 (_cor2, _cor1, _cor0) of
	  <{TableCInf,NewComponents}> when 'true' ->
	      do  %% Line 5303
		  apply 'check_distinct_tags'/2
		      (NewComponents, [])
		  %% Line 5304
		  ( case _cor2 of
		      ( <( {'state',_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_rec573,_cor28}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <_cor8> =
				call 'lists':'member'
				    ('der', _rec573)
			    in  case <_cor8,_cor23> of
				  %% Line 5305
				  <'true',_cor43> when 'true' ->
				      %% Line 5306
				      case apply 'sort_components'/3
					       ('der', _cor2, NewComponents) of
					<{Sorted,SortedComponents}> when 'true' ->
					    %% Line 5307
					    {Sorted,TableCInf,SortedComponents}
					( <_cor9> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_cor9})
					  -| ['compiler_generated'] )
				      end
				  %% Line 5308
				  <_cor44,PER>
				      when let <_cor10> =
					    call 'erlang':'=:='
						(PER, 'per')
					in  let <_cor11> =
						call 'erlang':'=:='
						    (PER, 'uper')
					    in  call 'erlang':'or'
						    (_cor10, _cor11) ->
				      %% Line 5309
				      case apply 'sort_components'/3
					       ('per', _cor2, NewComponents) of
					<{Sorted,SortedComponents}> when 'true' ->
					    %% Line 5310
					    {Sorted,TableCInf,SortedComponents}
					( <_cor12> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_cor12})
					  -| ['compiler_generated'] )
				      end
				  %% Line 5311
				  <_fol4454,_fol4455> when 'true' ->
				      %% Line 5312
				      {'false',TableCInf,NewComponents}
				end
			-| ['compiler_generated'] )
		      ( <_cor29> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'check_distinct_tags'/2 =
    %% Line 5317
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{C1,C2,C3},Acc>
	      when try
		    let <_cor2> =
			call 'erlang':'is_list'
			    (C1)
		    in  let <_cor3> =
			    call 'erlang':'is_list'
				(C2)
			in  let <_cor4> =
				call 'erlang':'is_list'
				    (C3)
			    in  let <_cor5> =
				    call 'erlang':'and'
					(_cor3, _cor4)
				in  call 'erlang':'and'
					(_cor2, _cor5)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_cor6> =
		  %% Line 5318
		  call 'erlang':'++'
		      (C2, C3)
	      in  let <_cor7> =
		      %% Line 5318
		      call 'erlang':'++'
			  (C1, _cor6)
		  in  %% Line 5318
		      apply 'check_distinct_tags'/2
			  (_cor7, Acc)
	  %% Line 5319
	  <{C1,C2},Acc>
	      when let <_cor8> =
		    call 'erlang':'is_list'
			(C1)
		in  let <_cor9> =
			call 'erlang':'is_list'
			    (C2)
		    in  call 'erlang':'and'
			    (_cor8, _cor9) ->
	      let <_cor10> =
		  %% Line 5320
		  call 'erlang':'++'
		      (C1, C2)
	      in  %% Line 5320
		  apply 'check_distinct_tags'/2
		      (_cor10, Acc)
	  %% Line 5321
	  <[{'ComponentType',_cor16,_cor17,_cor18,_cor19,[T|[]],_cor20}|Cs],Acc> when 'true' ->
	      do  %% Line 5322
		  apply 'check_distinct'/2
		      (T, Acc)
		  %% Line 5323
		  apply 'check_distinct_tags'/2
		      (Cs, [T|Acc])
	  %% Line 5324
	  <[C = {'ComponentType',_cor21,_cor22,_cor23,_cor24,[T|Ts],_cor25}|Cs],Acc> when 'true' ->
	      do  %% Line 5325
		  apply 'check_distinct'/2
		      (T, Acc)
		  let <_cor13> =
		      %% Line 5326
		      call 'erlang':'setelement'
			  (6, C, Ts)
		  in  %% Line 5326
		      apply 'check_distinct_tags'/2
			  ([_cor13|Cs], [T|Acc])
	  %% Line 5327
	  <[{'ComponentType',_cor33,_cor34,_cor35,_cor36,[],_cor37}|_X_Cs],_X_Acc> when 'true' ->
	      %% Line 5328
	      call 'erlang':'throw'
		  ({'error',[78|[111|[116|[32|[100|[105|[115|[116|[105|[110|[99|[116|[32|[116|[97|[103|[115|[32|[105|[110|[32|[83|[69|[84]]]]]]]]]]]]]]]]]]]]]]]]})
	  %% Line 5329
	  <[],_cor38> when 'true' ->
	      %% Line 5330
	      'ok'
	  ( <_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor15,_cor14})
		  -| [{'function_name',{'check_distinct_tags',2}}] )
	    -| ['compiler_generated'] )
	end
'check_distinct'/2 =
    %% Line 5331
    fun (_cor1,_cor0) ->
	%% Line 5332
	case call 'lists':'member'
		 (_cor1, _cor0) of
	  %% Line 5333
	  <'true'> when 'true' ->
	      %% Line 5334
	      call 'erlang':'throw'
		  ({'error',[78|[111|[116|[32|[100|[105|[115|[116|[105|[110|[99|[116|[32|[116|[97|[103|[115|[32|[105|[110|[32|[83|[69|[84]]]]]]]]]]]]]]]]]]]]]]]]})
	  %% Line 5335
	  <_cor5> when 'true' ->
	      'ok'
	end
'sort_components'/3 =
    %% Line 5343
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <'der',S = {'state',_cor23,_cor24,_cor25,TypeName,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34},Components> when 'true' ->
	      let <_cor3> =
		  %% Line 5344
		  apply 'textual_order'/1
		      (Components)
	      in  %% Line 5344
		  case apply 'extension'/1
			   (_cor3) of
		    <{R1,Ext,R2}> when 'true' ->
			let <_cor7> =
			    %% Line 5345
			    case Ext of
			      %% Line 5346
			      <'noext'> when 'true' ->
				  R1
			      %% Line 5347
			      <_cor35> when 'true' ->
				  let <_cor5> =
				      call 'erlang':'++'
					  (Ext, R2)
				  in  call 'erlang':'++'
					  (R1, _cor5)
			    end
			in  let <_cor9> =
				%% Line 5349
				apply 'untagged_choice'/2
				    (S, _cor7)
			    in  %% Line 5349
				case <_cor9,Ext> of
				  %% Line 5350
				  <'false','noext'> when 'true' ->
				      let <_cor10> =
					  %% Line 5351
					  apply 'sort_components1'/7
					      (S, TypeName, _cor7, [], [], [], [])
				      in  %% Line 5351
					  {'true',_cor10}
				  %% Line 5352
				  <'false',_cor36> when 'true' ->
				      let <_cor11> =
					  %% Line 5353
					  apply 'sort_components1'/7
					      (S, TypeName, _cor7, [], [], [], [])
				      in  %% Line 5353
					  {'true',{_cor11,[]}}
				  %% Line 5354
				  <'true','noext'> when 'true' ->
				      %% Line 5356
				      {'dynamic',R1}
				  %% Line 5357
				  <_fol4508,_fol4509> when 'true' ->
				      %% Line 5358
				      {'dynamic',{R1,Ext,R2}}
				end
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor4})
		      -| ['compiler_generated'] )
		  end
	  %% Line 5360
	  <'per',S = {'state',_cor38,_cor39,_cor40,TypeName,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49},Components> when 'true' ->
	      let <_cor13> =
		  %% Line 5361
		  apply 'textual_order'/1
		      (Components)
	      in  %% Line 5361
		  case apply 'extension'/1
			   (_cor13) of
		    <{R1,Ext,R2}> when 'true' ->
			let <_cor15> =
			    %% Line 5362
			    call 'erlang':'++'
				(R1, R2)
			in  let <Root> =
				%% Line 5362
				apply 'tag_untagged_choice'/2
				    (S, _cor15)
			    in  %% Line 5363
				case Ext of
				  %% Line 5364
				  <'noext'> when 'true' ->
				      let <_cor17> =
					  %% Line 5365
					  apply 'sort_components1'/7
					      (S, TypeName, Root, [], [], [], [])
				      in  %% Line 5365
					  {'true',_cor17}
				  %% Line 5366
				  <_cor50> when 'true' ->
				      let <_cor18> =
					  %% Line 5367
					  apply 'sort_components1'/7
					      (S, TypeName, Root, [], [], [], [])
				      in  %% Line 5367
					  {'true',{_cor18,%% Line 5368
							  Ext}}
				end
		    ( <_cor14> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor14})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor22,_cor21,_cor20> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor22,_cor21,_cor20})
		  -| [{'function_name',{'sort_components',3}}] )
	    -| ['compiler_generated'] )
	end
'sort_components1'/7 =
    %% Line 5371
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <S,TypeName,[C = {'ComponentType',_cor25,_cor26,_cor27,_cor28,[{'UNIVERSAL',_cor29}|_X_R],_cor30}|Cs],%% Line 5372
														UnivAcc,%% Line 5372
															ApplAcc,%% Line 5372
																ContAcc,%% Line 5372
																	PrivAcc> when 'true' ->
	      %% Line 5373
	      apply 'sort_components1'/7
		  (S, TypeName, Cs, [C|UnivAcc], ApplAcc, ContAcc, PrivAcc)
	  %% Line 5374
	  <S,TypeName,[C = {'ComponentType',_cor31,_cor32,_cor33,_cor34,[{'APPLICATION',_cor35}|_X_R],_cor36}|Cs],%% Line 5375
														  UnivAcc,%% Line 5375
															  ApplAcc,%% Line 5375
																  ContAcc,%% Line 5375
																	  PrivAcc> when 'true' ->
	      %% Line 5376
	      apply 'sort_components1'/7
		  (S, TypeName, Cs, UnivAcc, [C|ApplAcc], ContAcc, PrivAcc)
	  %% Line 5377
	  <S,TypeName,[C = {'ComponentType',_cor37,_cor38,_cor39,_cor40,[{'CONTEXT',_cor41}|_X_R],_cor42}|Cs],%% Line 5378
													      UnivAcc,%% Line 5378
														      ApplAcc,%% Line 5378
															      ContAcc,%% Line 5378
																      PrivAcc> when 'true' ->
	      %% Line 5379
	      apply 'sort_components1'/7
		  (S, TypeName, Cs, UnivAcc, ApplAcc, [C|ContAcc], PrivAcc)
	  %% Line 5380
	  <S,TypeName,[C = {'ComponentType',_cor43,_cor44,_cor45,_cor46,[{'PRIVATE',_cor47}|_X_R],_cor48}|Cs],%% Line 5381
													      UnivAcc,%% Line 5381
														      ApplAcc,%% Line 5381
															      ContAcc,%% Line 5381
																      PrivAcc> when 'true' ->
	      %% Line 5382
	      apply 'sort_components1'/7
		  (S, TypeName, Cs, UnivAcc, ApplAcc, ContAcc, [C|PrivAcc])
	  %% Line 5383
	  <S,TypeName,[],UnivAcc,ApplAcc,ContAcc,PrivAcc> when 'true' ->
	      let <_cor16> =
		  %% Line 5385
		  apply 'sort_universal_type'/1
		      (UnivAcc)
	      in  let <_cor17> =
		      %% Line 5385
		      apply 'ascending_order_check'/3
			  (S, TypeName, _cor16)
		  in  let <_cor13> =
			  %% Line 5386
			  call 'lists':'keysort'
			      (6, ApplAcc)
		      in  let <_cor14> =
			      %% Line 5386
			      apply 'ascending_order_check'/3
				  (S, TypeName, _cor13)
			  in  let <_cor10> =
				  %% Line 5387
				  call 'lists':'keysort'
				      (6, ContAcc)
			      in  let <_cor11> =
				      %% Line 5387
				      apply 'ascending_order_check'/3
					  (S, TypeName, _cor10)
				  in  let <_cor8> =
					  %% Line 5388
					  call 'lists':'keysort'
					      (6, PrivAcc)
				      in  let <_cor9> =
					      %% Line 5388
					      apply 'ascending_order_check'/3
						  (S, TypeName, _cor8)
					  in  let <_cor12> =
						  %% Line 5387
						  call 'erlang':'++'
						      (_cor11, _cor9)
					      in  let <_cor15> =
						      %% Line 5386
						      call 'erlang':'++'
							  (_cor14, _cor12)
						  in  %% Line 5385
						      call 'erlang':'++'
							  (_cor17, _cor15)
	  ( <_cor24,_cor23,_cor22,_cor21,_cor20,_cor19,_cor18> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor24,_cor23,_cor22,_cor21,_cor20,_cor19,_cor18})
		  -| [{'function_name',{'sort_components1',7}}] )
	    -| ['compiler_generated'] )
	end
'ascending_order_check'/3 =
    %% Line 5390
    fun (_cor2,_cor1,_cor0) ->
	do  %% Line 5391
	    apply 'ascending_order_check1'/3
		(_cor2, _cor1, _cor0)
	    _cor0
'ascending_order_check1'/3 =
    %% Line 5394
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,TypeName,%% Line 5395
		      [C1 = {'ComponentType',_cor17,_cor18,_cor19,_cor20,[{_cor21,T}|_cor22],_cor23}|%% Line 5396
												     [C2 = {'ComponentType',_cor24,_cor25,_cor26,_cor27,[{_cor28,_cor29}|_cor30],_cor31}|Rest]]>
	      when call 'erlang':'=:='
		    (_cor29,
		     %% Line 5396
		     T) ->
	      do  %% Line 5397
		  call 'asn1ct':'warning'
		      ([73|[110|[100|[105|[115|[116|[105|[110|[99|[116|[32|[116|[97|[103|[32|[126|[112|[32|[105|[110|[32|[83|[69|[84|[32|[126|[112|[44|[32|[99|[111|[109|[112|[111|[110|[101|[110|[116|[115|[32|[126|[112|[32|[97|[110|[100|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 5398
																																							[T|[TypeName|[_cor18|[_cor25|[]]]]], %% Line 5398
																																											     S, %% Line 5399
																																												[73|[110|[100|[105|[115|[116|[105|[110|[99|[116|[32|[116|[97|[103|[32|[105|[110|[32|[83|[69|[84]]]]]]]]]]]]]]]]]]]]])
		  %% Line 5400
		  apply 'ascending_order_check1'/3
		      (S, TypeName, [C2|Rest])
	  %% Line 5401
	  <S,TypeName,%% Line 5402
		      [C1 = {'ComponentType',_cor44,_cor45,_cor46,_cor47,[{'UNIVERSAL',T1}|_cor48],_cor49}|%% Line 5403
													   [C2 = {'ComponentType',_cor50,_cor51,_cor52,_cor53,[{'UNIVERSAL',T2}|_cor54],_cor55}|Rest]]> when 'true' ->
	      let <_cor8> =
		  %% Line 5404
		  apply 'decode_type'/1
		      (T1)
	      in  let <_cor7> =
		      %% Line 5404
		      apply 'decode_type'/1
			  (T2)
		  in  %% Line 5404
		      case call 'erlang':'=='
			       (_cor8, _cor7) of
			%% Line 5405
			<'true'> when 'true' ->
			    do  %% Line 5406
				call 'asn1ct':'warning'
				    ([73|[110|[100|[105|[115|[116|[105|[110|[99|[116|[32|[116|[97|[103|[115|[32|[126|[112|[32|[97|[110|[100|[32|[126|[112|[32|[105|[110|[32|[83|[69|[84|[32|[126|[112|[44|[32|[99|[111|[109|[112|[111|[110|[101|[110|[116|[115|[32|[126|[112|[32|[97|[110|[100|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 5408
																																														   [T1|[T2|[TypeName|[_cor45|%% Line 5409
																																																	     [_cor51|[]]]]]], %% Line 5409
																																																			      S, %% Line 5410
																																																				 [73|[110|[100|[105|[115|[116|[105|[110|[99|[116|[32|[116|[97|[103|[115|[32|[97|[110|[100|[32|[105|[110|[32|[83|[69|[84]]]]]]]]]]]]]]]]]]]]]]]]]])
				%% Line 5411
				apply 'ascending_order_check1'/3
				    (S, TypeName, [C2|Rest])
			%% Line 5412
			<_cor68> when 'true' ->
			    %% Line 5413
			    apply 'ascending_order_check1'/3
				(S, TypeName, [C2|Rest])
		      end
	  %% Line 5415
	  <S,N,[_cor69|Rest]> when 'true' ->
	      %% Line 5416
	      apply 'ascending_order_check1'/3
		  (S, N, Rest)
	  %% Line 5417
	  <_cor70,_cor71,[]> when 'true' ->
	      %% Line 5418
	      'ok'
	  ( <_cor16,_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor16,_cor15,_cor14})
		  -| [{'function_name',{'ascending_order_check1',3}}] )
	    -| ['compiler_generated'] )
	end
'sort_universal_type'/1 =
    %% Line 5420
    fun (_cor0) ->
	let <_cor5> =
	    %% Line 5421
	    ( fun (_cor3) ->
		  %% Line 5422
		  case _cor3 of
		    <{'ComponentType',_cor12,_cor13,_cor14,_cor15,[{_cor16,T}|_cor17],_cor18}> when 'true' ->
			let <_cor2> =
			    %% Line 5423
			    apply 'decode_type'/1
				(T)
			in  %% Line 5423
			    {_cor2,_cor3}
		    ( <_cor1> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor1})
		      -| ['compiler_generated'] )
		  end
	      -| [{'id',{0,0,'-sort_universal_type/1-fun-0-'}}] )
	in  let <List> =
		%% Line 5421
		call 'lists':'map'
		    (_cor5, _cor0)
	    in  let <SortedList> =
		    %% Line 5426
		    call 'lists':'keysort'
			(1, List)
		in  let <_cor10> =
			%% Line 5427
			( fun (_cor8) ->
			      call 'erlang':'element'
				  (2, _cor8)
			  -| [{'id',{0,0,'-sort_universal_type/1-fun-1-'}}] )
		    in  %% Line 5427
			call 'lists':'map'
			    (_cor10, SortedList)
'decode_type'/1 =
    %% Line 5429
    fun (_cor0) ->
	case _cor0 of
	  <I>
	      when call 'erlang':'is_integer'
		    (_cor0) ->
	      %% Line 5430
	      I
	  %% Line 5431
	  <T> when 'true' ->
	      %% Line 5432
	      call 'asn1ct_gen_ber_bin_v2':'decode_type'
		  (T)
	end
'untagged_choice'/2 =
    %% Line 5434
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_S,[{'ComponentType',_cor5,_cor6,{'type',[],{'CHOICE',_cor7},_cor8,_cor9,_cor10},_cor11,_cor12,_cor13}|_X_Rest]> when 'true' ->
	      %% Line 5435
	      'true'
	  %% Line 5436
	  <S,[{'ComponentType',_cor14,_cor15,{'type',[],ExRef = {'Externaltypereference',_cor16,_cor17,_cor18},_cor19,_cor20,_cor21},_cor22,_cor23,_cor24}|Rest]> when %% Line 5437
																				       ( 'true'
																					 -| ['compiler_generated'] ) ->
	      %% Line 5438
	      case apply 'get_referenced_type'/2
		       (S, ExRef) of
		%% Line 5439
		<{_cor25,{'typedef',_cor26,_cor27,_cor28,{'type',[],%% Line 5440
								    {'CHOICE',_cor29},_cor30,_cor31,_cor32}}}> when 'true' ->
		    %% Line 5440
		    'true'
		%% Line 5441
		<_cor33> when 'true' ->
		    apply 'untagged_choice'/2
			(S, Rest)
	      end
	  %% Line 5443
	  <S,[_cor34|Rest]> when 'true' ->
	      %% Line 5444
	      apply 'untagged_choice'/2
		  (S, Rest)
	  %% Line 5445
	  <_cor35,[]> when 'true' ->
	      %% Line 5446
	      'false'
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'untagged_choice',2}}] )
	    -| ['compiler_generated'] )
	end
'tag_untagged_choice'/2 =
    %% Line 5449
    fun (_cor1,_cor0) ->
	%% Line 5450
	apply 'tag_untagged_choice'/3
	    (_cor1, _cor0, [])
'tag_untagged_choice'/3 =
    %% Line 5451
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,[C = {'ComponentType',_cor23,_cor24,{'type',[],{'CHOICE',_cor25},_cor26,_cor27,_cor28},_cor29,_cor30,_cor31}|Rest],Acc> when 'true' ->
	      let <_rec581> =
		  %% Line 5453
		  apply 'get_least_tag'/1
		      (_cor30)
	      in  let <_cor9> =
		      %% Line 5453
		      call 'erlang':'setelement'
			  (6, C, _rec581)
		  in  %% Line 5454
		      apply 'tag_untagged_choice'/3
			  (S, Rest, [_cor9|Acc])
	  %% Line 5455
	  <S,[C = {'ComponentType',_cor45,_cor46,{'type',[],ExRef = {'Externaltypereference',_cor47,_cor48,_cor49},_cor50,_cor51,_cor52},_cor53,_cor54,_cor55}|Rest],Acc> when ( 'true'
																						 -| ['compiler_generated'] ) ->
	      %% Line 5456
	      case apply 'get_referenced_type'/2
		       (S, ExRef) of
		%% Line 5457
		<{_cor56,{'typedef',_cor57,_cor58,_cor59,{'type',[],%% Line 5458
								    {'CHOICE',_cor60},_cor61,_cor62,_cor63}}}> when 'true' ->
		    let <_rec584> =
			%% Line 5460
			apply 'get_least_tag'/1
			    (_cor54)
		    in  let <_cor17> =
			    %% Line 5460
			    call 'erlang':'setelement'
				(6, C, _rec584)
			in  %% Line 5461
			    apply 'tag_untagged_choice'/3
				(S, Rest, [_cor17|Acc])
		%% Line 5462
		<_cor77> when 'true' ->
		    %% Line 5463
		    apply 'tag_untagged_choice'/3
			(S, Rest, [C|Acc])
	      end
	  %% Line 5465
	  <S,[C|Rest],Acc> when 'true' ->
	      %% Line 5466
	      apply 'tag_untagged_choice'/3
		  (S, Rest, [C|Acc])
	  %% Line 5467
	  <_X_S,[],Acc> when 'true' ->
	      %% Line 5468
	      Acc
	  ( <_cor22,_cor21,_cor20> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor22,_cor21,_cor20})
		  -| [{'function_name',{'tag_untagged_choice',3}}] )
	    -| ['compiler_generated'] )
	end
'get_least_tag'/1 =
    %% Line 5469
    fun (_cor0) ->
	case _cor0 of
	  <[]> when 'true' ->
	      %% Line 5470
	      []
	  %% Line 5471
	  <TagList> when 'true' ->
	      let <Pred> =
		  %% Line 5473
		  ( fun (_cor2,_cor1) ->
			case <_cor2,_cor1> of
			  <{'PRIVATE',_cor8},{'CONTEXT',_cor9}> when 'true' ->
			      'true'
			  %% Line 5474
			  <{'CONTEXT',_cor10},{'APPLICATION',_cor11}> when 'true' ->
			      'true'
			  %% Line 5475
			  <{'APPLICATION',_cor12},{'UNIVERSAL',_cor13}> when 'true' ->
			      'true'
			  %% Line 5476
			  <{A,T1},{_cor14,T2}>
			      when let <_cor15> =
				    call 'erlang':'=:='
					(_cor14, A)
				in  let <_cor16> =
					call 'erlang':'=<'
					    (T1, T2)
				    in  call 'erlang':'and'
					    (_cor15, _cor16) ->
			      'true'
			  %% Line 5476
			  <_cor17,_cor18> when 'true' ->
			      'false'
			end
		    -| [{'id',{0,0,'-get_least_tag/1-fun-0-'}}] )
	      in  %% Line 5478
		  case call 'lists':'sort'
			   (Pred, TagList) of
		    <[T|_cor19]> when 'true' ->
			%% Line 5479
			[T|[]]
		    ( <_cor6> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor6})
		      -| ['compiler_generated'] )
		  end
	end
'textual_order'/1 =
    %% Line 5483
    fun (_cor0) ->
	let <Fun> =
	    %% Line 5484
	    ( fun (_cor6,_cor5) ->
		  case <_cor6,_cor5> of
		    <C = {'ComponentType',_cor12,_cor13,_cor14,_cor15,_cor16,_cor17},Index> when 'true' ->
			let <_cor4> =
			    %% Line 5485
			    call 'erlang':'setelement'
				(7, C, Index)
			in  let <_cor1> =
				%% Line 5485
				call 'erlang':'+'
				    (Index, 1)
			    in  %% Line 5485
				{_cor4,_cor1}
		    %% Line 5486
		    <Other,Index> when 'true' ->
			%% Line 5487
			{Other,Index}
		  end
	      -| [{'id',{0,0,'-textual_order/1-fun-0-'}}] )
	in  %% Line 5489
	    case apply 'textual_order'/3
		     (_cor0, Fun, 1) of
	      <{NewCs,_cor25}> when 'true' ->
		  %% Line 5490
		  NewCs
	      ( <_cor10> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor10})
		-| ['compiler_generated'] )
	    end
'textual_order'/3 =
    %% Line 5491
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Cs,Fun,IxIn>
	      when call 'erlang':'is_list'
		    (Cs) ->
	      %% Line 5492
	      call 'lists':'mapfoldl'
		  (Fun, IxIn, Cs)
	  %% Line 5493
	  <{Root,Ext},Fun,IxIn> when 'true' ->
	      %% Line 5494
	      case apply 'textual_order'/3
		       (Root, Fun, IxIn) of
		<{NewRoot,IxR}> when 'true' ->
		    %% Line 5495
		    case apply 'textual_order'/3
			     (Ext, Fun, IxR) of
		      <{NewExt,_cor11}> when 'true' ->
			  %% Line 5496
			  {{NewRoot,NewExt},'dummy'}
		      ( <_cor4> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor4})
			-| ['compiler_generated'] )
		    end
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  %% Line 5497
	  <{Root1,Ext,Root2},Fun,IxIn> when 'true' ->
	      %% Line 5498
	      case apply 'textual_order'/3
		       (Root1, Fun, IxIn) of
		<{NewRoot1,IxR}> when 'true' ->
		    %% Line 5499
		    case apply 'textual_order'/3
			     (Ext, Fun, IxR) of
		      <{NewExt,IxE}> when 'true' ->
			  %% Line 5500
			  case apply 'textual_order'/3
				   (Root2, Fun, IxE) of
			    <{NewRoot2,_cor12}> when 'true' ->
				%% Line 5501
				{{NewRoot1,NewExt,NewRoot2},'dummy'}
			    ( <_cor7> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor7})
			      -| ['compiler_generated'] )
			  end
		      ( <_cor6> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor6})
			-| ['compiler_generated'] )
		    end
		( <_cor5> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor5})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'textual_order',3}}] )
	    -| ['compiler_generated'] )
	end
'extension'/1 =
    %% Line 5503
    fun (_cor0) ->
	case _cor0 of
	  <Components>
	      when call 'erlang':'is_list'
		    (_cor0) ->
	      %% Line 5504
	      {Components,'noext',[]}
	  %% Line 5505
	  <{Root,ExtList}> when 'true' ->
	      let <ToOpt> =
		  %% Line 5506
		  ( fun (_cor1) ->
			case _cor1 of
			  <'mandatory'> when 'true' ->
			      %% Line 5507
			      'OPTIONAL'
			  %% Line 5508
			  <X> when 'true' ->
			      X
			end
		    -| [{'id',{0,0,'-extension/1-fun-0-'}}] )
	      in  let <_cor12> =
		      %% Line 5510
		      ( letrec
			    'lc$^0'/1 =
				fun (_cor6) ->
				    case _cor6 of
				      <[X = %% Line 5511
					    {'ComponentType',_cor26,_cor27,_cor28,Y,_cor29,_cor30}|_cor5]> when 'true' ->
					  let <_rec587> =
					      apply ToOpt
						  (Y)
					  in  let <_cor10> =
						  call 'erlang':'setelement'
						      (5, X, _rec587)
					      in  let <_cor11> =
						      %% Line 5511
						      apply 'lc$^0'/1
							  (_cor5)
						  in  ( [_cor10|_cor11]
							-| ['compiler_generated'] )
				      ( <[_cor4|_cor5]> when 'true' ->
					    %% Line 5511
					    apply 'lc$^0'/1
						(_cor5)
					-| ['compiler_generated'] )
				      <[]> when 'true' ->
					  []
				      ( <_cor6> when 'true' ->
					    ( primop 'match_fail'
						  ({'function_clause',_cor6})
					      -| [{'function_name',{'lc$^0',1}}] )
					-| ['compiler_generated'] )
				    end
			in  apply 'lc$^0'/1
				(%% Line 5511
				 ExtList)
			-| ['list_comprehension'] )
		  in  %% Line 5510
		      {Root,_cor12,%% Line 5511
				   []}
	  %% Line 5512
	  <{Root1,ExtList,Root2}> when 'true' ->
	      let <ToOpt> =
		  %% Line 5513
		  ( fun (_cor13) ->
			case _cor13 of
			  <'mandatory'> when 'true' ->
			      %% Line 5514
			      'OPTIONAL'
			  %% Line 5515
			  <X> when 'true' ->
			      X
			end
		    -| [{'id',{0,0,'-extension/1-fun-1-'}}] )
	      in  let <_cor24> =
		      %% Line 5517
		      ( letrec
			    'lc$^1'/1 =
				fun (_cor18) ->
				    case _cor18 of
				      <[X = %% Line 5518
					    {'ComponentType',_cor38,_cor39,_cor40,Y,_cor41,_cor42}|_cor17]> when 'true' ->
					  let <_rec589> =
					      apply ToOpt
						  (Y)
					  in  let <_cor22> =
						  call 'erlang':'setelement'
						      (5, X, _rec589)
					      in  let <_cor23> =
						      %% Line 5518
						      apply 'lc$^1'/1
							  (_cor17)
						  in  ( [_cor22|_cor23]
							-| ['compiler_generated'] )
				      ( <[_cor16|_cor17]> when 'true' ->
					    %% Line 5518
					    apply 'lc$^1'/1
						(_cor17)
					-| ['compiler_generated'] )
				      <[]> when 'true' ->
					  []
				      ( <_cor18> when 'true' ->
					    ( primop 'match_fail'
						  ({'function_clause',_cor18})
					      -| [{'function_name',{'lc$^1',1}}] )
					-| ['compiler_generated'] )
				    end
			in  apply 'lc$^1'/1
				(%% Line 5518
				 ExtList)
			-| ['list_comprehension'] )
		  in  %% Line 5517
		      {Root1,_cor24,%% Line 5518
				    Root2}
	  ( <_cor25> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor25})
		  -| [{'function_name',{'extension',1}}] )
	    -| ['compiler_generated'] )
	end
'check_setof'/3 =
    %% Line 5520
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,Type,Component = {'type',_cor7,_cor8,_cor9,_cor10,_cor11}> when ( 'true'
									       -| ['compiler_generated'] ) ->
	      let <_cor3> =
		  %% Line 5521
		  apply 'check_type'/3
		      (S, Type, Component)
	      in  %% Line 5521
		  apply 'simplify_type'/1
		      (_cor3)
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5,_cor4})
		  -| [{'function_name',{'check_setof',3}}] )
	    -| ['compiler_generated'] )
	end
'check_selectiontype'/3 =
    %% Line 5523
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,Name,{'type',_cor25,Eref = {'Externaltypereference',_cor26,_cor27,_cor28},_cor29,_cor30,_cor31}> when %% Line 5524
														   ( 'true'
														     -| ['compiler_generated'] ) ->
	      %% Line 5525
	      case apply 'get_referenced_type'/2
		       (S, Eref) of
		<{RefMod,TypeDef}> when 'true' ->
		    let <_rec591> =
			%% Line 5526
			apply 'load_asn1_module'/2
			    (S, RefMod)
		    in  let <_rec592> =
			    %% Line 5529
			    apply 'get_datastr_name'/1
				(TypeDef)
			in  %% Line 5526
			    case S of
			      <{'state',_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44}> when 'true' ->
				  let <_cor7> =
				      %% Line 5529
				      call 'erlang':'setelement'
					  (5, S, _rec592)
				  in  let <_cor8> =
					  %% Line 5528
					  call 'erlang':'setelement'
					      (4, _cor7, TypeDef)
				      in  let <_cor9> =
					      %% Line 5527
					      call 'erlang':'setelement'
						  (3, _cor8, RefMod)
					  in  let <_cor11> =
						  call 'erlang':'setelement'
						      (2, _cor9, _rec591)
					      in  %% Line 5530
						  apply 'check_selectiontype2'/3
						      (_cor11, Name, TypeDef)
			      ( <_cor45> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','state'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  %% Line 5531
	  <S,Name,Type = {'type',_cor46,{'pt',_cor47,_cor48},_cor49,_cor50,_cor51}> when 'true' ->
	      %% Line 5533
	      ( case S of
		  ( <( {'state',_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_rec594,_cor62,_cor63}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor17> =
			    case _rec594 of
			      %% Line 5534
			      <[]> when 'true' ->
				  _cor55
			      %% Line 5536
			      <N> when 'true' ->
				  N
			    end
			in  let <TDef> =
				%% Line 5538
				{'typedef','false','undefined',_cor17,Type}
			    in  %% Line 5539
				apply 'check_selectiontype2'/3
				    (S, Name, TDef)
		    -| ['compiler_generated'] )
		  ( <_cor64> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 5540
	  <S,Name,Type> when 'true' ->
	      let <_cor20> =
		  %% Line 5541
		  call 'io_lib':'format'
		      ([83|[101|[108|[101|[99|[116|[105|[111|[110|[84|[121|[112|[101|[32|[101|[114|[114|[111|[114|[58|[32|[126|[119|[32|[60|[32|[126|[119|[32|[109|[117|[115|[116|[32|[98|[101|[32|[97|[32|[114|[101|[102|[101|[114|[101|[110|[99|[101|[32|[116|[111|[32|[97|[32|[67|[72|[79|[73|[67|[69|[46]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Name|[Type|[]]])
	      in  let <Msg> =
		      %% Line 5541
		      call 'lists':'flatten'
			  (_cor20)
		  in  %% Line 5542
		      apply 'error'/1
			  ({'type',Msg,S})
	end
'check_selectiontype2'/3 =
    %% Line 5544
    fun (_cor2,_cor1,_cor0) ->
	let <_rec596> =
	    %% Line 5545
	    apply 'get_datastr_name'/1
		(_cor0)
	in  %% Line 5545
	    case _cor2 of
	      <{'state',_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35}> when 'true' ->
		  let <_cor6> =
		      call 'erlang':'setelement'
			  (12, _cor2, _rec596)
		  in  %% Line 5546
		      ( case _cor0 of
			  ( <( {'typedef',_cor37,_cor38,_cor39,_rec598}
			       -| ['compiler_generated'] )> when 'true' ->
				%% Line 5547
				( case apply 'check_type'/3
					   (_cor6, _cor0, _rec598) of
				    ( <( {'type',_cor41,_rec599,_cor42,_cor43,_cor44}
					 -| ['compiler_generated'] )> when 'true' ->
					  let <Components> =
					      apply 'get_choice_components'/2
						  (_cor2, _rec599)
					  in  %% Line 5548
					      case call 'lists':'keysearch'
						       (_cor1, 3, Components) of
						%% Line 5549
						<{'value',C}> when 'true' ->
						    %% Line 5551
						    ( case C of
							( <( {'ComponentType',_cor46,_cor47,_rec600,_cor48,_cor49,_cor50}
							     -| ['compiler_generated'] )> when 'true' ->
							      _rec600
							  -| ['compiler_generated'] )
							( <_cor51> when 'true' ->
							      ( call ( 'erlang'
								       -| ['compiler_generated'] ):( 'error'
												     -| ['compiler_generated'] )
								    (( {'badrecord','ComponentType'}
								       -| ['compiler_generated'] ))
								-| ['compiler_generated'] )
							  -| ['compiler_generated'] )
						      end
						      -| ['compiler_generated'] )
						%% Line 5553
						<_cor52> when 'true' ->
						    let <_cor17> =
							%% Line 5554
							call 'io_lib':'format'
							    ([101|[114|[114|[111|[114|[32|[99|[104|[101|[99|[107|[105|[110|[103|[32|[83|[101|[108|[101|[99|[116|[105|[111|[110|[84|[121|[112|[101|[58|[32|[126|[119|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [_cor1|[]])
						    in  let <Msg> =
							    %% Line 5554
							    call 'lists':'flatten'
								(_cor17)
							in  %% Line 5555
							    apply 'error'/1
								({'type',Msg,_cor2})
					      end
				      -| ['compiler_generated'] )
				    ( <_cor45> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','type'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <_cor40> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','typedef'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	      ( <_cor36> when 'true' ->
		    ( call ( 'erlang'
			     -| ['compiler_generated'] ):( 'error'
							   -| ['compiler_generated'] )
			  (( {'badrecord','state'}
			     -| ['compiler_generated'] ))
		      -| ['compiler_generated'] )
		-| ['compiler_generated'] )
	    end
'check_restrictedstring'/3 =
    %% Line 5558
    fun (_cor2,_cor1,_cor0) ->
	%% Line 5559
	'ok'
'check_objectidentifier'/2 =
    %% Line 5561
    fun (_cor1,_cor0) ->
	%% Line 5562
	'ok'
'check_relative_oid'/2 =
    %% Line 5564
    fun (_cor1,_cor0) ->
	%% Line 5565
	'ok'
'check_choice'/3 =
    %% Line 5571
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,Type,Components>
	      when call 'erlang':'is_list'
		    (Components) ->
	      let <_cor7> =
		  %% Line 5572
		  ( letrec
			'lc$^0'/1 =
			    fun (_cor5) ->
				case _cor5 of
				  <[C = {'ComponentType',_cor20,_cor21,_cor22,_cor23,_cor24,_cor25}|_cor4]> when 'true' ->
				      let <_cor6> =
					  apply 'lc$^0'/1
					      (_cor4)
				      in  ( [C|_cor6]
					    -| ['compiler_generated'] )
				  ( <[_cor3|_cor4]> when 'true' ->
					apply 'lc$^0'/1
					    (_cor4)
				    -| ['compiler_generated'] )
				  <[]> when 'true' ->
				      []
				  ( <_cor5> when 'true' ->
					( primop 'match_fail'
					      ({'function_clause',_cor5})
					  -| [{'function_name',{'lc$^0',1}}] )
				    -| ['compiler_generated'] )
				end
		    in  apply 'lc$^0'/1
			    (Components)
		    -| ['list_comprehension'] )
	      in  %% Line 5573
		  case apply 'check_unique'/2
			   (_cor7, 3) of
		    %% Line 5574
		    <[]> when 'true' ->
			let <Components2> =
			    %% Line 5576
			    apply 'maybe_automatic_tags'/2
				(S, Components)
			in  let <NewComps> =
				%% Line 5577
				apply 'check_each_alternative2'/3
				    (S, Type, Components2)
			    in  let <_cor13> =
				    %% Line 5581
				    ( fun (_cor11) ->
					  case _cor11 of
					    <{'ExtensionAdditionGroup',_cor26}> when 'true' ->
						'false'
					    %% Line 5582
					    <'ExtensionAdditionGroupEnd'> when 'true' ->
						'false'
					    %% Line 5583
					    <_cor27> when 'true' ->
						'true'
					  end
				      -| [{'id',{0,0,'-check_choice/3-fun-0-'}}] )
				in  let <NewComps2> =
					%% Line 5581
					call 'lists':'filter'
					    (_cor13, %% Line 5584
						     NewComps)
				    in  let <NewComps3> =
					    %% Line 5585
					    apply 'simplify_comps'/1
						(NewComps2)
					in  do  %% Line 5586
						apply 'check_unique_tags'/2
						    (S, NewComps3)
						%% Line 5587
						apply 'complist_as_tuple'/1
						    (NewComps3)
		    %% Line 5588
		    <Dupl> when 'true' ->
			%% Line 5589
			call 'erlang':'throw'
			    ({'error',{'asn1',{'duplicate_choice_alternatives',Dupl}}})
		  end
	  %% Line 5591
	  <_X_S,_cor28,[]> when 'true' ->
	      %% Line 5592
	      []
	  ( <_cor19,_cor18,_cor17> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor19,_cor18,_cor17})
		  -| [{'function_name',{'check_choice',3}}] )
	    -| ['compiler_generated'] )
	end
'maybe_automatic_tags'/2 =
    %% Line 5594
    fun (_cor1,_cor0) ->
	let <TagNos> =
	    %% Line 5595
	    apply 'tag_nums'/1
		(_cor0)
	in  %% Line 5596
	    ( case _cor1 of
		( <( {'state',_rec602,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25}
		     -| ['compiler_generated'] )> when 'true' ->
		      ( case _rec602 of
			  ( <( {'module',_cor27,_cor28,_cor29,_rec601,_cor30,_cor31,_cor32,_cor33}
			       -| ['compiler_generated'] )> when 'true' ->
				case _rec601 of
				  %% Line 5597
				  <'AUTOMATIC'> when 'true' ->
				      %% Line 5598
				      apply 'generate_automatic_tags'/3
					  (_cor1, _cor0, TagNos)
				  %% Line 5599
				  <_cor35> when 'true' ->
				      %% Line 5604
				      case apply 'is_automatic_tagged_in_multi_file'/1
					       (_cor16) of
					%% Line 5605
					<'true'> when 'true' ->
					    %% Line 5606
					    apply 'generate_automatic_tags'/3
						(_cor1, _cor0, TagNos)
					%% Line 5607
					<'false'> when 'true' ->
					    _cor0
					( <_cor10> when 'true' ->
					      primop 'match_fail'
						  ({'case_clause',_cor10})
					  -| ['compiler_generated'] )
				      end
				end
			    -| ['compiler_generated'] )
			  ( <_cor34> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','module'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
		( <_cor26> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','state'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	      -| ['compiler_generated'] )
'tag_nums'/1 =
    %% Line 5613
    fun (_cor0) ->
	%% Line 5614
	apply 'tag_nums'/3
	    (_cor0, 0, 0)
'tag_nums'/3 =
    %% Line 5615
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[{'EXTENSIONMARK',_cor8,_cor9}|Rest],Ext,Root2> when 'true' ->
	      %% Line 5616
	      apply 'tag_nums_ext'/3
		  (Rest, Ext, Root2)
	  %% Line 5617
	  <[_cor10|Rest],Ext,Root2> when 'true' ->
	      let <_cor4> =
		  %% Line 5618
		  call 'erlang':'+'
		      (Ext, 1)
	      in  let <_cor3> =
		      %% Line 5618
		      call 'erlang':'+'
			  (Root2, 1)
		  in  %% Line 5618
		      apply 'tag_nums'/3
			  (Rest, _cor4, _cor3)
	  %% Line 5619
	  <[],Ext,Root2> when 'true' ->
	      %% Line 5620
	      [0|[Ext|[Root2|[]]]]
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5})
		  -| [{'function_name',{'tag_nums',3}}] )
	    -| ['compiler_generated'] )
	end
'tag_nums_ext'/3 =
    %% Line 5621
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[{'EXTENSIONMARK',_cor6,_cor7}|Rest],Ext,Root2> when 'true' ->
	      %% Line 5622
	      apply 'tag_nums_root2'/3
		  (Rest, Ext, Root2)
	  %% Line 5623
	  <[_cor8|Rest],Ext,Root2> when 'true' ->
	      %% Line 5624
	      apply 'tag_nums_ext'/3
		  (Rest, Ext, Root2)
	  %% Line 5625
	  <[],Ext,_X_Root2> when 'true' ->
	      %% Line 5626
	      [0|[Ext|[0]]]
	  ( <_cor5,_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4,_cor3})
		  -| [{'function_name',{'tag_nums_ext',3}}] )
	    -| ['compiler_generated'] )
	end
'tag_nums_root2'/3 =
    %% Line 5627
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[_cor7|Rest],Ext,Root2> when 'true' ->
	      let <_cor3> =
		  %% Line 5628
		  call 'erlang':'+'
		      (Ext, 1)
	      in  %% Line 5628
		  apply 'tag_nums_root2'/3
		      (Rest, _cor3, Root2)
	  %% Line 5629
	  <[],Ext,Root2> when 'true' ->
	      %% Line 5630
	      [0|[Ext|[Root2|[]]]]
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5,_cor4})
		  -| [{'function_name',{'tag_nums_root2',3}}] )
	    -| ['compiler_generated'] )
	end
'is_automatic_tagged_in_multi_file'/1 =
    %% Line 5632
    fun (_cor0) ->
	%% Line 5633
	case call 'asn1ct_table':'exists'
		 ('automatic_tags') of
	  %% Line 5634
	  <'false'> when 'true' ->
	      %% Line 5636
	      'false'
	  %% Line 5637
	  <'true'> when 'true' ->
	      %% Line 5638
	      case call 'asn1ct_table':'lookup'
		       ('automatic_tags', _cor0) of
		%% Line 5639
		<[]> when 'true' ->
		    'false'
		%% Line 5640
		<_cor4> when 'true' ->
		    'true'
	      end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor2})
	    -| ['compiler_generated'] )
	end
'generate_automatic_tags'/3 =
    %% Line 5644
    fun (_cor2,_cor1,_cor0) ->
	%% Line 5645
	case apply 'any_manual_tag'/1
		 (_cor1) of
	  %% Line 5646
	  <'true'> when 'true' ->
	      _cor1
	  %% Line 5648
	  <'false'> when 'true' ->
	      %% Line 5649
	      apply 'generate_automatic_tags1'/2
		  (_cor1, _cor0)
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor3})
	    -| ['compiler_generated'] )
	end
'generate_automatic_tags1'/2 =
    %% Line 5652
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[H = {'ComponentType',_cor17,_cor18,_cor19,_cor20,_cor21,_cor22}|T],[TagNo|TagNos]> when ( 'true'
												      -| ['compiler_generated'] ) ->
	      let <_rec604> =
		  %% Line 5654
		  [{'tag','CONTEXT',%% Line 5655
				    TagNo,%% Line 5656
					  {'default','IMPLICIT'},%% Line 5657
								 0}|%% Line 5657
								    []]
	      in  %% Line 5654
		  case _cor19 of
		    <{'type',_cor28,_cor29,_cor30,_cor31,_cor32}> when 'true' ->
			let <_cor6> =
			    call 'erlang':'setelement'
				(2, _cor19, _rec604)
			in  let <_cor10> =
				%% Line 5658
				call 'erlang':'setelement'
				    (4, H, _cor6)
			    in  let <_cor11> =
				    %% Line 5658
				    call 'erlang':'+'
					(TagNo, 1)
				in  let <_cor12> =
					%% Line 5658
					apply 'generate_automatic_tags1'/2
					    (T, [_cor11|TagNos])
				    in  %% Line 5658
					[_cor10|_cor12]
		    ( <_cor33> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','type'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 5659
	  <[ExtMark = {'EXTENSIONMARK',_cor41,_cor42}|T],[_X_TagNo|TagNos]> when 'true' ->
	      let <_cor13> =
		  %% Line 5660
		  apply 'generate_automatic_tags1'/2
		      (T, TagNos)
	      in  %% Line 5660
		  [ExtMark|_cor13]
	  %% Line 5661
	  <[H|T],TagList> when 'true' ->
	      let <_cor14> =
		  %% Line 5662
		  apply 'generate_automatic_tags1'/2
		      (T, TagList)
	      in  %% Line 5662
		  [H|_cor14]
	  %% Line 5663
	  <[],_cor43> when 'true' ->
	      %% Line 5664
	      []
	  ( <_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor16,_cor15})
		  -| [{'function_name',{'generate_automatic_tags1',2}}] )
	    -| ['compiler_generated'] )
	end
'any_manual_tag'/1 =
    %% Line 5673
    fun (_cor0) ->
	case _cor0 of
	  <[{'ComponentType',_cor2,_cor3,{'type',Tag,_cor4,_cor5,_cor6,_cor7},_cor8,_cor9,_cor10}|_X_Rest]>
	      when %% Line 5674
		call 'erlang':'=/='
		    (Tag,
		     []) ->
	      %% Line 5675
	      'true'
	  %% Line 5676
	  <[_cor11|Rest]> when 'true' ->
	      %% Line 5677
	      apply 'any_manual_tag'/1
		  (Rest)
	  %% Line 5678
	  <[]> when 'true' ->
	      %% Line 5679
	      'false'
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'any_manual_tag',1}}] )
	    -| ['compiler_generated'] )
	end
'check_unique_tags'/2 =
    %% Line 5682
    fun (_cor1,_cor0) ->
	%% Line 5683
	( case _cor1 of
	    ( <( {'state',_rec608,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21}
		 -| ['compiler_generated'] )> when 'true' ->
		  ( case _rec608 of
		      ( <( {'module',_cor23,_cor24,_cor25,_rec607,_cor26,_cor27,_cor28,_cor29}
			   -| ['compiler_generated'] )> when 'true' ->
			    case _rec607 of
			      %% Line 5684
			      <'AUTOMATIC'> when 'true' ->
				  %% Line 5685
				  case apply 'any_manual_tag'/1
					   (_cor0) of
				    %% Line 5686
				    <'false'> when 'true' ->
					'true'
				    %% Line 5687
				    <_cor31> when 'true' ->
					apply 'collect_and_sort_tags'/2
					    (_cor0, [])
				  end
			      %% Line 5689
			      <_cor32> when 'true' ->
				  %% Line 5690
				  apply 'collect_and_sort_tags'/2
				      (_cor0, [])
			    end
			-| ['compiler_generated'] )
		      ( <_cor30> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','module'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	    ( <_cor22> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'collect_and_sort_tags'/2 =
    %% Line 5693
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[C = {'ComponentType',_cor21,_cor22,_cor23,_cor24,_cor25,_cor26}|Rest],Acc> when ( 'true'
											      -| ['compiler_generated'] ) ->
	      let <_cor4> =
		  %% Line 5694
		  call 'erlang':'++'
		      (_cor25, Acc)
	      in  %% Line 5694
		  apply 'collect_and_sort_tags'/2
		      (Rest, _cor4)
	  %% Line 5695
	  <[_cor33|Rest],Acc> when 'true' ->
	      %% Line 5696
	      apply 'collect_and_sort_tags'/2
		  (Rest, Acc)
	  %% Line 5697
	  <[],Acc> when 'true' ->
	      let <_cor10> =
		  %% Line 5698
		  ( fun (_cor7,_cor6) ->
			case <_cor7,_cor6> of
			  <El,_cor34>
			      when call 'erlang':'=:='
				    (_cor34,
				     El) ->
			      {{'dup',El},El}
			  <El,_X_Prev> when 'true' ->
			      {El,El}
			end
		    -| [{'id',{0,0,'-collect_and_sort_tags/2-fun-0-'}}] )
	      in  let <_cor5> =
		      %% Line 5698
		      call 'lists':'sort'
			  (Acc)
		  in  %% Line 5698
		      case call 'lists':'mapfoldl'
			       (_cor10, 'notag', _cor5) of
			<{Dupl,_cor35}> when 'true' ->
			    let <_cor16> =
				%% Line 5699
				( letrec
				      'lc$^0'/1 =
					  fun (_cor14) ->
					      case _cor14 of
						<[{'dup',Dup}|_cor13]> when 'true' ->
						    let <_cor15> =
							apply 'lc$^0'/1
							    (_cor13)
						    in  ( [Dup|_cor15]
							  -| ['compiler_generated'] )
						( <[_cor12|_cor13]> when 'true' ->
						      apply 'lc$^0'/1
							  (_cor13)
						  -| ['compiler_generated'] )
						<[]> when 'true' ->
						    []
						( <_cor14> when 'true' ->
						      ( primop 'match_fail'
							    ({'function_clause',_cor14})
							-| [{'function_name',{'lc$^0',1}}] )
						  -| ['compiler_generated'] )
					      end
				  in  apply 'lc$^0'/1
					  (Dupl)
				  -| ['list_comprehension'] )
			    in  %% Line 5700
				case <> of
				  %% Line 5701
				  <>
				      when try
					    let <_cor18> =
						call 'erlang':'length'
						    (_cor16)
					    in  call 'erlang':'>'
						    (_cor18, 0)
					of <Try> ->
					    Try
					catch <T,R> ->
					    'false' ->
				      %% Line 5702
				      call 'erlang':'throw'
					  ({'error',{'asn1',{'duplicates_of_the_tags',_cor16}}})
				  %% Line 5703
				  <> when 'true' ->
				      %% Line 5704
				      'true'
				end
			( <_cor11> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor11})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor20,_cor19> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor20,_cor19})
		  -| [{'function_name',{'collect_and_sort_tags',2}}] )
	    -| ['compiler_generated'] )
	end
'check_unique'/2 =
    %% Line 5707
    fun (_cor1,_cor0) ->
	let <Slist> =
	    %% Line 5708
	    call 'lists':'keysort'
		(_cor0, _cor1)
	in  %% Line 5709
	    apply 'check_unique2'/3
		(Slist, _cor0, [])
'check_unique2'/3 =
    %% Line 5711
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[A|[B|T]],Pos,Acc>
	      when try
		    let <_cor4> =
			call 'erlang':'element'
			    (Pos, A)
		    in  let <_cor3> =
			    call 'erlang':'element'
				(Pos, B)
			in  call 'erlang':'=='
				(_cor4, _cor3)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_cor5> =
		  %% Line 5712
		  call 'erlang':'element'
		      (Pos, B)
	      in  %% Line 5712
		  apply 'check_unique2'/3
		      ([B|T], Pos, [_cor5|Acc])
	  %% Line 5713
	  <[_cor9|T],Pos,Acc> when 'true' ->
	      %% Line 5714
	      apply 'check_unique2'/3
		  (T, Pos, Acc)
	  %% Line 5715
	  <[],_cor10,Acc> when 'true' ->
	      %% Line 5716
	      call 'lists':'reverse'
		  (Acc)
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6})
		  -| [{'function_name',{'check_unique2',3}}] )
	    -| ['compiler_generated'] )
	end
'check_each_component2'/3 =
    %% Line 5722
    fun (_cor2,_cor1,_cor0) ->
	%% Line 5723
	apply 'check_each_component2'/4
	    (_cor2, _cor1, _cor0, [])
'check_each_component2'/4 =
    %% Line 5725
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <S = {'state',_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,Path,TopName,_cor38,_cor39},%% Line 5726
														   Type,%% Line 5727
															[C = {'ComponentType',_cor40,Cname,Ts,Prop,_cor41,_cor42}|Ct],%% Line 5728
																						      Acc> when 'true' ->
	      %% Line 5730
	      ( case Ts of
		  ( <( {'type',_cor43,_rec610,_cor44,_cor45,_cor46}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor7> =
			    case _rec610 of
			      %% Line 5731
			      <{'Externaltypereference',_cor48,_cor49,_cor50}> when 'true' ->
				  []
			      %% Line 5732
			      <_cor51> when 'true' ->
				  [Cname|Path]
			    end
			in  let <_rec611> =
				%% Line 5735
				[Cname|TopName]
			    in  let <_cor11> =
				    %% Line 5735
				    call 'erlang':'setelement'
					(12, S, _rec611)
				in  let <_cor13> =
					%% Line 5734
					call 'erlang':'setelement'
					    (11, _cor11, _cor7)
				    in  let <CheckedTs> =
					    %% Line 5734
					    apply 'check_type'/3
						(_cor13, %% Line 5735
							 Type, %% Line 5735
							       Ts)
					in  let <NewTags> =
						%% Line 5736
						apply 'get_taglist'/2
						    (S, CheckedTs)
					    in  let <_cor17> =
						    %% Line 5739
						    case apply 'normalize_value'/4
							     (S, CheckedTs, Prop, [Cname|TopName]) of
						      %% Line 5740
						      <'mandatory'> when 'true' ->
							  'mandatory'
						      %% Line 5741
						      <'OPTIONAL'> when 'true' ->
							  'OPTIONAL'
						      %% Line 5742
						      <DefaultValue> when 'true' ->
							  {'DEFAULT',DefaultValue}
						    end
						in  let <_cor20> =
							%% Line 5744
							call 'erlang':'setelement'
							    (6, C, NewTags)
						    in  let <_cor21> =
							    %% Line 5744
							    call 'erlang':'setelement'
								(5, _cor20, _cor17)
							in  let <_cor23> =
								%% Line 5744
								call 'erlang':'setelement'
								    (4, _cor21, CheckedTs)
							    in  %% Line 5745
								apply 'check_each_component2'/4
								    (S, Type, Ct, [_cor23|Acc])
		    -| ['compiler_generated'] )
		  ( <_cor47> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','type'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 5747
	  <S,Type,[OtherMarker|Ct],Acc> when 'true' ->
	      %% Line 5749
	      apply 'check_each_component2'/4
		  (S, Type, Ct, [OtherMarker|Acc])
	  %% Line 5750
	  <_X_S,_cor73,[],Acc> when 'true' ->
	      %% Line 5751
	      call 'lists':'reverse'
		  (Acc)
	  ( <_cor28,_cor27,_cor26,_cor25> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor28,_cor27,_cor26,_cor25})
		  -| [{'function_name',{'check_each_component2',4}}] )
	    -| ['compiler_generated'] )
	end
'check_each_alternative2'/3 =
    %% Line 5757
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,Type,[C|Ct]> when 'true' ->
	      %% Line 5758
	      apply 'check_each_alternative2'/4
		  (S, Type, [C|Ct], [])
	  ( <_cor5,_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4,_cor3})
		  -| [{'function_name',{'check_each_alternative2',3}}] )
	    -| ['compiler_generated'] )
	end
'check_each_alternative2'/4 =
    %% Line 5760
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <S = {'state',_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,Path,TopName,_cor34,_cor35},%% Line 5761
														   Type,%% Line 5762
															[C = {'ComponentType',_cor36,Cname,Ts,_cor37,_cor38,_cor39}|Ct],%% Line 5763
																							Acc> when 'true' ->
	      %% Line 5765
	      ( case Ts of
		  ( <( {'type',_cor40,_rec614,_cor41,_cor42,_cor43}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor7> =
			    case _rec614 of
			      %% Line 5766
			      <{'Externaltypereference',_cor45,_cor46,_cor47}> when 'true' ->
				  []
			      %% Line 5767
			      <_cor48> when 'true' ->
				  [Cname|Path]
			    end
			in  let <_rec615> =
				%% Line 5770
				[Cname|TopName]
			    in  let <_cor11> =
				    %% Line 5770
				    call 'erlang':'setelement'
					(12, S, _rec615)
				in  let <_cor13> =
					%% Line 5769
					call 'erlang':'setelement'
					    (11, _cor11, _cor7)
				    in  let <CheckedTs> =
					    %% Line 5769
					    apply 'check_type'/3
						(_cor13, %% Line 5770
							 Type, %% Line 5770
							       Ts)
					in  let <NewTags> =
						%% Line 5771
						apply 'get_taglist'/2
						    (S, CheckedTs)
					    in  let <_cor17> =
						    %% Line 5773
						    call 'erlang':'setelement'
							(6, C, NewTags)
						in  let <_cor19> =
							%% Line 5773
							call 'erlang':'setelement'
							    (4, _cor17, CheckedTs)
						    in  %% Line 5774
							apply 'check_each_alternative2'/4
							    (S, Type, Ct, [_cor19|Acc])
		    -| ['compiler_generated'] )
		  ( <_cor44> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','type'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 5776
	  <S,Type,[OtherMarker|Ct],Acc> when 'true' ->
	      %% Line 5778
	      apply 'check_each_alternative2'/4
		  (S, Type, Ct, [OtherMarker|Acc])
	  %% Line 5779
	  <_X_S,_cor70,[],Acc> when 'true' ->
	      %% Line 5780
	      call 'lists':'reverse'
		  (Acc)
	  ( <_cor24,_cor23,_cor22,_cor21> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor24,_cor23,_cor22,_cor21})
		  -| [{'function_name',{'check_each_alternative2',4}}] )
	    -| ['compiler_generated'] )
	end
'componentrelation_leadingattr'/2 =
    %% Line 5786
    fun (_cor1,_cor0) ->
	%% Line 5795
	case apply 'get_simple_table_if_used'/2
		 (_cor1, _cor0) of
	  %% Line 5796
	  <[]> when 'true' ->
	      {'false',_cor0}
	  %% Line 5797
	  <_cor5> when 'true' ->
	      %% Line 5798
	      apply 'componentrelation_leadingattr'/5
		  (_cor1, _cor0, _cor0, [], [])
	end
'componentrelation_leadingattr'/5 =
    %% Line 5820
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <_cor35,[],_X_CompList,[],NewCompList> when 'true' ->
	      let <_cor5> =
		  %% Line 5821
		  call 'lists':'reverse'
		      (NewCompList)
	      in  %% Line 5821
		  {'false',_cor5}
	  %% Line 5822
	  <_cor36,[],_X_CompList,LeadingAttr,NewCompList> when 'true' ->
	      let <_cor7> =
		  %% Line 5823
		  call 'lists':'last'
		      (LeadingAttr)
	      in  let <_cor6> =
		      %% Line 5823
		      call 'lists':'reverse'
			  (NewCompList)
		  in  %% Line 5823
		      {_cor7,_cor6}
	  %% Line 5824
	  <S,[C = {'ComponentType',_cor37,_cor38,_cor39,_cor40,_cor41,_cor42}|Cs],CompList,Acc,CompAcc> when 'true' ->
	      let <_cor12> =
		  catch
		      %% Line 5826
		      apply 'componentrelation1'/3
			  (S, _cor39, %% Line 5827
				      [_cor38|[]])
	      in  let <LAAcc,NewC> =
		      %% Line 5826
		      case _cor12 of
			%% Line 5828
			<{'EXIT',_cor55}> when 'true' ->
			    %% Line 5829
			    <[],C>
			%% Line 5830
			<{CRI = [{_X_A1,_X_B1,_X_C1,_X_D1}|_X_Rest],NewTSpec}> when 'true' ->
			    %% Line 5841
			    ( case S of
				( <( {'state',_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_rec620,_cor65,_cor66,_cor67}
				     -| ['compiler_generated'] )> when 'true' ->
				      let <_cor15> =
					  call 'lists':'reverse'
					      (_rec620)
				      in  case apply 'leading_attr_index'/5
						   (S, CompList, CRI, _cor15, []) of
					    %% Line 5842
					    <[]> when 'true' ->
						%% Line 5843
						<[],C>
					    %% Line 5844
					    <[{ObjSet,Attr,N,ClassDef,_X_Path,ValueIndex}|_X_NewRest]> when 'true' ->
						let <OS> =
						    %% Line 5845
						    apply 'object_set_mod_name'/2
							(S, ObjSet)
						in  let <_cor17> =
							catch
							    %% Line 5847
							    apply 'get_unique_fieldname'/2
								(S, {'classdef','false','undefined','undefined',ClassDef})
						    in  let <_cor19> =
							    %% Line 5847
							    case _cor17 of
							      %% Line 5848
							      <{'error','__undefined_',_cor69}> when 'true' ->
								  %% Line 5849
								  'no_unique'
							      %% Line 5850
							      <{'asn1',Msg,_cor70}> when 'true' ->
								  %% Line 5851
								  apply 'error'/1
								      ({'type',Msg,S})
							      %% Line 5852
							      <{'EXIT',Msg}> when 'true' ->
								  %% Line 5853
								  apply 'error'/1
								      ({'type',{'internal_error',Msg},S})
							      %% Line 5854
							      <{Other,_cor71}> when 'true' ->
								  Other
							      ( <_cor18> when 'true' ->
								    primop 'match_fail'
									({'case_clause',_cor18})
								-| ['compiler_generated'] )
							    end
							in  let <Res> =
								%% Line 5862
								{'simpletableattributes',OS,%% Line 5864
											    Attr,%% Line 5865
												 N,_cor19,_cor19,%% Line 5868
														 ValueIndex}
							    in  let <_cor24> =
								    %% Line 5869
								    call 'erlang':'setelement'
									(4, C, NewTSpec)
								in  %% Line 5869
								    <[Res|[]],_cor24>
					    ( <_cor25> when 'true' ->
						  primop 'match_fail'
						      ({'case_clause',_cor25})
					      -| ['compiler_generated'] )
					  end
				  -| ['compiler_generated'] )
				( <_cor68> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','state'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
			%% Line 5871
			<_cor79> when 'true' ->
			    %% Line 5873
			    <[],C>
		      end
		  in  let <_cor29> =
			  %% Line 5875
			  call 'erlang':'++'
			      (LAAcc, Acc)
		      in  %% Line 5875
			  apply 'componentrelation_leadingattr'/5
			      (S, Cs, CompList, _cor29, %% Line 5876
							[NewC|CompAcc])
	  %% Line 5877
	  <S,[NotComponentType|Cs],CompList,LeadingAttr,NewCompList> when 'true' ->
	      %% Line 5878
	      apply 'componentrelation_leadingattr'/5
		  (S, Cs, CompList, LeadingAttr, [NotComponentType|NewCompList])
	  ( <_cor34,_cor33,_cor32,_cor31,_cor30> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor34,_cor33,_cor32,_cor31,_cor30})
		  -| [{'function_name',{'componentrelation_leadingattr',5}}] )
	    -| ['compiler_generated'] )
	end
'object_set_mod_name'/2 =
    %% Line 5881
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_S,ObjSet>
	      when call 'erlang':'is_atom'
		    (ObjSet) ->
	      %% Line 5882
	      ObjSet
	  %% Line 5883
	  <{'state',_cor7,M,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18},%% Line 5884
													{'Externaltypereference',_cor19,_cor20,T}>
	      when call 'erlang':'=:='
		    (_cor20,
		     %% Line 5884
		     M) ->
	      %% Line 5885
	      {M,T}
	  %% Line 5886
	  <S,{'Externaltypereference',_cor21,M,T}> when 'true' ->
	      %% Line 5887
	      ( case S of
		  ( <( {'state',_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_rec622,_cor30,_cor31,_cor32,_cor33}
		       -| ['compiler_generated'] )> when 'true' ->
			case call 'lists':'member'
				 (M, _rec622) of
			  %% Line 5888
			  <'true'> when 'true' ->
			      %% Line 5889
			      T
			  %% Line 5890
			  <'false'> when 'true' ->
			      %% Line 5891
			      {M,T}
			  ( <_cor4> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor4})
			    -| ['compiler_generated'] )
			end
		    -| ['compiler_generated'] )
		  ( <_cor34> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'object_set_mod_name',2}}] )
	    -| ['compiler_generated'] )
	end
'get_simple_table_if_used'/2 =
    %% Line 5900
    fun (_cor1,_cor0) ->
	let <_cor6> =
	    %% Line 5901
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor4) ->
			  case _cor4 of
			    <[{'ComponentType',_cor18,Name,_cor19,_cor20,_cor21,_cor22}|_cor3]> when 'true' ->
				let <_cor5> =
				    apply 'lc$^0'/1
					(_cor3)
				in  ( [Name|_cor5]
				      -| ['compiler_generated'] )
			    ( <[_cor2|_cor3]> when 'true' ->
				  apply 'lc$^0'/1
				      (_cor3)
			      -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_cor4> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor4})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  apply 'lc$^0'/1
		      (_cor0)
	      -| ['list_comprehension'] )
	in  let <_cor12> =
		%% Line 5902
		( letrec
		      'lc$^1'/1 =
			  fun (_cor10) ->
			      case _cor10 of
				<[C = {'ComponentType',_cor23,_cor24,_cor25,_cor26,_cor27,_cor28}|_cor9]> when 'true' ->
				    let <_cor11> =
					apply 'lc$^1'/1
					    (_cor9)
				    in  ( [C|_cor11]
					  -| ['compiler_generated'] )
				( <[_cor8|_cor9]> when 'true' ->
				      apply 'lc$^1'/1
					  (_cor9)
				  -| ['compiler_generated'] )
				<[]> when 'true' ->
				    []
				( <_cor10> when 'true' ->
				      ( primop 'match_fail'
					    ({'function_clause',_cor10})
					-| [{'function_name',{'lc$^1',1}}] )
				  -| ['compiler_generated'] )
			      end
		  in  apply 'lc$^1'/1
			  (_cor0)
		  -| ['list_comprehension'] )
	    in  let <RefedSimpleTable> =
		    %% Line 5903
		    apply 'any_component_relation'/5
			(_cor1, _cor12, _cor6, [], [])
		in  let <_cor15> =
			%% Line 5904
			apply 'remove_doubles'/1
			    (RefedSimpleTable)
		    in  %% Line 5904
			apply 'get_simple_table_info'/3
			    (_cor1, _cor0, _cor15)
'remove_doubles'/1 =
    %% Line 5906
    fun (_cor0) ->
	%% Line 5907
	apply 'remove_doubles'/2
	    (_cor0, [])
'remove_doubles'/2 =
    %% Line 5908
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[H|T],Acc> when 'true' ->
	      let <NewT> =
		  %% Line 5909
		  apply 'remove_doubles1'/2
		      (H, T)
	      in  %% Line 5910
		  apply 'remove_doubles'/2
		      (NewT, [H|Acc])
	  %% Line 5911
	  <[],Acc> when 'true' ->
	      %% Line 5912
	      Acc
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'remove_doubles',2}}] )
	    -| ['compiler_generated'] )
	end
'remove_doubles1'/2 =
    %% Line 5914
    fun (_cor1,_cor0) ->
	%% Line 5915
	case call 'lists':'delete'
		 (_cor1, _cor0) of
	  %% Line 5916
	  <_cor5>
	      when call 'erlang':'=:='
		    (_cor5,
		     _cor0) ->
	      _cor0
	  %% Line 5917
	  <NewL> when 'true' ->
	      apply 'remove_doubles1'/2
		  (_cor1, NewL)
	end
'get_simple_table_info'/3 =
    %% Line 5935
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,Cs,[AtList|Rest]> when 'true' ->
	      let <_cor3> =
		  %% Line 5936
		  apply 'get_simple_table_info1'/4
		      (S, Cs, AtList, [])
	      in  let <_cor4> =
		      %% Line 5936
		      apply 'get_simple_table_info'/3
			  (S, Cs, Rest)
		  in  %% Line 5936
		      [_cor3|_cor4]
	  %% Line 5937
	  <_cor8,_cor9,[]> when 'true' ->
	      %% Line 5938
	      []
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5})
		  -| [{'function_name',{'get_simple_table_info',3}}] )
	    -| ['compiler_generated'] )
	end
'get_simple_table_info1'/4 =
    %% Line 5939
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <S,Cs,[Cname|Cnames],Path>
	      when call 'erlang':'is_list'
		    (Cs) ->
	      %% Line 5940
	      case call 'lists':'keysearch'
		       (Cname, 3, Cs) of
		%% Line 5941
		<{'value',C}> when 'true' ->
		    %% Line 5942
		    apply 'get_simple_table_info1'/4
			(S, C, Cnames, [Cname|Path])
		%% Line 5943
		<_cor14> when 'true' ->
		    %% Line 5944
		    apply 'error'/1
			({'type',[77|[105|[115|[115|[105|[110|[103|[32|[101|[120|[112|[101|[99|[116|[101|[100|[32|[115|[105|[109|[112|[108|[101|[32|[116|[97|[98|[108|[101|[32|[99|[111|[110|[115|[116|[114|[97|[105|[110|[116]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],S})
	      end
	  %% Line 5946
	  <S,{'ComponentType',_cor15,_cor16,TS,_cor17,_cor18,_cor19},[],Path> when 'true' ->
	      %% Line 5949
	      case TS of
		<{'type',_cor20,OCFT,Cnstr,_cor21,_cor22}> when 'true' ->
		    %% Line 5950
		    case apply 'constraint_member'/2
			     ('simpletable', Cnstr) of
		      %% Line 5951
		      <{'true',{'simpletable',_X_OSRef}}> when 'true' ->
			  %% Line 5952
			  apply 'simple_table_info'/3
			      (S, OCFT, Path)
		      %% Line 5953
		      <_cor23> when 'true' ->
			  %% Line 5954
			  apply 'error'/1
			      ({'type',{[109|[105|[115|[115|[105|[110|[103|[32|[101|[120|[112|[101|[99|[116|[101|[100|[32|[115|[105|[109|[112|[108|[101|[32|[116|[97|[98|[108|[101|[32|[99|[111|[110|[115|[116|[114|[97|[105|[110|[116]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],%% Line 5955
																																	       Cnstr},%% Line 5955
																																		      S})
		    end
		( <_cor5> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor5})
		  -| ['compiler_generated'] )
	      end
	  %% Line 5957
	  <S,{'ComponentType',_cor24,_cor25,TS,_cor26,_cor27,_cor28},Cnames,Path> when 'true' ->
	      %% Line 5958
	      ( case TS of
		  ( <( {'type',_cor29,_rec623,_cor30,_cor31,_cor32}
		       -| ['compiler_generated'] )> when 'true' ->
			let <Components> =
			    apply 'get_atlist_components'/1
				(_rec623)
			in  %% Line 5959
			    apply 'get_simple_table_info1'/4
				(S, Components, Cnames, Path)
		    -| ['compiler_generated'] )
		  ( <_cor33> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','type'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor13,_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12,_cor11,_cor10})
		  -| [{'function_name',{'get_simple_table_info1',4}}] )
	    -| ['compiler_generated'] )
	end
'simple_table_info'/3 =
    %% Line 5962
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,{'ObjectClassFieldType',ClRef,%% Line 5963
					   ObjectClass,%% Line 5964
						       FieldName,_cor18},%% Line 5964
									 Path> when 'true' ->
	      let <_cor4> =
		  %% Line 5967
		  case FieldName of
		    %% Line 5968
		    <{LastFieldName,[]}> when 'true' ->
			LastFieldName
		    %% Line 5969
		    <{_X_FirstFieldName,FieldNames}> when 'true' ->
			%% Line 5970
			call 'lists':'last'
			    (FieldNames)
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor3})
		      -| ['compiler_generated'] )
		  end
	      in  let <_cor8> =
		      %% Line 5977
		      case ObjectClass of
			%% Line 5978
			<[]> when 'true' ->
			    %% Line 5979
			    case apply 'get_referenced_type'/2
				     (S, ClRef) of
			      <{_cor19,CDef}> when 'true' ->
				  %% Line 5980
				  CDef
			      ( <_cor6> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_cor6})
				-| ['compiler_generated'] )
			    end
			%% Line 5981
			<_cor20> when 'true' ->
			    {'classdef','false','undefined','undefined',ObjectClass}
		      end
		  in  let <_cor10> =
			  catch
			      %% Line 5984
			      apply 'get_unique_fieldname'/2
				  (S, _cor8)
		      in  let <_cor12> =
			      %% Line 5984
			      case _cor10 of
				%% Line 5985
				<{'error','__undefined_',_cor21}> when 'true' ->
				    'no_unique'
				%% Line 5986
				<{'asn1',Msg,_cor22}> when 'true' ->
				    %% Line 5987
				    apply 'error'/1
					({'type',Msg,S})
				%% Line 5988
				<{'EXIT',Msg}> when 'true' ->
				    %% Line 5989
				    apply 'error'/1
					({'type',{'internal_error',Msg},S})
				%% Line 5990
				<{Other,_cor23}> when 'true' ->
				    Other
				( <_cor11> when 'true' ->
				      primop 'match_fail'
					  ({'case_clause',_cor11})
				  -| ['compiler_generated'] )
			      end
			  in  let <_cor14> =
				  %% Line 5992
				  call 'lists':'reverse'
				      (Path)
			      in  %% Line 5992
				  {_cor14,_cor4,_cor12}
	  %% Line 5993
	  <S,Type,_cor24> when 'true' ->
	      %% Line 5994
	      apply 'error'/1
		  ({'type',{[116|[104|[101|[32|[116|[121|[112|[101|[32|[114|[101|[102|[101|[114|[101|[110|[99|[101|[100|[32|[98|[121|[32|[97|[32|[99|[111|[109|[112|[111|[110|[101|[110|[116|[114|[101|[108|[97|[116|[105|[111|[110|[32|[99|[111|[110|[115|[116|[114|[97|[105|[110|[116|[32|[109|[117|[115|[116|[32|[98|[101|[32|[97|[32|[79|[98|[106|[101|[99|[116|[67|[108|[97|[115|[115|[70|[105|[101|[108|[100|[84|[121|[112|[101]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],Type},S})
	end
'any_component_relation'/5 =
    %% Line 6007
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <S,[{'ComponentType',_cor51,CName,Type,_cor52,_cor53,_cor54}|Cs],CNames,NamePath,Acc> when 'true' ->
	      %% Line 6009
	      ( case Type of
		  ( <( {'type',_cor55,_cor56,_rec624,_cor57,_cor58}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor9> =
			    case apply 'constraint_member'/2
				     ('componentrelation', _rec624) of
			      %% Line 6011
			      <{'true',{_cor60,_cor61,AtNotation}}> when 'true' ->
				  let <AtNot> =
				      %% Line 6015
				      apply 'extract_at_notation'/1
					  (AtNotation)
				  in  %% Line 6019
				      apply 'evaluate_atpath'/4
					  (S, NamePath, CNames, AtNot)
			      %% Line 6020
			      <_cor62> when 'true' ->
				  %% Line 6021
				  []
			    end
			in  let <_cor13> =
				%% Line 6025
				call 'asn1ct_gen':'get_inner'
				    (_cor56)
			    in  let <_cor14> =
				    %% Line 6025
				    call 'asn1ct_gen':'type'
					(_cor13)
				in  let <_cor23> =
					%% Line 6024
					case <_cor58,_cor14> of
					  %% Line 6026
					  <'no',{'constructed','bif'}> when 'true' ->
					      let <InnerCs,NewNamePath> =
						  %% Line 6029
						  case apply 'get_components'/1
							   (_cor56) of
						    %% Line 6030
						    <T = {'type',_cor78,_cor79,_cor80,_cor81,_cor82}> when ( 'true'
													     -| ['compiler_generated'] ) ->
							<T,NamePath>
						    %% Line 6031
						    <IC> when 'true' ->
							<IC,[CName|NamePath]>
						  end
					      in  %% Line 6035
						  apply 'any_component_relation'/5
						      (S, InnerCs, CNames, NewNamePath, [])
					  %% Line 6036
					  <_fol5058,_fol5059> when 'true' ->
					      %% Line 6037
					      []
					end
				    in  let <_cor25> =
					    %% Line 6039
					    call 'erlang':'++'
						(_cor9, Acc)
					in  let <_cor26> =
						%% Line 6039
						call 'erlang':'++'
						    (_cor23, _cor25)
					    in  %% Line 6039
						apply 'any_component_relation'/5
						    (S, Cs, CNames, NamePath, _cor26)
		    -| ['compiler_generated'] )
		  ( <_cor59> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','type'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 6040
	  <S,Type = {'type',_cor84,_cor85,_cor86,_cor87,_cor88},CNames,NamePath,Acc> when ( 'true'
											    -| ['compiler_generated'] ) ->
	      let <_cor31> =
		  %% Line 6042
		  case apply 'constraint_member'/2
			   ('componentrelation', _cor86) of
		    %% Line 6043
		    <{'true',{_cor94,_cor95,AtNotation}}> when 'true' ->
			let <AtNot> =
			    %% Line 6044
			    apply 'extract_at_notation'/1
				(AtNotation)
			in  %% Line 6045
			    apply 'evaluate_atpath'/4
				(S, NamePath, CNames, AtNot)
		    %% Line 6046
		    <_cor96> when 'true' ->
			%% Line 6047
			[]
		  end
	      in  let <_cor35> =
		      %% Line 6051
		      call 'asn1ct_gen':'get_inner'
			  (_cor85)
		  in  let <_cor36> =
			  %% Line 6051
			  call 'asn1ct_gen':'type'
			      (_cor35)
		      in  let <_cor43> =
			      %% Line 6050
			      case <_cor88,_cor36> of
				%% Line 6052
				<'no',{'constructed','bif'}> when 'true' ->
				    let <InnerCs> =
					%% Line 6053
					apply 'get_components'/1
					    (_cor85)
				    in  %% Line 6054
					apply 'any_component_relation'/5
					    (S, InnerCs, CNames, NamePath, [])
				%% Line 6055
				<_fol5095,_fol5096> when 'true' ->
				    %% Line 6056
				    []
			      end
			  in  let <_cor45> =
				  %% Line 6058
				  call 'erlang':'++'
				      (_cor31, Acc)
			      in  %% Line 6058
				  call 'erlang':'++'
				      (_cor43, _cor45)
	  %% Line 6061
	  <S,[{'ExtensionAdditionGroup',_cor113}|Cs],CNames,NamePath,Acc> when 'true' ->
	      %% Line 6062
	      apply 'any_component_relation'/5
		  (S, Cs, CNames, NamePath, Acc)
	  %% Line 6063
	  <S,['ExtensionAdditionGroupEnd'|Cs],CNames,NamePath,Acc> when 'true' ->
	      %% Line 6064
	      apply 'any_component_relation'/5
		  (S, Cs, CNames, NamePath, Acc)
	  %% Line 6065
	  <_cor114,[],_cor115,_cor116,Acc> when 'true' ->
	      %% Line 6066
	      Acc
	  ( <_cor50,_cor49,_cor48,_cor47,_cor46> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor50,_cor49,_cor48,_cor47,_cor46})
		  -| [{'function_name',{'any_component_relation',5}}] )
	    -| ['compiler_generated'] )
	end
'constraint_member'/2 =
    %% Line 6068
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'componentrelation',[CRel = {'componentrelation',_cor4,_cor5}|_X_Rest]> when 'true' ->
	      %% Line 6069
	      {'true',CRel}
	  %% Line 6070
	  <'simpletable',[ST = {'simpletable',_cor6}|_X_Rest]> when 'true' ->
	      %% Line 6071
	      {'true',ST}
	  %% Line 6072
	  <Key,[_X_H|T]> when 'true' ->
	      %% Line 6073
	      apply 'constraint_member'/2
		  (Key, T)
	  %% Line 6074
	  <_cor7,[]> when 'true' ->
	      %% Line 6075
	      'false'
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'constraint_member',2}}] )
	    -| ['compiler_generated'] )
	end
'evaluate_atpath'/4 =
    %% Line 6083
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <_cor15,[],Cnames,{'innermost',AtPath = [Ref|_X_Refs]}> when 'true' ->
	      %% Line 6086
	      case call 'lists':'member'
		       (Ref, Cnames) of
		%% Line 6087
		<'true'> when 'true' ->
		    [AtPath|[]]
		%% Line 6088
		<'false'> when 'true' ->
		    []
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor4})
		  -| ['compiler_generated'] )
	      end
	  %% Line 6093
	  <S = {'state',_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,TopPath,_cor25,_cor26,_cor27},NamePath,Cnames,{'outermost',AtPath = [_X_Ref|_X_Refs]}> when 'true' ->
	      let <_cor7> =
		  %% Line 6095
		  case TopPath of
		    %% Line 6096
		    <[]> when 'true' ->
			AtPath
		    %% Line 6097
		    <_cor28> when 'true' ->
			%% Line 6098
			case call 'lists':'prefix'
				 (TopPath, AtPath) of
			  %% Line 6099
			  <'true'> when 'true' ->
			      %% Line 6100
			      call 'lists':'subtract'
				  (AtPath, TopPath)
			  %% Line 6101
			  <_cor29> when 'true' ->
			      []
			end
		  end
	      in  %% Line 6104
		  case <NamePath,_cor7> of
		    %% Line 6105
		    <[H|_X_T1],[_cor30|_X_T2]>
			when call 'erlang':'=:='
			      (_cor30,
			       H) ->
			[]
		    %% Line 6106
		    <_cor31,[]> when 'true' ->
			[]
		    %% Line 6107
		    <_cor32,[H|_X_T]> when 'true' ->
			%% Line 6108
			case call 'lists':'member'
				 (H, Cnames) of
			  %% Line 6109
			  <'true'> when 'true' ->
			      [_cor7|[]]
			  %% Line 6110
			  <_cor33> when 'true' ->
			      %% Line 6112
			      call 'erlang':'throw'
				  ({'type',{'asn1',[102|[97|[105|[108|[101|[100|[32|[116|[111|[32|[97|[110|[97|[108|[121|[122|[101|[32|[97|[116|[45|[112|[97|[116|[104]]]]]]]]]]]]]]]]]]]]]]]]],AtPath},S})
			end
		    ( <_fol5143,_fol5144> when 'true' ->
			  let <_cor10> = {_fol5143,_fol5144}
			  in  primop 'match_fail'
				  ({'case_clause',_cor10})
		      -| ['compiler_generated'] )
		  end
	  %% Line 6115
	  <_cor34,_cor35,_cor36,_cor37> when 'true' ->
	      %% Line 6116
	      []
	end
'get_atlist_components'/1 =
    %% Line 6120
    fun (_cor0) ->
	%% Line 6121
	apply 'get_components'/2
	    ('atlist', _cor0)
'get_components'/1 =
    %% Line 6123
    fun (_cor0) ->
	%% Line 6124
	apply 'get_components'/2
	    ('any', _cor0)
'get_components'/2 =
    %% Line 6126
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_cor4,{'SEQUENCE',_cor5,_cor6,_cor7,Cs}> when 'true' ->
	      %% Line 6127
	      apply 'tuple2complist'/1
		  (Cs)
	  %% Line 6128
	  <_cor8,{'SET',_cor9,_cor10,_cor11,Cs}> when 'true' ->
	      %% Line 6129
	      apply 'tuple2complist'/1
		  (Cs)
	  %% Line 6130
	  <_cor12,{'CHOICE',Cs}> when 'true' ->
	      %% Line 6131
	      apply 'tuple2complist'/1
		  (Cs)
	  %% Line 6133
	  <'any',{'SEQUENCE OF',T = {'type',_cor13,_X_Def,_cor14,_cor15,'no'}}> when 'true' ->
	      %% Line 6135
	      T
	  %% Line 6136
	  <'any',{'SET OF',T = {'type',_cor16,_X_Def,_cor17,_cor18,'no'}}> when 'true' ->
	      %% Line 6138
	      T
	  %% Line 6139
	  <_cor19,_cor20> when 'true' ->
	      %% Line 6140
	      []
	end
'tuple2complist'/1 =
    %% Line 6142
    fun (_cor0) ->
	case _cor0 of
	  <{R,E}> when 'true' ->
	      %% Line 6143
	      call 'erlang':'++'
		  (R, E)
	  %% Line 6144
	  <{R1,E,R2}> when 'true' ->
	      let <_cor1> =
		  %% Line 6145
		  call 'erlang':'++'
		      (E, R2)
	      in  %% Line 6145
		  call 'erlang':'++'
		      (R1, _cor1)
	  %% Line 6146
	  <List>
	      when call 'erlang':'is_list'
		    (_cor0) ->
	      %% Line 6147
	      List
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'tuple2complist',1}}] )
	    -| ['compiler_generated'] )
	end
'get_choice_components'/2 =
    %% Line 6149
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_S,{'CHOICE',Components}>
	      when call 'erlang':'is_list'
		    (Components) ->
	      %% Line 6150
	      Components
	  %% Line 6151
	  <_X_S,{'CHOICE',{C1,C2}}>
	      when let <_cor2> =
		    call 'erlang':'is_list'
			(C1)
		in  let <_cor3> =
			call 'erlang':'is_list'
			    (C2)
		    in  call 'erlang':'and'
			    (_cor2, _cor3) ->
	      %% Line 6152
	      call 'erlang':'++'
		  (C1, C2)
	  %% Line 6153
	  <S,ERef = {'Externaltypereference',_cor10,_cor11,_cor12}> when 'true' ->
	      %% Line 6154
	      case apply 'get_referenced_type'/2
		       (S, ERef) of
		<{_X_RefMod,TypeDef}> when 'true' ->
		    %% Line 6155
		    case TypeDef of
		      <{'typedef',_cor13,_cor14,_cor15,TS}> when 'true' ->
			  %% Line 6156
			  ( case TS of
			      ( <( {'type',_cor16,_rec632,_cor17,_cor18,_cor19}
				   -| ['compiler_generated'] )> when 'true' ->
				    apply 'get_choice_components'/2
					(S, _rec632)
				-| ['compiler_generated'] )
			      ( <_cor20> when 'true' ->
				    ( call ( 'erlang'
					     -| ['compiler_generated'] ):( 'error'
									   -| ['compiler_generated'] )
					  (( {'badrecord','type'}
					     -| ['compiler_generated'] ))
				      -| ['compiler_generated'] )
				-| ['compiler_generated'] )
			    end
			    -| ['compiler_generated'] )
		      ( <_cor5> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor5})
			-| ['compiler_generated'] )
		    end
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor4})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8})
		  -| [{'function_name',{'get_choice_components',2}}] )
	    -| ['compiler_generated'] )
	end
'extract_at_notation'/1 =
    %% Line 6158
    fun (_cor0) ->
	case _cor0 of
	  <[{Level,[{'Externalvaluereference',_cor3,_cor4,Name}|Rest]}|[]]> when 'true' ->
	      let <_cor1> =
		  %% Line 6159
		  apply 'extract_at_notation1'/1
		      (Rest)
	      in  %% Line 6159
		  {Level,[Name|_cor1]}
	  %% Line 6160
	  <At> when 'true' ->
	      %% Line 6161
	      call 'erlang':'exit'
		  ({'error',{'asn1',{'at_notation',At}}})
	end
'extract_at_notation1'/1 =
    %% Line 6162
    fun (_cor0) ->
	case _cor0 of
	  <[{'Externalvaluereference',_cor3,_cor4,Name}|Rest]> when 'true' ->
	      let <_cor1> =
		  %% Line 6163
		  apply 'extract_at_notation1'/1
		      (Rest)
	      in  %% Line 6163
		  [Name|_cor1]
	  %% Line 6164
	  <[]> when 'true' ->
	      %% Line 6165
	      []
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'extract_at_notation1',1}}] )
	    -| ['compiler_generated'] )
	end
'componentrelation1'/3 =
    %% Line 6179
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,C = {'type',_cor28,Def,Constraint,TCI,_cor29},%% Line 6180
							   Path> when 'true' ->
	      let <_cor10> =
		  %% Line 6184
		  case apply 'constraint_member'/2
			   ('componentrelation', Constraint) of
		    %% Line 6185
		    <{'true',{_cor30,{_cor31,_cor32,ObjectSet},AtList}}> when 'true' ->
			%% Line 6186
			case AtList of
			  <[{_cor33,AL = [{'Externalvaluereference',_cor34,_cor35,_cor36}|_X_R1]}|_X_R2]> when 'true' ->
			      let <ClassDef> =
				  %% Line 6191
				  apply 'get_ObjectClassFieldType_classdef'/2
				      (S, Def)
			      in  let <_cor7> =
				      %% Line 6193
				      ( fun (_cor5) ->
					    case _cor5 of
					      <{'Externalvaluereference',_cor37,_cor38,V}> when 'true' ->
						  V
					      ( <_cor6> when 'true' ->
						    ( primop 'match_fail'
							  ({'function_clause',_cor6})
						      -| [{'function_name',{'-componentrelation1/3-fun-0-',1}}] )
						-| ['compiler_generated'] )
					    end
					-| [{'id',{0,0,'-componentrelation1/3-fun-0-'}}] )
				  in  let <AtPath> =
					  %% Line 6193
					  call 'lists':'map'
					      (_cor7, %% Line 6194
						      AL)
				      in  %% Line 6195
					  {[{ObjectSet,AtPath,ClassDef,Path}|[]],Def}
			  ( <_cor3> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor3})
			    -| ['compiler_generated'] )
			end
		    %% Line 6196
		    <_cor39> when 'true' ->
			%% Line 6198
			apply 'innertype_comprel'/3
			    (S, Def, Path)
		  end
	      in  %% Line 6200
		  case _cor10 of
		    %% Line 6201
		    <'nofunobj'> when 'true' ->
			%% Line 6202
			'nofunobj'
		    %% Line 6203
		    <{CRelI = [{ObjSet,_cor40,_cor41,_cor42}|[]],NewDef}> when 'true' ->
			let <TCItmp> =
			    %% Line 6204
			    call 'lists':'subtract'
				(TCI, [{'objfun',ObjSet}|[]])
			in  let <_rec633> =
				%% Line 6205
				[{'objfun',ObjSet}|TCItmp]
			    in  let <_cor15> =
				    %% Line 6205
				    call 'erlang':'setelement'
					(5, C, _rec633)
				in  let <_cor17> =
					%% Line 6205
					call 'erlang':'setelement'
					    (3, _cor15, NewDef)
				    in  %% Line 6205
					{CRelI,_cor17}
		    %% Line 6206
		    <{CompRelInf,NewDef}> when 'true' ->
			let <TCItmp> =
			    %% Line 6207
			    call 'lists':'subtract'
				(TCI, [{'objfun','anyset'}])
			in  let <_rec635> =
				%% Line 6208
				[{'objfun','anyset'}|TCItmp]
			    in  let <_cor21> =
				    %% Line 6208
				    call 'erlang':'setelement'
					(5, C, _rec635)
				in  let <_cor23> =
					%% Line 6208
					call 'erlang':'setelement'
					    (3, _cor21, NewDef)
				    in  %% Line 6208
					{CompRelInf,_cor23}
		    ( <_cor24> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor24})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor27,_cor26,_cor25> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor27,_cor26,_cor25})
		  -| [{'function_name',{'componentrelation1',3}}] )
	    -| ['compiler_generated'] )
	end
'innertype_comprel'/3 =
    %% Line 6211
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,{'SEQUENCE OF',Type},Path> when 'true' ->
	      %% Line 6212
	      case apply 'innertype_comprel1'/3
		       (S, Type, Path) of
		%% Line 6213
		<'nofunobj'> when 'true' ->
		    %% Line 6214
		    'nofunobj'
		%% Line 6215
		<{CompRelInf,NewType}> when 'true' ->
		    %% Line 6216
		    {CompRelInf,{'SEQUENCE OF',NewType}}
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor3})
		  -| ['compiler_generated'] )
	      end
	  %% Line 6218
	  <S,{'SET OF',Type},Path> when 'true' ->
	      %% Line 6219
	      case apply 'innertype_comprel1'/3
		       (S, Type, Path) of
		%% Line 6220
		<'nofunobj'> when 'true' ->
		    %% Line 6221
		    'nofunobj'
		%% Line 6222
		<{CompRelInf,NewType}> when 'true' ->
		    %% Line 6223
		    {CompRelInf,{'SET OF',NewType}}
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor4})
		  -| ['compiler_generated'] )
	      end
	  %% Line 6225
	  <S,{'CHOICE',CTypeList},Path> when 'true' ->
	      %% Line 6226
	      case apply 'componentlist_comprel'/5
		       (S, CTypeList, [], Path, []) of
		%% Line 6227
		<'nofunobj'> when 'true' ->
		    %% Line 6228
		    'nofunobj'
		%% Line 6229
		<{CompRelInf,NewCs}> when 'true' ->
		    %% Line 6230
		    {CompRelInf,{'CHOICE',NewCs}}
		( <_cor5> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor5})
		  -| ['compiler_generated'] )
	      end
	  %% Line 6232
	  <S,Seq = {'SEQUENCE',_cor17,_cor18,_cor19,Cs},Path> when 'true' ->
	      %% Line 6233
	      case apply 'componentlist_comprel'/5
		       (S, Cs, [], Path, []) of
		%% Line 6234
		<'nofunobj'> when 'true' ->
		    %% Line 6235
		    'nofunobj'
		%% Line 6236
		<{CompRelInf,NewCs}> when 'true' ->
		    let <_cor8> =
			%% Line 6237
			call 'erlang':'setelement'
			    (5, Seq, NewCs)
		    in  %% Line 6237
			{CompRelInf,_cor8}
		( <_cor9> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor9})
		  -| ['compiler_generated'] )
	      end
	  %% Line 6239
	  <S,Set = {'SET',_cor25,_cor26,_cor27,Cs},Path> when 'true' ->
	      %% Line 6240
	      case apply 'componentlist_comprel'/5
		       (S, Cs, [], Path, []) of
		%% Line 6241
		<'nofunobj'> when 'true' ->
		    %% Line 6242
		    'nofunobj'
		%% Line 6243
		<{CompRelInf,NewCs}> when 'true' ->
		    let <_cor12> =
			%% Line 6244
			call 'erlang':'setelement'
			    (5, Set, NewCs)
		    in  %% Line 6244
			{CompRelInf,_cor12}
		( <_cor13> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor13})
		  -| ['compiler_generated'] )
	      end
	  %% Line 6246
	  <_cor33,_cor34,_cor35> when 'true' ->
	      %% Line 6247
	      'nofunobj'
	end
'componentlist_comprel'/5 =
    %% Line 6249
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <S,[C = {'ComponentType',_cor19,Name,Type,_cor20,_cor21,_cor22}|Cs],%% Line 6250
									      Acc,%% Line 6250
										  Path,%% Line 6250
										       NewCL> when 'true' ->
	      let <_cor6> =
		  catch
		      let <_cor5> =
			  %% Line 6251
			  call 'erlang':'++'
			      (Path, [Name|[]])
		      in  %% Line 6251
			  apply 'componentrelation1'/3
			      (S, Type, _cor5)
	      in  %% Line 6251
		  case _cor6 of
		    %% Line 6252
		    <{'EXIT',_cor23}> when 'true' ->
			%% Line 6253
			apply 'componentlist_comprel'/5
			    (S, Cs, Acc, Path, [C|NewCL])
		    %% Line 6254
		    <'nofunobj'> when 'true' ->
			%% Line 6255
			apply 'componentlist_comprel'/5
			    (S, Cs, Acc, Path, [C|NewCL])
		    %% Line 6256
		    <{CRelInf,NewType}> when 'true' ->
			let <_cor10> =
			    %% Line 6257
			    call 'erlang':'++'
				(CRelInf, Acc)
			in  let <_cor9> =
				%% Line 6258
				call 'erlang':'setelement'
				    (4, C, NewType)
			    in  %% Line 6257
				apply 'componentlist_comprel'/5
				    (S, Cs, _cor10, Path, %% Line 6258
							  [_cor9|NewCL])
		    ( <_cor11> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor11})
		      -| ['compiler_generated'] )
		  end
	  %% Line 6260
	  <_cor31,[],Acc,_cor32,NewCL> when 'true' ->
	      %% Line 6261
	      case Acc of
		%% Line 6262
		<[]> when 'true' ->
		    %% Line 6263
		    'nofunobj'
		%% Line 6264
		<_cor33> when 'true' ->
		    let <_cor12> =
			%% Line 6265
			call 'lists':'reverse'
			    (NewCL)
		    in  %% Line 6265
			{Acc,_cor12}
	      end
	  ( <_cor18,_cor17,_cor16,_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor18,_cor17,_cor16,_cor15,_cor14})
		  -| [{'function_name',{'componentlist_comprel',5}}] )
	    -| ['compiler_generated'] )
	end
'innertype_comprel1'/3 =
    %% Line 6268
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,T = {'type',_cor27,Def,Cons,TCI,_cor28},Path> when 'true' ->
	      let <_cor10> =
		  %% Line 6272
		  case apply 'constraint_member'/2
			   ('componentrelation', Cons) of
		    %% Line 6273
		    <{'true',{_cor29,{_cor30,_cor31,ObjectSet},AtList}}> when 'true' ->
			%% Line 6277
			case AtList of
			  <[{_cor32,AL = [{'Externalvaluereference',_cor33,_cor34,_X_Attr}|_X_R1]}|_X_R2]> when 'true' ->
			      let <ClassDef> =
				  %% Line 6279
				  apply 'get_ObjectClassFieldType_classdef'/2
				      (S, Def)
			      in  let <_cor7> =
				      %% Line 6281
				      ( fun (_cor5) ->
					    case _cor5 of
					      <{'Externalvaluereference',_cor35,_cor36,V}> when 'true' ->
						  V
					      ( <_cor6> when 'true' ->
						    ( primop 'match_fail'
							  ({'function_clause',_cor6})
						      -| [{'function_name',{'-innertype_comprel1/3-fun-0-',1}}] )
						-| ['compiler_generated'] )
					    end
					-| [{'id',{0,0,'-innertype_comprel1/3-fun-0-'}}] )
				  in  let <AtPath> =
					  %% Line 6281
					  call 'lists':'map'
					      (_cor7, %% Line 6282
						      AL)
				      in  %% Line 6283
					  [{ObjectSet,AtPath,ClassDef,Path}|[]]
			  ( <_cor3> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor3})
			    -| ['compiler_generated'] )
			end
		    %% Line 6284
		    <_cor37> when 'true' ->
			%% Line 6285
			apply 'innertype_comprel'/3
			    (S, Def, Path)
		  end
	      in  %% Line 6287
		  case _cor10 of
		    %% Line 6288
		    <'nofunobj'> when 'true' ->
			'nofunobj'
		    %% Line 6289
		    <L = [{ObjSet,_cor38,_cor39,_cor40}|[]]> when 'true' ->
			let <TCItmp> =
			    %% Line 6290
			    call 'lists':'subtract'
				(TCI, [{'objfun',ObjSet}|[]])
			in  let <_rec640> =
				%% Line 6291
				[{'objfun',ObjSet}|TCItmp]
			    in  let <_cor16> =
				    %% Line 6291
				    call 'erlang':'setelement'
					(5, T, _rec640)
				in  %% Line 6291
				    {L,_cor16}
		    %% Line 6292
		    <{CRelInf,NewDef}> when 'true' ->
			let <TCItmp> =
			    %% Line 6293
			    call 'lists':'subtract'
				(TCI, [{'objfun','anyset'}])
			in  let <_rec642> =
				%% Line 6294
				[{'objfun','anyset'}|TCItmp]
			    in  let <_cor20> =
				    %% Line 6294
				    call 'erlang':'setelement'
					(5, T, _rec642)
				in  let <_cor22> =
					%% Line 6294
					call 'erlang':'setelement'
					    (3, _cor20, NewDef)
				    in  %% Line 6294
					{CRelInf,_cor22}
		    ( <_cor23> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor23})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor26,_cor25,_cor24> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor26,_cor25,_cor24})
		  -| [{'function_name',{'innertype_comprel1',3}}] )
	    -| ['compiler_generated'] )
	end
'leading_attr_index'/5 =
    %% Line 6303
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <S,Cs,[H = {_cor19,AttrP,_cor20,_cor21}|T],AbsP,Acc> when 'true' ->
	      let <_cor11> =
		  %% Line 6305
		  case call 'lists':'prefix'
			   (AbsP, AttrP) of
		    %% Line 6310
		    <'true'> when 'true' ->
			let <RelativAttrP> =
			    %% Line 6311
			    call 'lists':'subtract'
				(AttrP, AbsP)
			in  let <_cor7> =
				%% Line 6316
				call 'erlang':'hd'
				    (RelativAttrP)
			    in  let <_cor6> =
				    %% Line 6316
				    call 'erlang':'tl'
					(RelativAttrP)
				in  %% Line 6316
				    {_cor7,_cor6}
		    %% Line 6317
		    <'false'> when 'true' ->
			let <_cor9> =
			    %% Line 6318
			    call 'erlang':'hd'
				(AttrP)
			in  let <_cor8> =
				%% Line 6318
				call 'erlang':'tl'
				    (AttrP)
			    in  %% Line 6318
				{_cor9,_cor8}
		    ( <_cor10> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor10})
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 6320
		  case apply 'leading_attr_index1'/5
			   (S, Cs, H, _cor11, 1) of
		    %% Line 6321
		    <0> when 'true' ->
			%% Line 6322
			apply 'leading_attr_index'/5
			    (S, Cs, T, AbsP, Acc)
		    %% Line 6323
		    <Res> when 'true' ->
			%% Line 6324
			apply 'leading_attr_index'/5
			    (S, Cs, T, AbsP, [Res|Acc])
		  end
	  %% Line 6326
	  <_cor22,_X_Cs,[],_cor23,Acc> when 'true' ->
	      %% Line 6327
	      call 'lists':'reverse'
		  (Acc)
	  ( <_cor18,_cor17,_cor16,_cor15,_cor14> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor18,_cor17,_cor16,_cor15,_cor14})
		  -| [{'function_name',{'leading_attr_index',5}}] )
	    -| ['compiler_generated'] )
	end
'leading_attr_index1'/5 =
    %% Line 6329
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <_cor15,[],_cor16,_cor17,_cor18> when 'true' ->
	      %% Line 6330
	      0
	  %% Line 6331
	  <S,[C|Cs],Arg = {ObjectSet,_cor19,CDef,P},AttrInfo = %% Line 6332
							       {Attr,SubAttr},%% Line 6332
									      N> when 'true' ->
	      %% Line 6333
	      ( case C of
		  ( <( {'ComponentType',_cor20,_rec644,_cor21,_cor22,_cor23,_cor24}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec644 of
			  %% Line 6334
			  <_cor26>
			      when call 'erlang':'=:='
				    (_rec644,
				     Attr) ->
			      let <ValueMatch> =
				  %% Line 6335
				  apply 'value_match'/4
				      (S, C, Attr, SubAttr)
			      in  %% Line 6336
				  {ObjectSet,Attr,N,CDef,P,ValueMatch}
			  %% Line 6337
			  <_cor27> when 'true' ->
			      let <_cor8> =
				  %% Line 6338
				  call 'erlang':'+'
				      (N, 1)
			      in  %% Line 6338
				  apply 'leading_attr_index1'/5
				      (S, Cs, Arg, AttrInfo, _cor8)
			end
		    -| ['compiler_generated'] )
		  ( <_cor25> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','ComponentType'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor14,_cor13,_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14,_cor13,_cor12,_cor11,_cor10})
		  -| [{'function_name',{'leading_attr_index1',5}}] )
	    -| ['compiler_generated'] )
	end
'value_match'/4 =
    %% Line 6344
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 6345
	apply 'value_match'/5
	    (_cor3, _cor2, _cor1, _cor0, [])
'value_match'/5 =
    %% Line 6346
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <_X_S,{'ComponentType',_cor20,_cor21,_cor22,_cor23,_cor24,_cor25},_X_Name,[],Acc> when 'true' ->
	      %% Line 6347
	      Acc
	  %% Line 6348
	  <S,{'ComponentType',_cor26,_cor27,Type,_cor28,_cor29,_cor30},Name,[At|Ats],Acc> when 'true' ->
	      %% Line 6349
	      ( case Type of
		  ( <( {'type',_cor31,_rec645,_cor32,_cor33,_cor34}
		       -| ['compiler_generated'] )> when 'true' ->
			let <InnerType> =
			    call 'asn1ct_gen':'get_inner'
				(_rec645)
			in  let <_cor11> =
				%% Line 6351
				case apply 'get_atlist_components'/1
					 (_rec645) of
				  %% Line 6352
				  <[]> when 'true' ->
				      apply 'error'/1
					  ({'type',{'asn1',[101|[108|[101|[109|[101|[110|[116|[32|[105|[110|[32|[97|[116|[32|[108|[105|[115|[116|[32|[109|[117|[115|[116|[32|[98|[101|[32|[97|[32|[83|[69|[81|[85|[69|[78|[67|[69|[44|[32|[83|[69|[84|[32|[111|[114|[32|[67|[72|[79|[73|[67|[69|[46]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],%% Line 6353
																																											 Name},%% Line 6353
																																											       S})
				  %% Line 6354
				  <Comps> when 'true' ->
				      Comps
				end
			    in  %% Line 6356
				case apply 'component_value_index'/4
					 (S, InnerType, At, _cor11) of
				  <{Index,ValueIndex}> when 'true' ->
				      let <_cor14> =
					  %% Line 6357
					  call 'lists':'nth'
					      (Index, _cor11)
				      in  %% Line 6357
					  apply 'value_match'/5
					      (S, _cor14, At, Ats, [ValueIndex|Acc])
				  ( <_cor13> when 'true' ->
					primop 'match_fail'
					    ({'badmatch',_cor13})
				    -| ['compiler_generated'] )
				end
		    -| ['compiler_generated'] )
		  ( <_cor35> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','type'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  ( <_cor19,_cor18,_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor19,_cor18,_cor17,_cor16,_cor15})
		  -| [{'function_name',{'value_match',5}}] )
	    -| ['compiler_generated'] )
	end
'component_value_index'/4 =
    %% Line 6359
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <S,'CHOICE',At,Components> when 'true' ->
	      let <_cor4> =
		  %% Line 6360
		  apply 'component_index'/3
		      (S, At, Components)
	      in  %% Line 6360
		  {_cor4,2}
	  %% Line 6361
	  <S,_cor11,At,Components> when 'true' ->
	      let <Index> =
		  %% Line 6363
		  apply 'component_index'/3
		      (S, At, Components)
	      in  let <_cor6> =
		      %% Line 6364
		      call 'erlang':'+'
			  (Index, 1)
		  in  %% Line 6364
		      {Index,{_cor6,At}}
	end
'component_index'/3 =
    %% Line 6366
    fun (_cor2,_cor1,_cor0) ->
	%% Line 6367
	apply 'component_index1'/4
	    (_cor2, _cor1, _cor0, 1)
'component_index1'/4 =
    %% Line 6368
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <_X_S,Name,[{'ComponentType',_cor9,_cor10,_cor11,_cor12,_cor13,_cor14}|_X_Cs],N>
	      when call 'erlang':'=:='
		    (_cor10,
		     Name) ->
	      %% Line 6369
	      N
	  %% Line 6370
	  <S,Name,[_X_C|Cs],N> when 'true' ->
	      let <_cor4> =
		  %% Line 6371
		  call 'erlang':'+'
		      (N, 1)
	      in  %% Line 6371
		  apply 'component_index1'/4
		      (S, Name, Cs, _cor4)
	  %% Line 6372
	  <S,Name,[],_cor15> when 'true' ->
	      %% Line 6373
	      apply 'error'/1
		  ({'type',{'asn1',[99|[111|[109|[112|[111|[110|[101|[110|[116|[32|[111|[102|[32|[97|[116|[45|[108|[105|[115|[116|[32|[119|[97|[115|[32|[110|[111|[116|[32|[102|[111|[117|[110|[100|[32|[105|[110|[32|[115|[117|[98|[115|[116|[114|[117|[99|[116|[117|[114|[101]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],%% Line 6374
																																								  Name},%% Line 6374
																																									S})
	  ( <_cor8,_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6,_cor5})
		  -| [{'function_name',{'component_index1',4}}] )
	    -| ['compiler_generated'] )
	end
'get_unique_fieldname'/2 =
    %% Line 6376
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_S,ClassDef = {'classdef',_cor10,_cor11,_cor12,_cor13}> when ( 'true'
									    -| ['compiler_generated'] ) ->
	      %% Line 6378
	      ( case _cor13 of
		  ( <( {'objectclass',_rec647,_cor18}
		       -| ['compiler_generated'] )> when 'true' ->
			%% Line 6379
			apply 'get_unique_fieldname1'/2
			    (_rec647, [])
		    -| ['compiler_generated'] )
		  ( <_cor19> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','objectclass'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 6380
	  <S,{'typedef',_cor20,_cor21,_cor22,{'type',_cor23,ClassRef,_cor24,_cor25,_cor26}}> when 'true' ->
	      %% Line 6383
	      case apply 'get_referenced_type'/2
		       (S, ClassRef) of
		<{_X_M,ClassDef}> when 'true' ->
		    %% Line 6384
		    apply 'get_unique_fieldname'/2
			(S, ClassDef)
		( <_cor7> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor7})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8})
		  -| [{'function_name',{'get_unique_fieldname',2}}] )
	    -| ['compiler_generated'] )
	end
'get_unique_fieldname1'/2 =
    %% Line 6386
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[],[]> when 'true' ->
	      %% Line 6387
	      call 'erlang':'throw'
		  ({'error','__undefined_',[]})
	  %% Line 6388
	  <[],[Name|[]]> when 'true' ->
	      %% Line 6389
	      Name
	  %% Line 6390
	  <[],Acc> when 'true' ->
	      %% Line 6391
	      call 'erlang':'throw'
		  ({'asn1','only one UNIQUE field is allowed in CLASS',Acc})
	  %% Line 6392
	  <[{'fixedtypevaluefield',Name,_cor4,'UNIQUE',Opt}|Rest],Acc> when 'true' ->
	      %% Line 6393
	      apply 'get_unique_fieldname1'/2
		  (Rest, [{Name,Opt}|Acc])
	  %% Line 6394
	  <[_X_H|T],Acc> when 'true' ->
	      %% Line 6395
	      apply 'get_unique_fieldname1'/2
		  (T, Acc)
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'get_unique_fieldname1',2}}] )
	    -| ['compiler_generated'] )
	end
'get_tableconstraint_info'/3 =
    %% Line 6397
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,Type,{CheckedTs,EComps,CheckedTs2}> when 'true' ->
	      let <_cor5> =
		  %% Line 6398
		  apply 'get_tableconstraint_info'/4
		      (S, Type, CheckedTs, [])
	      in  let <_cor4> =
		      %% Line 6399
		      apply 'get_tableconstraint_info'/4
			  (S, Type, EComps, [])
		  in  let <_cor3> =
			  %% Line 6400
			  apply 'get_tableconstraint_info'/4
			      (S, Type, CheckedTs2, [])
		      in  %% Line 6398
			  {_cor5,_cor4,_cor3}
	  %% Line 6401
	  <S,Type,{CheckedTs,EComps}> when 'true' ->
	      let <_cor7> =
		  %% Line 6402
		  apply 'get_tableconstraint_info'/4
		      (S, Type, CheckedTs, [])
	      in  let <_cor6> =
		      %% Line 6403
		      apply 'get_tableconstraint_info'/4
			  (S, Type, EComps, [])
		  in  %% Line 6402
		      {_cor7,_cor6}
	  %% Line 6404
	  <S,Type,CheckedTs> when 'true' ->
	      %% Line 6405
	      apply 'get_tableconstraint_info'/4
		  (S, Type, CheckedTs, [])
	end
'get_tableconstraint_info'/4 =
    %% Line 6407
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <_X_S,_X_Type,[],Acc> when 'true' ->
	      %% Line 6408
	      call 'lists':'reverse'
		  (Acc)
	  %% Line 6409
	  <S,Type,[C = {'ComponentType',_cor69,_cor70,CheckedTs,_cor71,_cor72,_cor73}|Cs],Acc> when 'true' ->
	      %% Line 6411
	      ( case CheckedTs of
		  ( <( {'type',_cor74,_rec649,_cor75,_cor76,_cor77}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor63> =
			    case _rec649 of
			      %% Line 6413
			      <OCFT = {'ObjectClassFieldType',_cor79,_cor80,_cor81,_cor82}> when 'true' ->
				  let <_cor8> =
				      %% Line 6415
				      call 'erlang':'setelement'
					  (3, OCFT, [])
				  in  let <_cor12> =
					  %% Line 6418
					  call 'erlang':'setelement'
					      (3, CheckedTs, _cor8)
				      in  %% Line 6416
					  call 'erlang':'setelement'
					      (4, C, _cor12)
			      %% Line 6422
			      <{'SEQUENCE OF',SOType = {'type',_cor101,_cor102,_cor103,_cor104,_cor105}}>
				  when ( try
					  let <_cor21> =
					      %% Line 6423
					      call 'erlang':'element'
						  (1, _cor102)
					  in  %% Line 6423
					      call 'erlang':'=:='
						  (_cor21, 'CHOICE')
				      of <Try> ->
					  Try
				      catch <T,R> ->
					  'false'
				      -| ['compiler_generated'] ) ->
				  let <CTypeList> =
				      %% Line 6424
				      call 'erlang':'element'
					  (2, _cor102)
				  in  let <NewInnerCList> =
					  %% Line 6426
					  apply 'get_tableconstraint_info'/3
					      (S, Type, CTypeList)
				      in  let <_rec659> = {%% Line 6430
					       'CHOICE',%% Line 6431
							NewInnerCList}
					  in  let <_cor31> =
						  %% Line 6430
						  call 'erlang':'setelement'
						      (3, SOType, _rec659)
					      in  let <_rec657> = {%% Line 6429
						       'SEQUENCE OF',_cor31}
						  in  let <_cor35> =
							  %% Line 6429
							  call 'erlang':'setelement'
							      (3, CheckedTs, _rec657)
						      in  %% Line 6427
							  call 'erlang':'setelement'
							      (4, C, _cor35)
			      %% Line 6432
			      <{'SET OF',SOType = {'type',_cor130,_cor131,_cor132,_cor133,_cor134}}>
				  when ( try
					  let <_cor44> =
					      %% Line 6433
					      call 'erlang':'element'
						  (1, _cor131)
					  in  %% Line 6433
					      call 'erlang':'=:='
						  (_cor44, 'CHOICE')
				      of <Try> ->
					  Try
				      catch <T,R> ->
					  'false'
				      -| ['compiler_generated'] ) ->
				  let <CTypeList> =
				      %% Line 6434
				      call 'erlang':'element'
					  (2, _cor131)
				  in  let <NewInnerCList> =
					  %% Line 6436
					  apply 'get_tableconstraint_info'/3
					      (S, Type, CTypeList)
				      in  let <_rec666> = {%% Line 6440
					       'CHOICE',%% Line 6441
							NewInnerCList}
					  in  let <_cor54> =
						  %% Line 6440
						  call 'erlang':'setelement'
						      (3, SOType, _rec666)
					      in  let <_rec664> = {%% Line 6439
						       'SET OF',_cor54}
						  in  let <_cor58> =
							  %% Line 6439
							  call 'erlang':'setelement'
							      (3, CheckedTs, _rec664)
						      in  %% Line 6437
							  call 'erlang':'setelement'
							      (4, C, _cor58)
			      %% Line 6442
			      <_cor159> when 'true' ->
				  %% Line 6443
				  C
			    end
			in  %% Line 6445
			    apply 'get_tableconstraint_info'/4
				(S, Type, Cs, [_cor63|Acc])
		    -| ['compiler_generated'] )
		  ( <_cor78> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','type'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 6446
	  <S,Type,[C|Cs],Acc> when 'true' ->
	      %% Line 6447
	      apply 'get_tableconstraint_info'/4
		  (S, Type, Cs, [C|Acc])
	  ( <_cor68,_cor67,_cor66,_cor65> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor68,_cor67,_cor66,_cor65})
		  -| [{'function_name',{'get_tableconstraint_info',4}}] )
	    -| ['compiler_generated'] )
	end
'get_referenced_fieldname'/1 =
    %% Line 6449
    fun (_cor0) ->
	case _cor0 of
	  <[{_cor8,FirstFieldname}|[]]> when 'true' ->
	      %% Line 6450
	      {FirstFieldname,[]}
	  %% Line 6451
	  <[{_cor9,FirstFieldname}|Rest]> when 'true' ->
	      let <_cor3> =
		  %% Line 6452
		  ( fun (_cor1) ->
			call 'erlang':'element'
			    (2, _cor1)
		    -| [{'id',{0,0,'-get_referenced_fieldname/1-fun-0-'}}] )
	      in  let <_cor4> =
		      %% Line 6452
		      call 'lists':'map'
			  (_cor3, Rest)
		  in  %% Line 6452
		      {FirstFieldname,_cor4}
	  %% Line 6453
	  <Def = {FieldName,RestFieldName}>
	      when let <_cor5> =
		    call 'erlang':'is_atom'
			(FieldName)
		in  let <_cor6> =
			call 'erlang':'is_list'
			    (RestFieldName)
		    in  call 'erlang':'and'
			    (_cor5, _cor6) ->
	      %% Line 6454
	      Def
	  %% Line 6455
	  <Def> when 'true' ->
	      %% Line 6456
	      {'no_type',Def}
	end
'get_ObjectClassFieldType'/3 =
    %% Line 6460
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,ERef = {'Externaltypereference',_cor20,_cor21,_cor22},PrimFieldNameList> when %% Line 6461
											   ( 'true'
											     -| ['compiler_generated'] ) ->
	      %% Line 6462
	      case apply 'get_referenced_type'/2
		       (S, ERef) of
		<{MName,Type}> when 'true' ->
		    %% Line 6463
		    case S of
		      <{'state',_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38}> when 'true' ->
			  let <_cor8> =
			      %% Line 6464
			      call 'erlang':'setelement'
				  (5, S, _cor22)
			  in  let <_cor10> =
				  call 'erlang':'setelement'
				      (4, _cor8, Type)
			      in  let <NewS> =
				      apply 'update_state'/2
					  (_cor10, %% Line 6464
						   MName)
				  in  %% Line 6466
				      ( case apply 'check_class'/2
						 (NewS, Type) of
					  ( <( {'objectclass',_rec671,_cor40}
					       -| ['compiler_generated'] )> when 'true' ->
						%% Line 6467
						apply 'get_ObjectClassFieldType'/3
						    (S, _rec671, PrimFieldNameList)
					    -| ['compiler_generated'] )
					  ( <_cor41> when 'true' ->
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'error'
										       -| ['compiler_generated'] )
						      (( {'badrecord','objectclass'}
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
					-| ['compiler_generated'] )
		      ( <_cor39> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  %% Line 6468
	  <S,Fields,L = [_X_PrimFieldName1|_X_Rest]> when 'true' ->
	      do  %% Line 6469
		  apply 'check_PrimitiveFieldNames'/3
		      (S, Fields, L)
		  %% Line 6470
		  apply 'get_OCFType'/3
		      (S, Fields, L)
	  %% Line 6471
	  <S,ERef,{FieldName,Rest}> when 'true' ->
	      let <_cor16> =
		  %% Line 6472
		  call 'erlang':'++'
		      (Rest, [FieldName|[]])
	      in  %% Line 6472
		  apply 'get_ObjectClassFieldType'/3
		      (S, ERef, _cor16)
	  ( <_cor19,_cor18,_cor17> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor19,_cor18,_cor17})
		  -| [{'function_name',{'get_ObjectClassFieldType',3}}] )
	    -| ['compiler_generated'] )
	end
'check_PrimitiveFieldNames'/3 =
    %% Line 6474
    fun (_cor2,_cor1,_cor0) ->
	%% Line 6475
	'ok'
'get_ObjectClassFieldType_classdef'/2 =
    %% Line 6482
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,{'ObjectClassFieldType',Name,[],_cor5,_cor6}> when 'true' ->
	      %% Line 6483
	      case apply 'get_referenced_type'/2
		       (S, Name) of
		<{_cor7,{'classdef',_cor8,_cor9,_cor10,TS}}> when 'true' ->
		    %% Line 6484
		    TS
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 6485
	  <_cor11,{'ObjectClassFieldType',_cor12,Cl,_cor13,_cor14}> when 'true' ->
	      %% Line 6486
	      Cl
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'get_ObjectClassFieldType_classdef',2}}] )
	    -| ['compiler_generated'] )
	end
'get_OCFType'/3 =
    %% Line 6488
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,Fields,FieldnameList = [{_X_FieldType,_X_PrimFieldName}|_cor37]> when 'true' ->
	      let <_cor7> =
		  %% Line 6489
		  ( letrec
			'lc$^0'/1 =
			    fun (_cor5) ->
				case _cor5 of
				  <[{_cor38,PFN}|_cor4]> when 'true' ->
				      let <_cor6> =
					  apply 'lc$^0'/1
					      (_cor4)
				      in  ( [PFN|_cor6]
					    -| ['compiler_generated'] )
				  ( <[_cor3|_cor4]> when 'true' ->
					apply 'lc$^0'/1
					    (_cor4)
				    -| ['compiler_generated'] )
				  <[]> when 'true' ->
				      []
				  ( <_cor5> when 'true' ->
					( primop 'match_fail'
					      ({'function_clause',_cor5})
					  -| [{'function_name',{'lc$^0',1}}] )
				    -| ['compiler_generated'] )
				end
		    in  apply 'lc$^0'/1
			    (FieldnameList)
		    -| ['list_comprehension'] )
	      in  %% Line 6489
		  apply 'get_OCFType'/3
		      (S, Fields, _cor7)
	  %% Line 6490
	  <S,Fields,[PrimFieldName|Rest]> when 'true' ->
	      %% Line 6491
	      case call 'lists':'keysearch'
		       (PrimFieldName, 2, Fields) of
		%% Line 6492
		<{'value',{'fixedtypevaluefield',_cor39,Type,_X_Unique,_X_OptSpec}}> when 'true' ->
		    %% Line 6493
		    {'fixedtypevaluefield',PrimFieldName,Type}
		%% Line 6494
		<{'value',{'objectfield',_cor40,ClassRef,_X_Unique,_X_OptSpec}}> when 'true' ->
		    %% Line 6495
		    case apply 'get_referenced_type'/2
			     (S, ClassRef) of
		      <{MName,ClassDef}> when 'true' ->
			  let <_rec672> =
			      %% Line 6497
			      apply 'get_datastr_name'/1
				  (ClassDef)
			  in  %% Line 6496
			      case S of
				<{'state',_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53}> when 'true' ->
				    let <_cor11> =
					%% Line 6497
					call 'erlang':'setelement'
					    (5, S, _rec672)
				    in  let <_cor13> =
					    call 'erlang':'setelement'
						(4, _cor11, ClassDef)
					in  let <NewS> =
						apply 'update_state'/2
						    (_cor13, %% Line 6498
							     MName)
					    in  %% Line 6500
						( case apply 'check_class'/2
							   (NewS, ClassDef) of
						    ( <( {'objectclass',_rec674,_cor55}
							 -| ['compiler_generated'] )> when 'true' ->
							  apply 'get_OCFType'/3
							      (S, _rec674, Rest)
						      -| ['compiler_generated'] )
						    ( <_cor56> when 'true' ->
							  ( call ( 'erlang'
								   -| ['compiler_generated'] ):( 'error'
												 -| ['compiler_generated'] )
								(( {'badrecord','objectclass'}
								   -| ['compiler_generated'] ))
							    -| ['compiler_generated'] )
						      -| ['compiler_generated'] )
						  end
						  -| ['compiler_generated'] )
				( <_cor54> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','state'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
		      ( <_cor8> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor8})
			-| ['compiler_generated'] )
		    end
		%% Line 6501
		<{'value',{'objectsetfield',_cor57,Type,_X_OptSpec}}> when 'true' ->
		    %% Line 6502
		    ( case Type of
			( <( {'type',_cor58,_rec675,_cor59,_cor60,_cor61}
			     -| ['compiler_generated'] )> when 'true' ->
			      case apply 'get_referenced_type'/2
				       (S, _rec675) of
				<{MName,ClassDef}> when 'true' ->
				    let <_rec676> =
					%% Line 6504
					apply 'get_datastr_name'/1
					    (ClassDef)
				    in  %% Line 6503
					case S of
					  <{'state',_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75}> when 'true' ->
					      let <_cor23> =
						  %% Line 6504
						  call 'erlang':'setelement'
						      (5, S, _rec676)
					      in  let <_cor25> =
						      call 'erlang':'setelement'
							  (4, _cor23, ClassDef)
						  in  let <NewS> =
							  apply 'update_state'/2
							      (_cor25, %% Line 6505
								       MName)
						      in  %% Line 6507
							  ( case apply 'check_class'/2
								     (NewS, ClassDef) of
							      ( <( {'objectclass',_rec678,_cor77}
								   -| ['compiler_generated'] )> when 'true' ->
								    apply 'get_OCFType'/3
									(S, _rec678, Rest)
								-| ['compiler_generated'] )
							      ( <_cor78> when 'true' ->
								    ( call ( 'erlang'
									     -| ['compiler_generated'] ):( 'error'
													   -| ['compiler_generated'] )
									  (( {'badrecord','objectclass'}
									     -| ['compiler_generated'] ))
								      -| ['compiler_generated'] )
								-| ['compiler_generated'] )
							    end
							    -| ['compiler_generated'] )
					  ( <_cor76> when 'true' ->
						( call ( 'erlang'
							 -| ['compiler_generated'] ):( 'error'
										       -| ['compiler_generated'] )
						      (( {'badrecord','state'}
							 -| ['compiler_generated'] ))
						  -| ['compiler_generated'] )
					    -| ['compiler_generated'] )
					end
				( <_cor20> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor20})
				  -| ['compiler_generated'] )
			      end
			  -| ['compiler_generated'] )
			( <_cor62> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','type'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		%% Line 6509
		<{'value',Other}> when 'true' ->
		    let <_cor30> =
			%% Line 6510
			call 'erlang':'element'
			    (1, Other)
		    in  %% Line 6510
			{_cor30,PrimFieldName}
		%% Line 6511
		<_cor79> when 'true' ->
		    let <_cor31> =
			%% Line 6512
			call 'io_lib':'format'
			    ([117|[110|[100|[101|[102|[105|[110|[101|[100|[32|[70|[105|[101|[108|[100|[78|[97|[109|[101|[32|[105|[110|[32|[79|[98|[106|[101|[99|[116|[67|[108|[97|[115|[115|[70|[105|[101|[108|[100|[84|[121|[112|[101|[58|[32|[126|[119]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [PrimFieldName|[]])
		    in  let <_cor32> =
			    %% Line 6512
			    call 'lists':'flatten'
				(_cor31)
			in  %% Line 6512
			    call 'erlang':'throw'
				({'error',_cor32})
	      end
	  ( <_cor36,_cor35,_cor34> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor36,_cor35,_cor34})
		  -| [{'function_name',{'get_OCFType',3}}] )
	    -| ['compiler_generated'] )
	end
'get_taglist'/2 =
    %% Line 6515
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,Ext = {'Externaltypereference',_cor26,_cor27,_cor28}> when ( 'true'
									  -| ['compiler_generated'] ) ->
	      %% Line 6516
	      case apply 'get_referenced_type'/2
		       (S, Ext) of
		<{_cor29,T}> when 'true' ->
		    %% Line 6517
		    ( case T of
			( <( {'typedef',_cor30,_cor31,_cor32,_rec679}
			     -| ['compiler_generated'] )> when 'true' ->
			      apply 'get_taglist'/2
				  (S, _rec679)
			  -| ['compiler_generated'] )
			( <_cor33> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','typedef'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor2})
		  -| ['compiler_generated'] )
	      end
	  %% Line 6518
	  <S,Type = {'type',_cor34,_cor35,_cor36,_cor37,_cor38}> when ( 'true'
									-| ['compiler_generated'] ) ->
	      %% Line 6519
	      case _cor34 of
		%% Line 6520
		<[]> when 'true' ->
		    %% Line 6521
		    apply 'get_taglist'/2
			(S, _cor35)
		%% Line 6522
		<[Tag|_cor49]> when 'true' ->
		    let <_cor9> =
			%% Line 6523
			call 'asn1ct_gen':'def_to_tag'
			    (Tag)
		    in  %% Line 6523
			[_cor9|[]]
		( <_cor10> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor10})
		  -| ['compiler_generated'] )
	      end
	  %% Line 6525
	  <S,{'CHOICE',{Rc,Ec}}> when 'true' ->
	      let <_cor11> =
		  %% Line 6526
		  call 'erlang':'++'
		      (Rc, Ec)
	      in  %% Line 6526
		  apply 'get_taglist1'/2
		      (S, _cor11)
	  %% Line 6527
	  <S,{'CHOICE',{R1,E,R2}}> when 'true' ->
	      let <_cor12> =
		  %% Line 6528
		  call 'erlang':'++'
		      (E, R2)
	      in  let <_cor13> =
		      %% Line 6528
		      call 'erlang':'++'
			  (R1, _cor12)
		  in  %% Line 6528
		      apply 'get_taglist1'/2
			  (S, _cor13)
	  %% Line 6529
	  <S,{'CHOICE',Components}> when 'true' ->
	      %% Line 6530
	      apply 'get_taglist1'/2
		  (S, Components)
	  %% Line 6532
	  <_X_S,{'ObjectClassFieldType',_cor50,_cor51,_cor52,{'typefield',_cor53}}> when 'true' ->
	      %% Line 6533
	      []
	  %% Line 6534
	  <S,{'ObjectClassFieldType',_cor54,_cor55,_cor56,{'fixedtypevaluefield',_cor57,Type}}> when 'true' ->
	      %% Line 6535
	      apply 'get_taglist'/2
		  (S, Type)
	  %% Line 6536
	  <S,{ERef = {'Externaltypereference',_cor58,_cor59,_cor60},FieldNameList}>
	      when %% Line 6537
		call 'erlang':'is_list'
		    (FieldNameList) ->
	      %% Line 6538
	      case apply 'get_ObjectClassFieldType'/3
		       (S, ERef, FieldNameList) of
		%% Line 6539
		<{'fixedtypevaluefield',_cor61,Type}> when 'true' ->
		    apply 'get_taglist'/2
			(S, Type)
		%% Line 6540
		<{TypeFieldName,_cor62}>
		    when call 'erlang':'is_atom'
			  (TypeFieldName) ->
		    []
		( <_cor14> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor14})
		  -| ['compiler_generated'] )
	      end
	  %% Line 6542
	  <S,{ObjCl = {'objectclass',_cor63,_cor64},FieldNameList}>
	      when %% Line 6543
		call 'erlang':'is_list'
		    (FieldNameList) ->
	      %% Line 6544
	      case apply 'get_ObjectClassFieldType'/3
		       (S, _cor63, FieldNameList) of
		%% Line 6545
		<{'fixedtypevaluefield',_cor67,Type}> when 'true' ->
		    apply 'get_taglist'/2
			(S, Type)
		%% Line 6546
		<{TypeFieldName,_cor68}>
		    when call 'erlang':'is_atom'
			  (TypeFieldName) ->
		    []
		( <_cor18> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor18})
		  -| ['compiler_generated'] )
	      end
	  %% Line 6548
	  <S,Def> when 'true' ->
	      %% Line 6549
	      ( case S of
		  ( <( {'state',_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_rec683,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec683 of
			  %% Line 6550
			  <'ber'> when 'true' ->
			      %% Line 6551
			      []
			  %% Line 6552
			  <_cor82> when 'true' ->
			      %% Line 6553
			      case Def of
				%% Line 6554
				<'ASN1_OPEN_TYPE'> when 'true' ->
				    %% Line 6555
				    []
				%% Line 6556
				<_cor83> when 'true' ->
				    let <_cor21> =
					%% Line 6557
					call 'asn1ct_gen':'def_to_tag'
					    (Def)
				    in  %% Line 6557
					[_cor21|[]]
			      end
			end
		    -| ['compiler_generated'] )
		  ( <_cor81> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'get_taglist1'/2 =
    %% Line 6561
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,[{'ComponentType',_cor7,_X_Cname,_cor8,_cor9,TagL,_cor10}|Rest]>
	      when call 'erlang':'is_list'
		    (TagL) ->
	      let <_cor2> =
		  %% Line 6563
		  apply 'get_taglist1'/2
		      (S, Rest)
	      in  %% Line 6563
		  call 'erlang':'++'
		      (TagL, _cor2)
	  %% Line 6564
	  <S,[{'ComponentType',_cor11,_cor12,Ts,_cor13,'undefined',_cor14}|Rest]> when 'true' ->
	      let <_cor4> =
		  %% Line 6565
		  apply 'get_taglist'/2
		      (S, Ts)
	      in  let <_cor3> =
		      %% Line 6565
		      apply 'get_taglist1'/2
			  (S, Rest)
		  in  %% Line 6565
		      call 'erlang':'++'
			  (_cor4, _cor3)
	  %% Line 6566
	  <S,[_X_H|Rest]> when 'true' ->
	      %% Line 6567
	      apply 'get_taglist1'/2
		  (S, Rest)
	  %% Line 6568
	  <_X_S,[]> when 'true' ->
	      %% Line 6569
	      []
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'get_taglist1',2}}] )
	    -| ['compiler_generated'] )
	end
'dbget_ex'/3 =
    %% Line 6617
    fun (_cor2,_cor1,_cor0) ->
	%% Line 6618
	case call 'asn1_db':'dbget'
		 (_cor1, _cor0) of
	  %% Line 6619
	  <'undefined'> when 'true' ->
	      %% Line 6621
	      call 'erlang':'throw'
		  ({'error',{'asn1',{'undefined',{_cor1,_cor0}}}})
	  %% Line 6622
	  <T> when 'true' ->
	      T
	end
'merge_tags'/2 =
    %% Line 6625
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <T1,T2>
	      when call 'erlang':'is_list'
		    (T2) ->
	      let <_cor2> =
		  %% Line 6626
		  call 'erlang':'++'
		      (T1, T2)
	      in  %% Line 6626
		  apply 'merge_tags2'/2
		      (_cor2, [])
	  %% Line 6627
	  <T1,T2> when 'true' ->
	      let <_cor3> =
		  %% Line 6628
		  call 'erlang':'++'
		      (T1, [T2|[]])
	      in  %% Line 6628
		  apply 'merge_tags2'/2
		      (_cor3, [])
	end
'merge_tags2'/2 =
    %% Line 6630
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[T1 = {'tag',_cor24,_cor25,'IMPLICIT',_cor26}|[T2|Rest]],Acc> when 'true' ->
	      %% Line 6631
	      ( case T2 of
		  ( <( {'tag',_cor27,_cor28,_rec687,_cor29}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor9> =
			    call 'erlang':'setelement'
				(5, T1, _cor29)
			in  let <_cor11> =
				call 'erlang':'setelement'
				    (4, _cor9, _rec687)
			    in  apply 'merge_tags2'/2
				    ([_cor11|Rest], Acc)
		    -| ['compiler_generated'] )
		  ( <_cor30> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','tag'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 6632
	  <[T1 = {'tag',_cor40,_cor41,{'default','IMPLICIT'},_cor42}|[T2|Rest]],Acc> when 'true' ->
	      %% Line 6633
	      ( case T2 of
		  ( <( {'tag',_cor43,_cor44,_rec692,_cor45}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor19> =
			    call 'erlang':'setelement'
				(5, T1, _cor45)
			in  let <_cor21> =
				call 'erlang':'setelement'
				    (4, _cor19, _rec692)
			    in  apply 'merge_tags2'/2
				    ([_cor21|Rest], Acc)
		    -| ['compiler_generated'] )
		  ( <_cor46> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','tag'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 6634
	  <[H|T],Acc> when 'true' ->
	      %% Line 6635
	      apply 'merge_tags2'/2
		  (T, [H|Acc])
	  %% Line 6636
	  <[],Acc> when 'true' ->
	      %% Line 6637
	      call 'lists':'reverse'
		  (Acc)
	  ( <_cor23,_cor22> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor23,_cor22})
		  -| [{'function_name',{'merge_tags2',2}}] )
	    -| ['compiler_generated'] )
	end
'storeindb'/2 =
    %% Line 6682
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <S,M = {'module',_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32}> when ( 'true'
											    -| ['compiler_generated'] ) ->
	      let <_rec695> =
		  %% Line 6684
		  apply 'findtypes_and_values'/1
		      (_cor32)
	      in  let <_cor8> =
		      %% Line 6684
		      call 'erlang':'setelement'
			  (9, M, _rec695)
		  in  %% Line 6685
		      ( case _cor8 of
			  ( <( {'module',_cor50,_rec697,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56}
			       -| ['compiler_generated'] )> when 'true' ->
				( case S of
				    ( <( {'state',_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_rec698,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69}
					 -| ['compiler_generated'] )> when 'true' ->
					  do  call 'asn1_db':'dbnew'
						  (_rec697, _rec698)
					      do  %% Line 6686
						  call 'asn1_db':'dbput'
						      (_rec697, 'MODULE', _cor8)
						  let <Res> =
						      %% Line 6687
						      apply 'storeindb'/3
							  ({'state','undefined',_rec697,'undefined','undefined','undefined','undefined','undefined',[],'undefined',[],[],'undefined','undefined'}, _cor32, [])
						  in  do  %% Line 6688
							  apply 'include_default_class'/2
							      (S, _rec697)
							  do  %% Line 6689
							      apply 'include_default_type'/1
								  (_rec697)
							      %% Line 6690
							      Res
				      -| ['compiler_generated'] )
				    ( <_cor70> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','state'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <_cor57> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','module'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	  ( <_cor24,_cor23> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor24,_cor23})
		  -| [{'function_name',{'storeindb',2}}] )
	    -| ['compiler_generated'] )
	end
'storeindb'/3 =
    %% Line 6692
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S = {'state',_cor10,Module,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21},[H|T],Errors> when 'true' ->
	      let <Name> =
		  %% Line 6693
		  call 'asn1ct':'get_name_of_def'
		      (H)
	      in  %% Line 6694
		  case call 'asn1_db':'dbget'
			   (Module, Name) of
		    %% Line 6695
		    <'undefined'> when 'true' ->
			do  %% Line 6696
			    call 'asn1_db':'dbput'
				(Module, Name, H)
			    %% Line 6697
			    apply 'storeindb'/3
				(S, T, Errors)
		    %% Line 6698
		    <Prev> when 'true' ->
			let <PrevLine> =
			    %% Line 6699
			    call 'asn1ct':'get_pos_of_def'
				(Prev)
			in  let <Error> =
				%% Line 6700
				apply 'return_asn1_error'/3
				    (S, H, {'already_defined',Name,PrevLine})
			    in  %% Line 6701
				apply 'storeindb'/3
				    (S, T, [Error|Errors])
		  end
	  %% Line 6703
	  <_cor22,[],[]> when 'true' ->
	      %% Line 6704
	      'ok'
	  %% Line 6705
	  <_cor23,[],Errors = [_cor24|_cor25]> when 'true' ->
	      %% Line 6706
	      {'error',Errors}
	  ( <_cor9,_cor8,_cor7> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8,_cor7})
		  -| [{'function_name',{'storeindb',3}}] )
	    -| ['compiler_generated'] )
	end
'findtypes_and_values'/1 =
    %% Line 6709
    fun (_cor0) ->
	%% Line 6710
	apply 'findtypes_and_values'/7
	    (_cor0, [], [], [], [], [], [])
'findtypes_and_values'/7 =
    %% Line 6713
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <[H = {'typedef',_cor54,_cor55,_cor56,_cor57}|T],Tacc,Vacc,Pacc,Cacc,Oacc,OSacc>
	      when %% Line 6714
		( call ( 'erlang'
			 -| ['compiler_generated'] ):( 'is_record'
						       -| ['compiler_generated'] )
		      (_cor57,
		       'Object',
		       4)
		  -| ['compiler_generated'] ) ->
	      %% Line 6715
	      apply 'findtypes_and_values'/7
		  (T, Tacc, Vacc, Pacc, Cacc, [_cor56|Oacc], OSacc)
	  %% Line 6716
	  <[H = {'typedef',_cor62,_cor63,_cor64,_cor65}|T],Tacc,Vacc,Pacc,Cacc,Oacc,OSacc>
	      when %% Line 6717
		( call ( 'erlang'
			 -| ['compiler_generated'] ):( 'is_record'
						       -| ['compiler_generated'] )
		      (_cor65,
		       'ObjectSet',
		       5)
		  -| ['compiler_generated'] ) ->
	      %% Line 6718
	      apply 'findtypes_and_values'/7
		  (T, Tacc, Vacc, Pacc, Cacc, Oacc, [_cor64|OSacc])
	  %% Line 6719
	  <[H = {'typedef',_cor70,_cor71,_cor72,_cor73}|T],Tacc,Vacc,Pacc,Cacc,Oacc,OSacc> when %% Line 6720
												( 'true'
												  -| ['compiler_generated'] ) ->
	      %% Line 6721
	      apply 'findtypes_and_values'/7
		  (T, [_cor72|Tacc], Vacc, Pacc, Cacc, Oacc, OSacc)
	  %% Line 6722
	  <[H = {'valuedef',_cor78,_cor79,_cor80,_cor81,_cor82,_cor83}|T],Tacc,Vacc,Pacc,Cacc,Oacc,OSacc> when %% Line 6723
													       ( 'true'
														 -| ['compiler_generated'] ) ->
	      %% Line 6724
	      apply 'findtypes_and_values'/7
		  (T, Tacc, [_cor80|Vacc], Pacc, Cacc, Oacc, OSacc)
	  %% Line 6725
	  <[H = {'ptypedef',_cor90,_cor91,_cor92,_cor93,_cor94}|T],Tacc,Vacc,Pacc,Cacc,Oacc,OSacc> when %% Line 6726
													( 'true'
													  -| ['compiler_generated'] ) ->
	      %% Line 6727
	      apply 'findtypes_and_values'/7
		  (T, Tacc, Vacc, [_cor92|Pacc], Cacc, Oacc, OSacc)
	  %% Line 6728
	  <[H = {'classdef',_cor100,_cor101,_cor102,_cor103}|T],Tacc,Vacc,Pacc,Cacc,Oacc,OSacc> when %% Line 6729
												     ( 'true'
												       -| ['compiler_generated'] ) ->
	      %% Line 6730
	      apply 'findtypes_and_values'/7
		  (T, Tacc, Vacc, Pacc, [_cor102|Cacc], Oacc, OSacc)
	  %% Line 6731
	  <[H = {'pvaluedef',_cor108,_cor109,_cor110,_cor111,_cor112,_cor113}|T],Tacc,Vacc,Pacc,Cacc,Oacc,OSacc> when %% Line 6732
														      ( 'true'
															-| ['compiler_generated'] ) ->
	      %% Line 6733
	      apply 'findtypes_and_values'/7
		  (T, Tacc, [_cor110|Vacc], Pacc, Cacc, Oacc, OSacc)
	  %% Line 6734
	  <[H = {'pvaluesetdef',_cor120,_cor121,_cor122,_cor123,_cor124,_cor125}|T],Tacc,Vacc,Pacc,Cacc,Oacc,OSacc> when %% Line 6735
															 ( 'true'
															   -| ['compiler_generated'] ) ->
	      %% Line 6736
	      apply 'findtypes_and_values'/7
		  (T, Tacc, [_cor122|Vacc], Pacc, Cacc, Oacc, OSacc)
	  %% Line 6737
	  <[H = {'pobjectdef',_cor132,_cor133,_cor134,_cor135,_cor136,_cor137}|T],Tacc,Vacc,Pacc,Cacc,Oacc,OSacc> when %% Line 6738
														       ( 'true'
															 -| ['compiler_generated'] ) ->
	      %% Line 6739
	      apply 'findtypes_and_values'/7
		  (T, Tacc, Vacc, Pacc, Cacc, [_cor134|Oacc], OSacc)
	  %% Line 6740
	  <[H = {'pobjectsetdef',_cor144,_cor145,_cor146,_cor147,_cor148,_cor149}|T],Tacc,Vacc,Pacc,Cacc,Oacc,OSacc> when %% Line 6741
															  ( 'true'
															    -| ['compiler_generated'] ) ->
	      %% Line 6742
	      apply 'findtypes_and_values'/7
		  (T, Tacc, Vacc, Pacc, Cacc, Oacc, [_cor146|OSacc])
	  %% Line 6743
	  <[],Tacc,Vacc,Pacc,Cacc,Oacc,OSacc> when 'true' ->
	      let <_cor46> =
		  %% Line 6744
		  call 'lists':'reverse'
		      (Tacc)
	      in  let <_cor45> =
		      %% Line 6744
		      call 'lists':'reverse'
			  (Vacc)
		  in  let <_cor44> =
			  %% Line 6744
			  call 'lists':'reverse'
			      (Pacc)
		      in  let <_cor43> =
			      %% Line 6745
			      call 'lists':'reverse'
				  (Cacc)
			  in  let <_cor42> =
				  %% Line 6745
				  call 'lists':'reverse'
				      (Oacc)
			      in  let <_cor41> =
				      %% Line 6745
				      call 'lists':'reverse'
					  (OSacc)
				  in  %% Line 6744
				      {_cor46,_cor45,_cor44,_cor43,_cor42,_cor41}
	  ( <_cor53,_cor52,_cor51,_cor50,_cor49,_cor48,_cor47> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor53,_cor52,_cor51,_cor50,_cor49,_cor48,_cor47})
		  -| [{'function_name',{'findtypes_and_values',7}}] )
	    -| ['compiler_generated'] )
	end
'return_asn1_error'/3 =
    %% Line 6747
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'state',_cor7,Where,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18},Item,Error> when 'true' ->
	      let <Pos> =
		  %% Line 6748
		  call 'asn1ct':'get_pos_of_def'
		      (Item)
	      in  %% Line 6749
		  {'structured_error',{Where,Pos},'asn1ct_check',Error}
	  ( <_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5,_cor4})
		  -| [{'function_name',{'return_asn1_error',3}}] )
	    -| ['compiler_generated'] )
	end
'asn1_error'/3 =
    %% Line 6751
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 6752
	    apply 'return_asn1_error'/3
		(_cor2, _cor1, _cor0)
	in  %% Line 6752
	    call 'erlang':'throw'
		({'error',_cor3})
'format_error'/1 =
    %% Line 6754
    fun (_cor0) ->
	case _cor0 of
	  <{'already_defined',Name,PrevLine}> when 'true' ->
	      %% Line 6755
	      call 'io_lib':'format'
		  ([116|[104|[101|[32|[110|[97|[109|[101|[32|[126|[112|[32|[104|[97|[115|[32|[97|[108|[114|[101|[97|[100|[121|[32|[98|[101|[101|[110|[32|[100|[101|[102|[105|[110|[101|[100|[32|[97|[116|[32|[108|[105|[110|[101|[32|[126|[112]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 6756
																																			       [Name|[PrevLine|[]]])
	  %% Line 6757
	  <{'illegal_instance_of',Class}> when 'true' ->
	      %% Line 6758
	      call 'io_lib':'format'
		  ([117|[115|[105|[110|[103|[32|[73|[78|[83|[84|[65|[78|[67|[69|[32|[79|[70|[32|[111|[110|[32|[99|[108|[97|[115|[115|[32|[39|[126|[115|[39|[32|[105|[115|[32|[105|[108|[108|[101|[103|[97|[108|[44|[32|[98|[101|[99|[97|[117|[115|[101|[32|[73|[78|[83|[84|[65|[78|[67|[69|[32|[79|[70|[32|[109|[97|[121|[32|[111|[110|[108|[121|[32|[98|[101|[32|[117|[115|[101|[100|[32|[111|[110|[32|[116|[104|[101|[32|[99|[108|[97|[115|[115|[32|[84|[89|[80|[69|[45|[73|[68|[69|[78|[84|[70|[73|[69|[82]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 6760
																																																																											   [Class|[]])
	  %% Line 6761
	  <'illegal_octet_string_value'> when 'true' ->
	      %% Line 6762
	      [101|[120|[112|[101|[99|[116|[105|[110|[103|[32|[97|[32|[98|[115|[116|[114|[105|[110|[103|[32|[111|[114|[32|[97|[110|[32|[104|[115|[116|[114|[105|[110|[103|[32|[97|[115|[32|[118|[97|[108|[117|[101|[32|[102|[111|[114|[32|[97|[110|[32|[79|[67|[84|[69|[84|[32|[83|[84|[82|[73|[78|[71]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
	  %% Line 6763
	  <{'invalid_fields',Fields,Obj}> when 'true' ->
	      let <_cor1> =
		  %% Line 6764
		  apply 'format_fields'/1
		      (Fields)
	      in  %% Line 6764
		  call 'io_lib':'format'
		      ([105|[110|[118|[97|[108|[105|[100|[32|[126|[115|[32|[105|[110|[32|[126|[112]]]]]]]]]]]]]]]], [_cor1|[Obj|[]]])
	  %% Line 6765
	  <{'invalid_bit_number',Bit}> when 'true' ->
	      %% Line 6766
	      call 'io_lib':'format'
		  ([116|[104|[101|[32|[98|[105|[116|[32|[110|[117|[109|[98|[101|[114|[32|[39|[126|[112|[39|[32|[105|[115|[32|[105|[110|[118|[97|[108|[105|[100]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Bit|[]])
	  %% Line 6767
	  <{'missing_mandatory_fields',Fields,Obj}> when 'true' ->
	      let <_cor2> =
		  %% Line 6769
		  apply 'format_fields'/1
		      (Fields)
	      in  %% Line 6768
		  call 'io_lib':'format'
		      ([109|[105|[115|[115|[105|[110|[103|[32|[109|[97|[110|[100|[97|[116|[111|[114|[121|[32|[126|[115|[32|[105|[110|[32|[126|[112]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 6769
																					      [_cor2|[Obj|[]]])
	  %% Line 6770
	  <{'namelist_redefinition',Name}> when 'true' ->
	      %% Line 6771
	      call 'io_lib':'format'
		  ([116|[104|[101|[32|[110|[97|[109|[101|[32|[39|[126|[115|[39|[32|[99|[97|[110|[32|[110|[111|[116|[32|[98|[101|[32|[114|[101|[100|[101|[102|[105|[110|[101|[100]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Name|[]])
	  %% Line 6772
	  <{'undefined',Name}> when 'true' ->
	      %% Line 6773
	      call 'io_lib':'format'
		  ([39|[126|[115|[39|[32|[105|[115|[32|[114|[101|[102|[101|[114|[101|[110|[99|[101|[100|[44|[32|[98|[117|[116|[32|[105|[115|[32|[110|[111|[116|[32|[100|[101|[102|[105|[110|[101|[100]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Name|[]])
	  %% Line 6774
	  <{'undefined_import',Ref,Module}> when 'true' ->
	      %% Line 6775
	      call 'io_lib':'format'
		  ([39|[126|[115|[39|[32|[105|[115|[32|[110|[111|[116|[32|[101|[120|[112|[111|[114|[116|[101|[100|[32|[102|[114|[111|[109|[32|[126|[115]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Ref|[Module|[]]])
	  %% Line 6776
	  <{'value_reused',Val}> when 'true' ->
	      %% Line 6777
	      call 'io_lib':'format'
		  ([116|[104|[101|[32|[118|[97|[108|[117|[101|[32|[39|[126|[112|[39|[32|[105|[115|[32|[117|[115|[101|[100|[32|[109|[111|[114|[101|[32|[116|[104|[97|[110|[32|[111|[110|[99|[101]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Val|[]])
	  %% Line 6778
	  <Other> when 'true' ->
	      %% Line 6779
	      call 'io_lib':'format'
		  ([126|[112]], [Other|[]])
	end
'format_fields'/1 =
    %% Line 6781
    fun (_cor0) ->
	case _cor0 of
	  <[F|[]]> when 'true' ->
	      %% Line 6782
	      call 'io_lib':'format'
		  ([102|[105|[101|[108|[100|[32|[38|[126|[115]]]]]]]]], [F|[]])
	  %% Line 6783
	  <[H|T]> when 'true' ->
	      let <_cor1> =
		  %% Line 6784
		  call 'io_lib':'format'
		      ([102|[105|[101|[108|[100|[115|[32|[38|[126|[115]]]]]]]]]], [H|[]])
	      in  let <_cor7> =
		      %% Line 6785
		      ( letrec
			    'lc$^0'/1 =
				fun (_cor4) ->
				    case _cor4 of
				      <[F|_cor3]> when 'true' ->
					  let <_cor5> =
					      call 'io_lib':'format'
						  ([44|[32|[38|[126|[115]]]]], [F|[]])
					  in  let <_cor6> =
						  apply 'lc$^0'/1
						      (_cor3)
					      in  ( [_cor5|_cor6]
						    -| ['compiler_generated'] )
				      <[]> when 'true' ->
					  []
				      ( <_cor4> when 'true' ->
					    ( primop 'match_fail'
						  ({'function_clause',_cor4})
					      -| [{'function_name',{'lc$^0',1}}] )
					-| ['compiler_generated'] )
				    end
			in  apply 'lc$^0'/1
				(T)
			-| ['list_comprehension'] )
		  in  %% Line 6784
		      [_cor1|_cor7]
	  ( <_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8})
		  -| [{'function_name',{'format_fields',1}}] )
	    -| ['compiler_generated'] )
	end
'error'/1 =
    %% Line 6787
    fun (_cor0) ->
	case _cor0 of
	  <{_cor27,SE = {'structured_error',_cor28,_cor29,_cor30},_cor31}> when 'true' ->
	      %% Line 6788
	      SE
	  %% Line 6789
	  <{'export',Msg,{'state',_cor32,Mname,Ref,Typename,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41}}> when 'true' ->
	      %% Line 6790
	      ( case Ref of
		  ( <( {'Externaltypereference',_rec713,_cor42,_cor43}
		       -| ['compiler_generated'] )> when 'true' ->
			do  %% Line 6791
			    call 'io':'format'
				([97|[115|[110|[49|[101|[114|[114|[111|[114|[58|[126|[112|[58|[126|[112|[58|[126|[112|[126|[110|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]], [_rec713|[Mname|[Typename|[Msg|[]]]]])
			    %% Line 6792
			    {'error',{'export',_rec713,Mname,Typename,Msg}}
		    -| ['compiler_generated'] )
		  ( <_cor44> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','Externaltypereference'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 6798
	  <{'type',Msg,{'state',_cor45,Mname,Type = {'type',_cor46,_cor47,_cor48,_cor49,_cor50},Typename,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59}}> when %% Line 6799
																						( 'true'
																						  -| ['compiler_generated'] ) ->
	      do  %% Line 6800
		  call 'io':'format'
		      ([97|[115|[110|[49|[101|[114|[114|[111|[114|[58|[126|[112|[58|[126|[112|[126|[110|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]], %% Line 6801
																		  [Mname|[Typename|[Msg|[]]]])
		  %% Line 6802
		  {'error',{'type',Mname,Typename,Msg}}
	  %% Line 6803
	  <{'type',Msg,{'state',_cor60,Mname,Type = {'typedef',_cor61,_cor62,_cor63,_cor64},Typename,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73}}> when %% Line 6804
																					    ( 'true'
																					      -| ['compiler_generated'] ) ->
	      do  %% Line 6805
		  call 'io':'format'
		      ([97|[115|[110|[49|[101|[114|[114|[111|[114|[58|[126|[112|[58|[126|[112|[58|[126|[112|[126|[110|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]], %% Line 6806
																				   [_cor62|[Mname|[Typename|[Msg|[]]]]])
		  %% Line 6807
		  {'error',{'type',_cor62,Mname,Typename,Msg}}
	  %% Line 6808
	  <{'type',Msg,{'state',_cor82,Mname,Type = {'ptypedef',_cor83,_cor84,_cor85,_cor86,_cor87},Typename,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96}}> when %% Line 6809
																						    ( 'true'
																						      -| ['compiler_generated'] ) ->
	      do  %% Line 6810
		  call 'io':'format'
		      ([97|[115|[110|[49|[101|[114|[114|[111|[114|[58|[126|[112|[58|[126|[112|[58|[126|[112|[126|[110|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]], %% Line 6811
																				   [_cor84|[Mname|[Typename|[Msg|[]]]]])
		  %% Line 6812
		  {'error',{'type',_cor84,Mname,Typename,Msg}}
	  %% Line 6813
	  <{'type',Msg,{'state',_cor107,Mname,_cor108,_cor109,Value = {'valuedef',_cor110,_cor111,_cor112,_cor113,_cor114,_cor115},Valuename,_cor116,_cor117,_cor118,_cor119,_cor120,_cor121,_cor122}}> when %% Line 6814
																									     ( 'true'
																									       -| ['compiler_generated'] ) ->
	      do  %% Line 6815
		  call 'io':'format'
		      ([97|[115|[110|[49|[101|[114|[114|[111|[114|[58|[126|[112|[58|[126|[112|[58|[126|[112|[126|[110|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]], [_cor111|[Mname|[Valuename|[Msg|[]]]]])
		  %% Line 6816
		  {'error',{'type',_cor111,Mname,Valuename,Msg}}
	  %% Line 6817
	  <{'type',Msg,{'state',_cor135,Mname,Type = {'pobjectdef',_cor136,_cor137,_cor138,_cor139,_cor140,_cor141},Typename,_cor142,_cor143,_cor144,_cor145,_cor146,_cor147,_cor148,_cor149,_cor150}}> when %% Line 6818
																									     ( 'true'
																									       -| ['compiler_generated'] ) ->
	      do  %% Line 6819
		  call 'io':'format'
		      ([97|[115|[110|[49|[101|[114|[114|[111|[114|[58|[126|[112|[58|[126|[112|[58|[126|[112|[126|[110|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]], %% Line 6820
																				   [_cor137|[Mname|[Typename|[Msg|[]]]]])
		  %% Line 6821
		  {'error',{'type',_cor137,Mname,Typename,Msg}}
	  %% Line 6822
	  <{'value',Msg,{'state',_cor163,Mname,_cor164,_cor165,Value = {'valuedef',_cor166,_cor167,_cor168,_cor169,_cor170,_cor171},Valuename,_cor172,_cor173,_cor174,_cor175,_cor176,_cor177,_cor178}}> when %% Line 6823
																									      ( 'true'
																										-| ['compiler_generated'] ) ->
	      do  %% Line 6824
		  call 'io':'format'
		      ([97|[115|[110|[49|[101|[114|[114|[111|[114|[58|[126|[112|[58|[126|[112|[58|[126|[112|[126|[110|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]], [_cor167|[Mname|[Valuename|[Msg|[]]]]])
		  %% Line 6825
		  {'error',{'value',_cor167,Mname,Valuename,Msg}}
	  %% Line 6826
	  <{Other,Msg,{'state',_cor191,Mname,_cor192,_cor193,{'valuedef',_cor194,Pos,_cor195,_cor196,_cor197,_cor198},Valuename,_cor199,_cor200,_cor201,_cor202,_cor203,_cor204,_cor205}}> when 'true' ->
	      do  %% Line 6827
		  call 'io':'format'
		      ([97|[115|[110|[49|[101|[114|[114|[111|[114|[58|[126|[112|[58|[126|[112|[58|[126|[112|[126|[110|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]], [Pos|[Mname|[Valuename|[Msg|[]]]]])
		  %% Line 6828
		  {'error',{Other,Pos,Mname,Valuename,Msg}}
	  %% Line 6829
	  <{Other,Msg,{'state',_cor206,Mname,{'typedef',_cor207,Pos,_cor208,_cor209},Typename,_cor210,_cor211,_cor212,_cor213,_cor214,_cor215,_cor216,_cor217,_cor218}}> when 'true' ->
	      do  %% Line 6830
		  call 'io':'format'
		      ([97|[115|[110|[49|[101|[114|[114|[111|[114|[58|[126|[112|[58|[126|[112|[58|[126|[112|[126|[110|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]], [Pos|[Mname|[Typename|[Msg|[]]]]])
		  %% Line 6831
		  {'error',{Other,Pos,Mname,Typename,Msg}}
	  %% Line 6832
	  <{Other,Msg,{'state',_cor219,Mname,{'classdef',_cor220,Pos,_cor221,_cor222},Typename,_cor223,_cor224,_cor225,_cor226,_cor227,_cor228,_cor229,_cor230,_cor231}}> when 'true' ->
	      do  %% Line 6833
		  call 'io':'format'
		      ([97|[115|[110|[49|[101|[114|[114|[111|[114|[58|[126|[112|[58|[126|[112|[58|[126|[112|[126|[110|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]], [Pos|[Mname|[Typename|[Msg|[]]]]])
		  %% Line 6834
		  {'error',{Other,Pos,Mname,Typename,Msg}}
	  %% Line 6835
	  <{Other,Msg,{'state',_cor232,Mname,Type,Typename,_cor233,_cor234,_cor235,_cor236,_cor237,_cor238,_cor239,_cor240,_cor241}}> when 'true' ->
	      let <_cor24> =
		  %% Line 6836
		  call 'asn1ct':'get_pos_of_def'
		      (Type)
	      in  do  %% Line 6836
		      call 'io':'format'
			  ([97|[115|[110|[49|[101|[114|[114|[111|[114|[58|[126|[112|[58|[126|[112|[58|[126|[112|[126|[110|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]], [_cor24|[Mname|[Typename|[Msg|[]]]]])
		      let <_cor25> =
			  %% Line 6837
			  call 'asn1ct':'get_pos_of_def'
			      (Type)
		      in  %% Line 6837
			  {'error',{Other,_cor25,Mname,Typename,Msg}}
	  ( <_cor26> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor26})
		  -| [{'function_name',{'error',1}}] )
	    -| ['compiler_generated'] )
	end
'include_default_type'/1 =
    %% Line 6839
    fun (_cor0) ->
	let <NameAbsList> =
	    %% Line 6840
	    apply 'default_type_list'/0
		()
	in  %% Line 6841
	    apply 'include_default_type1'/2
		(_cor0, NameAbsList)
'include_default_type1'/2 =
    %% Line 6843
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_cor6,[]> when 'true' ->
	      %% Line 6844
	      'ok'
	  %% Line 6845
	  <Module,[{Name,TS}|Rest]> when 'true' ->
	      do  %% Line 6846
		  case call 'asn1_db':'dbget'
			   (Module, Name) of
		    %% Line 6847
		    <'undefined'> when 'true' ->
			let <T> =
			    %% Line 6848
			    {'typedef','false','undefined',Name,%% Line 6849
								TS}
			in  %% Line 6850
			    call 'asn1_db':'dbput'
				(Module, Name, T)
		    %% Line 6851
		    <_cor7> when 'true' ->
			'ok'
		  end
		  %% Line 6853
		  apply 'include_default_type1'/2
		      (Module, Rest)
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'include_default_type1',2}}] )
	    -| ['compiler_generated'] )
	end
'default_type_list'/0 =
    %% Line 6855
    fun () ->
	%% Line 6978
	[{'EXTERNAL',{'type',[{'tag','UNIVERSAL',8,'IMPLICIT',32}],{'SEQUENCE','false','false','undefined',[{'ComponentType','undefined','direct-reference',{'type',[],'OBJECT IDENTIFIER',[],[],'no'},'OPTIONAL',[{'UNIVERSAL',6}],'undefined'}|[{'ComponentType','undefined','indirect-reference',{'type',[],'INTEGER',[],[],'no'},'OPTIONAL',[{'UNIVERSAL',2}],'undefined'}|[{'ComponentType','undefined','data-value-descriptor',{'type',[],'ObjectDescriptor',[],[],'no'},'OPTIONAL','undefined','undefined'}|[{'ComponentType','undefined','encoding',{'type',[],{'CHOICE',[{'ComponentType','undefined','single-ASN1-type',{'type',[{'tag','CONTEXT',0,'EXPLICIT',32}],'ANY',[],[],'no'},'mandatory',[{'CONTEXT',0}],'undefined'}|[{'ComponentType','undefined','octet-aligned',{'type',[{'tag','CONTEXT',1,'IMPLICIT',0}],'OCTET STRING',[],[],'no'},'mandatory',[{'CONTEXT',1}],'undefined'}|[{'ComponentType','undefined','arbitrary',{'type',[{'tag','CONTEXT',2,'IMPLICIT',0}],{'BIT STRING',[]},[],[],'no'},'mandatory',[{'CONTEXT',2}],'undefined'}]]]},[],[],'no'},'mandatory','undefined','undefined'}]]]]},[],[],'no'}}|[{'EMBEDDED PDV',{'type',[{'tag','UNIVERSAL',11,'IMPLICIT',32}],{'SEQUENCE','false','false','undefined',[{'ComponentType','undefined','identification',{'type',[],{'CHOICE',[{'ComponentType','undefined','syntaxes',{'type',[],{'SEQUENCE','false','false','undefined',[{'ComponentType','undefined','abstract',{'type',[],'OBJECT IDENTIFIER',[],[],'no'},'mandatory','undefined','undefined'}|[{'ComponentType','undefined','transfer',{'type',[],'OBJECT IDENTIFIER',[],[],'no'},'mandatory','undefined','undefined'}]]},[],[],'no'},'mandatory','undefined','undefined'}|[{'ComponentType','undefined','syntax',{'type',[],'OBJECT IDENTIFIER',[],[],'no'},'mandatory','undefined','undefined'}|[{'ComponentType','undefined','presentation-context-id',{'type',[],'INTEGER',[],[],'no'},'mandatory','undefined','undefined'}|[{'ComponentType','undefined','context-negotiation',{'type',[],{'SEQUENCE','false','false','undefined',[{'ComponentType','undefined','presentation-context-id',{'type',[],'INTEGER',[],[],'no'},'mandatory','undefined','undefined'}|[{'ComponentType','undefined','transfer-syntax',{'type',[],'OBJECT IDENTIFIER',[],[],'no'},'mandatory','undefined','undefined'}]]},[],[],'no'},'mandatory','undefined','undefined'}|[{'ComponentType','undefined','transfer-syntax',{'type',[],'OBJECT IDENTIFIER',[],[],'no'},'mandatory','undefined','undefined'}|[{'ComponentType','undefined','fixed',{'type',[],'NULL',[],[],'no'},'mandatory','undefined','undefined'}]]]]]]},[],[],'no'},'mandatory','undefined','undefined'}|[{'ComponentType','undefined','data-value',{'type',[],'OCTET STRING',[],[],'no'},'mandatory','undefined','undefined'}]]},[],[],'no'}}|[{'CHARACTER STRING',{'type',[{'tag','UNIVERSAL',29,'IMPLICIT',32}],{'SEQUENCE','false','false','undefined',[{'ComponentType','undefined','identification',{'type',[],{'CHOICE',[{'ComponentType','undefined','syntaxes',{'type',[],{'SEQUENCE','false','false','undefined',[{'ComponentType','undefined','abstract',{'type',[],'OBJECT IDENTIFIER',[],[],'no'},'mandatory','undefined','undefined'}|[{'ComponentType','undefined','transfer',{'type',[],'OBJECT IDENTIFIER',[],[],'no'},'mandatory','undefined','undefined'}]]},[],[],'no'},'mandatory','undefined','undefined'}|[{'ComponentType','undefined','syntax',{'type',[],'OBJECT IDENTIFIER',[],[],'no'},'mandatory','undefined','undefined'}|[{'ComponentType','undefined','presentation-context-id',{'type',[],'INTEGER',[],[],'no'},'mandatory','undefined','undefined'}|[{'ComponentType','undefined','context-negotiation',{'type',[],{'SEQUENCE','false','false','undefined',[{'ComponentType','undefined','presentation-context-id',{'type',[],'INTEGER',[],[],'no'},'mandatory','undefined','undefined'}|[{'ComponentType','undefined','transfer-syntax',{'type',[],'OBJECT IDENTIFIER',[],[],'no'},'mandatory','undefined','undefined'}]]},[],[],'no'},'mandatory','undefined','undefined'}|[{'ComponentType','undefined','transfer-syntax',{'type',[],'OBJECT IDENTIFIER',[],[],'no'},'mandatory','undefined','undefined'}|[{'ComponentType','undefined','fixed',{'type',[],'NULL',[],[],'no'},'mandatory','undefined','undefined'}]]]]]]},[],[],'no'},'mandatory','undefined','undefined'}|[{'ComponentType','undefined','string-value',{'type',[],'OCTET STRING',[],[],'no'},'mandatory','undefined','undefined'}]]},[],[],'no'}}]]]
'include_default_class'/2 =
    %% Line 7000
    fun (_cor1,_cor0) ->
	let <NameAbsList> =
	    %% Line 7001
	    apply 'default_class_list'/1
		(_cor1)
	in  %% Line 7002
	    apply 'include_default_class1'/2
		(_cor0, NameAbsList)
'include_default_class1'/2 =
    %% Line 7004
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_cor6,[]> when 'true' ->
	      %% Line 7005
	      'ok'
	  %% Line 7006
	  <Module,[{Name,TS}|Rest]> when 'true' ->
	      do  %% Line 7007
		  case call 'asn1_db':'dbget'
			   (Module, Name) of
		    %% Line 7008
		    <'undefined'> when 'true' ->
			let <C> =
			    %% Line 7009
			    {'classdef','true','undefined',Name,%% Line 7010
								TS}
			in  %% Line 7011
			    call 'asn1_db':'dbput'
				(Module, Name, C)
		    %% Line 7012
		    <_cor7> when 'true' ->
			'ok'
		  end
		  %% Line 7014
		  apply 'include_default_class1'/2
		      (Module, Rest)
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'include_default_class1',2}}] )
	    -| ['compiler_generated'] )
	end
'default_class_list'/1 =
    %% Line 7016
    fun (_cor0) ->
	%% Line 7021
	( case _cor0 of
	    ( <( {'state',_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_rec725,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_cor4> =
		      case _rec725 of
			<'ber'> when 'true' ->
			    {'tag','UNIVERSAL',6,'IMPLICIT',0}
			<_cor27> when 'true' ->
			    []
		      end
		  in  let <_cor8> =
			  %% Line 7035
			  case _rec725 of
			    <'ber'> when 'true' ->
				{'tag','UNIVERSAL',6,'IMPLICIT',0}
			    <_cor41> when 'true' ->
				[]
			  end
		      in  let <_cor12> =
			      %% Line 7042
			      case _rec725 of
				<'ber'> when 'true' ->
				    {'tag','UNIVERSAL',3,'IMPLICIT',0}
				<_cor55> when 'true' ->
				    []
			      end
			  in  [{'TYPE-IDENTIFIER',{'objectclass',[{'fixedtypevaluefield','id',{'type',_cor4,%% Line 7022
													    'OBJECT IDENTIFIER',[],[],'no'},%% Line 7023
																	    'UNIQUE',%% Line 7024
																		     'MANDATORY'}|%% Line 7025
																				  [{'typefield','Type','MANDATORY'}]],%% Line 7026
																								      {'WITH SYNTAX',[{'typefieldreference','Type'}|['IDENTIFIED'|['BY'|[{'valuefieldreference','id'}]]]]}}}|%% Line 7031
																																					     [{'ABSTRACT-SYNTAX',%% Line 7032
																																								 {'objectclass',%% Line 7033
																																										[{'fixedtypevaluefield',%% Line 7034
																																													'id',%% Line 7035
																																													     {'type',_cor8,%% Line 7036
																																															   'OBJECT IDENTIFIER',[],[],'no'},%% Line 7037
																																																			   'UNIQUE',%% Line 7038
																																																				    'MANDATORY'}|%% Line 7039
																																																						 [{'typefield','Type','MANDATORY'}|%% Line 7040
																																																										   [{'fixedtypevaluefield',%% Line 7041
																																																													   'property',%% Line 7042
																																																														      {'type',_cor12,%% Line 7043
																																																																     {'BIT STRING',[]},[],[],'no'},%% Line 7044
																																																																				   'undefined',%% Line 7045
																																																																					       {'DEFAULT',[0|[1|[0]]]}}|%% Line 7046
																																																																									[]]]],%% Line 7047
																																																																									      {'WITH SYNTAX',[{'typefieldreference','Type'}|['IDENTIFIED'|['BY'|[{'valuefieldreference','id'}|[['HAS'|['PROPERTY'|[{'valuefieldreference','property'}]]]]]]]]}}}|%% Line 7054
																																																																																														 []]]
	      -| ['compiler_generated'] )
	    ( <_cor26> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'new_reference_name'/1 =
    %% Line 7057
    fun (_cor0) ->
	%% Line 7058
	case call 'erlang':'get'
		 ('asn1_reference') of
	  %% Line 7059
	  <'undefined'> when 'true' ->
	      do  %% Line 7060
		  call 'erlang':'put'
		      ('asn1_reference', 1)
		  let <_cor1> =
		      %% Line 7061
		      call 'lists':'concat'
			  (['internal_'|[_cor0|[[95]|[1]]]])
		  in  %% Line 7061
		      call 'erlang':'list_to_atom'
			  (_cor1)
	  %% Line 7062
	  <Num>
	      when call 'erlang':'is_integer'
		    (Num) ->
	      let <_cor2> =
		  %% Line 7063
		  call 'erlang':'+'
		      (Num, 1)
	      in  do  %% Line 7063
		      call 'erlang':'put'
			  ('asn1_reference', _cor2)
		      let <_cor3> =
			  %% Line 7064
			  call 'erlang':'+'
			      (Num, 1)
		      in  let <_cor4> =
			      %% Line 7064
			      call 'lists':'concat'
				  (['internal_'|[_cor0|[[95]|[_cor3|[]]]]])
			  in  %% Line 7064
			      call 'erlang':'list_to_atom'
				  (_cor4)
	  ( <_cor5> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor5})
	    -| ['compiler_generated'] )
	end
'get_record_prefix_name'/1 =
    %% Line 7067
    fun (_cor0) ->
	%% Line 7068
	( case _cor0 of
	    ( <( {'state',_cor5,_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_rec728,_cor16}
		 -| ['compiler_generated'] )> when 'true' ->
		  case call 'lists':'keysearch'
			   ('record_name_prefix', 1, _rec728) of
		    %% Line 7069
		    <{'value',{_cor18,Prefix}}> when 'true' ->
			%% Line 7070
			Prefix
		    %% Line 7071
		    <_cor19> when 'true' ->
			%% Line 7072
			[]
		  end
	      -| ['compiler_generated'] )
	    ( <_cor17> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'insert_once'/3 =
    %% Line 7075
    fun (_cor2,_cor1,_cor0) ->
	%% Line 7076
	case call 'erlang':'get'
		 ('top_module') of
	  %% Line 7077
	  <M>
	      when ( try
		      ( case <> of
			  ( <>
				when ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'is_record'
									 -| ['compiler_generated'] )
					(_cor2,
					 ( 'state'
					   -| ['compiler_generated'] ),
					 ( 14
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] ) ->
				let <_cor7> =
				    ( call 'erlang':'element'
					  (3, _cor2)
				      -| ['compiler_generated'] )
				in  ( call 'erlang':'=='
					  (M, _cor7)
				      -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  of <Try> ->
		      Try
		  catch <T,R> ->
		      'false'
		  -| ['compiler_generated'] ) ->
	      do  %% Line 7078
		  call 'asn1ct_gen':'insert_once'
		      (_cor1, _cor0)
		  %% Line 7079
		  'ok'
	  %% Line 7080
	  <_cor13> when 'true' ->
	      %% Line 7081
	      'skipped'
	end
'check_fold'/3 =
    %% Line 7084
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <S,[H|T],Check> when 'true' ->
	      %% Line 7085
	      ( case S of
		  ( <( {'state',_cor11,_rec729,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22}
		       -| ['compiler_generated'] )> when 'true' ->
			let <Type> =
			    call 'asn1_db':'dbget'
				(_rec729, H)
			in  %% Line 7086
			    case apply Check
				     (S, H, Type) of
			      %% Line 7087
			      <'ok'> when 'true' ->
				  %% Line 7088
				  apply 'check_fold'/3
				      (S, T, Check)
			      %% Line 7089
			      <Error> when 'true' ->
				  let <_cor6> =
				      %% Line 7090
				      apply 'check_fold'/3
					  (S, T, Check)
				  in  %% Line 7090
				      [Error|_cor6]
			    end
		    -| ['compiler_generated'] )
		  ( <_cor23> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 7092
	  <_cor24,[],Check>
	      when call 'erlang':'is_function'
		    (Check,
		     3) ->
	      []
	  ( <_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10,_cor9,_cor8})
		  -| [{'function_name',{'check_fold',3}}] )
	    -| ['compiler_generated'] )
	end
'name_of_def'/1 =
    %% Line 7094
    fun (_cor0) ->
	case _cor0 of
	  <{'Externaltypereference',_cor2,_cor3,N}> when 'true' ->
	      N
	  %% Line 7095
	  <{'Externalvaluereference',_cor4,_cor5,N}> when 'true' ->
	      N
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'name_of_def',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('asn1ct_check')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('asn1ct_check', _cor0)
end