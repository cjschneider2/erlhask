module 'etop' ['config'/2,
	       'dump'/1,
	       'getopt'/2,
	       'help'/0,
	       'loadinfo'/1,
	       'meminfo'/2,
	       'module_info'/0,
	       'module_info'/1,
	       'start'/0,
	       'start'/1,
	       'stop'/0,
	       'update'/1]
    attributes [%% Line 20
		'author' =
		    %% Line 20
		    ['siri@erix.ericsson.se']]
'help'/0 =
    %% Line 32
    fun () ->
	%% Line 33
	call 'io':'format'
	    (%% Line 34
	     [85|[115|[97|[103|[101|[32|[111|[102|[32|[116|[104|[101|[32|[69|[114|[108|[97|[110|[103|[32|[116|[111|[112|[32|[112|[114|[111|[103|[114|[97|[109|[126|[110|[126|[110|[79|[112|[116|[105|[111|[110|[115|[32|[97|[114|[101|[32|[115|[101|[116|[32|[97|[115|[32|[99|[111|[109|[109|[97|[110|[100|[32|[108|[105|[110|[101|[32|[112|[97|[114|[97|[109|[101|[116|[101|[114|[115|[32|[97|[115|[32|[105|[110|[32|[45|[110|[111|[100|[101|[32|[109|[121|[64|[104|[111|[115|[116|[126|[110|[111|[114|[32|[97|[115|[32|[112|[97|[114|[97|[109|[101|[116|[101|[114|[115|[32|[116|[111|[32|[101|[116|[111|[112|[58|[115|[116|[97|[114|[116|[40|[91|[123|[110|[111|[100|[101|[44|[32|[109|[121|[64|[104|[111|[115|[116|[125|[44|[32|[123|[46|[46|[46|[125|[93|[41|[46|[126|[110|[126|[110|[79|[112|[116|[105|[111|[110|[115|[32|[97|[114|[101|[58|[126|[110|[32|[32|[110|[111|[100|[101|[32|[32|[32|[32|[32|[32|[32|[32|[97|[116|[111|[109|[32|[32|[32|[32|[32|[32|[32|[82|[101|[113|[117|[105|[114|[101|[100|[32|[32|[32|[84|[104|[101|[32|[101|[114|[108|[97|[110|[103|[32|[110|[111|[100|[101|[32|[116|[111|[32|[109|[101|[97|[115|[117|[114|[101|[32|[126|[110|[32|[32|[112|[111|[114|[116|[32|[32|[32|[32|[32|[32|[32|[32|[105|[110|[116|[101|[103|[101|[114|[32|[32|[32|[32|[84|[104|[101|[32|[117|[115|[101|[100|[32|[112|[111|[114|[116|[44|[32|[78|[79|[84|[69|[58|[32|[100|[117|[101|[32|[116|[111|[32|[97|[32|[98|[117|[103|[32|[116|[104|[105|[115|[32|[112|[114|[111|[103|[114|[97|[109|[126|[110|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[119|[105|[108|[108|[32|[104|[97|[110|[103|[32|[105|[102|[32|[116|[104|[101|[32|[112|[111|[114|[116|[32|[105|[115|[32|[110|[111|[116|[32|[97|[118|[97|[105|[97|[98|[108|[101|[126|[110|[32|[32|[97|[99|[99|[117|[109|[117|[108|[97|[116|[101|[32|[32|[98|[111|[111|[108|[101|[97|[110|[32|[32|[32|[32|[73|[102|[32|[116|[114|[117|[101|[32|[101|[120|[101|[99|[117|[116|[105|[111|[110|[32|[116|[105|[109|[101|[32|[105|[115|[32|[97|[99|[99|[117|[109|[117|[108|[97|[116|[101|[100|[32|[126|[110|[32|[32|[108|[105|[110|[101|[115|[32|[32|[32|[32|[32|[32|[32|[105|[110|[116|[101|[103|[101|[114|[32|[32|[32|[32|[78|[117|[109|[98|[101|[114|[32|[111|[102|[32|[100|[105|[115|[112|[108|[97|[121|[101|[100|[32|[112|[114|[111|[99|[101|[115|[115|[101|[115|[126|[110|[32|[32|[105|[110|[116|[101|[114|[118|[97|[108|[32|[32|[32|[32|[105|[110|[116|[101|[103|[101|[114|[32|[32|[32|[32|[68|[105|[115|[112|[108|[97|[121|[32|[117|[112|[100|[97|[116|[101|[32|[105|[110|[116|[101|[114|[118|[97|[108|[32|[105|[110|[32|[115|[101|[99|[115|[126|[110|[32|[32|[115|[111|[114|[116|[32|[32|[32|[32|[32|[32|[32|[32|[114|[117|[110|[116|[105|[109|[101|[32|[124|[32|[114|[101|[100|[117|[99|[116|[105|[111|[110|[115|[32|[124|[32|[109|[101|[109|[111|[114|[121|[32|[124|[32|[109|[115|[103|[95|[113|[126|[110|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[87|[104|[97|[116|[32|[105|[110|[102|[111|[114|[109|[97|[116|[105|[111|[110|[32|[116|[111|[32|[115|[111|[114|[116|[32|[98|[121|[126|[110|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[68|[101|[102|[97|[117|[108|[116|[58|[32|[114|[117|[110|[116|[105|[109|[101|[32|[40|[114|[101|[100|[117|[99|[116|[105|[111|[110|[115|[32|[105|[102|[32|[116|[114|[97|[99|[105|[110|[103|[61|[111|[102|[102|[41|[126|[110|[32|[32|[116|[114|[97|[99|[105|[110|[103|[32|[32|[32|[32|[32|[111|[110|[32|[124|[32|[111|[102|[102|[32|[32|[32|[101|[116|[111|[112|[32|[117|[115|[101|[115|[32|[116|[104|[101|[32|[101|[114|[108|[97|[110|[103|[32|[116|[114|[97|[99|[101|[32|[102|[97|[99|[105|[108|[105|[116|[121|[44|[32|[97|[110|[100|[32|[116|[104|[117|[115|[126|[110|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[110|[111|[32|[111|[116|[104|[101|[114|[32|[116|[114|[97|[99|[105|[110|[103|[32|[105|[115|[32|[112|[111|[115|[115|[105|[98|[108|[101|[32|[111|[110|[32|[116|[104|[101|[32|[110|[111|[100|[101|[32|[119|[104|[105|[108|[101|[126|[110|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[101|[116|[111|[112|[32|[105|[115|[32|[114|[117|[110|[110|[105|[110|[103|[44|[32|[117|[110|[108|[101|[115|[115|[32|[116|[104|[105|[115|[32|[111|[112|[116|[105|[111|[110|[32|[105|[115|[32|[115|[101|[116|[32|[116|[111|[126|[110|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[39|[111|[102|[102|[39|[46|[32|[65|[108|[115|[111|[32|[104|[101|[108|[112|[102|[117|[108|[32|[105|[102|[32|[116|[104|[101|[32|[101|[116|[111|[112|[32|[116|[114|[97|[99|[105|[110|[103|[32|[99|[97|[117|[115|[101|[115|[126|[110|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[116|[111|[111|[32|[104|[105|[103|[104|[32|[108|[111|[97|[100|[32|[111|[110|[32|[116|[104|[101|[32|[109|[101|[97|[115|[117|[114|[101|[100|[32|[110|[111|[100|[101|[46|[126|[110|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[87|[105|[116|[104|[32|[116|[114|[97|[99|[105|[110|[103|[32|[111|[102|[102|[44|[32|[114|[117|[110|[116|[105|[109|[101|[32|[105|[115|[32|[110|[111|[116|[32|[109|[101|[97|[115|[117|[114|[101|[100|[33|[126|[110|[32|[32|[115|[101|[116|[99|[111|[111|[107|[105|[101|[32|[32|[32|[115|[116|[114|[105|[110|[103|[32|[32|[32|[32|[32|[79|[110|[108|[121|[32|[97|[112|[112|[108|[105|[99|[97|[98|[108|[101|[32|[111|[110|[32|[111|[112|[101|[114|[97|[116|[105|[110|[103|[32|[115|[121|[115|[116|[101|[109|[32|[99|[111|[109|[109|[97|[110|[100|[126|[110|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[108|[105|[110|[101|[46|[32|[83|[101|[116|[32|[99|[111|[111|[107|[105|[101|[32|[102|[111|[114|[32|[116|[104|[101|[32|[101|[116|[111|[112|[32|[110|[111|[100|[101|[44|[32|[109|[117|[115|[116|[32|[98|[101|[126|[110|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[115|[97|[109|[101|[32|[97|[115|[32|[116|[104|[101|[32|[99|[111|[111|[107|[105|[101|[32|[102|[111|[114|[32|[116|[104|[101|[32|[109|[101|[97|[115|[117|[114|[101|[100|[32|[110|[111|[100|[101|[46|[126|[110|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[32|[84|[104|[105|[115|[32|[105|[115|[32|[110|[111|[116|[32|[97|[110|[32|[101|[116|[111|[112|[32|[112|[97|[114|[97|[109|[101|[116|[101|[114|[126|
'stop'/0 =
    %% Line 59
    fun () ->
	%% Line 60
	case call 'erlang':'whereis'
		 ('etop_server') of
	  %% Line 61
	  <'undefined'> when 'true' ->
	      'not_started'
	  %% Line 62
	  <Pid>
	      when call 'erlang':'is_pid'
		    (Pid) ->
	      call 'erlang':'!'
		  ('etop_server', 'stop')
	  ( <_cor0> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor0})
	    -| ['compiler_generated'] )
	end
'config'/2 =
    %% Line 65
    fun (_cor1,_cor0) ->
	%% Line 66
	case apply 'check_runtime_config'/2
		 (_cor1, _cor0) of
	  %% Line 67
	  <'ok'> when 'true' ->
	      do  %% Line 68
		  call 'erlang':'!'
		      ('etop_server', {'config',{_cor1,_cor0}})
		  %% Line 69
		  'ok'
	  %% Line 70
	  <'error'> when 'true' ->
	      %% Line 71
	      {'error','illegal_opt'}
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor2})
	    -| ['compiler_generated'] )
	end
'check_runtime_config'/2 =
    %% Line 73
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'lines',L>
	      when let <_cor2> =
		    call 'erlang':'is_integer'
			(L)
		in  let <_cor3> =
			call 'erlang':'>'
			    (L, 0)
		    in  call 'erlang':'and'
			    (_cor2, _cor3) ->
	      'ok'
	  %% Line 74
	  <'interval',I>
	      when let <_cor4> =
		    call 'erlang':'is_integer'
			(I)
		in  let <_cor5> =
			call 'erlang':'>'
			    (I, 0)
		    in  call 'erlang':'and'
			    (_cor4, _cor5) ->
	      'ok'
	  %% Line 75
	  <'sort',S>
	      when let <_cor6> =
		    call 'erlang':'=:='
			(S, 'runtime')
		in  let <_cor7> =
			%% Line 76
			call 'erlang':'=:='
			    (S, 'reductions')
		    in  let <_cor8> =
			    %% Line 77
			    call 'erlang':'=:='
				(S, 'memory')
			in  let <_cor9> =
				%% Line 78
				call 'erlang':'=:='
				    (S, 'msg_q')
			    in  let <_cor10> =
				    %% Line 77
				    call 'erlang':'or'
					(_cor8, _cor9)
				in  let <_cor11> =
					%% Line 76
					call 'erlang':'or'
					    (_cor7, _cor10)
				    in  call 'erlang':'or'
					    (_cor6, _cor11) ->
	      %% Line 78
	      'ok'
	  %% Line 79
	  <'accumulate',A>
	      when let <_cor12> =
		    call 'erlang':'=:='
			(A, 'true')
		in  let <_cor13> =
			call 'erlang':'=:='
			    (A, 'false')
		    in  call 'erlang':'or'
			    (_cor12, _cor13) ->
	      'ok'
	  %% Line 80
	  <_X_Key,_X_Value> when 'true' ->
	      'error'
	end
'dump'/1 =
    %% Line 82
    fun (_cor0) ->
	%% Line 83
	case call 'file':'open'
		 (_cor0, ['write']) of
	  %% Line 84
	  <{'ok',Fd}> when 'true' ->
	      call 'erlang':'!'
		  ('etop_server', {'dump',Fd})
	  %% Line 85
	  <Error> when 'true' ->
	      Error
	end
'start'/0 =
    %% Line 88
    fun () ->
	%% Line 89
	apply 'start'/1
	    ([])
'start'/1 =
    %% Line 91
    fun (_cor0) ->
	do  %% Line 92
	    call 'erlang':'process_flag'
		('trap_exit', 'true')
	    let <_cor2> =
		%% Line 93
		call 'init':'get_arguments'
		    ()
	    in  let <_cor3> =
		    %% Line 93
		    call 'erlang':'++'
			(_cor2, _cor0)
		in  let <_cor1> =
			call 'erlang':'node'
			    ()
		    in  let <Config1> =
			    %% Line 93
			    apply 'handle_args'/2
				(_cor3, {'opts',_cor1,8415,'false',5000,10,700,340,'runtime','on','etop_txt','undefined','undefined','undefined','undefined','undefined','undefined','undefined'})
			in  let <_rec0> =
				%% Line 94
				call 'erlang':'self'
				    ()
			    in  %% Line 94
				case Config1 of
				  <{'opts',_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64}> when 'true' ->
				      let <_cor8> =
					  call 'erlang':'setelement'
					      (13, Config1, _rec0)
				      in  let <Node> =
					      %% Line 97
					      apply 'getopt'/2
						  ('node', _cor8)
					  in  do  %% Line 98
						  case call 'net_adm':'ping'
							   (Node) of
						    %% Line 99
						    <'pang'>
							when try
							      let <_cor11> =
								  call 'erlang':'node'
								      ()
							      in  call 'erlang':'/='
								      (Node, _cor11)
							  of <Try> ->
							      Try
							  catch <T,R> ->
							      'false' ->
							do  %% Line 100
							    call 'io':'format'
								([69|[114|[114|[111|[114|[32|[67|[111|[117|[108|[100|[110|[39|[116|[32|[99|[111|[110|[110|[101|[99|[116|[32|[116|[111|[32|[110|[111|[100|[101|[32|[126|[112|[32|[126|[110|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Node|[]])
							    do  %% Line 101
								apply 'help'/0
								    ()
								%% Line 102
								call 'erlang':'exit'
								    ([99|[111|[110|[110|[101|[99|[116|[105|[111|[110|[32|[101|[114|[114|[111|[114]]]]]]]]]]]]]]]])
						    %% Line 103
						    <_X_pong> when 'true' ->
							%% Line 104
							apply 'check_runtime_tools_vsn'/1
							    (Node)
						  end
						  let <_cor33> =
						      %% Line 109
						      case <> of
							<>
							    when ( try
								    ( case <> of
									( <>
									      when ( call ( 'erlang'
											 -| ['compiler_generated'] ):( 'is_record'
														       -| ['compiler_generated'] )
										      (_cor8,
										       ( 'opts'
											 -| ['compiler_generated'] ),
										       ( 18
											 -| ['compiler_generated'] ))
										  -| ['compiler_generated'] ) ->
									      let <_cor17> =
										  ( call 'erlang':'element'
											(10, _cor8)
										    -| ['compiler_generated'] )
									      in  let <_cor18> =
										      ( call 'erlang':'=:='
											    (_cor17, 'on')
											-| ['compiler_generated'] )
										  in  let <_cor20> =
											  ( call 'erlang':'node'
												()
											    -| ['compiler_generated'] )
										      in  let <_cor21> =
											      ( call 'erlang':'/='
												    (Node, _cor20)
												-| ['compiler_generated'] )
											  in  ( call ( 'erlang'
												       -| ['compiler_generated'] ):( 'and'
																     -| ['compiler_generated'] )
												    (_cor18, _cor21)
												-| ['compiler_generated'] )
									  -| ['compiler_generated'] )
									( <> when 'true' ->
									      'false'
									  -| ['compiler_generated'] )
								      end
								      -| ['compiler_generated'] )
								of <Try> ->
								    Try
								catch <T,R> ->
								    'false'
								-| ['compiler_generated'] ) ->
							    %% Line 112
							    call 'etop_tr':'setup_tracer'
								(_cor8)
							%% Line 113
							<> when 'true' ->
							    %% Line 114
							    case <> of
							      <>
								  when ( try
									  ( case <> of
									      ( <>
										    when ( call ( 'erlang'
											       -| ['compiler_generated'] ):( 'is_record'
															     -| ['compiler_generated'] )
											    (_cor8,
											     ( 'opts'
											       -| ['compiler_generated'] ),
											     ( 18
											       -| ['compiler_generated'] ))
											-| ['compiler_generated'] ) ->
										    let <_cor26> =
											( call 'erlang':'element'
											      (9, _cor8)
											  -| ['compiler_generated'] )
										    in  ( call 'erlang':'=:='
											      (_cor26, 'runtime')
											  -| ['compiler_generated'] )
										-| ['compiler_generated'] )
									      ( <> when 'true' ->
										    'false'
										-| ['compiler_generated'] )
									    end
									    -| ['compiler_generated'] )
								      of <Try> ->
									  Try
								      catch <T,R> ->
									  'false'
								      -| ['compiler_generated'] ) ->
								  %% Line 115
								  case _cor8 of
								    <{'opts',_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81,_cor82}> when 'true' ->
									let <_cor29> =
									    call 'erlang':'setelement'
										(10, _cor8, 'off')
									in  call 'erlang':'setelement'
										(9, _cor29, 'reductions')
								    ( <_cor83> when 'true' ->
									  ( call ( 'erlang'
										   -| ['compiler_generated'] ):( 'error'
														 -| ['compiler_generated'] )
										(( {'badrecord','opts'}
										   -| ['compiler_generated'] ))
									    -| ['compiler_generated'] )
								      -| ['compiler_generated'] )
								  end
							      %% Line 116
							      <> when 'true' ->
								  %% Line 117
								  case _cor8 of
								    <{'opts',_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98,_cor99,_cor100}> when 'true' ->
									call 'erlang':'setelement'
									    (10, _cor8, 'off')
								    ( <_cor101> when 'true' ->
									  ( call ( 'erlang'
										   -| ['compiler_generated'] ):( 'error'
														 -| ['compiler_generated'] )
										(( {'badrecord','opts'}
										   -| ['compiler_generated'] ))
									    -| ['compiler_generated'] )
								      -| ['compiler_generated'] )
								  end
							    end
						      end
						  in  let <AccumTab> =
							  %% Line 120
							  call 'ets':'new'
							      ('accum_tab', %% Line 121
									    ['set'|['public'|[{'keypos',2}]]])
						      in  %% Line 122
							  case _cor33 of
							    <{'opts',_cor102,_cor103,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_cor110,_cor111,_cor112,_cor113,_cor114,_cor115,_cor116,_cor117,_cor118}> when 'true' ->
								let <_cor38> =
								    call 'erlang':'setelement'
									(17, _cor33, AccumTab)
								in  %% Line 125
								    ( case _cor38 of
									( <( {'opts',_cor120,_cor121,_cor122,_cor123,_cor124,_cor125,_cor126,_cor127,_cor128,_rec5,_cor129,_cor130,_cor131,_cor132,_cor133,_cor134,_cor135}
									     -| ['compiler_generated'] )> when 'true' ->
									      let <Out> =
										  call 'erlang':'spawn_link'
										      (_rec5, 'init', [_cor38|[]])
									      in  let <_cor45> =
										      %% Line 126
										      call 'erlang':'setelement'
											  (12, _cor38, Out)
										  in  do  %% Line 128
											  apply 'init_data_handler'/1
											      (_cor45)
											  %% Line 129
											  'ok'
									  -| ['compiler_generated'] )
									( <_cor136> when 'true' ->
									      ( call ( 'erlang'
										       -| ['compiler_generated'] ):( 'error'
														     -| ['compiler_generated'] )
										    (( {'badrecord','opts'}
										       -| ['compiler_generated'] ))
										-| ['compiler_generated'] )
									  -| ['compiler_generated'] )
								      end
								      -| ['compiler_generated'] )
							    ( <_cor119> when 'true' ->
								  ( call ( 'erlang'
									   -| ['compiler_generated'] ):( 'error'
													 -| ['compiler_generated'] )
									(( {'badrecord','opts'}
									   -| ['compiler_generated'] ))
								    -| ['compiler_generated'] )
							      -| ['compiler_generated'] )
							  end
				  ( <_cor65> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {'badrecord','opts'}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
'check_runtime_tools_vsn'/1 =
    %% Line 131
    fun (_cor0) ->
	%% Line 132
	case call 'rpc':'call'
		 (_cor0, 'observer_backend', 'vsn', []) of
	  %% Line 133
	  <{'ok',Vsn}> when 'true' ->
	      apply 'check_vsn'/1
		  (Vsn)
	  %% Line 134
	  <_cor3> when 'true' ->
	      call 'erlang':'exit'
		  ([70|[97|[117|[108|[116|[121|[32|[118|[101|[114|[115|[105|[111|[110|[32|[111|[102|[32|[114|[117|[110|[116|[105|[109|[101|[95|[116|[111|[111|[108|[115|[32|[111|[110|[32|[114|[101|[109|[111|[116|[101|[32|[110|[111|[100|[101]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
	end
'check_vsn'/1 =
    %% Line 136
    fun (_cor0) ->
	'ok'
'init_data_handler'/1 =
    %% Line 142
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 143
	    call 'erlang':'self'
		()
	in  do  %% Line 143
		call 'erlang':'register'
		    ('etop_server', _cor1)
		let <_cor8> =
		    %% Line 145
		    case <> of
		      <>
			  when ( try
				  ( case <> of
				      ( <>
					    when ( call ( 'erlang'
						       -| ['compiler_generated'] ):( 'is_record'
										     -| ['compiler_generated'] )
						    (_cor0,
						     ( 'opts'
						       -| ['compiler_generated'] ),
						     ( 18
						       -| ['compiler_generated'] ))
						-| ['compiler_generated'] ) ->
					    let <_cor6> =
						( call 'erlang':'element'
						      (10, _cor0)
						  -| ['compiler_generated'] )
					    in  ( call 'erlang':'=:='
						      (_cor6, 'on')
						  -| ['compiler_generated'] )
					-| ['compiler_generated'] )
				      ( <> when 'true' ->
					    'false'
					-| ['compiler_generated'] )
				    end
				    -| ['compiler_generated'] )
			      of <Try> ->
				  Try
			      catch <T,R> ->
				  'false'
			      -| ['compiler_generated'] ) ->
			  call 'etop_tr':'reader'
			      (_cor0)
		      %% Line 146
		      <> when 'true' ->
			  'undefined'
		    end
		in  %% Line 148
		    apply 'data_handler'/2
			(_cor8, _cor0)
'data_handler'/2 =
    %% Line 150
    fun (_cor1,_cor0) ->
	%% Line 151
	receive
	  %% Line 152
	  <'stop'> when 'true' ->
	      do  %% Line 153
		  apply 'stop'/1
		      (_cor0)
		  %% Line 154
		  'ok'
	  %% Line 155
	  <{'config',{Key,Value}}> when 'true' ->
	      let <_cor2> =
		  %% Line 156
		  apply 'putopt'/3
		      (Key, Value, _cor0)
	      in  %% Line 156
		  apply 'data_handler'/2
		      (_cor1, _cor2)
	  %% Line 157
	  <{'dump',Fd}> when 'true' ->
	      %% Line 158
	      ( case _cor0 of
		  ( <( {'opts',_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_rec7,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31}
		       -| ['compiler_generated'] )> when 'true' ->
			do  call 'erlang':'!'
				(_rec7, {'dump',Fd})
			    %% Line 159
			    apply 'data_handler'/2
				(_cor1, _cor0)
		    -| ['compiler_generated'] )
		  ( <_cor32> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','opts'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 160
	  <{'EXIT',EPid,Reason}>
	      when ( try
		      ( case <> of
			  ( <>
				when ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'is_record'
									 -| ['compiler_generated'] )
					(_cor0,
					 ( 'opts'
					   -| ['compiler_generated'] ),
					 ( 18
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] ) ->
				let <_cor9> =
				    ( call 'erlang':'element'
					  (12, _cor0)
				      -| ['compiler_generated'] )
				in  ( call 'erlang':'=='
					  (EPid, _cor9)
				      -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				'false'
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  of <Try> ->
		      Try
		  catch <T,R> ->
		      'false'
		  -| ['compiler_generated'] ) ->
	      do  %% Line 161
		  case Reason of
		    %% Line 162
		    <'normal'> when 'true' ->
			'ok'
		    %% Line 163
		    <_cor33> when 'true' ->
			call 'io':'format'
			    ([79|[117|[116|[112|[117|[116|[32|[115|[101|[114|[118|[101|[114|[32|[99|[114|[97|[115|[104|[101|[100|[58|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]], [Reason|[]])
		  end
		  do  %% Line 165
		      apply 'stop'/1
			  (_cor0)
		      %% Line 166
		      'out_proc_stopped'
	  %% Line 167
	  <{'EXIT',_cor34,'eof'}>
	      when call 'erlang':'=:='
		    (_cor34,
		     _cor1) ->
	      %% Line 168
	      ( case _cor0 of
		  ( <( {'opts',_rec8,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50}
		       -| ['compiler_generated'] )> when 'true' ->
			do  call 'io':'format'
				([76|[111|[115|[116|[32|[99|[111|[110|[110|[101|[99|[116|[105|[111|[110|[32|[116|[111|[32|[110|[111|[100|[101|[32|[126|[112|[32|[101|[120|[105|[116|[105|[110|[103|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [_rec8|[]])
			    do  %% Line 169
				apply 'stop'/1
				    (_cor0)
				%% Line 170
				'connection_lost'
		    -| ['compiler_generated'] )
		  ( <_cor51> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','opts'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 171
	  <_cor52> when 'true' ->
	      %% Line 172
	      apply 'data_handler'/2
		  (_cor1, _cor0)
	after 'infinity' ->
	  'true'
'stop'/1 =
    %% Line 175
    fun (_cor0) ->
	%% Line 176
	( case _cor0 of
	    ( <( {'opts',_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_rec9,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27}
		 -| ['compiler_generated'] )> when 'true' ->
		  do  call _rec9:'stop'
			  (_cor21)
		      do  %% Line 177
			  case <> of
			    <>
				when ( call 'erlang':'=:='
					(_cor20,
					 'on')
				    -| ['compiler_generated'] ) ->
				call 'etop_tr':'stop_tracer'
				    (_cor0)
			    %% Line 178
			    <> when 'true' ->
				'ok'
			  end
			  %% Line 180
			  call 'erlang':'unregister'
			      ('etop_server')
	      -| ['compiler_generated'] )
	    ( <_cor28> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','opts'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'update'/1 =
    %% Line 182
    fun (_cor0) ->
	case _cor0 of
	  <Opts = {'opts',Node,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,Tracing,_cor31,_cor32,_cor33,_cor34,_cor35,Store,_cor36,_cor37}> when 'true' ->
	      let <_cor1> =
		  %% Line 183
		  call 'erlang':'self'
		      ()
	      in  let <Pid> =
		      %% Line 183
		      call 'erlang':'spawn_link'
			  (Node, 'observer_backend', 'etop_collect', [_cor1|[]])
		  in  let <_cor3> =
			  %% Line 184
			  receive
			    <{_cor38,I}>
				when call 'erlang':'=:='
				      (_cor38,
				       Pid) ->
				I
			  after %% Line 185
				1000 ->
			    %% Line 185
			    call 'erlang':'exit'
				('connection_lost')
		      in  %% Line 187
			  case _cor3 of
			    <{'etop_info',_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,ProcInfo}> when 'true' ->
				let <_cor18> =
				    %% Line 189
				    case <> of
				      <>
					  when call 'erlang':'=:='
						(Tracing,
						 'on') ->
					  let <_cor11> =
					      %% Line 190
					      ( fun (_cor9) ->
						    case _cor9 of
						      <PI = {'etop_proc_info',P,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51}> when 'true' ->
							  %% Line 191
							  case call 'ets':'lookup'
								   (Store, P) of
							    %% Line 192
							    <[{_cor52,T}|[]]>
								when call 'erlang':'=:='
								      (_cor52,
								       P) ->
								call 'erlang':'setelement'
								    (6, PI, T)
							    %% Line 193
							    <[]> when 'true' ->
								PI
							    ( <_cor8> when 'true' ->
								  primop 'match_fail'
								      ({'case_clause',_cor8})
							      -| ['compiler_generated'] )
							  end
						      ( <_cor10> when 'true' ->
							    ( primop 'match_fail'
								  ({'function_clause',_cor10})
							      -| [{'function_name',{'-update/1-fun-0-',1}}] )
							-| ['compiler_generated'] )
						    end
						-| [{'id',{0,0,'-update/1-fun-0-'}}] )
					  in  %% Line 190
					      call 'lists':'map'
						  (_cor11, %% Line 196
							   ProcInfo)
				      %% Line 198
				      <> when 'true' ->
					  let <_cor17> =
					      %% Line 199
					      ( fun (_cor15) ->
						    case _cor15 of
						      <{'etop_proc_info',_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67}> when 'true' ->
							  call 'erlang':'setelement'
							      (6, _cor15, '-')
						      ( <_cor68> when 'true' ->
							    ( call ( 'erlang'
								     -| ['compiler_generated'] ):( 'error'
												   -| ['compiler_generated'] )
								  (( {'badrecord','etop_proc_info'}
								     -| ['compiler_generated'] ))
							      -| ['compiler_generated'] )
							-| ['compiler_generated'] )
						    end
						-| [{'id',{0,0,'-update/1-fun-1-'}}] )
					  in  %% Line 199
					      call 'lists':'map'
						  (_cor17, ProcInfo)
				    end
				in  let <ProcInfo2> =
					%% Line 201
					apply 'sort'/2
					    (Opts, _cor18)
				    in  %% Line 202
					call 'erlang':'setelement'
					    (9, _cor3, ProcInfo2)
			    ( <_cor5> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor5})
			      -| ['compiler_generated'] )
			  end
	  ( <_cor23> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor23})
		  -| [{'function_name',{'update',1}}] )
	    -| ['compiler_generated'] )
	end
'sort'/2 =
    %% Line 204
    fun (_cor1,_cor0) ->
	%% Line 205
	( case _cor1 of
	    ( <( {'opts',_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_rec14,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <Tag> =
		      apply 'get_tag'/1
			  (_rec14)
		  in  let <_cor29> =
			  %% Line 206
			  case <> of
			    <>
				when ( call 'erlang':'=:='
					(_cor39,
					 'true')
				    -| ['compiler_generated'] ) ->
				_cor0
			    %% Line 208
			    <> when 'true' ->
				let <_cor28> =
				    %% Line 211
				    ( fun (_cor26) ->
					  case _cor26 of
					    <I = {'etop_proc_info',Pid,_cor71,Reds,_cor72,RT,_cor73,_cor74}> when 'true' ->
						let <_cor24> =
						    %% Line 213
						    case call 'ets':'lookup'
							     (_cor51, Pid) of
						      %% Line 214
						      <[{'etop_proc_info',_cor75,_cor76,OldReds,_cor77,%% Line 215
												       '-',_cor78,_cor79}|%% Line 215
															  []]> when 'true' ->
							  let <_rec16> =
							      %% Line 216
							      call 'erlang':'-'
								  (Reds, OldReds)
							  in  let <_cor16> =
								  %% Line 217
								  call 'erlang':'setelement'
								      (6, I, '-')
							      in  %% Line 216
								  call 'erlang':'setelement'
								      (4, _cor16, _rec16)
						      %% Line 218
						      <[{'etop_proc_info',_cor88,_cor89,OldReds,_cor90,%% Line 219
												       OldRT,_cor91,_cor92}|%% Line 219
															    []]> when 'true' ->
							  let <_rec18> =
							      %% Line 220
							      call 'erlang':'-'
								  (Reds, OldReds)
							  in  let <_rec19> =
								  %% Line 221
								  call 'erlang':'-'
								      (RT, OldRT)
							      in  let <_cor21> =
								      %% Line 221
								      call 'erlang':'setelement'
									  (6, I, _rec19)
								  in  %% Line 220
								      call 'erlang':'setelement'
									  (4, _cor21, _rec18)
						      %% Line 222
						      <[]> when 'true' ->
							  %% Line 223
							  I
						      ( <_cor23> when 'true' ->
							    primop 'match_fail'
								({'case_clause',_cor23})
							-| ['compiler_generated'] )
						    end
						in  do  %% Line 225
							call 'ets':'insert'
							    (_cor51, I)
							_cor24
					    ( <_cor27> when 'true' ->
						  ( primop 'match_fail'
							({'function_clause',_cor27})
						    -| [{'function_name',{'-sort/2-fun-0-',1}}] )
					      -| ['compiler_generated'] )
					  end
				      -| [{'id',{0,0,'-sort/2-fun-0-'}}] )
				in  %% Line 210
				    call 'lists':'map'
					(_cor28, _cor0)
			  end
		      in  let <_cor31> =
			      %% Line 230
			      call 'lists':'keysort'
				  (Tag, _cor29)
			  in  let <PI2> =
				  %% Line 230
				  call 'lists':'reverse'
				      (_cor31)
			      in  %% Line 231
				  call 'lists':'sublist'
				      (PI2, _cor41)
	      -| ['compiler_generated'] )
	    ( <_cor53> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','opts'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'get_tag'/1 =
    %% Line 233
    fun (_cor0) ->
	case _cor0 of
	  <'runtime'> when 'true' ->
	      6
	  %% Line 234
	  <'memory'> when 'true' ->
	      3
	  %% Line 235
	  <'reductions'> when 'true' ->
	      4
	  %% Line 236
	  <'msg_q'> when 'true' ->
	      8
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'get_tag',1}}] )
	    -| ['compiler_generated'] )
	end
'getopt'/2 =
    %% Line 242
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <What,Config = {'opts',_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31}> when ( 'true'
																				 -| ['compiler_generated'] ) ->
	      %% Line 243
	      case What of
		%% Line 244
		<'node'> when 'true' ->
		    _cor15
		%% Line 245
		<'port'> when 'true' ->
		    _cor16
		%% Line 246
		<'accum'> when 'true' ->
		    _cor17
		%% Line 247
		<'intv'> when 'true' ->
		    _cor18
		%% Line 248
		<'lines'> when 'true' ->
		    _cor19
		%% Line 249
		<'sort'> when 'true' ->
		    _cor22
		%% Line 250
		<'width'> when 'true' ->
		    _cor20
		%% Line 251
		<'height'> when 'true' ->
		    _cor21
		%% Line 253
		<'store'> when 'true' ->
		    _cor29
		%% Line 254
		<'host'> when 'true' ->
		    _cor27
		( <_cor12> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor12})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor14,_cor13> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor14,_cor13})
		  -| [{'function_name',{'getopt',2}}] )
	    -| ['compiler_generated'] )
	end
'putopt'/3 =
    %% Line 257
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Key,Value,Config = {'opts',_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25}> when ( 'true'
																				     -| ['compiler_generated'] ) ->
	      let <Config1> =
		  %% Line 258
		  apply 'handle_args'/2
		      ([{Key,Value}|[]], Config)
	      in  %% Line 259
		  ( case Config1 of
		      ( <( {'opts',_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_rec32,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41}
			   -| ['compiler_generated'] )> when 'true' ->
			    do  call 'erlang':'!'
				    (_rec32, {'config',{Key,Value},Config1})
				%% Line 260
				Config1
			-| ['compiler_generated'] )
		      ( <_cor42> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','opts'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6})
		  -| [{'function_name',{'putopt',3}}] )
	    -| ['compiler_generated'] )
	end
'handle_args'/2 =
    %% Line 262
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[{'node',[NodeString|[]]}|R],Config>
	      when call 'erlang':'is_list'
		    (NodeString) ->
	      let <Node> =
		  %% Line 263
		  call 'erlang':'list_to_atom'
		      (NodeString)
	      in  %% Line 264
		  case Config of
		    <{'opts',_cor80,_cor81,_cor82,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96}> when 'true' ->
			let <_cor5> =
			    call 'erlang':'setelement'
				(2, Config, Node)
			in  %% Line 265
			    apply 'handle_args'/2
				(R, _cor5)
		    ( <_cor97> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','opts'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 266
	  <[{'node',Node}|R],Config>
	      when call 'erlang':'is_atom'
		    (Node) ->
	      %% Line 267
	      case Config of
		<{'opts',_cor98,_cor99,_cor100,_cor101,_cor102,_cor103,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_cor110,_cor111,_cor112,_cor113,_cor114}> when 'true' ->
		    let <_cor9> =
			call 'erlang':'setelement'
			    (2, Config, Node)
		    in  %% Line 268
			apply 'handle_args'/2
			    (R, _cor9)
		( <_cor115> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','opts'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 269
	  <[{'port',Port}|R],Config>
	      when call 'erlang':'is_integer'
		    (Port) ->
	      %% Line 270
	      case Config of
		<{'opts',_cor116,_cor117,_cor118,_cor119,_cor120,_cor121,_cor122,_cor123,_cor124,_cor125,_cor126,_cor127,_cor128,_cor129,_cor130,_cor131,_cor132}> when 'true' ->
		    let <_cor13> =
			call 'erlang':'setelement'
			    (3, Config, Port)
		    in  %% Line 271
			apply 'handle_args'/2
			    (R, _cor13)
		( <_cor133> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','opts'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 272
	  <[{'port',[Port|[]]}|R],Config>
	      when call 'erlang':'is_list'
		    (Port) ->
	      let <_rec36> =
		  %% Line 273
		  call 'erlang':'list_to_integer'
		      (Port)
	      in  %% Line 273
		  case Config of
		    <{'opts',_cor134,_cor135,_cor136,_cor137,_cor138,_cor139,_cor140,_cor141,_cor142,_cor143,_cor144,_cor145,_cor146,_cor147,_cor148,_cor149,_cor150}> when 'true' ->
			let <_cor18> =
			    call 'erlang':'setelement'
				(3, Config, _rec36)
			in  %% Line 274
			    apply 'handle_args'/2
				(R, _cor18)
		    ( <_cor151> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','opts'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 275
	  <[{'interval',Time}|R],Config>
	      when call 'erlang':'is_integer'
		    (Time) ->
	      let <_rec38> =
		  %% Line 276
		  call 'erlang':'*'
		      (Time, 1000)
	      in  %% Line 276
		  case Config of
		    <{'opts',_cor152,_cor153,_cor154,_cor155,_cor156,_cor157,_cor158,_cor159,_cor160,_cor161,_cor162,_cor163,_cor164,_cor165,_cor166,_cor167,_cor168}> when 'true' ->
			let <_cor23> =
			    call 'erlang':'setelement'
				(5, Config, _rec38)
			in  %% Line 277
			    apply 'handle_args'/2
				(R, _cor23)
		    ( <_cor169> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','opts'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 278
	  <[{'interval',[Time|[]]}|R],Config>
	      when call 'erlang':'is_list'
		    (Time) ->
	      let <_cor25> =
		  %% Line 279
		  call 'erlang':'list_to_integer'
		      (Time)
	      in  let <_rec40> =
		      %% Line 279
		      call 'erlang':'*'
			  (_cor25, 1000)
		  in  %% Line 279
		      case Config of
			<{'opts',_cor170,_cor171,_cor172,_cor173,_cor174,_cor175,_cor176,_cor177,_cor178,_cor179,_cor180,_cor181,_cor182,_cor183,_cor184,_cor185,_cor186}> when 'true' ->
			    let <_cor29> =
				call 'erlang':'setelement'
				    (5, Config, _rec40)
			    in  %% Line 280
				apply 'handle_args'/2
				    (R, _cor29)
			( <_cor187> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','opts'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
	  %% Line 281
	  <[{'lines',Lines}|R],Config>
	      when call 'erlang':'is_integer'
		    (Lines) ->
	      %% Line 282
	      case Config of
		<{'opts',_cor188,_cor189,_cor190,_cor191,_cor192,_cor193,_cor194,_cor195,_cor196,_cor197,_cor198,_cor199,_cor200,_cor201,_cor202,_cor203,_cor204}> when 'true' ->
		    let <_cor33> =
			call 'erlang':'setelement'
			    (6, Config, Lines)
		    in  %% Line 283
			apply 'handle_args'/2
			    (R, _cor33)
		( <_cor205> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','opts'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 284
	  <[{'lines',[Lines|[]]}|R],Config>
	      when call 'erlang':'is_list'
		    (Lines) ->
	      let <_rec43> =
		  %% Line 285
		  call 'erlang':'list_to_integer'
		      (Lines)
	      in  %% Line 285
		  case Config of
		    <{'opts',_cor206,_cor207,_cor208,_cor209,_cor210,_cor211,_cor212,_cor213,_cor214,_cor215,_cor216,_cor217,_cor218,_cor219,_cor220,_cor221,_cor222}> when 'true' ->
			let <_cor38> =
			    call 'erlang':'setelement'
				(6, Config, _rec43)
			in  %% Line 286
			    apply 'handle_args'/2
				(R, _cor38)
		    ( <_cor223> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','opts'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 287
	  <[{'accumulate',Bool}|R],Config>
	      when call 'erlang':'is_atom'
		    (Bool) ->
	      %% Line 288
	      case Config of
		<{'opts',_cor224,_cor225,_cor226,_cor227,_cor228,_cor229,_cor230,_cor231,_cor232,_cor233,_cor234,_cor235,_cor236,_cor237,_cor238,_cor239,_cor240}> when 'true' ->
		    let <_cor42> =
			call 'erlang':'setelement'
			    (4, Config, Bool)
		    in  %% Line 289
			apply 'handle_args'/2
			    (R, _cor42)
		( <_cor241> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','opts'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 290
	  <[{'accumulate',[Bool|[]]}|R],Config>
	      when call 'erlang':'is_list'
		    (Bool) ->
	      let <_rec46> =
		  %% Line 291
		  call 'erlang':'list_to_atom'
		      (Bool)
	      in  %% Line 291
		  case Config of
		    <{'opts',_cor242,_cor243,_cor244,_cor245,_cor246,_cor247,_cor248,_cor249,_cor250,_cor251,_cor252,_cor253,_cor254,_cor255,_cor256,_cor257,_cor258}> when 'true' ->
			let <_cor47> =
			    call 'erlang':'setelement'
				(4, Config, _rec46)
			in  %% Line 292
			    apply 'handle_args'/2
				(R, _cor47)
		    ( <_cor259> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','opts'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 293
	  <[{'sort',Sort}|R],Config>
	      when call 'erlang':'is_atom'
		    (Sort) ->
	      %% Line 294
	      case Config of
		<{'opts',_cor260,_cor261,_cor262,_cor263,_cor264,_cor265,_cor266,_cor267,_cor268,_cor269,_cor270,_cor271,_cor272,_cor273,_cor274,_cor275,_cor276}> when 'true' ->
		    let <_cor51> =
			call 'erlang':'setelement'
			    (9, Config, Sort)
		    in  %% Line 295
			apply 'handle_args'/2
			    (R, _cor51)
		( <_cor277> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','opts'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 296
	  <[{'sort',[Sort|[]]}|R],Config>
	      when call 'erlang':'is_list'
		    (Sort) ->
	      let <_rec49> =
		  %% Line 297
		  call 'erlang':'list_to_atom'
		      (Sort)
	      in  %% Line 297
		  case Config of
		    <{'opts',_cor278,_cor279,_cor280,_cor281,_cor282,_cor283,_cor284,_cor285,_cor286,_cor287,_cor288,_cor289,_cor290,_cor291,_cor292,_cor293,_cor294}> when 'true' ->
			let <_cor56> =
			    call 'erlang':'setelement'
				(9, Config, _rec49)
			in  %% Line 298
			    apply 'handle_args'/2
				(R, _cor56)
		    ( <_cor295> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','opts'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 299
	  <[{'output',Output}|R],Config>
	      when call 'erlang':'is_atom'
		    (Output) ->
	      let <_rec51> =
		  %% Line 300
		  apply 'output'/1
		      (Output)
	      in  %% Line 300
		  case Config of
		    <{'opts',_cor296,_cor297,_cor298,_cor299,_cor300,_cor301,_cor302,_cor303,_cor304,_cor305,_cor306,_cor307,_cor308,_cor309,_cor310,_cor311,_cor312}> when 'true' ->
			let <_cor61> =
			    call 'erlang':'setelement'
				(11, Config, _rec51)
			in  %% Line 301
			    apply 'handle_args'/2
				(R, _cor61)
		    ( <_cor313> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','opts'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 302
	  <[{'output',[Output|[]]}|R],Config>
	      when call 'erlang':'is_list'
		    (Output) ->
	      let <_cor63> =
		  %% Line 303
		  call 'erlang':'list_to_atom'
		      (Output)
	      in  let <_rec53> =
		      %% Line 303
		      apply 'output'/1
			  (_cor63)
		  in  %% Line 303
		      case Config of
			<{'opts',_cor314,_cor315,_cor316,_cor317,_cor318,_cor319,_cor320,_cor321,_cor322,_cor323,_cor324,_cor325,_cor326,_cor327,_cor328,_cor329,_cor330}> when 'true' ->
			    let <_cor67> =
				call 'erlang':'setelement'
				    (11, Config, _rec53)
			    in  %% Line 304
				apply 'handle_args'/2
				    (R, _cor67)
			( <_cor331> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','opts'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
	  %% Line 305
	  <[{'tracing',OnOff}|R],Config>
	      when call 'erlang':'is_atom'
		    (OnOff) ->
	      %% Line 306
	      case Config of
		<{'opts',_cor332,_cor333,_cor334,_cor335,_cor336,_cor337,_cor338,_cor339,_cor340,_cor341,_cor342,_cor343,_cor344,_cor345,_cor346,_cor347,_cor348}> when 'true' ->
		    let <_cor71> =
			call 'erlang':'setelement'
			    (10, Config, OnOff)
		    in  %% Line 307
			apply 'handle_args'/2
			    (R, _cor71)
		( <_cor349> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','opts'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 308
	  <[{'tracing',[OnOff|[]]}|R],Config>
	      when call 'erlang':'is_list'
		    (OnOff) ->
	      let <_rec56> =
		  %% Line 309
		  call 'erlang':'list_to_atom'
		      (OnOff)
	      in  %% Line 309
		  case Config of
		    <{'opts',_cor350,_cor351,_cor352,_cor353,_cor354,_cor355,_cor356,_cor357,_cor358,_cor359,_cor360,_cor361,_cor362,_cor363,_cor364,_cor365,_cor366}> when 'true' ->
			let <_cor76> =
			    call 'erlang':'setelement'
				(10, Config, _rec56)
			in  %% Line 310
			    apply 'handle_args'/2
				(R, _cor76)
		    ( <_cor367> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','opts'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 312
	  <[_cor368|R],C> when 'true' ->
	      %% Line 313
	      apply 'handle_args'/2
		  (R, C)
	  %% Line 314
	  <[],C> when 'true' ->
	      %% Line 315
	      C
	  ( <_cor79,_cor78> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor79,_cor78})
		  -| [{'function_name',{'handle_args',2}}] )
	    -| ['compiler_generated'] )
	end
'output'/1 =
    %% Line 317
    fun (_cor0) ->
	case _cor0 of
	  <'graphical'> when 'true' ->
	      call 'erlang':'exit'
		  ({'deprecated',[85|[115|[101|[32|[111|[98|[115|[101|[114|[118|[101|[114|[32|[105|[110|[115|[116|[101|[97|[100]]]]]]]]]]]]]]]]]]]]})
	  %% Line 318
	  <'text'> when 'true' ->
	      'etop_txt'
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'output',1}}] )
	    -| ['compiler_generated'] )
	end
'loadinfo'/1 =
    %% Line 321
    fun (_cor0) ->
	%% Line 326
	case _cor0 of
	  <{'etop_info',Now,Procs,WC,RT,RQ,_cor8,_cor9,_cor10}> when 'true' ->
	      let <Cpu> =
		  %% Line 327
		  apply 'calculate_cpu_utilization'/2
		      (WC, RT)
	      in  let <_cor3> =
		      %% Line 329
		      call 'calendar':'now_to_datetime'
			  (Now)
		  in  let <_cor4> =
			  %% Line 329
			  call 'erlang':'element'
			      (2, _cor3)
		      in  let <_cor5> =
			      %% Line 329
			      call 'erlang':'tuple_to_list'
				  (_cor4)
			  in  let <Clock> =
				  %% Line 328
				  call 'io_lib':'format'
				      ([126|[50|[46|[50|[46|[48|[119|[58|[126|[50|[46|[50|[46|[48|[119|[58|[126|[50|[46|[50|[46|[48|[119]]]]]]]]]]]]]]]]]]]]]]], _cor5)
			      in  %% Line 330
				  {Cpu,Procs,RQ,Clock}
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'calculate_cpu_utilization'/2 =
    %% Line 332
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{_cor18,WC},{_cor19,RT}> when 'true' ->
	      %% Line 335
	      case <WC,RT> of
		%% Line 336
		<0,0> when 'true' ->
		    %% Line 337
		    0
		%% Line 338
		<0,_cor20> when 'true' ->
		    %% Line 339
		    100
		%% Line 340
		<_fol779,_fol780> when 'true' ->
		    let <_cor2> =
			%% Line 341
			call 'erlang':'*'
			    (100, RT)
		    in  let <_cor3> =
			    %% Line 341
			    call 'erlang':'/'
				(_cor2, WC)
			in  %% Line 341
			    call 'erlang':'round'
				(_cor3)
	      end
	  %% Line 343
	  <_cor22,'undefined'> when 'true' ->
	      %% Line 346
	      0
	  %% Line 347
	  <_cor23,RTInfo> when 'true' ->
	      let <_cor11> =
		  %% Line 349
		  ( fun (_cor8,_cor7) ->
			case <_cor8,_cor7> of
			  <{_cor24,A,T},{AAcc,TAcc}> when 'true' ->
			      let <_cor6> =
				  call 'erlang':'+'
				      (A, AAcc)
			      in  let <_cor5> =
				      call 'erlang':'+'
					  (T, TAcc)
				  in  {_cor6,_cor5}
			  ( <_cor10,_cor9> when 'true' ->
				( primop 'match_fail'
				      ({'function_clause',_cor10,_cor9})
				  -| [{'function_name',{'-calculate_cpu_utilization/2-fun-0-',2}}] )
			    -| ['compiler_generated'] )
			end
		    -| [{'id',{0,0,'-calculate_cpu_utilization/2-fun-0-'}}] )
	      in  %% Line 352
		  case call 'lists':'foldl'
			   (_cor11, {0,0}, RTInfo) of
		    %% Line 353
		    <{0,0}> when 'true' ->
			%% Line 354
			0
		    %% Line 355
		    <{Active,Total}> when 'true' ->
			let <_cor13> =
			    %% Line 356
			    call 'erlang':'*'
				(100, Active)
			in  let <_cor14> =
				%% Line 356
				call 'erlang':'/'
				    (_cor13, Total)
			    in  %% Line 356
				call 'erlang':'round'
				    (_cor14)
		    ( <_cor15> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor15})
		      -| ['compiler_generated'] )
		  end
	end
'meminfo'/2 =
    %% Line 359
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <MemI,[Tag|Tags]> when 'true' ->
	      let <_cor2> =
		  %% Line 360
		  apply 'get_mem'/2
		      (Tag, MemI)
	      in  let <_cor3> =
		      %% Line 360
		      call 'erlang':'/'
			  (_cor2, 1024)
		  in  let <_cor4> =
			  %% Line 360
			  call 'erlang':'round'
			      (_cor3)
		      in  let <_cor5> =
			      %% Line 360
			      apply 'meminfo'/2
				  (MemI, Tags)
			  in  %% Line 360
			      [_cor4|_cor5]
	  %% Line 361
	  <_X_MemI,[]> when 'true' ->
	      []
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'meminfo',2}}] )
	    -| ['compiler_generated'] )
	end
'get_mem'/2 =
    %% Line 363
    fun (_cor1,_cor0) ->
	%% Line 364
	case call 'lists':'keysearch'
		 (_cor1, 1, _cor0) of
	  %% Line 365
	  <{'value',{_cor5,I}}>
	      when call 'erlang':'=:='
		    (_cor5,
		     _cor1) ->
	      I
	  %% Line 366
	  <_cor6> when 'true' ->
	      0
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('etop')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('etop', _cor0)
end