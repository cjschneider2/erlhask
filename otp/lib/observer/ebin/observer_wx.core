module 'observer_wx' ['check_page_title'/1,
		      'code_change'/3,
		      'create_menus'/2,
		      'create_txt_dialog'/4,
		      'get_attrib'/1,
		      'get_tracer'/0,
		      'handle_call'/3,
		      'handle_cast'/2,
		      'handle_event'/2,
		      'handle_info'/2,
		      'init'/1,
		      'module_info'/0,
		      'module_info'/1,
		      'return_to_localnode'/2,
		      'set_status'/1,
		      'start'/0,
		      'stop'/0,
		      'terminate'/2,
		      'try_rpc'/4]
    attributes [%% Line 20
		'behaviour' =
		    %% Line 20
		    ['wx_object'],
		%% Line 25
		'type' =
		    %% Line 25
		    [{{'record','wx'},[{'typed_record_field',{'record_field',25,{'atom',25,'id'}},{'type',25,'union',[{'atom',25,'undefined'}|[{'type',25,'integer',[]}]]}}|[{'typed_record_field',{'record_field',26,{'atom',26,'obj'}},{'type',26,'union',[{'atom',26,'undefined'}|[{'remote_type',26,[{'atom',26,'wx'}|[{'atom',26,'wx_object'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',27,{'atom',27,'userData'}},{'type',27,'union',[{'atom',27,'undefined'}|[{'type',27,'term',[]}]]}}|[{'typed_record_field',{'record_field',28,{'atom',28,'event'}},{'type',28,'union',[{'atom',28,'undefined'}|[{'type',28,'event',[]}]]}}]]]],[]}],
		%% Line 31
		'type' =
		    %% Line 31
		    [{'wx',{'type',31,'record',[{'atom',31,'wx'}]},[]}],
		%% Line 35
		'type' =
		    %% Line 35
		    [{{'record','wxNavigationKey'},[{'typed_record_field',{'record_field',35,{'atom',35,'type'}},{'type',35,'union',[{'atom',35,'undefined'}|[{'type',35,'wxNavigationKeyEventType',[]}]]}}|[{'typed_record_field',{'record_field',36,{'atom',36,'flags'}},{'type',36,'union',[{'atom',36,'undefined'}|[{'type',36,'integer',[]}]]}}|[{'typed_record_field',{'record_field',37,{'atom',37,'focus'}},{'type',37,'union',[{'atom',37,'undefined'}|[{'remote_type',37,[{'atom',37,'wxWindow'}|[{'atom',37,'wxWindow'}|[[]]]]}]]}}]]],[]}],
		%% Line 38
		'type' =
		    %% Line 38
		    [{'wxNavigationKeyEventType',{'atom',38,'navigation_key'},[]}],
		%% Line 39
		'type' =
		    %% Line 39
		    [{'wxNavigationKey',{'type',39,'record',[{'atom',39,'wxNavigationKey'}]},[]}],
		%% Line 41
		'type' =
		    %% Line 41
		    [{{'record','wxSash'},[{'typed_record_field',{'record_field',41,{'atom',41,'type'}},{'type',41,'union',[{'atom',41,'undefined'}|[{'type',41,'wxSashEventType',[]}]]}}|[{'typed_record_field',{'record_field',42,{'atom',42,'edge'}},{'type',42,'union',[{'atom',42,'undefined'}|[{'remote_type',42,[{'atom',42,'wx'}|[{'atom',42,'wx_enum'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',43,{'atom',43,'dragRect'}},{'type',43,'union',[{'atom',43,'undefined'}|[{'type',43,'tuple',[{'ann_type',43,[{'var',43,'X'}|[{'type',43,'integer',[]}]]}|[{'ann_type',43,[{'var',43,'Y'}|[{'type',43,'integer',[]}]]}|[{'ann_type',43,[{'var',43,'W'}|[{'type',43,'integer',[]}]]}|[{'ann_type',43,[{'var',43,'H'}|[{'type',43,'integer',[]}]]}]]]]}]]}}|[{'typed_record_field',{'record_field',44,{'atom',44,'dragStatus'}},{'type',44,'union',[{'atom',44,'undefined'}|[{'remote_type',44,[{'atom',44,'wx'}|[{'atom',44,'wx_enum'}|[[]]]]}]]}}]]]],[]}],
		%% Line 45
		'type' =
		    %% Line 45
		    [{'wxSashEventType',{'atom',45,'sash_dragged'},[]}],
		%% Line 46
		'type' =
		    %% Line 46
		    [{'wxSash',{'type',46,'record',[{'atom',46,'wxSash'}]},[]}],
		%% Line 48
		'type' =
		    %% Line 48
		    [{{'record','wxList'},[{'typed_record_field',{'record_field',48,{'atom',48,'type'}},{'type',48,'union',[{'atom',48,'undefined'}|[{'type',48,'wxListEventType',[]}]]}}|[{'typed_record_field',{'record_field',49,{'atom',49,'code'}},{'type',49,'union',[{'atom',49,'undefined'}|[{'type',49,'integer',[]}]]}}|[{'typed_record_field',{'record_field',50,{'atom',50,'oldItemIndex'}},{'type',50,'union',[{'atom',50,'undefined'}|[{'type',50,'integer',[]}]]}}|[{'typed_record_field',{'record_field',51,{'atom',51,'itemIndex'}},{'type',51,'union',[{'atom',51,'undefined'}|[{'type',51,'integer',[]}]]}}|[{'typed_record_field',{'record_field',52,{'atom',52,'col'}},{'type',52,'union',[{'atom',52,'undefined'}|[{'type',52,'integer',[]}]]}}|[{'typed_record_field',{'record_field',53,{'atom',53,'pointDrag'}},{'type',53,'union',[{'atom',53,'undefined'}|[{'type',53,'tuple',[{'ann_type',53,[{'var',53,'X'}|[{'type',53,'integer',[]}]]}|[{'ann_type',53,[{'var',53,'Y'}|[{'type',53,'integer',[]}]]}]]}]]}}]]]]]],[]}],
		%% Line 54
		'type' =
		    %% Line 54
		    [{'wxListEventType',{'type',54,'union',[{'atom',54,'command_list_begin_drag'}|[{'atom',54,'command_list_begin_rdrag'}|[{'atom',54,'command_list_begin_label_edit'}|[{'atom',54,'command_list_end_label_edit'}|[{'atom',54,'command_list_delete_item'}|[{'atom',54,'command_list_delete_all_items'}|[{'atom',54,'command_list_key_down'}|[{'atom',54,'command_list_insert_item'}|[{'atom',54,'command_list_col_click'}|[{'atom',54,'command_list_col_right_click'}|[{'atom',54,'command_list_col_begin_drag'}|[{'atom',54,'command_list_col_dragging'}|[{'atom',54,'command_list_col_end_drag'}|[{'atom',54,'command_list_item_selected'}|[{'atom',54,'command_list_item_deselected'}|[{'atom',54,'command_list_item_right_click'}|[{'atom',54,'command_list_item_middle_click'}|[{'atom',54,'command_list_item_activated'}|[{'atom',54,'command_list_item_focused'}|[{'atom',54,'command_list_cache_hint'}]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 55
		'type' =
		    %% Line 55
		    [{'wxList',{'type',55,'record',[{'atom',55,'wxList'}]},[]}],
		%% Line 57
		'type' =
		    %% Line 57
		    [{{'record','wxNotebook'},[{'typed_record_field',{'record_field',57,{'atom',57,'type'}},{'type',57,'union',[{'atom',57,'undefined'}|[{'type',57,'wxNotebookEventType',[]}]]}}],[]}],
		%% Line 58
		'type' =
		    %% Line 58
		    [{'wxNotebookEventType',{'type',58,'union',[{'atom',58,'command_notebook_page_changed'}|[{'atom',58,'command_notebook_page_changing'}]]},[]}],
		%% Line 59
		'type' =
		    %% Line 59
		    [{'wxNotebook',{'type',59,'record',[{'atom',59,'wxNotebook'}]},[]}],
		%% Line 61
		'type' =
		    %% Line 61
		    [{{'record','wxDisplayChanged'},[{'typed_record_field',{'record_field',61,{'atom',61,'type'}},{'type',61,'union',[{'atom',61,'undefined'}|[{'type',61,'wxDisplayChangedEventType',[]}]]}}],[]}],
		%% Line 62
		'type' =
		    %% Line 62
		    [{'wxDisplayChangedEventType',{'atom',62,'display_changed'},[]}],
		%% Line 63
		'type' =
		    %% Line 63
		    [{'wxDisplayChanged',{'type',63,'record',[{'atom',63,'wxDisplayChanged'}]},[]}],
		%% Line 65
		'type' =
		    %% Line 65
		    [{{'record','wxErase'},[{'typed_record_field',{'record_field',65,{'atom',65,'type'}},{'type',65,'union',[{'atom',65,'undefined'}|[{'type',65,'wxEraseEventType',[]}]]}}|[{'typed_record_field',{'record_field',66,{'atom',66,'dc'}},{'type',66,'union',[{'atom',66,'undefined'}|[{'remote_type',66,[{'atom',66,'wxDC'}|[{'atom',66,'wxDC'}|[[]]]]}]]}}]],[]}],
		%% Line 67
		'type' =
		    %% Line 67
		    [{'wxEraseEventType',{'atom',67,'erase_background'},[]}],
		%% Line 68
		'type' =
		    %% Line 68
		    [{'wxErase',{'type',68,'record',[{'atom',68,'wxErase'}]},[]}],
		%% Line 70
		'type' =
		    %% Line 70
		    [{{'record','wxKey'},[{'typed_record_field',{'record_field',70,{'atom',70,'type'}},{'type',70,'union',[{'atom',70,'undefined'}|[{'type',70,'wxKeyEventType',[]}]]}}|[{'typed_record_field',{'record_field',71,{'atom',71,'x'}},{'type',71,'union',[{'atom',71,'undefined'}|[{'type',71,'integer',[]}]]}}|[{'typed_record_field',{'record_field',72,{'atom',72,'y'}},{'type',72,'union',[{'atom',72,'undefined'}|[{'type',72,'integer',[]}]]}}|[{'typed_record_field',{'record_field',73,{'atom',73,'keyCode'}},{'type',73,'union',[{'atom',73,'undefined'}|[{'type',73,'integer',[]}]]}}|[{'typed_record_field',{'record_field',74,{'atom',74,'controlDown'}},{'type',74,'union',[{'atom',74,'undefined'}|[{'type',74,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',75,{'atom',75,'shiftDown'}},{'type',75,'union',[{'atom',75,'undefined'}|[{'type',75,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',76,{'atom',76,'altDown'}},{'type',76,'union',[{'atom',76,'undefined'}|[{'type',76,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',77,{'atom',77,'metaDown'}},{'type',77,'union',[{'atom',77,'undefined'}|[{'type',77,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',78,{'atom',78,'scanCode'}},{'type',78,'union',[{'atom',78,'undefined'}|[{'type',78,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',79,{'atom',79,'uniChar'}},{'type',79,'union',[{'atom',79,'undefined'}|[{'type',79,'integer',[]}]]}}|[{'typed_record_field',{'record_field',80,{'atom',80,'rawCode'}},{'type',80,'union',[{'atom',80,'undefined'}|[{'type',80,'integer',[]}]]}}|[{'typed_record_field',{'record_field',81,{'atom',81,'rawFlags'}},{'type',81,'union',[{'atom',81,'undefined'}|[{'type',81,'integer',[]}]]}}]]]]]]]]]]]],[]}],
		%% Line 82
		'type' =
		    %% Line 82
		    [{'wxKeyEventType',{'type',82,'union',[{'atom',82,'char'}|[{'atom',82,'char_hook'}|[{'atom',82,'key_down'}|[{'atom',82,'key_up'}]]]]},[]}],
		%% Line 83
		'type' =
		    %% Line 83
		    [{'wxKey',{'type',83,'record',[{'atom',83,'wxKey'}]},[]}],
		%% Line 85
		'type' =
		    %% Line 85
		    [{{'record','wxWindowDestroy'},[{'typed_record_field',{'record_field',85,{'atom',85,'type'}},{'type',85,'union',[{'atom',85,'undefined'}|[{'type',85,'wxWindowDestroyEventType',[]}]]}}],[]}],
		%% Line 86
		'type' =
		    %% Line 86
		    [{'wxWindowDestroyEventType',{'atom',86,'destroy'},[]}],
		%% Line 87
		'type' =
		    %% Line 87
		    [{'wxWindowDestroy',{'type',87,'record',[{'atom',87,'wxWindowDestroy'}]},[]}],
		%% Line 89
		'type' =
		    %% Line 89
		    [{{'record','wxCalendar'},[{'typed_record_field',{'record_field',89,{'atom',89,'type'}},{'type',89,'union',[{'atom',89,'undefined'}|[{'type',89,'wxCalendarEventType',[]}]]}}],[]}],
		%% Line 90
		'type' =
		    %% Line 90
		    [{'wxCalendarEventType',{'type',90,'union',[{'atom',90,'calendar_sel_changed'}|[{'atom',90,'calendar_day_changed'}|[{'atom',90,'calendar_month_changed'}|[{'atom',90,'calendar_year_changed'}|[{'atom',90,'calendar_doubleclicked'}|[{'atom',90,'calendar_weekday_clicked'}]]]]]]},[]}],
		%% Line 91
		'type' =
		    %% Line 91
		    [{'wxCalendar',{'type',91,'record',[{'atom',91,'wxCalendar'}]},[]}],
		%% Line 93
		'type' =
		    %% Line 93
		    [{{'record','wxSplitter'},[{'typed_record_field',{'record_field',93,{'atom',93,'type'}},{'type',93,'union',[{'atom',93,'undefined'}|[{'type',93,'wxSplitterEventType',[]}]]}}],[]}],
		%% Line 94
		'type' =
		    %% Line 94
		    [{'wxSplitterEventType',{'type',94,'union',[{'atom',94,'command_splitter_sash_pos_changed'}|[{'atom',94,'command_splitter_sash_pos_changing'}|[{'atom',94,'command_splitter_doubleclicked'}|[{'atom',94,'command_splitter_unsplit'}]]]]},[]}],
		%% Line 95
		'type' =
		    %% Line 95
		    [{'wxSplitter',{'type',95,'record',[{'atom',95,'wxSplitter'}]},[]}],
		%% Line 97
		'type' =
		    %% Line 97
		    [{{'record','wxScroll'},[{'typed_record_field',{'record_field',97,{'atom',97,'type'}},{'type',97,'union',[{'atom',97,'undefined'}|[{'type',97,'wxScrollEventType',[]}]]}}|[{'typed_record_field',{'record_field',98,{'atom',98,'commandInt'}},{'type',98,'union',[{'atom',98,'undefined'}|[{'type',98,'integer',[]}]]}}|[{'typed_record_field',{'record_field',99,{'atom',99,'extraLong'}},{'type',99,'union',[{'atom',99,'undefined'}|[{'type',99,'integer',[]}]]}}]]],[]}],
		%% Line 100
		'type' =
		    %% Line 100
		    [{'wxScrollEventType',{'type',100,'union',[{'atom',100,'scroll_top'}|[{'atom',100,'scroll_bottom'}|[{'atom',100,'scroll_lineup'}|[{'atom',100,'scroll_linedown'}|[{'atom',100,'scroll_pageup'}|[{'atom',100,'scroll_pagedown'}|[{'atom',100,'scroll_thumbtrack'}|[{'atom',100,'scroll_thumbrelease'}|[{'atom',100,'scroll_changed'}]]]]]]]]]},[]}],
		%% Line 101
		'type' =
		    %% Line 101
		    [{'wxScroll',{'type',101,'record',[{'atom',101,'wxScroll'}]},[]}],
		%% Line 103
		'type' =
		    %% Line 103
		    [{{'record','wxMenu'},[{'typed_record_field',{'record_field',103,{'atom',103,'type'}},{'type',103,'union',[{'atom',103,'undefined'}|[{'type',103,'wxMenuEventType',[]}]]}}],[]}],
		%% Line 104
		'type' =
		    %% Line 104
		    [{'wxMenuEventType',{'type',104,'union',[{'atom',104,'menu_open'}|[{'atom',104,'menu_close'}|[{'atom',104,'menu_highlight'}]]]},[]}],
		%% Line 105
		'type' =
		    %% Line 105
		    [{'wxMenu',{'type',105,'record',[{'atom',105,'wxMenu'}]},[]}],
		%% Line 107
		'type' =
		    %% Line 107
		    [{{'record','wxContextMenu'},[{'typed_record_field',{'record_field',107,{'atom',107,'type'}},{'type',107,'union',[{'atom',107,'undefined'}|[{'type',107,'wxContextMenuEventType',[]}]]}}],[]}],
		%% Line 108
		'type' =
		    %% Line 108
		    [{'wxContextMenuEventType',{'atom',108,'context_menu'},[]}],
		%% Line 109
		'type' =
		    %% Line 109
		    [{'wxContextMenu',{'type',109,'record',[{'atom',109,'wxContextMenu'}]},[]}],
		%% Line 111
		'type' =
		    %% Line 111
		    [{{'record','wxShow'},[{'typed_record_field',{'record_field',111,{'atom',111,'type'}},{'type',111,'union',[{'atom',111,'undefined'}|[{'type',111,'wxShowEventType',[]}]]}}],[]}],
		%% Line 112
		'type' =
		    %% Line 112
		    [{'wxShowEventType',{'atom',112,'show'},[]}],
		%% Line 113
		'type' =
		    %% Line 113
		    [{'wxShow',{'type',113,'record',[{'atom',113,'wxShow'}]},[]}],
		%% Line 115
		'type' =
		    %% Line 115
		    [{{'record','wxSpin'},[{'typed_record_field',{'record_field',115,{'atom',115,'type'}},{'type',115,'union',[{'atom',115,'undefined'}|[{'type',115,'wxSpinEventType',[]}]]}}|[{'typed_record_field',{'record_field',116,{'atom',116,'commandInt'}},{'type',116,'union',[{'atom',116,'undefined'}|[{'type',116,'integer',[]}]]}}]],[]}],
		%% Line 117
		'type' =
		    %% Line 117
		    [{'wxSpinEventType',{'type',117,'union',[{'atom',117,'command_spinctrl_updated'}|[{'atom',117,'spin_up'}|[{'atom',117,'spin_down'}|[{'atom',117,'spin'}]]]]},[]}],
		%% Line 118
		'type' =
		    %% Line 118
		    [{'wxSpin',{'type',118,'record',[{'atom',118,'wxSpin'}]},[]}],
		%% Line 120
		'type' =
		    %% Line 120
		    [{{'record','wxSetCursor'},[{'typed_record_field',{'record_field',120,{'atom',120,'type'}},{'type',120,'union',[{'atom',120,'undefined'}|[{'type',120,'wxSetCursorEventType',[]}]]}}],[]}],
		%% Line 121
		'type' =
		    %% Line 121
		    [{'wxSetCursorEventType',{'atom',121,'set_cursor'},[]}],
		%% Line 122
		'type' =
		    %% Line 122
		    [{'wxSetCursor',{'type',122,'record',[{'atom',122,'wxSetCursor'}]},[]}],
		%% Line 124
		'type' =
		    %% Line 124
		    [{{'record','wxFontPicker'},[{'typed_record_field',{'record_field',124,{'atom',124,'type'}},{'type',124,'union',[{'atom',124,'undefined'}|[{'type',124,'wxFontPickerEventType',[]}]]}}|[{'typed_record_field',{'record_field',125,{'atom',125,'font'}},{'type',125,'union',[{'atom',125,'undefined'}|[{'remote_type',125,[{'atom',125,'wxFont'}|[{'atom',125,'wxFont'}|[[]]]]}]]}}]],[]}],
		%% Line 126
		'type' =
		    %% Line 126
		    [{'wxFontPickerEventType',{'atom',126,'command_fontpicker_changed'},[]}],
		%% Line 127
		'type' =
		    %% Line 127
		    [{'wxFontPicker',{'type',127,'record',[{'atom',127,'wxFontPicker'}]},[]}],
		%% Line 129
		'type' =
		    %% Line 129
		    [{{'record','wxScrollWin'},[{'typed_record_field',{'record_field',129,{'atom',129,'type'}},{'type',129,'union',[{'atom',129,'undefined'}|[{'type',129,'wxScrollWinEventType',[]}]]}}],[]}],
		%% Line 130
		'type' =
		    %% Line 130
		    [{'wxScrollWinEventType',{'type',130,'union',[{'atom',130,'scrollwin_top'}|[{'atom',130,'scrollwin_bottom'}|[{'atom',130,'scrollwin_lineup'}|[{'atom',130,'scrollwin_linedown'}|[{'atom',130,'scrollwin_pageup'}|[{'atom',130,'scrollwin_pagedown'}|[{'atom',130,'scrollwin_thumbtrack'}|[{'atom',130,'scrollwin_thumbrelease'}]]]]]]]]},[]}],
		%% Line 131
		'type' =
		    %% Line 131
		    [{'wxScrollWin',{'type',131,'record',[{'atom',131,'wxScrollWin'}]},[]}],
		%% Line 133
		'type' =
		    %% Line 133
		    [{{'record','wxPaint'},[{'typed_record_field',{'record_field',133,{'atom',133,'type'}},{'type',133,'union',[{'atom',133,'undefined'}|[{'type',133,'wxPaintEventType',[]}]]}}],[]}],
		%% Line 134
		'type' =
		    %% Line 134
		    [{'wxPaintEventType',{'atom',134,'paint'},[]}],
		%% Line 135
		'type' =
		    %% Line 135
		    [{'wxPaint',{'type',135,'record',[{'atom',135,'wxPaint'}]},[]}],
		%% Line 137
		'type' =
		    %% Line 137
		    [{{'record','wxChildFocus'},[{'typed_record_field',{'record_field',137,{'atom',137,'type'}},{'type',137,'union',[{'atom',137,'undefined'}|[{'type',137,'wxChildFocusEventType',[]}]]}}],[]}],
		%% Line 138
		'type' =
		    %% Line 138
		    [{'wxChildFocusEventType',{'atom',138,'child_focus'},[]}],
		%% Line 139
		'type' =
		    %% Line 139
		    [{'wxChildFocus',{'type',139,'record',[{'atom',139,'wxChildFocus'}]},[]}],
		%% Line 141
		'type' =
		    %% Line 141
		    [{{'record','wxMaximize'},[{'typed_record_field',{'record_field',141,{'atom',141,'type'}},{'type',141,'union',[{'atom',141,'undefined'}|[{'type',141,'wxMaximizeEventType',[]}]]}}],[]}],
		%% Line 142
		'type' =
		    %% Line 142
		    [{'wxMaximizeEventType',{'atom',142,'maximize'},[]}],
		%% Line 143
		'type' =
		    %% Line 143
		    [{'wxMaximize',{'type',143,'record',[{'atom',143,'wxMaximize'}]},[]}],
		%% Line 145
		'type' =
		    %% Line 145
		    [{{'record','wxFileDirPicker'},[{'typed_record_field',{'record_field',145,{'atom',145,'type'}},{'type',145,'union',[{'atom',145,'undefined'}|[{'type',145,'wxFileDirPickerEventType',[]}]]}}|[{'typed_record_field',{'record_field',146,{'atom',146,'path'}},{'type',146,'union',[{'atom',146,'undefined'}|[{'remote_type',146,[{'atom',146,'unicode'}|[{'atom',146,'chardata'}|[[]]]]}]]}}]],[]}],
		%% Line 147
		'type' =
		    %% Line 147
		    [{'wxFileDirPickerEventType',{'type',147,'union',[{'atom',147,'command_filepicker_changed'}|[{'atom',147,'command_dirpicker_changed'}]]},[]}],
		%% Line 148
		'type' =
		    %% Line 148
		    [{'wxFileDirPicker',{'type',148,'record',[{'atom',148,'wxFileDirPicker'}]},[]}],
		%% Line 150
		'type' =
		    %% Line 150
		    [{{'record','wxFocus'},[{'typed_record_field',{'record_field',150,{'atom',150,'type'}},{'type',150,'union',[{'atom',150,'undefined'}|[{'type',150,'wxFocusEventType',[]}]]}}],[]}],
		%% Line 151
		'type' =
		    %% Line 151
		    [{'wxFocusEventType',{'type',151,'union',[{'atom',151,'set_focus'}|[{'atom',151,'kill_focus'}]]},[]}],
		%% Line 152
		'type' =
		    %% Line 152
		    [{'wxFocus',{'type',152,'record',[{'atom',152,'wxFocus'}]},[]}],
		%% Line 154
		'type' =
		    %% Line 154
		    [{{'record','wxDate'},[{'typed_record_field',{'record_field',154,{'atom',154,'type'}},{'type',154,'union',[{'atom',154,'undefined'}|[{'type',154,'wxDateEventType',[]}]]}}|[{'typed_record_field',{'record_field',155,{'atom',155,'date'}},{'type',155,'union',[{'atom',155,'undefined'}|[{'remote_type',155,[{'atom',155,'wx'}|[{'atom',155,'wx_datetime'}|[[]]]]}]]}}]],[]}],
		%% Line 156
		'type' =
		    %% Line 156
		    [{'wxDateEventType',{'atom',156,'date_changed'},[]}],
		%% Line 157
		'type' =
		    %% Line 157
		    [{'wxDate',{'type',157,'record',[{'atom',157,'wxDate'}]},[]}],
		%% Line 159
		'type' =
		    %% Line 159
		    [{{'record','wxHtmlLink'},[{'typed_record_field',{'record_field',159,{'atom',159,'type'}},{'type',159,'union',[{'atom',159,'undefined'}|[{'type',159,'wxHtmlLinkEventType',[]}]]}}|[{'typed_record_field',{'record_field',160,{'atom',160,'linkInfo'}},{'type',160,'union',[{'atom',160,'undefined'}|[{'remote_type',160,[{'atom',160,'wx'}|[{'atom',160,'wx_wxHtmlLinkInfo'}|[[]]]]}]]}}]],[]}],
		%% Line 161
		'type' =
		    %% Line 161
		    [{'wxHtmlLinkEventType',{'atom',161,'command_html_link_clicked'},[]}],
		%% Line 162
		'type' =
		    %% Line 162
		    [{'wxHtmlLink',{'type',162,'record',[{'atom',162,'wxHtmlLink'}]},[]}],
		%% Line 164
		'type' =
		    %% Line 164
		    [{{'record','wxHelp'},[{'typed_record_field',{'record_field',164,{'atom',164,'type'}},{'type',164,'union',[{'atom',164,'undefined'}|[{'type',164,'wxHelpEventType',[]}]]}}],[]}],
		%% Line 165
		'type' =
		    %% Line 165
		    [{'wxHelpEventType',{'type',165,'union',[{'atom',165,'help'}|[{'atom',165,'detailed_help'}]]},[]}],
		%% Line 166
		'type' =
		    %% Line 166
		    [{'wxHelp',{'type',166,'record',[{'atom',166,'wxHelp'}]},[]}],
		%% Line 168
		'type' =
		    %% Line 168
		    [{{'record','wxActivate'},[{'typed_record_field',{'record_field',168,{'atom',168,'type'}},{'type',168,'union',[{'atom',168,'undefined'}|[{'type',168,'wxActivateEventType',[]}]]}}|[{'typed_record_field',{'record_field',169,{'atom',169,'active'}},{'type',169,'union',[{'atom',169,'undefined'}|[{'type',169,'boolean',[]}]]}}]],[]}],
		%% Line 170
		'type' =
		    %% Line 170
		    [{'wxActivateEventType',{'type',170,'union',[{'atom',170,'activate'}|[{'atom',170,'activate_app'}|[{'atom',170,'hibernate'}]]]},[]}],
		%% Line 171
		'type' =
		    %% Line 171
		    [{'wxActivate',{'type',171,'record',[{'atom',171,'wxActivate'}]},[]}],
		%% Line 173
		'type' =
		    %% Line 173
		    [{{'record','wxStyledText'},[{'typed_record_field',{'record_field',173,{'atom',173,'type'}},{'type',173,'union',[{'atom',173,'undefined'}|[{'type',173,'wxStyledTextEventType',[]}]]}}|[{'typed_record_field',{'record_field',174,{'atom',174,'position'}},{'type',174,'union',[{'atom',174,'undefined'}|[{'type',174,'integer',[]}]]}}|[{'typed_record_field',{'record_field',175,{'atom',175,'key'}},{'type',175,'union',[{'atom',175,'undefined'}|[{'type',175,'integer',[]}]]}}|[{'typed_record_field',{'record_field',176,{'atom',176,'modifiers'}},{'type',176,'union',[{'atom',176,'undefined'}|[{'type',176,'integer',[]}]]}}|[{'typed_record_field',{'record_field',177,{'atom',177,'modificationType'}},{'type',177,'union',[{'atom',177,'undefined'}|[{'type',177,'integer',[]}]]}}|[{'typed_record_field',{'record_field',178,{'atom',178,'text'}},{'type',178,'union',[{'atom',178,'undefined'}|[{'remote_type',178,[{'atom',178,'unicode'}|[{'atom',178,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',179,{'atom',179,'length'}},{'type',179,'union',[{'atom',179,'undefined'}|[{'type',179,'integer',[]}]]}}|[{'typed_record_field',{'record_field',180,{'atom',180,'linesAdded'}},{'type',180,'union',[{'atom',180,'undefined'}|[{'type',180,'integer',[]}]]}}|[{'typed_record_field',{'record_field',181,{'atom',181,'line'}},{'type',181,'union',[{'atom',181,'undefined'}|[{'type',181,'integer',[]}]]}}|[{'typed_record_field',{'record_field',182,{'atom',182,'foldLevelNow'}},{'type',182,'union',[{'atom',182,'undefined'}|[{'type',182,'integer',[]}]]}}|[{'typed_record_field',{'record_field',183,{'atom',183,'foldLevelPrev'}},{'type',183,'union',[{'atom',183,'undefined'}|[{'type',183,'integer',[]}]]}}|[{'typed_record_field',{'record_field',184,{'atom',184,'margin'}},{'type',184,'union',[{'atom',184,'undefined'}|[{'type',184,'integer',[]}]]}}|[{'typed_record_field',{'record_field',185,{'atom',185,'message'}},{'type',185,'union',[{'atom',185,'undefined'}|[{'type',185,'integer',[]}]]}}|[{'typed_record_field',{'record_field',186,{'atom',186,'wParam'}},{'type',186,'union',[{'atom',186,'undefined'}|[{'type',186,'integer',[]}]]}}|[{'typed_record_field',{'record_field',187,{'atom',187,'lParam'}},{'type',187,'union',[{'atom',187,'undefined'}|[{'type',187,'integer',[]}]]}}|[{'typed_record_field',{'record_field',188,{'atom',188,'listType'}},{'type',188,'union',[{'atom',188,'undefined'}|[{'type',188,'integer',[]}]]}}|[{'typed_record_field',{'record_field',189,{'atom',189,'x'}},{'type',189,'union',[{'atom',189,'undefined'}|[{'type',189,'integer',[]}]]}}|[{'typed_record_field',{'record_field',190,{'atom',190,'y'}},{'type',190,'union',[{'atom',190,'undefined'}|[{'type',190,'integer',[]}]]}}|[{'typed_record_field',{'record_field',191,{'atom',191,'dragText'}},{'type',191,'union',[{'atom',191,'undefined'}|[{'remote_type',191,[{'atom',191,'unicode'}|[{'atom',191,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',192,{'atom',192,'dragAllowMove'}},{'type',192,'union',[{'atom',192,'undefined'}|[{'type',192,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',193,{'atom',193,'dragResult'}},{'type',193,'union',[{'atom',193,'undefined'}|[{'remote_type',193,[{'atom',193,'wx'}|[{'atom',193,'wx_enum'}|[[]]]]}]]}}]]]]]]]]]]]]]]]]]]]]],[]}],
		%% Line 194
		'type' =
		    %% Line 194
		    [{'wxStyledTextEventType',{'type',194,'union',[{'atom',194,'stc_change'}|[{'atom',194,'stc_styleneeded'}|[{'atom',194,'stc_charadded'}|[{'atom',194,'stc_savepointreached'}|[{'atom',194,'stc_savepointleft'}|[{'atom',194,'stc_romodifyattempt'}|[{'atom',194,'stc_key'}|[{'atom',194,'stc_doubleclick'}|[{'atom',194,'stc_updateui'}|[{'atom',194,'stc_modified'}|[{'atom',194,'stc_macrorecord'}|[{'atom',194,'stc_marginclick'}|[{'atom',194,'stc_needshown'}|[{'atom',194,'stc_painted'}|[{'atom',194,'stc_userlistselection'}|[{'atom',194,'stc_uridropped'}|[{'atom',194,'stc_dwellstart'}|[{'atom',194,'stc_dwellend'}|[{'atom',194,'stc_start_drag'}|[{'atom',194,'stc_drag_over'}|[{'atom',194,'stc_do_drop'}|[{'atom',194,'stc_zoom'}|[{'atom',194,'stc_hotspot_click'}|[{'atom',194,'stc_hotspot_dclick'}|[{'atom',194,'stc_calltip_click'}|[{'atom',194,'stc_autocomp_selection'}]]]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 195
		'type' =
		    %% Line 195
		    [{'wxStyledText',{'type',195,'record',[{'atom',195,'wxStyledText'}]},[]}],
		%% Line 197
		'type' =
		    %% Line 197
		    [{{'record','wxSysColourChanged'},[{'typed_record_field',{'record_field',197,{'atom',197,'type'}},{'type',197,'union',[{'atom',197,'undefined'}|[{'type',197,'wxSysColourChangedEventType',[]}]]}}],[]}],
		%% Line 198
		'type' =
		    %% Line 198
		    [{'wxSysColourChangedEventType',{'atom',198,'sys_colour_changed'},[]}],
		%% Line 199
		'type' =
		    %% Line 199
		    [{'wxSysColourChanged',{'type',199,'record',[{'atom',199,'wxSysColourChanged'}]},[]}],
		%% Line 201
		'type' =
		    %% Line 201
		    [{{'record','wxGrid'},[{'typed_record_field',{'record_field',201,{'atom',201,'type'}},{'type',201,'union',[{'atom',201,'undefined'}|[{'type',201,'wxGridEventType',[]}]]}}|[{'typed_record_field',{'record_field',202,{'atom',202,'row'}},{'type',202,'union',[{'atom',202,'undefined'}|[{'type',202,'integer',[]}]]}}|[{'typed_record_field',{'record_field',203,{'atom',203,'col'}},{'type',203,'union',[{'atom',203,'undefined'}|[{'type',203,'integer',[]}]]}}|[{'typed_record_field',{'record_field',204,{'atom',204,'x'}},{'type',204,'union',[{'atom',204,'undefined'}|[{'type',204,'integer',[]}]]}}|[{'typed_record_field',{'record_field',205,{'atom',205,'y'}},{'type',205,'union',[{'atom',205,'undefined'}|[{'type',205,'integer',[]}]]}}|[{'typed_record_field',{'record_field',206,{'atom',206,'selecting'}},{'type',206,'union',[{'atom',206,'undefined'}|[{'type',206,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',207,{'atom',207,'control'}},{'type',207,'union',[{'atom',207,'undefined'}|[{'type',207,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',208,{'atom',208,'meta'}},{'type',208,'union',[{'atom',208,'undefined'}|[{'type',208,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',209,{'atom',209,'shift'}},{'type',209,'union',[{'atom',209,'undefined'}|[{'type',209,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',210,{'atom',210,'alt'}},{'type',210,'union',[{'atom',210,'undefined'}|[{'type',210,'boolean',[]}]]}}]]]]]]]]]],[]}],
		%% Line 211
		'type' =
		    %% Line 211
		    [{'wxGridEventType',{'type',211,'union',[{'atom',211,'grid_cell_left_click'}|[{'atom',211,'grid_cell_right_click'}|[{'atom',211,'grid_cell_left_dclick'}|[{'atom',211,'grid_cell_right_dclick'}|[{'atom',211,'grid_label_left_click'}|[{'atom',211,'grid_label_right_click'}|[{'atom',211,'grid_label_left_dclick'}|[{'atom',211,'grid_label_right_dclick'}|[{'atom',211,'grid_row_size'}|[{'atom',211,'grid_col_size'}|[{'atom',211,'grid_range_select'}|[{'atom',211,'grid_cell_change'}|[{'atom',211,'grid_select_cell'}|[{'atom',211,'grid_editor_shown'}|[{'atom',211,'grid_editor_hidden'}|[{'atom',211,'grid_editor_created'}|[{'atom',211,'grid_cell_begin_drag'}]]]]]]]]]]]]]]]]]},[]}],
		%% Line 212
		'type' =
		    %% Line 212
		    [{'wxGrid',{'type',212,'record',[{'atom',212,'wxGrid'}]},[]}],
		%% Line 214
		'type' =
		    %% Line 214
		    [{{'record','wxPaletteChanged'},[{'typed_record_field',{'record_field',214,{'atom',214,'type'}},{'type',214,'union',[{'atom',214,'undefined'}|[{'type',214,'wxPaletteChangedEventType',[]}]]}}],[]}],
		%% Line 215
		'type' =
		    %% Line 215
		    [{'wxPaletteChangedEventType',{'atom',215,'palette_changed'},[]}],
		%% Line 216
		'type' =
		    %% Line 216
		    [{'wxPaletteChanged',{'type',216,'record',[{'atom',216,'wxPaletteChanged'}]},[]}],
		%% Line 218
		'type' =
		    %% Line 218
		    [{{'record','wxUpdateUI'},[{'typed_record_field',{'record_field',218,{'atom',218,'type'}},{'type',218,'union',[{'atom',218,'undefined'}|[{'type',218,'wxUpdateUIEventType',[]}]]}}],[]}],
		%% Line 219
		'type' =
		    %% Line 219
		    [{'wxUpdateUIEventType',{'atom',219,'update_ui'},[]}],
		%% Line 220
		'type' =
		    %% Line 220
		    [{'wxUpdateUI',{'type',220,'record',[{'atom',220,'wxUpdateUI'}]},[]}],
		%% Line 222
		'type' =
		    %% Line 222
		    [{{'record','wxSize'},[{'typed_record_field',{'record_field',222,{'atom',222,'type'}},{'type',222,'union',[{'atom',222,'undefined'}|[{'type',222,'wxSizeEventType',[]}]]}}|[{'typed_record_field',{'record_field',223,{'atom',223,'size'}},{'type',223,'union',[{'atom',223,'undefined'}|[{'type',223,'tuple',[{'ann_type',223,[{'var',223,'W'}|[{'type',223,'integer',[]}]]}|[{'ann_type',223,[{'var',223,'H'}|[{'type',223,'integer',[]}]]}]]}]]}}|[{'typed_record_field',{'record_field',224,{'atom',224,'rect'}},{'type',224,'union',[{'atom',224,'undefined'}|[{'type',224,'tuple',[{'ann_type',224,[{'var',224,'X'}|[{'type',224,'integer',[]}]]}|[{'ann_type',224,[{'var',224,'Y'}|[{'type',224,'integer',[]}]]}|[{'ann_type',224,[{'var',224,'W'}|[{'type',224,'integer',[]}]]}|[{'ann_type',224,[{'var',224,'H'}|[{'type',224,'integer',[]}]]}]]]]}]]}}]]],[]}],
		%% Line 225
		'type' =
		    %% Line 225
		    [{'wxSizeEventType',{'atom',225,'size'},[]}],
		%% Line 226
		'type' =
		    %% Line 226
		    [{'wxSize',{'type',226,'record',[{'atom',226,'wxSize'}]},[]}],
		%% Line 228
		'type' =
		    %% Line 228
		    [{{'record','wxIconize'},[{'typed_record_field',{'record_field',228,{'atom',228,'type'}},{'type',228,'union',[{'atom',228,'undefined'}|[{'type',228,'wxIconizeEventType',[]}]]}}],[]}],
		%% Line 229
		'type' =
		    %% Line 229
		    [{'wxIconizeEventType',{'atom',229,'iconize'},[]}],
		%% Line 230
		'type' =
		    %% Line 230
		    [{'wxIconize',{'type',230,'record',[{'atom',230,'wxIconize'}]},[]}],
		%% Line 232
		'type' =
		    %% Line 232
		    [{{'record','wxAuiNotebook'},[{'typed_record_field',{'record_field',232,{'atom',232,'type'}},{'type',232,'union',[{'atom',232,'undefined'}|[{'type',232,'wxAuiNotebookEventType',[]}]]}}|[{'typed_record_field',{'record_field',233,{'atom',233,'old_selection'}},{'type',233,'union',[{'atom',233,'undefined'}|[{'type',233,'integer',[]}]]}}|[{'typed_record_field',{'record_field',234,{'atom',234,'selection'}},{'type',234,'union',[{'atom',234,'undefined'}|[{'type',234,'integer',[]}]]}}|[{'typed_record_field',{'record_field',235,{'atom',235,'drag_source'}},{'type',235,'union',[{'atom',235,'undefined'}|[{'remote_type',235,[{'atom',235,'wxAuiNotebook'}|[{'atom',235,'wxAuiNotebook'}|[[]]]]}]]}}]]]],[]}],
		%% Line 236
		'type' =
		    %% Line 236
		    [{'wxAuiNotebookEventType',{'type',236,'union',[{'atom',236,'command_auinotebook_page_close'}|[{'atom',236,'command_auinotebook_page_changed'}|[{'atom',236,'command_auinotebook_page_changing'}|[{'atom',236,'command_auinotebook_button'}|[{'atom',236,'command_auinotebook_begin_drag'}|[{'atom',236,'command_auinotebook_end_drag'}|[{'atom',236,'command_auinotebook_drag_motion'}|[{'atom',236,'command_auinotebook_allow_dnd'}|[{'atom',236,'command_auinotebook_tab_middle_down'}|[{'atom',236,'command_auinotebook_tab_middle_up'}|[{'atom',236,'command_auinotebook_tab_right_down'}|[{'atom',236,'command_auinotebook_tab_right_up'}|[{'atom',236,'command_auinotebook_page_closed'}|[{'atom',236,'command_auinotebook_drag_done'}|[{'atom',236,'command_auinotebook_bg_dclick'}]]]]]]]]]]]]]]]},[]}],
		%% Line 237
		'type' =
		    %% Line 237
		    [{'wxAuiNotebook',{'type',237,'record',[{'atom',237,'wxAuiNotebook'}]},[]}],
		%% Line 239
		'type' =
		    %% Line 239
		    [{{'record','wxClose'},[{'typed_record_field',{'record_field',239,{'atom',239,'type'}},{'type',239,'union',[{'atom',239,'undefined'}|[{'type',239,'wxCloseEventType',[]}]]}}],[]}],
		%% Line 240
		'type' =
		    %% Line 240
		    [{'wxCloseEventType',{'type',240,'union',[{'atom',240,'close_window'}|[{'atom',240,'end_session'}|[{'atom',240,'query_end_session'}]]]},[]}],
		%% Line 241
		'type' =
		    %% Line 241
		    [{'wxClose',{'type',241,'record',[{'atom',241,'wxClose'}]},[]}],
		%% Line 243
		'type' =
		    %% Line 243
		    [{{'record','wxMouseCaptureChanged'},[{'typed_record_field',{'record_field',243,{'atom',243,'type'}},{'type',243,'union',[{'atom',243,'undefined'}|[{'type',243,'wxMouseCaptureChangedEventType',[]}]]}}],[]}],
		%% Line 244
		'type' =
		    %% Line 244
		    [{'wxMouseCaptureChangedEventType',{'atom',244,'mouse_capture_changed'},[]}],
		%% Line 245
		'type' =
		    %% Line 245
		    [{'wxMouseCaptureChanged',{'type',245,'record',[{'atom',245,'wxMouseCaptureChanged'}]},[]}],
		%% Line 247
		'type' =
		    %% Line 247
		    [{{'record','wxMouse'},[{'typed_record_field',{'record_field',247,{'atom',247,'type'}},{'type',247,'union',[{'atom',247,'undefined'}|[{'type',247,'wxMouseEventType',[]}]]}}|[{'typed_record_field',{'record_field',248,{'atom',248,'x'}},{'type',248,'union',[{'atom',248,'undefined'}|[{'type',248,'integer',[]}]]}}|[{'typed_record_field',{'record_field',249,{'atom',249,'y'}},{'type',249,'union',[{'atom',249,'undefined'}|[{'type',249,'integer',[]}]]}}|[{'typed_record_field',{'record_field',250,{'atom',250,'leftDown'}},{'type',250,'union',[{'atom',250,'undefined'}|[{'type',250,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',251,{'atom',251,'middleDown'}},{'type',251,'union',[{'atom',251,'undefined'}|[{'type',251,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',252,{'atom',252,'rightDown'}},{'type',252,'union',[{'atom',252,'undefined'}|[{'type',252,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',253,{'atom',253,'controlDown'}},{'type',253,'union',[{'atom',253,'undefined'}|[{'type',253,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',254,{'atom',254,'shiftDown'}},{'type',254,'union',[{'atom',254,'undefined'}|[{'type',254,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',255,{'atom',255,'altDown'}},{'type',255,'union',[{'atom',255,'undefined'}|[{'type',255,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',256,{'atom',256,'metaDown'}},{'type',256,'union',[{'atom',256,'undefined'}|[{'type',256,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',257,{'atom',257,'wheelRotation'}},{'type',257,'union',[{'atom',257,'undefined'}|[{'type',257,'integer',[]}]]}}|[{'typed_record_field',{'record_field',258,{'atom',258,'wheelDelta'}},{'type',258,'union',[{'atom',258,'undefined'}|[{'type',258,'integer',[]}]]}}|[{'typed_record_field',{'record_field',259,{'atom',259,'linesPerAction'}},{'type',259,'union',[{'atom',259,'undefined'}|[{'type',259,'integer',[]}]]}}]]]]]]]]]]]]],[]}],
		%% Line 260
		'type' =
		    %% Line 260
		    [{'wxMouseEventType',{'type',260,'union',[{'atom',260,'left_down'}|[{'atom',260,'left_up'}|[{'atom',260,'middle_down'}|[{'atom',260,'middle_up'}|[{'atom',260,'right_down'}|[{'atom',260,'right_up'}|[{'atom',260,'motion'}|[{'atom',260,'enter_window'}|[{'atom',260,'leave_window'}|[{'atom',260,'left_dclick'}|[{'atom',260,'middle_dclick'}|[{'atom',260,'right_dclick'}|[{'atom',260,'mousewheel'}]]]]]]]]]]]]]},[]}],
		%% Line 261
		'type' =
		    %% Line 261
		    [{'wxMouse',{'type',261,'record',[{'atom',261,'wxMouse'}]},[]}],
		%% Line 263
		'type' =
		    %% Line 263
		    [{{'record','wxClipboardText'},[{'typed_record_field',{'record_field',263,{'atom',263,'type'}},{'type',263,'union',[{'atom',263,'undefined'}|[{'type',263,'wxClipboardTextEventType',[]}]]}}],[]}],
		%% Line 264
		'type' =
		    %% Line 264
		    [{'wxClipboardTextEventType',{'type',264,'union',[{'atom',264,'command_text_copy'}|[{'atom',264,'command_text_cut'}|[{'atom',264,'command_text_paste'}]]]},[]}],
		%% Line 265
		'type' =
		    %% Line 265
		    [{'wxClipboardText',{'type',265,'record',[{'atom',265,'wxClipboardText'}]},[]}],
		%% Line 267
		'type' =
		    %% Line 267
		    [{{'record','wxWindowCreate'},[{'typed_record_field',{'record_field',267,{'atom',267,'type'}},{'type',267,'union',[{'atom',267,'undefined'}|[{'type',267,'wxWindowCreateEventType',[]}]]}}],[]}],
		%% Line 268
		'type' =
		    %% Line 268
		    [{'wxWindowCreateEventType',{'atom',268,'create'},[]}],
		%% Line 269
		'type' =
		    %% Line 269
		    [{'wxWindowCreate',{'type',269,'record',[{'atom',269,'wxWindowCreate'}]},[]}],
		%% Line 271
		'type' =
		    %% Line 271
		    [{{'record','wxAuiManager'},[{'typed_record_field',{'record_field',271,{'atom',271,'type'}},{'type',271,'union',[{'atom',271,'undefined'}|[{'type',271,'wxAuiManagerEventType',[]}]]}}|[{'typed_record_field',{'record_field',272,{'atom',272,'manager'}},{'type',272,'union',[{'atom',272,'undefined'}|[{'remote_type',272,[{'atom',272,'wxAuiManager'}|[{'atom',272,'wxAuiManager'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',273,{'atom',273,'pane'}},{'type',273,'union',[{'atom',273,'undefined'}|[{'remote_type',273,[{'atom',273,'wxAuiPaneInfo'}|[{'atom',273,'wxAuiPaneInfo'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',274,{'atom',274,'button'}},{'type',274,'union',[{'atom',274,'undefined'}|[{'type',274,'integer',[]}]]}}|[{'typed_record_field',{'record_field',275,{'atom',275,'veto_flag'}},{'type',275,'union',[{'atom',275,'undefined'}|[{'type',275,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',276,{'atom',276,'canveto_flag'}},{'type',276,'union',[{'atom',276,'undefined'}|[{'type',276,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',277,{'atom',277,'dc'}},{'type',277,'union',[{'atom',277,'undefined'}|[{'remote_type',277,[{'atom',277,'wxDC'}|[{'atom',277,'wxDC'}|[[]]]]}]]}}]]]]]]],[]}],
		%% Line 278
		'type' =
		    %% Line 278
		    [{'wxAuiManagerEventType',{'type',278,'union',[{'atom',278,'aui_pane_button'}|[{'atom',278,'aui_pane_close'}|[{'atom',278,'aui_pane_maximize'}|[{'atom',278,'aui_pane_restore'}|[{'atom',278,'aui_render'}|[{'atom',278,'aui_find_manager'}]]]]]]},[]}],
		%% Line 279
		'type' =
		    %% Line 279
		    [{'wxAuiManager',{'type',279,'record',[{'atom',279,'wxAuiManager'}]},[]}],
		%% Line 281
		'type' =
		    %% Line 281
		    [{{'record','wxInitDialog'},[{'typed_record_field',{'record_field',281,{'atom',281,'type'}},{'type',281,'union',[{'atom',281,'undefined'}|[{'type',281,'wxInitDialogEventType',[]}]]}}],[]}],
		%% Line 282
		'type' =
		    %% Line 282
		    [{'wxInitDialogEventType',{'atom',282,'init_dialog'},[]}],
		%% Line 283
		'type' =
		    %% Line 283
		    [{'wxInitDialog',{'type',283,'record',[{'atom',283,'wxInitDialog'}]},[]}],
		%% Line 285
		'type' =
		    %% Line 285
		    [{{'record','wxCommand'},[{'typed_record_field',{'record_field',285,{'atom',285,'type'}},{'type',285,'union',[{'atom',285,'undefined'}|[{'type',285,'wxCommandEventType',[]}]]}}|[{'typed_record_field',{'record_field',286,{'atom',286,'cmdString'}},{'type',286,'union',[{'atom',286,'undefined'}|[{'remote_type',286,[{'atom',286,'unicode'}|[{'atom',286,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',287,{'atom',287,'commandInt'}},{'type',287,'union',[{'atom',287,'undefined'}|[{'type',287,'integer',[]}]]}}|[{'typed_record_field',{'record_field',288,{'atom',288,'extraLong'}},{'type',288,'union',[{'atom',288,'undefined'}|[{'type',288,'integer',[]}]]}}]]]],[]}],
		%% Line 289
		'type' =
		    %% Line 289
		    [{'wxCommandEventType',{'type',289,'union',[{'atom',289,'command_button_clicked'}|[{'atom',289,'command_checkbox_clicked'}|[{'atom',289,'command_choice_selected'}|[{'atom',289,'command_listbox_selected'}|[{'atom',289,'command_listbox_doubleclicked'}|[{'atom',289,'command_text_updated'}|[{'atom',289,'command_text_enter'}|[{'atom',289,'command_menu_selected'}|[{'atom',289,'command_slider_updated'}|[{'atom',289,'command_radiobox_selected'}|[{'atom',289,'command_radiobutton_selected'}|[{'atom',289,'command_scrollbar_updated'}|[{'atom',289,'command_vlbox_selected'}|[{'atom',289,'command_combobox_selected'}|[{'atom',289,'command_tool_rclicked'}|[{'atom',289,'command_tool_enter'}|[{'atom',289,'command_checklistbox_toggled'}|[{'atom',289,'command_togglebutton_clicked'}|[{'atom',289,'command_left_click'}|[{'atom',289,'command_left_dclick'}|[{'atom',289,'command_right_click'}|[{'atom',289,'command_set_focus'}|[{'atom',289,'command_kill_focus'}|[{'atom',289,'command_enter'}]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 290
		'type' =
		    %% Line 290
		    [{'wxCommand',{'type',290,'record',[{'atom',290,'wxCommand'}]},[]}],
		%% Line 292
		'type' =
		    %% Line 292
		    [{{'record','wxJoystick'},[{'typed_record_field',{'record_field',292,{'atom',292,'type'}},{'type',292,'union',[{'atom',292,'undefined'}|[{'type',292,'wxJoystickEventType',[]}]]}}],[]}],
		%% Line 293
		'type' =
		    %% Line 293
		    [{'wxJoystickEventType',{'type',293,'union',[{'atom',293,'joy_button_down'}|[{'atom',293,'joy_button_up'}|[{'atom',293,'joy_move'}|[{'atom',293,'joy_zmove'}]]]]},[]}],
		%% Line 294
		'type' =
		    %% Line 294
		    [{'wxJoystick',{'type',294,'record',[{'atom',294,'wxJoystick'}]},[]}],
		%% Line 296
		'type' =
		    %% Line 296
		    [{{'record','wxQueryNewPalette'},[{'typed_record_field',{'record_field',296,{'atom',296,'type'}},{'type',296,'union',[{'atom',296,'undefined'}|[{'type',296,'wxQueryNewPaletteEventType',[]}]]}}],[]}],
		%% Line 297
		'type' =
		    %% Line 297
		    [{'wxQueryNewPaletteEventType',{'atom',297,'query_new_palette'},[]}],
		%% Line 298
		'type' =
		    %% Line 298
		    [{'wxQueryNewPalette',{'type',298,'record',[{'atom',298,'wxQueryNewPalette'}]},[]}],
		%% Line 300
		'type' =
		    %% Line 300
		    [{{'record','wxMove'},[{'typed_record_field',{'record_field',300,{'atom',300,'type'}},{'type',300,'union',[{'atom',300,'undefined'}|[{'type',300,'wxMoveEventType',[]}]]}}],[]}],
		%% Line 301
		'type' =
		    %% Line 301
		    [{'wxMoveEventType',{'atom',301,'move'},[]}],
		%% Line 302
		'type' =
		    %% Line 302
		    [{'wxMove',{'type',302,'record',[{'atom',302,'wxMove'}]},[]}],
		%% Line 304
		'type' =
		    %% Line 304
		    [{{'record','wxIdle'},[{'typed_record_field',{'record_field',304,{'atom',304,'type'}},{'type',304,'union',[{'atom',304,'undefined'}|[{'type',304,'wxIdleEventType',[]}]]}}],[]}],
		%% Line 305
		'type' =
		    %% Line 305
		    [{'wxIdleEventType',{'atom',305,'idle'},[]}],
		%% Line 306
		'type' =
		    %% Line 306
		    [{'wxIdle',{'type',306,'record',[{'atom',306,'wxIdle'}]},[]}],
		%% Line 308
		'type' =
		    %% Line 308
		    [{{'record','wxColourPicker'},[{'typed_record_field',{'record_field',308,{'atom',308,'type'}},{'type',308,'union',[{'atom',308,'undefined'}|[{'type',308,'wxColourPickerEventType',[]}]]}}|[{'typed_record_field',{'record_field',309,{'atom',309,'colour'}},{'type',309,'union',[{'atom',309,'undefined'}|[{'remote_type',309,[{'atom',309,'wx'}|[{'atom',309,'wx_colour'}|[[]]]]}]]}}]],[]}],
		%% Line 310
		'type' =
		    %% Line 310
		    [{'wxColourPickerEventType',{'atom',310,'command_colourpicker_changed'},[]}],
		%% Line 311
		'type' =
		    %% Line 311
		    [{'wxColourPicker',{'type',311,'record',[{'atom',311,'wxColourPicker'}]},[]}],
		%% Line 313
		'type' =
		    %% Line 313
		    [{{'record','wxTaskBarIcon'},[{'typed_record_field',{'record_field',313,{'atom',313,'type'}},{'type',313,'union',[{'atom',313,'undefined'}|[{'type',313,'wxTaskBarIconEventType',[]}]]}}],[]}],
		%% Line 314
		'type' =
		    %% Line 314
		    [{'wxTaskBarIconEventType',{'type',314,'union',[{'atom',314,'taskbar_move'}|[{'atom',314,'taskbar_left_down'}|[{'atom',314,'taskbar_left_up'}|[{'atom',314,'taskbar_right_down'}|[{'atom',314,'taskbar_right_up'}|[{'atom',314,'taskbar_left_dclick'}|[{'atom',314,'taskbar_right_dclick'}]]]]]]]},[]}],
		%% Line 315
		'type' =
		    %% Line 315
		    [{'wxTaskBarIcon',{'type',315,'record',[{'atom',315,'wxTaskBarIcon'}]},[]}],
		%% Line 317
		'type' =
		    %% Line 317
		    [{{'record','wxTree'},[{'typed_record_field',{'record_field',317,{'atom',317,'type'}},{'type',317,'union',[{'atom',317,'undefined'}|[{'type',317,'wxTreeEventType',[]}]]}}|[{'typed_record_field',{'record_field',318,{'atom',318,'item'}},{'type',318,'union',[{'atom',318,'undefined'}|[{'type',318,'integer',[]}]]}}|[{'typed_record_field',{'record_field',319,{'atom',319,'itemOld'}},{'type',319,'union',[{'atom',319,'undefined'}|[{'type',319,'integer',[]}]]}}|[{'typed_record_field',{'record_field',320,{'atom',320,'pointDrag'}},{'type',320,'union',[{'atom',320,'undefined'}|[{'type',320,'tuple',[{'ann_type',320,[{'var',320,'X'}|[{'type',320,'integer',[]}]]}|[{'ann_type',320,[{'var',320,'Y'}|[{'type',320,'integer',[]}]]}]]}]]}}]]]],[]}],
		%% Line 321
		'type' =
		    %% Line 321
		    [{'wxTreeEventType',{'type',321,'union',[{'atom',321,'command_tree_begin_drag'}|[{'atom',321,'command_tree_begin_rdrag'}|[{'atom',321,'command_tree_begin_label_edit'}|[{'atom',321,'command_tree_end_label_edit'}|[{'atom',321,'command_tree_delete_item'}|[{'atom',321,'command_tree_get_info'}|[{'atom',321,'command_tree_set_info'}|[{'atom',321,'command_tree_item_expanded'}|[{'atom',321,'command_tree_item_expanding'}|[{'atom',321,'command_tree_item_collapsed'}|[{'atom',321,'command_tree_item_collapsing'}|[{'atom',321,'command_tree_sel_changed'}|[{'atom',321,'command_tree_sel_changing'}|[{'atom',321,'command_tree_key_down'}|[{'atom',321,'command_tree_item_activated'}|[{'atom',321,'command_tree_item_right_click'}|[{'atom',321,'command_tree_item_middle_click'}|[{'atom',321,'command_tree_end_drag'}|[{'atom',321,'command_tree_state_image_click'}|[{'atom',321,'command_tree_item_gettooltip'}|[{'atom',321,'command_tree_item_menu'}]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 322
		'type' =
		    %% Line 322
		    [{'wxTree',{'type',322,'record',[{'atom',322,'wxTree'}]},[]}],
		%% Line 324
		'type' =
		    %% Line 324
		    [{'event',{'type',324,'union',[{'type',324,'wxActivate',[]}|[{'type',324,'wxAuiManager',[]}|[{'type',324,'wxAuiNotebook',[]}|[{'type',324,'wxCalendar',[]}|[{'type',324,'wxChildFocus',[]}|[{'type',324,'wxClipboardText',[]}|[{'type',324,'wxClose',[]}|[{'type',324,'wxColourPicker',[]}|[{'type',324,'wxCommand',[]}|[{'type',324,'wxContextMenu',[]}|[{'type',324,'wxDate',[]}|[{'type',324,'wxDisplayChanged',[]}|[{'type',324,'wxErase',[]}|[{'type',324,'wxFileDirPicker',[]}|[{'type',324,'wxFocus',[]}|[{'type',324,'wxFontPicker',[]}|[{'type',324,'wxGrid',[]}|[{'type',324,'wxHelp',[]}|[{'type',324,'wxHtmlLink',[]}|[{'type',324,'wxIconize',[]}|[{'type',324,'wxIdle',[]}|[{'type',324,'wxInitDialog',[]}|[{'type',324,'wxJoystick',[]}|[{'type',324,'wxKey',[]}|[{'type',324,'wxList',[]}|[{'type',324,'wxMaximize',[]}|[{'type',324,'wxMenu',[]}|[{'type',324,'wxMouse',[]}|[{'type',324,'wxMouseCaptureChanged',[]}|[{'type',324,'wxMove',[]}|[{'type',324,'wxNavigationKey',[]}|[{'type',324,'wxNotebook',[]}|[{'type',324,'wxPaint',[]}|[{'type',324,'wxPaletteChanged',[]}|[{'type',324,'wxQueryNewPalette',[]}|[{'type',324,'wxSash',[]}|[{'type',324,'wxScroll',[]}|[{'type',324,'wxScrollWin',[]}|[{'type',324,'wxSetCursor',[]}|[{'type',324,'wxShow',[]}|[{'type',324,'wxSize',[]}|[{'type',324,'wxSpin',[]}|[{'type',324,'wxSplitter',[]}|[{'type',324,'wxStyledText',[]}|[{'type',324,'wxSysColourChanged',[]}|[{'type',324,'wxTaskBarIcon',[]}|[{'type',324,'wxTree',[]}|[{'type',324,'wxUpdateUI',[]}|[{'type',324,'wxWindowCreate',[]}|[{'type',324,'wxWindowDestroy',[]}]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 325
		'type' =
		    %% Line 325
		    [{'wxEventType',{'type',325,'union',[{'type',325,'wxActivateEventType',[]}|[{'type',325,'wxAuiManagerEventType',[]}|[{'type',325,'wxAuiNotebookEventType',[]}|[{'type',325,'wxCalendarEventType',[]}|[{'type',325,'wxChildFocusEventType',[]}|[{'type',325,'wxClipboardTextEventType',[]}|[{'type',325,'wxCloseEventType',[]}|[{'type',325,'wxColourPickerEventType',[]}|[{'type',325,'wxCommandEventType',[]}|[{'type',325,'wxContextMenuEventType',[]}|[{'type',325,'wxDateEventType',[]}|[{'type',325,'wxDisplayChangedEventType',[]}|[{'type',325,'wxEraseEventType',[]}|[{'type',325,'wxFileDirPickerEventType',[]}|[{'type',325,'wxFocusEventType',[]}|[{'type',325,'wxFontPickerEventType',[]}|[{'type',325,'wxGridEventType',[]}|[{'type',325,'wxHelpEventType',[]}|[{'type',325,'wxHtmlLinkEventType',[]}|[{'type',325,'wxIconizeEventType',[]}|[{'type',325,'wxIdleEventType',[]}|[{'type',325,'wxInitDialogEventType',[]}|[{'type',325,'wxJoystickEventType',[]}|[{'type',325,'wxKeyEventType',[]}|[{'type',325,'wxListEventType',[]}|[{'type',325,'wxMaximizeEventType',[]}|[{'type',325,'wxMenuEventType',[]}|[{'type',325,'wxMouseCaptureChangedEventType',[]}|[{'type',325,'wxMouseEventType',[]}|[{'type',325,'wxMoveEventType',[]}|[{'type',325,'wxNavigationKeyEventType',[]}|[{'type',325,'wxNotebookEventType',[]}|[{'type',325,'wxPaintEventType',[]}|[{'type',325,'wxPaletteChangedEventType',[]}|[{'type',325,'wxQueryNewPaletteEventType',[]}|[{'type',325,'wxSashEventType',[]}|[{'type',325,'wxScrollEventType',[]}|[{'type',325,'wxScrollWinEventType',[]}|[{'type',325,'wxSetCursorEventType',[]}|[{'type',325,'wxShowEventType',[]}|[{'type',325,'wxSizeEventType',[]}|[{'type',325,'wxSpinEventType',[]}|[{'type',325,'wxSplitterEventType',[]}|[{'type',325,'wxStyledTextEventType',[]}|[{'type',325,'wxSysColourChangedEventType',[]}|[{'type',325,'wxTaskBarIconEventType',[]}|[{'type',325,'wxTreeEventType',[]}|[{'type',325,'wxUpdateUIEventType',[]}|[{'type',325,'wxWindowCreateEventType',[]}|[{'type',325,'wxWindowDestroyEventType',[]}]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 328
		'type' =
		    %% Line 328
		    [{{'record','wxMouseState'},[{'typed_record_field',{'record_field',328,{'atom',328,'x'}},{'type',328,'union',[{'atom',328,'undefined'}|[{'type',328,'integer',[]}]]}}|[{'typed_record_field',{'record_field',328,{'atom',328,'y'}},{'type',328,'union',[{'atom',328,'undefined'}|[{'type',328,'integer',[]}]]}}|[{'typed_record_field',{'record_field',329,{'atom',329,'leftDown'}},{'type',329,'union',[{'atom',329,'undefined'}|[{'type',329,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',329,{'atom',329,'middleDown'}},{'type',329,'union',[{'atom',329,'undefined'}|[{'atom',329,'boolean'}]]}}|[{'typed_record_field',{'record_field',329,{'atom',329,'rightDown'}},{'type',329,'union',[{'atom',329,'undefined'}|[{'atom',329,'boolean'}]]}}|[{'typed_record_field',{'record_field',330,{'atom',330,'controlDown'}},{'type',330,'union',[{'atom',330,'undefined'}|[{'type',330,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',330,{'atom',330,'shiftDown'}},{'type',330,'union',[{'atom',330,'undefined'}|[{'type',330,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',331,{'atom',331,'altDown'}},{'type',331,'union',[{'atom',331,'undefined'}|[{'type',331,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',331,{'atom',331,'metaDown'}},{'type',331,'union',[{'atom',331,'undefined'}|[{'type',331,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',331,{'atom',331,'cmdDown'}},{'type',331,'union',[{'atom',331,'undefined'}|[{'type',331,'boolean',[]}]]}}]]]]]]]]]],[]}],
		%% Line 333
		'type' =
		    %% Line 333
		    [{{'record','wxHtmlLinkInfo'},[{'typed_record_field',{'record_field',334,{'atom',334,'href'}},{'type',334,'union',[{'atom',334,'undefined'}|[{'remote_type',334,[{'atom',334,'unicode'}|[{'atom',334,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',334,{'atom',334,'target'}},{'type',334,'union',[{'atom',334,'undefined'}|[{'remote_type',334,[{'atom',334,'unicode'}|[{'atom',334,'chardata'}|[[]]]]}]]}}]],[]}],
		%% Line 19
		'type' =
		    %% Line 19
		    [{{'record','match_spec'},[{'record_field',19,{'atom',19,'name'},{'string',19,[]}}|[{'record_field',20,{'atom',20,'term'},{'nil',20}}|[{'record_field',21,{'atom',21,'str'},{'nil',21}}|[{'record_field',22,{'atom',22,'func'},{'string',22,[]}}]]]],[]}],
		%% Line 24
		'type' =
		    %% Line 24
		    [{{'record','tpattern'},[{'record_field',24,{'atom',24,'m'}}|[{'record_field',24,{'atom',24,'fa'}}|[{'record_field',24,{'atom',24,'ms'}}]]],[]}],
		%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','traced_func'},[{'record_field',26,{'atom',26,'func_name'}}|[{'record_field',27,{'atom',27,'arity'}}|[{'record_field',28,{'atom',28,'match_spec'},{'record',28,'match_spec',[]}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','create_menu'},[{'record_field',31,{'atom',31,'id'}}|[{'record_field',32,{'atom',32,'text'}}|[{'record_field',33,{'atom',33,'help'},{'nil',33}}|[{'record_field',34,{'atom',34,'type'},{'atom',34,'append'}}|[{'record_field',35,{'atom',35,'check'},{'atom',35,'false'}}]]]]],[]}],
		%% Line 38
		'type' =
		    %% Line 38
		    [{{'record','attrs'},[{'record_field',38,{'atom',38,'even'}}|[{'record_field',38,{'atom',38,'odd'}}|[{'record_field',38,{'atom',38,'searched'}}|[{'record_field',38,{'atom',38,'deleted'}}|[{'record_field',38,{'atom',38,'changed_odd'}}|[{'record_field',38,{'atom',38,'changed_even'}}|[{'record_field',38,{'atom',38,'new_odd'}}|[{'record_field',38,{'atom',38,'new_even'}}]]]]]]]],[]}],
		%% Line 47
		'type' =
		    %% Line 47
		    [{{'record','state'},[{'record_field',48,{'atom',48,'frame'}}|[{'record_field',49,{'atom',49,'menubar'}}|[{'record_field',50,{'atom',50,'menus'},{'nil',50}}|[{'record_field',51,{'atom',51,'status_bar'}}|[{'record_field',52,{'atom',52,'notebook'}}|[{'record_field',53,{'atom',53,'main_panel'}}|[{'record_field',54,{'atom',54,'pro_panel'}}|[{'record_field',55,{'atom',55,'tv_panel'}}|[{'record_field',56,{'atom',56,'sys_panel'}}|[{'record_field',57,{'atom',57,'trace_panel'}}|[{'record_field',58,{'atom',58,'app_panel'}}|[{'record_field',59,{'atom',59,'perf_panel'}}|[{'record_field',60,{'atom',60,'active_tab'}}|[{'record_field',61,{'atom',61,'node'}}|[{'record_field',62,{'atom',62,'nodes'}}|[{'record_field',63,{'atom',63,'prev_node'},{'string',63,[]}}]]]]]]]]]]]]]]]],[]}]]
'start'/0 =
    %% Line 66
    fun () ->
	%% Line 67
	case call 'wx_object':'start'
		 ('observer_wx', [], []) of
	  %% Line 68
	  <Err = {'error',_cor1}> when 'true' ->
	      Err
	  %% Line 69
	  <_X_Obj> when 'true' ->
	      'ok'
	end
'stop'/0 =
    %% Line 72
    fun () ->
	%% Line 73
	call 'wx_object':'call'
	    ('observer', 'stop')
'create_menus'/2 =
    %% Line 75
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Object,Menus>
	      when call 'erlang':'is_list'
		    (Menus) ->
	      %% Line 76
	      call 'wx_object':'call'
		  (Object, {'create_menus',Menus})
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'create_menus',2}}] )
	    -| ['compiler_generated'] )
	end
'get_attrib'/1 =
    %% Line 78
    fun (_cor0) ->
	%% Line 79
	call 'wx_object':'call'
	    ('observer', {'get_attrib',_cor0})
'set_status'/1 =
    %% Line 81
    fun (_cor0) ->
	%% Line 82
	call 'wx_object':'cast'
	    ('observer', {'status_bar',_cor0})
'get_tracer'/0 =
    %% Line 84
    fun () ->
	%% Line 85
	call 'wx_object':'call'
	    ('observer', 'get_tracer')
'init'/1 =
    %% Line 89
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 90
	    call 'erlang':'self'
		()
	in  do  %% Line 90
		call 'erlang':'register'
		    ('observer', _cor1)
		do  %% Line 91
		    call 'wx':'new'
			()
		    do  catch
			    %% Line 92
			    call 'wxSystemOptions':'setOption'
				([109|[97|[99|[46|[108|[105|[115|[116|[99|[116|[114|[108|[46|[97|[108|[119|[97|[121|[115|[95|[117|[115|[101|[95|[103|[101|[110|[101|[114|[105|[99]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], 1)
			let <_cor9> =
			    %% Line 93
			    call 'wx':'null'
				()
			in  let <Frame> =
				%% Line 93
				call 'wxFrame':'new'
				    (_cor9, -1, [79|[98|[115|[101|[114|[118|[101|[114]]]]]]]], %% Line 94
											       [{'size',{850,600}}|[{'style',541072960}]])
			    in  let <_cor11> =
				    %% Line 95
				    call 'code':'priv_dir'
					('observer')
				in  let <IconFile> =
					%% Line 95
					call 'filename':'join'
					    (_cor11, [101|[114|[108|[97|[110|[103|[95|[111|[98|[115|[101|[114|[118|[101|[114|[46|[112|[110|[103]]]]]]]]]]]]]]]]]]])
				    in  let <Icon> =
					    %% Line 96
					    call 'wxIcon':'new'
						(IconFile, [{'type',15}])
					in  do  %% Line 97
						call 'wxFrame':'setIcon'
						    (Frame, Icon)
						do  %% Line 98
						    call 'wxIcon':'destroy'
							(Icon)
						    let <State> =
							%% Line 100
							{'state',Frame,'undefined',[],'undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined','undefined',[]}
						    in  let <UpdState> =
							    %% Line 101
							    apply 'setup'/1
								(State)
							in  do  %% Line 102
								call 'net_kernel':'monitor_nodes'
								    ('true')
								do  %% Line 103
								    call 'erlang':'process_flag'
									('trap_exit', 'true')
								    %% Line 104
								    {Frame,UpdState}
'setup'/1 =
    %% Line 106
    fun (_cor0) ->
	case _cor0 of
	  <State = {'state',Frame,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58}> when 'true' ->
	      let <MenuBar> =
		  %% Line 108
		  call 'wxMenuBar':'new'
		      ()
	      in  %% Line 110
		  case apply 'get_nodes'/0
			   () of
		    <{Nodes,NodeMenus}> when 'true' ->
			let <DefMenus> =
			    %% Line 111
			    apply 'default_menus'/1
				(NodeMenus)
			in  do  %% Line 112
				call 'observer_lib':'create_menus'
				    (DefMenus, MenuBar, 'default')
				do  %% Line 114
				    call 'wxFrame':'setMenuBar'
					(Frame, MenuBar)
				    let <StatusBar> =
					%% Line 115
					call 'wxStatusBar':'new'
					    (Frame)
				    in  do  %% Line 116
					    call 'wxFrame':'setStatusBar'
						(Frame, StatusBar)
					    let <_cor5> =
						%% Line 117
						call 'erlang':'node'
						    ()
					    in  let <_cor6> =
						    %% Line 117
						    call 'erlang':'atom_to_list'
							(_cor5)
						in  do  %% Line 117
							call 'wxFrame':'setTitle'
							    (Frame, _cor6)
							let <_cor7> =
							    %% Line 118
							    call 'erlang':'node'
								()
							in  let <_cor8> =
								%% Line 118
								call 'erlang':'atom_to_list'
								    (_cor7)
							    in  do  %% Line 118
								    call 'wxStatusBar':'setStatusText'
									(StatusBar, _cor8)
								    let <Panel> =
									%% Line 121
									call 'wxPanel':'new'
									    (Frame, [])
								    in  let <Notebook> =
									    %% Line 122
									    call 'wxNotebook':'new'
										(Panel, 3, [{'style',0}])
									in  let <_cor11> =
										%% Line 125
										call 'erlang':'self'
										    ()
									    in  let <SysPanel> =
										    %% Line 125
										    call 'observer_sys_wx':'start_link'
											(Notebook, _cor11)
										in  do  %% Line 126
											call 'wxNotebook':'addPage'
											    (Notebook, SysPanel, [83|[121|[115|[116|[101|[109]]]]]], [])
											let <MainSizer> =
											    %% Line 129
											    call 'wxBoxSizer':'new'
												(8)
											in  do  %% Line 131
												call 'wxSizer':'add'
												    (MainSizer, Notebook, [{'proportion',1}|[{'flag',8192}]])
												do  %% Line 132
												    call 'wxPanel':'setSizer'
													(Panel, MainSizer)
												    do  %% Line 134
													call 'wxNotebook':'connect'
													    (Notebook, 'command_notebook_page_changing')
													do  %% Line 135
													    call 'wxFrame':'connect'
														(Frame, 'close_window', [{'skip','true'}])
													    do  %% Line 136
														call 'wxMenu':'connect'
														    (Frame, 'command_menu_selected')
														do  %% Line 137
														    call 'wxFrame':'show'
															(Frame)
														    let <_cor14> =
															%% Line 140
															call 'wxe_util':'get_const'
															    ('wxMAJOR_VERSION')
														    in  let <_cor15> =
															    %% Line 140
															    call 'wxe_util':'get_const'
																('wxMINOR_VERSION')
															in  let <DoFreeze> =
																%% Line 140
																call 'erlang':'<'
																    ([_cor14|[_cor15|[]]], [2|[9]])
															    in  do  %% Line 141
																    ( case DoFreeze of
																	( <( 'true'
																	     -| ['compiler_generated'] )> when 'true' ->
																	      call 'wxWindow':'freeze'
																		  (Panel)
																	  -| ['compiler_generated'] )
																	( <( 'false'
																	     -| ['compiler_generated'] )> when 'true' ->
																	      'ok'
																	  -| ['compiler_generated'] )
																	( <_cor17> when 'true' ->
																	      ( call ( 'erlang'
																		       -| ['compiler_generated'] ):( 'error'
																						     -| ['compiler_generated'] )
																		    (( {( 'badarg'
																			  -| ['compiler_generated'] ),_cor17}
																		       -| ['compiler_generated'] ))
																		-| ['compiler_generated'] )
																	  -| ['compiler_generated'] )
																      end
																      -| ['compiler_generated'] )
																    let <_cor19> =
																	%% Line 146
																	call 'erlang':'self'
																	    ()
																    in  let <PerfPanel> =
																	    %% Line 146
																	    call 'observer_perf_wx':'start_link'
																		(Notebook, _cor19)
																	in  do  %% Line 147
																		call 'wxNotebook':'addPage'
																		    (Notebook, PerfPanel, [76|[111|[97|[100|[32|[67|[104|[97|[114|[116|[115]]]]]]]]]]], [])
																		let <_cor21> =
																		    %% Line 150
																		    call 'erlang':'self'
																			()
																		in  let <AppPanel> =
																			%% Line 150
																			call 'observer_app_wx':'start_link'
																			    (Notebook, _cor21)
																		    in  do  %% Line 151
																			    call 'wxNotebook':'addPage'
																				(Notebook, AppPanel, [65|[112|[112|[108|[105|[99|[97|[116|[105|[111|[110|[115]]]]]]]]]]]], [])
																			    let <_cor23> =
																				%% Line 154
																				call 'erlang':'self'
																				    ()
																			    in  let <ProPanel> =
																				    %% Line 154
																				    call 'observer_pro_wx':'start_link'
																					(Notebook, _cor23)
																				in  do  %% Line 155
																					call 'wxNotebook':'addPage'
																					    (Notebook, ProPanel, [80|[114|[111|[99|[101|[115|[115|[101|[115]]]]]]]]], [])
																					let <_cor25> =
																					    %% Line 158
																					    call 'erlang':'self'
																						()
																					in  let <TVPanel> =
																						%% Line 158
																						call 'observer_tv_wx':'start_link'
																						    (Notebook, _cor25)
																					    in  do  %% Line 159
																						    call 'wxNotebook':'addPage'
																							(Notebook, TVPanel, [84|[97|[98|[108|[101|[32|[86|[105|[101|[119|[101|[114]]]]]]]]]]]], [])
																						    let <_cor27> =
																							%% Line 162
																							call 'erlang':'self'
																							    ()
																						    in  let <TracePanel> =
																							    %% Line 162
																							    call 'observer_trace_wx':'start_link'
																								(Notebook, _cor27)
																							in  do  %% Line 163
																								call 'wxNotebook':'addPage'
																								    (Notebook, TracePanel, [84|[114|[97|[99|[101|[32|[79|[118|[101|[114|[118|[105|[101|[119]]]]]]]]]]]]]], [])
																								do  %% Line 166
																								    call 'wxWindow':'refresh'
																									(Panel)
																								    do  %% Line 167
																									( case DoFreeze of
																									    ( <( 'true'
																										 -| ['compiler_generated'] )> when 'true' ->
																										  call 'wxWindow':'thaw'
																										      (Panel)
																									      -| ['compiler_generated'] )
																									    ( <( 'false'
																										 -| ['compiler_generated'] )> when 'true' ->
																										  'ok'
																									      -| ['compiler_generated'] )
																									    ( <_cor29> when 'true' ->
																										  ( call ( 'erlang'
																											   -| ['compiler_generated'] ):( 'error'
																															 -| ['compiler_generated'] )
																											(( {( 'badarg'
																											      -| ['compiler_generated'] ),_cor29}
																											   -| ['compiler_generated'] ))
																										    -| ['compiler_generated'] )
																									      -| ['compiler_generated'] )
																									  end
																									  -| ['compiler_generated'] )
																									do  %% Line 169
																									    call 'wxFrame':'raise'
																										(Frame)
																									    do  %% Line 170
																										call 'wxFrame':'setFocus'
																										    (Frame)
																										let <SysPid> =
																										    %% Line 172
																										    call 'wx_object':'get_pid'
																											(SysPanel)
																										in  let <_cor32> =
																											%% Line 173
																											call 'erlang':'node'
																											    ()
																										    in  do  %% Line 173
																											    call 'erlang':'!'
																												(SysPid, {'active',_cor32})
																											    let <_rec0> =
																												%% Line 185
																												call 'erlang':'node'
																												    ()
																											    in  let <_cor36> =
																												    %% Line 186
																												    {'state',Frame,MenuBar,_cor45,StatusBar,Notebook,Panel,ProPanel,TVPanel,SysPanel,TracePanel,AppPanel,PerfPanel,SysPid,_rec0,Nodes,_cor58}
																												in  let <SysFont> =
																													%% Line 189
																													call 'wxSystemSettings':'getFont'
																													    (16)
																												    in  let <_cor41> =
																													    %% Line 194
																													    case call 'wxFont':'isFixedWidth'
																														     (SysFont) of
																													      %% Line 195
																													      <'true'> when 'true' ->
																														  SysFont
																													      %% Line 196
																													      <'false'> when 'true' ->
																														  let <SysFontSize> =
																														      %% Line 197
																														      call 'wxFont':'getPointSize'
																															  (SysFont)
																														  in  %% Line 198
																														      call 'wxFont':'new'
																															  (SysFontSize, 75, 90, 90)
																													      ( <_cor40> when 'true' ->
																														    primop 'match_fail'
																															({'case_clause',_cor40})
																														-| ['compiler_generated'] )
																													    end
																													in  do  %% Line 200
																														call 'erlang':'put'
																														    ({'font','fixed'}, _cor41)
																														_cor36
		    ( <_cor2> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor2})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor43> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor43})
		  -| [{'function_name',{'setup',1}}] )
	    -| ['compiler_generated'] )
	end
'handle_event'/2 =
    %% Line 207
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx',_cor58,_cor59,_cor60,{'wxNotebook','command_notebook_page_changing'}},State = %% Line 208
											       {'state',_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,Previous,Node,_cor73,_cor74}> when 'true' ->
	      %% Line 209
	      case apply 'get_active_pid'/1
		       (State) of
		%% Line 210
		<_cor75>
		    when call 'erlang':'=:='
			  (_cor75,
			   Previous) ->
		    {'noreply',State}
		%% Line 211
		<Pid> when 'true' ->
		    do  %% Line 212
			call 'erlang':'!'
			    (Previous, 'not_active')
			do  %% Line 213
			    call 'erlang':'!'
				(Pid, {'active',Node})
			    let <_cor4> =
				%% Line 214
				call 'erlang':'setelement'
				    (14, State, Pid)
			    in  %% Line 214
				{'noreply',_cor4}
	      end
	  %% Line 217
	  <{'wx',_cor93,_cor94,_cor95,{'wxClose',_cor96}},State> when 'true' ->
	      %% Line 218
	      {'stop','normal',State}
	  %% Line 220
	  <{'wx',4,_cor97,_cor98,{'wxCommand','command_menu_selected',_cor99,_cor100,_cor101}},State> when 'true' ->
	      do  %% Line 221
		  call 'erlang':'spawn'
		      ('crashdump_viewer', 'start', [])
		  %% Line 222
		  {'noreply',State}
	  %% Line 224
	  <{'wx',5006,_cor102,_cor103,{'wxCommand','command_menu_selected',_cor104,_cor105,_cor106}},State> when 'true' ->
	      %% Line 225
	      {'stop','normal',State}
	  %% Line 227
	  <{'wx',5009,_cor107,_cor108,{'wxCommand','command_menu_selected',_cor109,_cor110,_cor111}},State> when 'true' ->
	      let <_cor7> =
		  %% Line 229
		  call 'code':'lib_dir'
		      ('observer')
	      in  let <Internal> =
		      %% Line 229
		      call 'filename':'join'
			  ([_cor7|[[100|[111|[99]]]|[[104|[116|[109|[108]]]]|[[105|[110|[100|[101|[120|[46|[104|[116|[109|[108]]]]]]]]]]]]]])
		  in  let <_cor10> =
			  %% Line 230
			  case call 'filelib':'is_file'
				   (Internal) of
			    %% Line 231
			    <'true'> when 'true' ->
				Internal
			    %% Line 232
			    <'false'> when 'true' ->
				[104|[116|[116|[112|[58|[47|[47|[119|[119|[119|[46|[101|[114|[108|[97|[110|[103|[46|[111|[114|[103|[47|[100|[111|[99|[47|[97|[112|[112|[115|[47|[111|[98|[115|[101|[114|[118|[101|[114|[47|[105|[110|[100|[101|[120|[46|[104|[116|[109|[108]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
			    ( <_cor9> when 'true' ->
				  primop 'match_fail'
				      ({'case_clause',_cor9})
			      -| ['compiler_generated'] )
			  end
		      in  do  %% Line 234
			      ( case call 'wx_misc':'launchDefaultBrowser'
					 (_cor10) of
				  ( <( 'true'
				       -| ['compiler_generated'] )> when 'true' ->
					'ok'
				    -| ['compiler_generated'] )
				  ( <( 'false'
				       -| ['compiler_generated'] )> when 'true' ->
					%% Line 235
					( case State of
					    ( <( {'state',_rec19,_cor112,_cor113,_cor114,_cor115,_cor116,_cor117,_cor118,_cor119,_cor120,_cor121,_cor122,_cor123,_cor124,_cor125,_cor126}
						 -| ['compiler_generated'] )> when 'true' ->
						  let <_cor13> =
						      call 'erlang':'++'
							  ([67|[111|[117|[108|[100|[32|[110|[111|[116|[32|[108|[97|[117|[110|[99|[104|[32|[98|[114|[111|[119|[115|[101|[114|[58|[32|[126|[110|[32]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor10)
						  in  apply 'create_txt_dialog'/4
							  (_rec19, _cor13, %% Line 236
									   [69|[114|[114|[111|[114]]]]], %% Line 236
													 512)
					      -| ['compiler_generated'] )
					    ( <_cor127> when 'true' ->
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'error'
											 -| ['compiler_generated'] )
							(( {'badrecord','state'}
							   -| ['compiler_generated'] ))
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				  ( <_cor12> when 'true' ->
					( call ( 'erlang'
						 -| ['compiler_generated'] ):( 'error'
									       -| ['compiler_generated'] )
					      (( {( 'badarg'
						    -| ['compiler_generated'] ),_cor12}
						 -| ['compiler_generated'] ))
					  -| ['compiler_generated'] )
				    -| ['compiler_generated'] )
				end
				-| ['compiler_generated'] )
			      %% Line 237
			      {'noreply',State}
	  %% Line 239
	  <{'wx',5014,_cor128,_cor129,{'wxCommand','command_menu_selected',_cor130,_cor131,_cor132}},State = %% Line 240
													     {'state',Frame,_cor133,_cor134,_cor135,_cor136,_cor137,_cor138,_cor139,_cor140,_cor141,_cor142,_cor143,_cor144,_cor145,_cor146,_cor147}> when 'true' ->
	      let <_cor20> =
		  %% Line 245
		  call 'wxMessageDialog':'new'
		      (Frame, [79|[98|[115|[101|[114|[118|[101|[32|[97|[110|[32|[101|[114|[108|[97|[110|[103|[32|[115|[121|[115|[116|[101|[109|[10|[65|[117|[116|[104|[111|[114|[115|[58|[32|[79|[108|[108|[101|[32|[77|[97|[116|[116|[115|[111|[110|[32|[38|[32|[77|[97|[103|[110|[117|[115|[32|[69|[114|[105|[107|[115|[115|[111|[110|[32|[38|[32|[68|[97|[110|[32|[71|[117|[100|[109|[117|[110|[100|[115|[115|[111|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [{'style',32772}|[{'caption',[65|[98|[111|[117|[116]]]]]}]])
	      in  do  %% Line 245
		      call 'wxMessageDialog':'showModal'
			  (_cor20)
		      %% Line 246
		      {'noreply',State}
	  %% Line 249
	  <{'wx',2,_cor148,_cor149,{'wxCommand','command_menu_selected',_cor150,_cor151,_cor152}},State = %% Line 250
													  {'state',Frame,_cor153,_cor154,_cor155,_cor156,_cor157,_cor158,_cor159,_cor160,_cor161,_cor162,_cor163,_cor164,_cor165,_cor166,_cor167}> when 'true' ->
	      let <_cor30> =
		  %% Line 251
		  case apply 'create_connect_dialog'/2
			   ('connect', State) of
		    %% Line 252
		    <'cancel'> when 'true' ->
			%% Line 253
			State
		    %% Line 254
		    <{'value',[],_cor168,_cor169}> when 'true' ->
			do  %% Line 255
			    apply 'create_txt_dialog'/4
				(Frame, [78|[111|[100|[101|[32|[109|[117|[115|[116|[32|[104|[97|[118|[101|[32|[97|[32|[110|[97|[109|[101]]]]]]]]]]]]]]]]]]]]], %% Line 256
																			       [69|[114|[114|[111|[114]]]]], %% Line 256
																							     512)
			    %% Line 257
			    State
		    %% Line 258
		    <{'value',NodeName,LongOrShort,Cookie}> when 'true' ->
			%% Line 259
			try
			    let <_cor22> =
				%% Line 260
				call 'erlang':'list_to_atom'
				    (NodeName)
			    in  let <_cor21> =
				    %% Line 260
				    call 'erlang':'list_to_atom'
					(Cookie)
				in  %% Line 260
				    case apply 'connect'/3
					     (_cor22, LongOrShort, _cor21) of
				      %% Line 261
				      <{'ok','set_cookie'}> when 'true' ->
					  let <_cor23> =
					      %% Line 262
					      call 'erlang':'node'
						  ()
					  in  %% Line 262
					      apply 'change_node_view'/2
						  (_cor23, State)
				      %% Line 263
				      <{'error','set_cookie'}> when 'true' ->
					  do  %% Line 264
					      apply 'create_txt_dialog'/4
						  (Frame, [67|[111|[117|[108|[100|[32|[110|[111|[116|[32|[115|[101|[116|[32|[99|[111|[111|[107|[105|[101]]]]]]]]]]]]]]]]]]]], %% Line 265
																					      [69|[114|[114|[111|[114]]]]], %% Line 265
																									    512)
					      %% Line 266
					      State
				      %% Line 267
				      <{'error','net_kernel',_X_Reason}> when 'true' ->
					  do  %% Line 268
					      apply 'create_txt_dialog'/4
						  (Frame, [67|[111|[117|[108|[100|[32|[110|[111|[116|[32|[101|[110|[97|[98|[108|[101|[32|[110|[111|[100|[101]]]]]]]]]]]]]]]]]]]]], %% Line 269
																						   [69|[114|[114|[111|[114]]]]], %% Line 269
																										 512)
					      %% Line 270
					      State
				      ( <_cor24> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_cor24})
					-| ['compiler_generated'] )
				    end
			of <_cor25> ->
			    _cor25
			catch <_cor28,_cor27,_cor26> ->
			    do  %% Line 273
				apply 'create_txt_dialog'/4
				    (Frame, [67|[111|[117|[108|[100|[32|[110|[111|[116|[32|[101|[110|[97|[98|[108|[101|[32|[110|[111|[100|[101]]]]]]]]]]]]]]]]]]]]], %% Line 274
																				     [69|[114|[114|[111|[114]]]]], %% Line 274
																								   512)
				%% Line 275
				State
		    ( <_cor29> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor29})
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 278
		  {'noreply',_cor30}
	  %% Line 280
	  <{'wx',1,_cor173,_cor174,{'wxCommand','command_menu_selected',_cor175,_cor176,_cor177}},State = %% Line 281
													  {'state',Frame,_cor178,_cor179,_cor180,_cor181,_cor182,_cor183,_cor184,_cor185,_cor186,_cor187,_cor188,_cor189,_cor190,_cor191,_cor192}> when 'true' ->
	      let <_cor46> =
		  %% Line 282
		  case apply 'create_connect_dialog'/2
			   ('ping', State) of
		    %% Line 283
		    <'cancel'> when 'true' ->
			State
		    %% Line 284
		    <{'value',Value}>
			when call 'erlang':'is_list'
			      (Value) ->
			%% Line 285
			try
			    let <Node> =
				%% Line 286
				call 'erlang':'list_to_atom'
				    (Value)
			    in  %% Line 287
				case call 'net_adm':'ping'
					 (Node) of
				  %% Line 288
				  <'pang'> when 'true' ->
				      do  %% Line 289
					  apply 'create_txt_dialog'/4
					      (Frame, [67|[111|[110|[110|[101|[99|[116|[32|[102|[97|[105|[108|[101|[100]]]]]]]]]]]]]], [80|[97|[110|[103]]]], 256)
					  %% Line 290
					  call 'erlang':'setelement'
					      (17, State, Value)
				  %% Line 291
				  <'pong'> when 'true' ->
				      let <State1> =
					  %% Line 292
					  apply 'change_node_view'/2
					      (Node, State)
				      in  %% Line 293
					  case State1 of
					    <{'state',_cor210,_cor211,_cor212,_cor213,_cor214,_cor215,_cor216,_cor217,_cor218,_cor219,_cor220,_cor221,_cor222,_cor223,_cor224,_cor225}> when 'true' ->
						call 'erlang':'setelement'
						    (17, State1, Value)
					    ( <_cor226> when 'true' ->
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'error'
											 -| ['compiler_generated'] )
							(( {'badrecord','state'}
							   -| ['compiler_generated'] ))
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
				  ( <_cor38> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_cor38})
				    -| ['compiler_generated'] )
				end
			of <_cor39> ->
			    _cor39
			catch <_cor42,_cor41,_cor40> ->
			    do  %% Line 296
				apply 'create_txt_dialog'/4
				    (Frame, [67|[111|[110|[110|[101|[99|[116|[32|[102|[97|[105|[108|[101|[100]]]]]]]]]]]]]], [80|[97|[110|[103]]]], 256)
				%% Line 297
				call 'erlang':'setelement'
				    (17, State, Value)
		    ( <_cor45> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor45})
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 300
		  {'noreply',_cor46}
	  %% Line 302
	  <{'wx',Id,_cor247,_cor248,{'wxCommand','command_menu_selected',_cor249,_cor250,_cor251}},State>
	      when let <_cor48> =
		    %% Line 303
		    call 'erlang':'>'
			(Id, 1000)
		in  let <_cor49> =
			%% Line 303
			call 'erlang':'<'
			    (Id, 2000)
		    in  %% Line 303
			call 'erlang':'and'
			    (_cor48, _cor49) ->
	      let <_cor52> =
		  %% Line 305
		  call 'erlang':'-'
		      (Id, 1000)
	      in  %% Line 305
		  ( case State of
		      ( <( {'state',_cor252,_cor253,_cor254,_cor255,_cor256,_cor257,_cor258,_cor259,_cor260,_cor261,_cor262,_cor263,_cor264,_cor265,_rec23,_cor266}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <Node> =
				call 'lists':'nth'
				    (_cor52, _rec23)
			    in  let <UpdState> =
				    %% Line 306
				    apply 'change_node_view'/2
					(Node, State)
				in  %% Line 307
				    {'noreply',UpdState}
			-| ['compiler_generated'] )
		      ( <_cor267> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	  %% Line 309
	  <Event,State> when 'true' ->
	      let <Pid> =
		  %% Line 310
		  apply 'get_active_pid'/1
		      (State)
	      in  do  %% Line 311
		      call 'erlang':'!'
			  (Pid, Event)
		      %% Line 312
		      {'noreply',State}
	end
'handle_cast'/2 =
    %% Line 314
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'status_bar',Msg},State = {'state',_cor4,_cor5,_cor6,SB,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18}> when 'true' ->
	      do  %% Line 315
		  call 'wxStatusBar':'setStatusText'
		      (SB, Msg)
		  %% Line 316
		  {'noreply',State}
	  %% Line 318
	  <_X_Cast,State> when 'true' ->
	      %% Line 319
	      {'noreply',State}
	end
'handle_call'/3 =
    %% Line 321
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <{'create_menus',TabMenus},_X_From,State = %% Line 322
						     {'state',_cor11,MenuBar,PrevTabMenus,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24}> when 'true' ->
	      do  %% Line 323
		  case <> of
		    <>
			when call 'erlang':'=='
			      (TabMenus,
			       PrevTabMenus) ->
			'ok'
		    %% Line 324
		    <> when 'true' ->
			let <_cor3> =
			    %% Line 325
			    ( fun () ->
				  do  %% Line 326
				      apply 'clean_menus'/2
					  (PrevTabMenus, MenuBar)
				      %% Line 327
				      call 'observer_lib':'create_menus'
					  (TabMenus, MenuBar, 'plugin')
			      -| [{'id',{0,0,'-handle_call/3-fun-0-'}}] )
			in  %% Line 325
			    call 'wx':'batch'
				(_cor3)
		  end
		  let <_cor6> =
		      %% Line 330
		      call 'erlang':'setelement'
			  (4, State, TabMenus)
		  in  %% Line 330
		      {'reply','ok',_cor6}
	  %% Line 332
	  <{'get_attrib',Attrib},_X_From,State> when 'true' ->
	      let <_cor7> =
		  %% Line 333
		  call 'erlang':'get'
		      (Attrib)
	      in  %% Line 333
		  {'reply',_cor7,State}
	  %% Line 335
	  <'get_tracer',_X_From,State = {'state',_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,TraceP,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56}> when 'true' ->
	      %% Line 336
	      {'reply',TraceP,State}
	  %% Line 338
	  <'stop',_cor57,State = {'state',Frame,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72}> when 'true' ->
	      do  %% Line 339
		  call 'wxFrame':'destroy'
		      (Frame)
		  %% Line 340
		  {'stop','normal','ok',State}
	  %% Line 342
	  <_X_Msg,_X_From,State> when 'true' ->
	      %% Line 343
	      {'reply','ok',State}
	end
'handle_info'/2 =
    %% Line 345
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'nodeup',_X_Node},State> when 'true' ->
	      let <State2> =
		  %% Line 346
		  apply 'update_node_list'/1
		      (State)
	      in  %% Line 347
		  {'noreply',State2}
	  %% Line 349
	  <{'nodedown',Node},State = %% Line 350
				     {'state',Frame,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,_cor39,_cor40,_cor41}> when 'true' ->
	      let <_cor7> =
		  %% Line 351
		  case <> of
		    %% Line 352
		    <>
			when call 'erlang':'=:='
			      (Node,
			       _cor39) ->
			let <_cor5> =
			    %% Line 353
			    call 'erlang':'node'
				()
			in  %% Line 353
			    apply 'change_node_view'/2
				(_cor5, State)
		    %% Line 354
		    <> when 'true' ->
			%% Line 355
			State
		  end
	      in  let <State3> =
		      %% Line 357
		      apply 'update_node_list'/1
			  (_cor7)
		  in  let <_cor10> =
			  %% Line 358
			  call 'erlang':'atom_to_list'
			      (Node)
		      in  let <Msg> =
			      %% Line 358
			      [[78|[111|[100|[101|[32|[100|[111|[119|[110|[58|[32]]]]]]]]]]]|_cor10]
			  in  do  %% Line 359
				  apply 'create_txt_dialog'/4
				      (Frame, Msg, [78|[111|[100|[101|[32|[100|[111|[119|[110]]]]]]]]], 256)
				  %% Line 360
				  {'noreply',State3}
	  %% Line 362
	  <{'open_link',Pid0},State = {'state',Frame,_cor58,_cor59,_cor60,_cor61,_cor62,ProcViewer,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69,_cor70,_cor71}> when 'true' ->
	      let <_cor17> =
		  %% Line 363
		  case Pid0 of
		    %% Line 364
		    <[_cor72|_cor73]> when 'true' ->
			try
			    call 'erlang':'list_to_pid'
				(Pid0)
			of <_cor12> ->
			    _cor12
			catch <_cor15,_cor14,_cor13> ->
			    Pid0
		    %% Line 365
		    <_cor77> when 'true' ->
			Pid0
		  end
	      in  do  %% Line 368
		      case <> of
			%% Line 369
			<>
			    when call 'erlang':'is_pid'
				  (_cor17) ->
			    let <_cor19> =
				call 'wx_object':'get_pid'
				    (ProcViewer)
			    in  call 'erlang':'!'
				    (_cor19, {'procinfo_open',_cor17})
			%% Line 370
			<> when 'true' ->
			    let <Msg> =
				%% Line 371
				call 'io_lib':'format'
				    ([73|[110|[102|[111|[114|[109|[97|[116|[105|[111|[110|[32|[97|[98|[111|[117|[116|[32|[126|[112|[32|[105|[115|[32|[110|[111|[116|[32|[97|[118|[97|[105|[108|[97|[98|[108|[101|[32|[111|[114|[32|[105|[109|[112|[108|[101|[109|[101|[110|[116|[101|[100]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [_cor17|[]])
			    in  let <Info> =
				    %% Line 372
				    call 'wxMessageDialog':'new'
					(Frame, Msg)
				in  do  %% Line 373
					call 'wxMessageDialog':'showModal'
					    (Info)
					%% Line 374
					call 'wxMessageDialog':'destroy'
					    (Info)
		      end
		      %% Line 376
		      {'noreply',State}
	  %% Line 378
	  <{'get_debug_info',From},State = {'state',_cor78,_cor79,_cor80,_cor81,Notebook,_cor82,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,Pid,_cor89,_cor90,_cor91}> when 'true' ->
	      let <_cor23> =
		  %% Line 379
		  call 'wx':'get_env'
		      ()
	      in  do  %% Line 379
		      call 'erlang':'!'
			  (From, {'observer_debug',_cor23,Notebook,Pid})
		      %% Line 380
		      {'noreply',State}
	  %% Line 382
	  <{'EXIT',Pid,_X_Reason},State> when 'true' ->
	      let <_cor24> =
		  %% Line 384
		  apply 'pid2panel'/2
		      (Pid, State)
	      in  do  %% Line 383
		      call 'io':'format'
			  ([67|[104|[105|[108|[100|[32|[40|[126|[115|[41|[32|[99|[114|[97|[115|[104|[101|[100|[32|[101|[120|[105|[116|[105|[110|[103|[58|[32|[32|[126|[112|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 384
																													[_cor24|[Pid|[_X_Reason|[]]]])
		      %% Line 385
		      {'stop','normal',State}
	  %% Line 387
	  <_X_Info,State> when 'true' ->
	      %% Line 388
	      {'noreply',State}
	end
'terminate'/2 =
    %% Line 390
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_Reason,{'state',Frame,_cor4,_cor5,_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18}> when 'true' ->
	      do  %% Line 391
		  call 'wxFrame':'destroy'
		      (Frame)
		  do  %% Line 392
		      call 'wx':'destroy'
			  ()
		      %% Line 393
		      'ok'
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'terminate',2}}] )
	    -| ['compiler_generated'] )
	end
'code_change'/3 =
    %% Line 395
    fun (_cor2,_cor1,_cor0) ->
	%% Line 396
	{'ok',_cor0}
'try_rpc'/4 =
    %% Line 400
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 401
	case %% Line 402
	     call 'rpc':'call'
		 (_cor3, _cor2, _cor1, _cor0) of
	  %% Line 403
	  <{'badrpc',Reason}> when 'true' ->
	      do  %% Line 404
		  call 'error_logger':'error_report'
		      ([{'node',_cor3}|%% Line 405
				       [{'call',{_cor2,_cor1,_cor0}}|%% Line 406
								     [{'reason',{'badrpc',Reason}}|[]]]])
		  do  %% Line 407
		      call 'erlang':'!'
			  ('observer', {'nodedown',_cor3})
		      %% Line 408
		      call 'erlang':'error'
			  ({'badrpc',Reason})
	  %% Line 409
	  <Res> when 'true' ->
	      %% Line 410
	      Res
	end
'return_to_localnode'/2 =
    %% Line 413
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 414
	    call 'erlang':'node'
		()
	in  %% Line 414
	    case <> of
	      %% Line 415
	      <>
		  when call 'erlang':'=/='
			(_cor2,
			 _cor0) ->
		  do  %% Line 416
		      apply 'create_txt_dialog'/4
			  (_cor1, [69|[114|[114|[111|[114|[32|[111|[99|[99|[117|[114|[101|[100|[32|[111|[110|[32|[114|[101|[109|[111|[116|[101|[32|[110|[111|[100|[101]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 417
																								    [69|[114|[114|[111|[114]]]]], %% Line 417
																												  512)
		      %% Line 418
		      call 'erlang':'disconnect_node'
			  (_cor0)
	      %% Line 419
	      <> when 'true' ->
		  %% Line 420
		  'ok'
	    end
'create_txt_dialog'/4 =
    %% Line 423
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <MD> =
	    %% Line 424
	    call 'wxMessageDialog':'new'
		(_cor3, _cor2, [{'style',_cor0}|[]])
	in  do  %% Line 425
		call 'wxMessageDialog':'setTitle'
		    (MD, _cor1)
		do  %% Line 426
		    call 'wxDialog':'showModal'
			(MD)
		    %% Line 427
		    call 'wxDialog':'destroy'
			(MD)
'connect'/3 =
    %% Line 429
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <NodeName,0,Cookie> when 'true' ->
	      %% Line 430
	      apply 'connect2'/3
		  (NodeName, 'shortnames', Cookie)
	  %% Line 431
	  <NodeName,1,Cookie> when 'true' ->
	      %% Line 432
	      apply 'connect2'/3
		  (NodeName, 'longnames', Cookie)
	  ( <_cor5,_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4,_cor3})
		  -| [{'function_name',{'connect',3}}] )
	    -| ['compiler_generated'] )
	end
'connect2'/3 =
    %% Line 434
    fun (_cor2,_cor1,_cor0) ->
	do  %% Line 435
	    case call 'net_adm':'names'
		     () of
	      %% Line 436
	      <{'ok',_cor11}> when 'true' ->
		  'ok'
	      %% Line 438
	      <{'error','address'}> when 'true' ->
		  let <Epmd> =
		      %% Line 439
		      call 'os':'find_executable'
			  ([101|[112|[109|[100]]]])
		  in  %% Line 440
		      call 'os':'cmd'
			  (Epmd)
	      ( <_cor4> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor4})
		-| ['compiler_generated'] )
	    end
	    %% Line 442
	    case call 'net_kernel':'start'
		     ([_cor2|[_cor1|[]]]) of
	      %% Line 443
	      <{'ok',_cor12}> when 'true' ->
		  %% Line 444
		  case call 'erlang':'is_alive'
			   () of
		    %% Line 445
		    <'true'> when 'true' ->
			let <_cor5> =
			    %% Line 446
			    call 'erlang':'node'
				()
			in  do  %% Line 446
				call 'erlang':'set_cookie'
				    (_cor5, _cor0)
				%% Line 447
				{'ok','set_cookie'}
		    %% Line 448
		    <'false'> when 'true' ->
			%% Line 449
			{'error','set_cookie'}
		    ( <_cor6> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor6})
		      -| ['compiler_generated'] )
		  end
	      %% Line 451
	      <{'error',Reason}> when 'true' ->
		  %% Line 452
		  {'error','net_kernel',Reason}
	      ( <_cor7> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor7})
		-| ['compiler_generated'] )
	    end
'change_node_view'/2 =
    %% Line 455
    fun (_cor1,_cor0) ->
	let <Tab> =
	    %% Line 456
	    apply 'get_active_pid'/1
		(_cor0)
	in  do  %% Line 457
		call 'erlang':'!'
		    (Tab, 'not_active')
		do  %% Line 458
		    call 'erlang':'!'
			(Tab, {'active',_cor1})
		    let <_cor3> =
			%% Line 459
			call 'erlang':'atom_to_list'
			    (_cor1)
		    in  let <StatusText> =
			    %% Line 459
			    [[79|[98|[115|[101|[114|[118|[101|[114|[32|[45|[32]]]]]]]]]]]|_cor3]
			in  %% Line 460
			    ( case _cor0 of
				( <( {'state',_rec26,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27}
				     -| ['compiler_generated'] )> when 'true' ->
				      do  call 'wxFrame':'setTitle'
					      (_rec26, StatusText)
					  do  %% Line 461
					      call 'wxStatusBar':'setStatusText'
						  (_cor15, StatusText)
					      %% Line 462
					      call 'erlang':'setelement'
						  (15, _cor0, _cor1)
				  -| ['compiler_generated'] )
				( <_cor28> when 'true' ->
				      ( call ( 'erlang'
					       -| ['compiler_generated'] ):( 'error'
									     -| ['compiler_generated'] )
					    (( {'badrecord','state'}
					       -| ['compiler_generated'] ))
					-| ['compiler_generated'] )
				  -| ['compiler_generated'] )
			      end
			      -| ['compiler_generated'] )
'check_page_title'/1 =
    %% Line 464
    fun (_cor0) ->
	let <Selection> =
	    %% Line 465
	    call 'wxNotebook':'getSelection'
		(_cor0)
	in  %% Line 466
	    call 'wxNotebook':'getPageText'
		(_cor0, Selection)
'get_active_pid'/1 =
    %% Line 468
    fun (_cor0) ->
	case _cor0 of
	  <{'state',_cor5,_cor6,_cor7,_cor8,Notebook,_cor9,Pro,%% Line 469
							       Tv,Sys,%% Line 469
								      Trace,%% Line 469
									    App,%% Line 470
										Perf,_cor10,_cor11,_cor12,_cor13}> when 'true' ->
	      let <_cor2> =
		  %% Line 472
		  case apply 'check_page_title'/1
			   (Notebook) of
		    %% Line 473
		    <[80|[114|[111|[99|[101|[115|[115|[101|[115]]]]]]]]]> when 'true' ->
			Pro
		    %% Line 474
		    <[83|[121|[115|[116|[101|[109]]]]]]> when 'true' ->
			Sys
		    %% Line 475
		    <[84|[97|[98|[108|[101|[32|[86|[105|[101|[119|[101|[114]]]]]]]]]]]]> when 'true' ->
			Tv
		    %% Line 476
		    <[84|[114|[97|[99|[101|[32|[79|[118|[101|[114|[118|[105|[101|[119]]]]]]]]]]]]]]> when 'true' ->
			Trace
		    %% Line 477
		    <[76|[111|[97|[100|[32|[67|[104|[97|[114|[116|[115]]]]]]]]]]]> when 'true' ->
			Perf
		    %% Line 478
		    <[65|[112|[112|[108|[105|[99|[97|[116|[105|[111|[110|[115]]]]]]]]]]]]> when 'true' ->
			App
		    ( <_cor1> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor1})
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 480
		  call 'wx_object':'get_pid'
		      (_cor2)
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'get_active_pid',1}}] )
	    -| ['compiler_generated'] )
	end
'pid2panel'/2 =
    %% Line 482
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Pid,{'state',_cor5,_cor6,_cor7,_cor8,_cor9,_cor10,Pro,%% Line 483
								 Tv,Sys,%% Line 483
									Trace,%% Line 483
									      App,%% Line 484
										  Perf,_cor11,_cor12,_cor13,_cor14}> when 'true' ->
	      %% Line 485
	      case Pid of
		%% Line 486
		<_cor15>
		    when call 'erlang':'=:='
			  (Pid,
			   Pro) ->
		    [80|[114|[111|[99|[101|[115|[115|[101|[115]]]]]]]]]
		%% Line 487
		<_cor16>
		    when call 'erlang':'=:='
			  (Pid,
			   Sys) ->
		    [83|[121|[115|[116|[101|[109]]]]]]
		%% Line 488
		<_cor17>
		    when call 'erlang':'=:='
			  (Pid,
			   Tv) ->
		    [84|[97|[98|[108|[101|[32|[86|[105|[101|[119|[101|[114]]]]]]]]]]]]
		%% Line 489
		<_cor18>
		    when call 'erlang':'=:='
			  (Pid,
			   Trace) ->
		    [84|[114|[97|[99|[101|[32|[79|[118|[101|[114|[118|[105|[101|[119]]]]]]]]]]]]]]
		%% Line 490
		<_cor19>
		    when call 'erlang':'=:='
			  (Pid,
			   Perf) ->
		    [76|[111|[97|[100|[32|[67|[104|[97|[114|[116|[115]]]]]]]]]]]
		%% Line 491
		<_cor20>
		    when call 'erlang':'=:='
			  (Pid,
			   App) ->
		    [65|[112|[112|[108|[105|[99|[97|[116|[105|[111|[110|[115]]]]]]]]]]]]
		%% Line 492
		<_cor21> when 'true' ->
		    [117|[110|[107|[110|[111|[119|[110]]]]]]]
	      end
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'pid2panel',2}}] )
	    -| ['compiler_generated'] )
	end
'create_connect_dialog'/2 =
    %% Line 496
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'ping',{'state',Frame,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,Prev}> when 'true' ->
	      let <Dialog> =
		  %% Line 497
		  call 'wxTextEntryDialog':'new'
		      (Frame, [67|[111|[110|[110|[101|[99|[116|[32|[116|[111|[32|[110|[111|[100|[101]]]]]]]]]]]]]]], [{'value',Prev}|[]])
	      in  %% Line 498
		  case call 'wxDialog':'showModal'
			   (Dialog) of
		    %% Line 499
		    <5100> when 'true' ->
			let <Value> =
			    %% Line 500
			    call 'wxTextEntryDialog':'getValue'
				(Dialog)
			in  do  %% Line 501
				call 'wxDialog':'destroy'
				    (Dialog)
				%% Line 502
				{'value',Value}
		    %% Line 503
		    <5101> when 'true' ->
			do  %% Line 504
			    call 'wxDialog':'destroy'
				(Dialog)
			    %% Line 505
			    'cancel'
		    ( <_cor4> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor4})
		      -| ['compiler_generated'] )
		  end
	  %% Line 507
	  <'connect',{'state',Frame,_cor67,_cor68,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77,_cor78,_cor79,_cor80,_cor81}> when 'true' ->
	      let <Dialog> =
		  %% Line 508
		  call 'wxDialog':'new'
		      (Frame, -1, [68|[105|[115|[116|[114|[105|[98|[117|[116|[101|[32|[110|[111|[100|[101]]]]]]]]]]]]]]], %% Line 509
															  [{'style',541072960}])
	      in  let <VSizer> =
		      %% Line 511
		      call 'wxBoxSizer':'new'
			  (8)
		  in  let <RadioBox> =
			  %% Line 514
			  call 'wxRadioBox':'new'
			      (Dialog, 1, [], {-1,-1}, {-1,-1}, [[83|[104|[111|[114|[116|[32|[110|[97|[109|[101]]]]]]]]]]|[[76|[111|[110|[103|[32|[110|[97|[109|[101]]]]]]]]]]], %% Line 515
																						 [{'majorDim',2}|[{'style',4}]])
		      in  let <NameText> =
			      %% Line 517
			      call 'wxStaticText':'new'
				  (Dialog, -1, [78|[111|[100|[101|[32|[110|[97|[109|[101|[58|[32]]]]]]]]]]])
			  in  let <NameCtrl> =
				  %% Line 518
				  call 'wxTextCtrl':'new'
				      (Dialog, -1, [{'size',{300,-1}}])
			      in  do  %% Line 519
				      call 'wxTextCtrl':'setValue'
					  (NameCtrl, [111|[98|[115|[101|[114|[118|[101|[114]]]]]]]])
				      let <CookieText> =
					  %% Line 520
					  call 'wxStaticText':'new'
					      (Dialog, -1, [83|[101|[99|[114|[101|[116|[32|[99|[111|[111|[107|[105|[101|[58|[32]]]]]]]]]]]]]]])
				      in  let <CookieCtrl> =
					      %% Line 521
					      call 'wxTextCtrl':'new'
						  (Dialog, -1, [{'style',2048}])
					  in  let <BtnSizer> =
						  %% Line 523
						  call 'wxDialog':'createButtonSizer'
						      (Dialog, 20)
					      in  do  %% Line 526
						      call 'wxSizer':'add'
							  (VSizer, RadioBox, [{'flag',10416}|[{'border',5}]])
						      do  %% Line 527
							  call 'wxSizer':'addSpacer'
							      (VSizer, 10)
							  do  %% Line 528
							      call 'wxSizer':'add'
								  (VSizer, NameText, [{'flag',16}|[{'border',5}]])
							      do  %% Line 529
								  call 'wxSizer':'add'
								      (VSizer, NameCtrl, [{'flag',10416}|[{'border',5}]])
								  do  %% Line 530
								      call 'wxSizer':'addSpacer'
									  (VSizer, 10)
								      do  %% Line 531
									  call 'wxSizer':'add'
									      (VSizer, CookieText, [{'flag',16}|[{'border',5}]])
									  do  %% Line 532
									      call 'wxSizer':'add'
										  (VSizer, CookieCtrl, [{'flag',10416}|[{'border',5}]])
									      do  %% Line 533
										  call 'wxSizer':'addSpacer'
										      (VSizer, 10)
										  do  %% Line 534
										      call 'wxSizer':'add'
											  (VSizer, BtnSizer, [{'proportion',1}|[{'flag',8432}|[{'border',5}]]])
										      do  %% Line 536
											  call 'wxWindow':'setSizerAndFit'
											      (Dialog, VSizer)
											  do  %% Line 537
											      call 'wxSizer':'setSizeHints'
												  (VSizer, Dialog)
											      let <_cor41> =
												  %% Line 538
												  call 'os':'getenv'
												      ([72|[79|[77|[69]]]])
											      in  let <CookiePath> =
												      %% Line 538
												      call 'filename':'join'
													  (_cor41, [46|[101|[114|[108|[97|[110|[103|[46|[99|[111|[111|[107|[105|[101]]]]]]]]]]]]]])
												  in  let <_cor45> =
													  %% Line 539
													  case call 'filelib':'is_file'
														   (CookiePath) of
													    %% Line 540
													    <'true'> when 'true' ->
														%% Line 541
														case call 'file':'read_file'
															 (CookiePath) of
														  <{'ok',Bin}> when 'true' ->
														      %% Line 542
														      call 'erlang':'binary_to_list'
															  (Bin)
														  ( <_cor43> when 'true' ->
															primop 'match_fail'
															    ({'badmatch',_cor43})
														    -| ['compiler_generated'] )
														end
													    %% Line 543
													    <'false'> when 'true' ->
														%% Line 544
														[]
													    ( <_cor44> when 'true' ->
														  primop 'match_fail'
														      ({'case_clause',_cor44})
													      -| ['compiler_generated'] )
													  end
												      in  do  %% Line 546
													      call 'wxTextCtrl':'setValue'
														  (CookieCtrl, _cor45)
													      %% Line 547
													      case call 'wxDialog':'showModal'
														       (Dialog) of
														%% Line 548
														<5100> when 'true' ->
														    let <NameValue> =
															%% Line 549
															call 'wxTextCtrl':'getValue'
															    (NameCtrl)
														    in  let <NameLngthValue> =
															    %% Line 550
															    call 'wxRadioBox':'getSelection'
																(RadioBox)
															in  let <CookieValue> =
																%% Line 551
																call 'wxTextCtrl':'getValue'
																    (CookieCtrl)
															    in  do  %% Line 552
																    call 'wxDialog':'destroy'
																	(Dialog)
																    %% Line 553
																    {'value',NameValue,NameLngthValue,CookieValue}
														%% Line 554
														<5101> when 'true' ->
														    do  %% Line 555
															call 'wxDialog':'destroy'
															    (Dialog)
															%% Line 556
															'cancel'
														( <_cor50> when 'true' ->
														      primop 'match_fail'
															  ({'case_clause',_cor50})
														  -| ['compiler_generated'] )
													      end
	  ( <_cor52,_cor51> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor52,_cor51})
		  -| [{'function_name',{'create_connect_dialog',2}}] )
	    -| ['compiler_generated'] )
	end
'default_menus'/1 =
    %% Line 559
    fun (_cor0) ->
	let <_cor9> =
	    %% Line 565
	    case call 'erlang':'is_alive'
		     () of
	      %% Line 566
	      <'true'> when 'true' ->
		  let <_cor6> =
		      call 'erlang':'++'
			  (_cor0, %% Line 567
				  [{'create_menu',1,[67|[111|[110|[110|[101|[99|[116|[32|[78|[111|[100|[101]]]]]]]]]]]],[],'append','false'}])
		  in  {[78|[111|[100|[101|[115]]]]],_cor6}
	      %% Line 568
	      <'false'> when 'true' ->
		  let <_cor7> =
		      call 'erlang':'++'
			  (_cor0, %% Line 569
				  [{'create_menu',2,[69|[110|[97|[98|[108|[101|[32|[100|[105|[115|[116|[114|[105|[98|[117|[116|[105|[111|[110]]]]]]]]]]]]]]]]]]],[],'append','false'}])
		  in  {[78|[111|[100|[101|[115]]]]],_cor7}
	      ( <_cor8> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor8})
		-| ['compiler_generated'] )
	    end
	in  let <_cor11> =
		%% Line 571
		call 'os':'type'
		    ()
	    in  %% Line 571
		case <> of
		  %% Line 576
		  <>
		      when call 'erlang':'=:='
			    (_cor11,
			     {'unix','darwin'}) ->
		      %% Line 581
		      [{[70|[105|[108|[101]]]],[{'create_menu',4,[69|[120|[97|[109|[105|[110|[101|[32|[67|[114|[97|[115|[104|[100|[117|[109|[112]]]]]]]]]]]]]]]]],[],'append','false'}|[{'create_menu',5006,[81|[117|[105|[116]]]],[],'append','false'}|[{'create_menu',5014,[65|[98|[111|[117|[116]]]]],[],'append','false'}]]]}|[_cor9|[{[38|[72|[101|[108|[112]]]]],[{'create_menu',5009,'undefined',[],'append','false'}]}]]]
		  %% Line 572
		  <> when 'true' ->
		      %% Line 575
		      [{[70|[105|[108|[101]]]],[{'create_menu',4,[69|[120|[97|[109|[105|[110|[101|[32|[67|[114|[97|[115|[104|[100|[117|[109|[112]]]]]]]]]]]]]]]]],[],'append','false'}|[{'create_menu',5006,[81|[117|[105|[116]]]],[],'append','false'}]]}|[_cor9|[{[72|[101|[108|[112]]]],[{'create_menu',5014,[65|[98|[111|[117|[116]]]]],[],'append','false'}|[{'create_menu',5009,'undefined',[],'append','false'}]]}]]]
		end
'clean_menus'/2 =
    %% Line 584
    fun (_cor1,_cor0) ->
	%% Line 585
	apply 'remove_menu_items'/2
	    (_cor1, _cor0)
'remove_menu_items'/2 =
    %% Line 587
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[{MenuStr = [70|[105|[108|[101]]]],Menus}|Rest],MenuBar> when 'true' ->
	      %% Line 588
	      case call 'wxMenuBar':'findMenu'
		       (MenuBar, MenuStr) of
		%% Line 589
		<-1> when 'true' ->
		    %% Line 590
		    apply 'remove_menu_items'/2
			(Rest, MenuBar)
		%% Line 591
		<MenuId> when 'true' ->
		    let <Menu> =
			%% Line 592
			call 'wxMenuBar':'getMenu'
			    (MenuBar, MenuId)
		    in  let <_cor8> =
			    %% Line 593
			    ( letrec
				  'lc$^0'/1 =
				      fun (_cor5) ->
					  case _cor5 of
					    <[{'create_menu',_cor26,Tag,_cor27,_cor28,_cor29}|_cor4]> when 'true' ->
						let <_cor6> =
						    call 'wxMenu':'findItem'
							(Menu, Tag)
						in  let <_cor7> =
							apply 'lc$^0'/1
							    (_cor4)
						    in  ( [_cor6|_cor7]
							  -| ['compiler_generated'] )
					    ( <[_cor3|_cor4]> when 'true' ->
						  apply 'lc$^0'/1
						      (_cor4)
					      -| ['compiler_generated'] )
					    <[]> when 'true' ->
						[]
					    ( <_cor5> when 'true' ->
						  ( primop 'match_fail'
							({'function_clause',_cor5})
						    -| [{'function_name',{'lc$^0',1}}] )
					      -| ['compiler_generated'] )
					  end
			      in  apply 'lc$^0'/1
				      (Menus)
			      -| ['list_comprehension'] )
			in  do  %% Line 594
				( letrec
				      'lc$^1'/1 =
					  fun (_cor12) ->
					      case _cor12 of
						<[MItem|_cor11]> when 'true' ->
						    do  call 'wxMenu':'delete'
							    (Menu, MItem)
							apply 'lc$^1'/1
							    (_cor11)
						<[]> when 'true' ->
						    []
						( <_cor12> when 'true' ->
						      ( primop 'match_fail'
							    ({'function_clause',_cor12})
							-| [{'function_name',{'lc$^1',1}}] )
						  -| ['compiler_generated'] )
					      end
				  in  apply 'lc$^1'/1
					  (_cor8)
				  -| ['list_comprehension'] )
				%% Line 595
				apply 'remove_menu_items'/2
				    (Rest, MenuBar)
	      end
	  %% Line 597
	  <[{[78|[111|[100|[101|[115]]]]],_cor30}|_cor31],_X_MB> when 'true' ->
	      %% Line 598
	      'ok'
	  %% Line 599
	  <[{Tag,_X_Menus}|Rest],MenuBar> when 'true' ->
	      %% Line 600
	      case call 'wxMenuBar':'findMenu'
		       (MenuBar, Tag) of
		%% Line 601
		<-1> when 'true' ->
		    %% Line 602
		    apply 'remove_menu_items'/2
			(Rest, MenuBar)
		%% Line 603
		<MenuId> when 'true' ->
		    let <Menu> =
			%% Line 604
			call 'wxMenuBar':'getMenu'
			    (MenuBar, MenuId)
		    in  do  %% Line 605
			    call 'wxMenuBar':'remove'
				(MenuBar, MenuId)
			    let <Items> =
				%% Line 606
				call 'wxMenu':'getMenuItems'
				    (Menu)
			    in  do  %% Line 607
				    ( letrec
					  'lc$^2'/1 =
					      fun (_cor20) ->
						  case _cor20 of
						    <[Item|_cor19]> when 'true' ->
							do  call 'wxMenu':'Destroy'
								(Menu, Item)
							    apply 'lc$^2'/1
								(_cor19)
						    <[]> when 'true' ->
							[]
						    ( <_cor20> when 'true' ->
							  ( primop 'match_fail'
								({'function_clause',_cor20})
							    -| [{'function_name',{'lc$^2',1}}] )
						      -| ['compiler_generated'] )
						  end
				      in  apply 'lc$^2'/1
					      (Items)
				      -| ['list_comprehension'] )
				    do  %% Line 608
					call 'wxMenu':'destroy'
					    (Menu)
					%% Line 609
					apply 'remove_menu_items'/2
					    (Rest, MenuBar)
	      end
	  %% Line 611
	  <[],_X_MB> when 'true' ->
	      %% Line 612
	      'ok'
	  ( <_cor25,_cor24> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor25,_cor24})
		  -| [{'function_name',{'remove_menu_items',2}}] )
	    -| ['compiler_generated'] )
	end
'get_nodes'/0 =
    %% Line 614
    fun () ->
	let <_cor4> =
	    %% Line 615
	    case call 'erlang':'is_alive'
		     () of
	      %% Line 616
	      <'false'> when 'true' ->
		  []
	      %% Line 617
	      <'true'> when 'true' ->
		  %% Line 618
		  case call 'net_adm':'names'
			   () of
		    %% Line 619
		    <{'error',_cor17}> when 'true' ->
			call 'erlang':'nodes'
			    ()
		    %% Line 620
		    <{'ok',Names}> when 'true' ->
			let <_cor1> =
			    %% Line 621
			    apply 'epmd_nodes'/1
				(Names)
			in  let <_cor0> =
				%% Line 621
				call 'erlang':'nodes'
				    ()
			    in  %% Line 621
				call 'erlang':'++'
				    (_cor1, _cor0)
		    ( <_cor2> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor2})
		      -| ['compiler_generated'] )
		  end
	      ( <_cor3> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor3})
		-| ['compiler_generated'] )
	    end
	in  let <Nodes> =
		%% Line 624
		call 'lists':'usort'
		    (_cor4)
	    in  let <_cor14> =
		    %% Line 626
		    ( fun (_cor11,_cor10) ->
			  case <_cor11,_cor10> of
			    <Node,{Id,Acc}>
				when call 'erlang':'<'
				      (Id,
				       2000) ->
				let <_cor9> =
				    %% Line 627
				    call 'erlang':'+'
					(Id, 1)
				in  let <_cor8> =
					%% Line 627
					call 'erlang':'+'
					    (Id, 1000)
				    in  let <_cor7> =
					    %% Line 628
					    call 'erlang':'atom_to_list'
						(Node)
					in  %% Line 627
					    {_cor9,[{'create_menu',_cor8,_cor7,[],'append','false'}|%% Line 628
												    Acc]}
			    ( <_cor13,_cor12> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor13,_cor12})
				    -| [{'function_name',{'-get_nodes/0-fun-0-',2}}] )
			      -| ['compiler_generated'] )
			  end
		      -| [{'id',{0,0,'-get_nodes/0-fun-0-'}}] )
		in  %% Line 625
		    case %% Line 626
			 call 'lists':'foldl'
			     (_cor14, %% Line 629
				      {1,[]}, %% Line 629
					      Nodes) of
		      <{_cor18,Menues}> when 'true' ->
			  let <_cor16> =
			      %% Line 630
			      call 'lists':'reverse'
				  (Menues)
			  in  %% Line 630
			      {Nodes,_cor16}
		      ( <_cor15> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor15})
			-| ['compiler_generated'] )
		    end
'epmd_nodes'/1 =
    %% Line 632
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 633
	    call 'erlang':'node'
		()
	in  let <_cor2> =
		%% Line 633
		call 'erlang':'atom_to_list'
		    (_cor1)
	    in  %% Line 633
		case call 'string':'tokens'
			 (_cor2, [64]) of
		  <[_cor11|[Host|[]]]> when 'true' ->
		      %% Line 634
		      ( letrec
			    'lc$^0'/1 =
				fun (_cor6) ->
				    case _cor6 of
				      <[{Name,_cor12}|_cor5]> when 'true' ->
					  let <_cor7> =
					      call 'erlang':'++'
						  (Name, [64|Host])
					  in  let <_cor8> =
						  call 'erlang':'list_to_atom'
						      (_cor7)
					      in  let <_cor9> =
						      apply 'lc$^0'/1
							  (_cor5)
						  in  ( [_cor8|_cor9]
							-| ['compiler_generated'] )
				      ( <[_cor4|_cor5]> when 'true' ->
					    apply 'lc$^0'/1
						(_cor5)
					-| ['compiler_generated'] )
				      <[]> when 'true' ->
					  []
				      ( <_cor6> when 'true' ->
					    ( primop 'match_fail'
						  ({'function_clause',_cor6})
					      -| [{'function_name',{'lc$^0',1}}] )
					-| ['compiler_generated'] )
				    end
			in  apply 'lc$^0'/1
				(_cor0)
			-| ['list_comprehension'] )
		  ( <_cor3> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_cor3})
		    -| ['compiler_generated'] )
		end
'update_node_list'/1 =
    %% Line 636
    fun (_cor0) ->
	case _cor0 of
	  <State = {'state',_cor23,MenuBar,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37}> when 'true' ->
	      %% Line 637
	      case apply 'get_nodes'/0
		       () of
		<{Nodes,NodesMenuItems}> when 'true' ->
		    let <_cor9> =
			%% Line 638
			case call 'wxMenuBar':'findMenu'
				 (MenuBar, [78|[111|[100|[101|[115]]]]]) of
			  %% Line 639
			  <-1> when 'true' ->
			      let <Menu> =
				  %% Line 640
				  call 'wxMenu':'new'
				      ()
			      in  do  %% Line 641
				      call 'wxMenuBar':'append'
					  (MenuBar, Menu, [78|[111|[100|[101|[115]]]]])
				      %% Line 642
				      Menu
			  %% Line 643
			  <NodeMenuId> when 'true' ->
			      let <Menu> =
				  %% Line 644
				  call 'wxMenuBar':'getMenu'
				      (MenuBar, NodeMenuId)
			      in  let <_cor7> =
				      %% Line 645
				      ( fun (_cor5) ->
					    call 'wxMenu':'Destroy'
						(Menu, _cor5)
					-| [{'id',{0,0,'-update_node_list/1-fun-0-'}}] )
				  in  let <_cor4> =
					  %% Line 646
					  call 'wxMenu':'getMenuItems'
					      (Menu)
				      in  do  %% Line 645
					      call 'wx':'foreach'
						  (_cor7, _cor4)
					      %% Line 647
					      Menu
			end
		    in  let <_cor15> =
			    %% Line 650
			    ( fun (_cor12,_cor11) ->
				  %% Line 651
				  call 'observer_lib':'create_menu_item'
				      (_cor12, _cor9, _cor11)
			      -| [{'id',{0,0,'-update_node_list/1-fun-1-'}}] )
			in  let <Index> =
				%% Line 650
				call 'wx':'foldl'
				    (_cor15, %% Line 652
					     0, %% Line 652
						NodesMenuItems)
			    in  let <_cor18> =
				    %% Line 654
				    case call 'erlang':'is_alive'
					     () of
				      %% Line 655
				      <'true'> when 'true' ->
					  {'create_menu',1,[67|[111|[110|[110|[101|[99|[116|[32|[110|[111|[100|[101]]]]]]]]]]]],[],'append','false'}
				      %% Line 656
				      <'false'> when 'true' ->
					  {'create_menu',2,[69|[110|[97|[98|[108|[101|[32|[100|[105|[115|[116|[114|[105|[98|[117|[116|[105|[111|[110]]]]]]]]]]]]]]]]]]],[],'append','false'}
				      ( <_cor17> when 'true' ->
					    primop 'match_fail'
						({'case_clause',_cor17})
					-| ['compiler_generated'] )
				    end
				in  do  %% Line 658
					call 'observer_lib':'create_menu_item'
					    (_cor18, _cor9, Index)
					%% Line 659
					call 'erlang':'setelement'
					    (16, State, Nodes)
		( <_cor1> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor1})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor22> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor22})
		  -| [{'function_name',{'update_node_list',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('observer_wx')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('observer_wx', _cor0)
end