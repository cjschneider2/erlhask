module 'cdv_virtual_list_wx' ['code_change'/3,
			      'handle_call'/3,
			      'handle_cast'/2,
			      'handle_event'/2,
			      'handle_info'/2,
			      'init'/1,
			      'module_info'/0,
			      'module_info'/1,
			      'start_detail_win'/1,
			      'start_link'/2,
			      'start_link'/3,
			      'terminate'/2]
    attributes [%% Line 20
		'behaviour' =
		    %% Line 20
		    ['wx_object'],
		%% Line 25
		'type' =
		    %% Line 25
		    [{{'record','wx'},[{'typed_record_field',{'record_field',25,{'atom',25,'id'}},{'type',25,'union',[{'atom',25,'undefined'}|[{'type',25,'integer',[]}]]}}|[{'typed_record_field',{'record_field',26,{'atom',26,'obj'}},{'type',26,'union',[{'atom',26,'undefined'}|[{'remote_type',26,[{'atom',26,'wx'}|[{'atom',26,'wx_object'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',27,{'atom',27,'userData'}},{'type',27,'union',[{'atom',27,'undefined'}|[{'type',27,'term',[]}]]}}|[{'typed_record_field',{'record_field',28,{'atom',28,'event'}},{'type',28,'union',[{'atom',28,'undefined'}|[{'type',28,'event',[]}]]}}]]]],[]}],
		%% Line 31
		'type' =
		    %% Line 31
		    [{'wx',{'type',31,'record',[{'atom',31,'wx'}]},[]}],
		%% Line 35
		'type' =
		    %% Line 35
		    [{{'record','wxNavigationKey'},[{'typed_record_field',{'record_field',35,{'atom',35,'type'}},{'type',35,'union',[{'atom',35,'undefined'}|[{'type',35,'wxNavigationKeyEventType',[]}]]}}|[{'typed_record_field',{'record_field',36,{'atom',36,'flags'}},{'type',36,'union',[{'atom',36,'undefined'}|[{'type',36,'integer',[]}]]}}|[{'typed_record_field',{'record_field',37,{'atom',37,'focus'}},{'type',37,'union',[{'atom',37,'undefined'}|[{'remote_type',37,[{'atom',37,'wxWindow'}|[{'atom',37,'wxWindow'}|[[]]]]}]]}}]]],[]}],
		%% Line 38
		'type' =
		    %% Line 38
		    [{'wxNavigationKeyEventType',{'atom',38,'navigation_key'},[]}],
		%% Line 39
		'type' =
		    %% Line 39
		    [{'wxNavigationKey',{'type',39,'record',[{'atom',39,'wxNavigationKey'}]},[]}],
		%% Line 41
		'type' =
		    %% Line 41
		    [{{'record','wxSash'},[{'typed_record_field',{'record_field',41,{'atom',41,'type'}},{'type',41,'union',[{'atom',41,'undefined'}|[{'type',41,'wxSashEventType',[]}]]}}|[{'typed_record_field',{'record_field',42,{'atom',42,'edge'}},{'type',42,'union',[{'atom',42,'undefined'}|[{'remote_type',42,[{'atom',42,'wx'}|[{'atom',42,'wx_enum'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',43,{'atom',43,'dragRect'}},{'type',43,'union',[{'atom',43,'undefined'}|[{'type',43,'tuple',[{'ann_type',43,[{'var',43,'X'}|[{'type',43,'integer',[]}]]}|[{'ann_type',43,[{'var',43,'Y'}|[{'type',43,'integer',[]}]]}|[{'ann_type',43,[{'var',43,'W'}|[{'type',43,'integer',[]}]]}|[{'ann_type',43,[{'var',43,'H'}|[{'type',43,'integer',[]}]]}]]]]}]]}}|[{'typed_record_field',{'record_field',44,{'atom',44,'dragStatus'}},{'type',44,'union',[{'atom',44,'undefined'}|[{'remote_type',44,[{'atom',44,'wx'}|[{'atom',44,'wx_enum'}|[[]]]]}]]}}]]]],[]}],
		%% Line 45
		'type' =
		    %% Line 45
		    [{'wxSashEventType',{'atom',45,'sash_dragged'},[]}],
		%% Line 46
		'type' =
		    %% Line 46
		    [{'wxSash',{'type',46,'record',[{'atom',46,'wxSash'}]},[]}],
		%% Line 48
		'type' =
		    %% Line 48
		    [{{'record','wxList'},[{'typed_record_field',{'record_field',48,{'atom',48,'type'}},{'type',48,'union',[{'atom',48,'undefined'}|[{'type',48,'wxListEventType',[]}]]}}|[{'typed_record_field',{'record_field',49,{'atom',49,'code'}},{'type',49,'union',[{'atom',49,'undefined'}|[{'type',49,'integer',[]}]]}}|[{'typed_record_field',{'record_field',50,{'atom',50,'oldItemIndex'}},{'type',50,'union',[{'atom',50,'undefined'}|[{'type',50,'integer',[]}]]}}|[{'typed_record_field',{'record_field',51,{'atom',51,'itemIndex'}},{'type',51,'union',[{'atom',51,'undefined'}|[{'type',51,'integer',[]}]]}}|[{'typed_record_field',{'record_field',52,{'atom',52,'col'}},{'type',52,'union',[{'atom',52,'undefined'}|[{'type',52,'integer',[]}]]}}|[{'typed_record_field',{'record_field',53,{'atom',53,'pointDrag'}},{'type',53,'union',[{'atom',53,'undefined'}|[{'type',53,'tuple',[{'ann_type',53,[{'var',53,'X'}|[{'type',53,'integer',[]}]]}|[{'ann_type',53,[{'var',53,'Y'}|[{'type',53,'integer',[]}]]}]]}]]}}]]]]]],[]}],
		%% Line 54
		'type' =
		    %% Line 54
		    [{'wxListEventType',{'type',54,'union',[{'atom',54,'command_list_begin_drag'}|[{'atom',54,'command_list_begin_rdrag'}|[{'atom',54,'command_list_begin_label_edit'}|[{'atom',54,'command_list_end_label_edit'}|[{'atom',54,'command_list_delete_item'}|[{'atom',54,'command_list_delete_all_items'}|[{'atom',54,'command_list_key_down'}|[{'atom',54,'command_list_insert_item'}|[{'atom',54,'command_list_col_click'}|[{'atom',54,'command_list_col_right_click'}|[{'atom',54,'command_list_col_begin_drag'}|[{'atom',54,'command_list_col_dragging'}|[{'atom',54,'command_list_col_end_drag'}|[{'atom',54,'command_list_item_selected'}|[{'atom',54,'command_list_item_deselected'}|[{'atom',54,'command_list_item_right_click'}|[{'atom',54,'command_list_item_middle_click'}|[{'atom',54,'command_list_item_activated'}|[{'atom',54,'command_list_item_focused'}|[{'atom',54,'command_list_cache_hint'}]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 55
		'type' =
		    %% Line 55
		    [{'wxList',{'type',55,'record',[{'atom',55,'wxList'}]},[]}],
		%% Line 57
		'type' =
		    %% Line 57
		    [{{'record','wxNotebook'},[{'typed_record_field',{'record_field',57,{'atom',57,'type'}},{'type',57,'union',[{'atom',57,'undefined'}|[{'type',57,'wxNotebookEventType',[]}]]}}],[]}],
		%% Line 58
		'type' =
		    %% Line 58
		    [{'wxNotebookEventType',{'type',58,'union',[{'atom',58,'command_notebook_page_changed'}|[{'atom',58,'command_notebook_page_changing'}]]},[]}],
		%% Line 59
		'type' =
		    %% Line 59
		    [{'wxNotebook',{'type',59,'record',[{'atom',59,'wxNotebook'}]},[]}],
		%% Line 61
		'type' =
		    %% Line 61
		    [{{'record','wxDisplayChanged'},[{'typed_record_field',{'record_field',61,{'atom',61,'type'}},{'type',61,'union',[{'atom',61,'undefined'}|[{'type',61,'wxDisplayChangedEventType',[]}]]}}],[]}],
		%% Line 62
		'type' =
		    %% Line 62
		    [{'wxDisplayChangedEventType',{'atom',62,'display_changed'},[]}],
		%% Line 63
		'type' =
		    %% Line 63
		    [{'wxDisplayChanged',{'type',63,'record',[{'atom',63,'wxDisplayChanged'}]},[]}],
		%% Line 65
		'type' =
		    %% Line 65
		    [{{'record','wxErase'},[{'typed_record_field',{'record_field',65,{'atom',65,'type'}},{'type',65,'union',[{'atom',65,'undefined'}|[{'type',65,'wxEraseEventType',[]}]]}}|[{'typed_record_field',{'record_field',66,{'atom',66,'dc'}},{'type',66,'union',[{'atom',66,'undefined'}|[{'remote_type',66,[{'atom',66,'wxDC'}|[{'atom',66,'wxDC'}|[[]]]]}]]}}]],[]}],
		%% Line 67
		'type' =
		    %% Line 67
		    [{'wxEraseEventType',{'atom',67,'erase_background'},[]}],
		%% Line 68
		'type' =
		    %% Line 68
		    [{'wxErase',{'type',68,'record',[{'atom',68,'wxErase'}]},[]}],
		%% Line 70
		'type' =
		    %% Line 70
		    [{{'record','wxKey'},[{'typed_record_field',{'record_field',70,{'atom',70,'type'}},{'type',70,'union',[{'atom',70,'undefined'}|[{'type',70,'wxKeyEventType',[]}]]}}|[{'typed_record_field',{'record_field',71,{'atom',71,'x'}},{'type',71,'union',[{'atom',71,'undefined'}|[{'type',71,'integer',[]}]]}}|[{'typed_record_field',{'record_field',72,{'atom',72,'y'}},{'type',72,'union',[{'atom',72,'undefined'}|[{'type',72,'integer',[]}]]}}|[{'typed_record_field',{'record_field',73,{'atom',73,'keyCode'}},{'type',73,'union',[{'atom',73,'undefined'}|[{'type',73,'integer',[]}]]}}|[{'typed_record_field',{'record_field',74,{'atom',74,'controlDown'}},{'type',74,'union',[{'atom',74,'undefined'}|[{'type',74,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',75,{'atom',75,'shiftDown'}},{'type',75,'union',[{'atom',75,'undefined'}|[{'type',75,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',76,{'atom',76,'altDown'}},{'type',76,'union',[{'atom',76,'undefined'}|[{'type',76,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',77,{'atom',77,'metaDown'}},{'type',77,'union',[{'atom',77,'undefined'}|[{'type',77,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',78,{'atom',78,'scanCode'}},{'type',78,'union',[{'atom',78,'undefined'}|[{'type',78,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',79,{'atom',79,'uniChar'}},{'type',79,'union',[{'atom',79,'undefined'}|[{'type',79,'integer',[]}]]}}|[{'typed_record_field',{'record_field',80,{'atom',80,'rawCode'}},{'type',80,'union',[{'atom',80,'undefined'}|[{'type',80,'integer',[]}]]}}|[{'typed_record_field',{'record_field',81,{'atom',81,'rawFlags'}},{'type',81,'union',[{'atom',81,'undefined'}|[{'type',81,'integer',[]}]]}}]]]]]]]]]]]],[]}],
		%% Line 82
		'type' =
		    %% Line 82
		    [{'wxKeyEventType',{'type',82,'union',[{'atom',82,'char'}|[{'atom',82,'char_hook'}|[{'atom',82,'key_down'}|[{'atom',82,'key_up'}]]]]},[]}],
		%% Line 83
		'type' =
		    %% Line 83
		    [{'wxKey',{'type',83,'record',[{'atom',83,'wxKey'}]},[]}],
		%% Line 85
		'type' =
		    %% Line 85
		    [{{'record','wxWindowDestroy'},[{'typed_record_field',{'record_field',85,{'atom',85,'type'}},{'type',85,'union',[{'atom',85,'undefined'}|[{'type',85,'wxWindowDestroyEventType',[]}]]}}],[]}],
		%% Line 86
		'type' =
		    %% Line 86
		    [{'wxWindowDestroyEventType',{'atom',86,'destroy'},[]}],
		%% Line 87
		'type' =
		    %% Line 87
		    [{'wxWindowDestroy',{'type',87,'record',[{'atom',87,'wxWindowDestroy'}]},[]}],
		%% Line 89
		'type' =
		    %% Line 89
		    [{{'record','wxCalendar'},[{'typed_record_field',{'record_field',89,{'atom',89,'type'}},{'type',89,'union',[{'atom',89,'undefined'}|[{'type',89,'wxCalendarEventType',[]}]]}}],[]}],
		%% Line 90
		'type' =
		    %% Line 90
		    [{'wxCalendarEventType',{'type',90,'union',[{'atom',90,'calendar_sel_changed'}|[{'atom',90,'calendar_day_changed'}|[{'atom',90,'calendar_month_changed'}|[{'atom',90,'calendar_year_changed'}|[{'atom',90,'calendar_doubleclicked'}|[{'atom',90,'calendar_weekday_clicked'}]]]]]]},[]}],
		%% Line 91
		'type' =
		    %% Line 91
		    [{'wxCalendar',{'type',91,'record',[{'atom',91,'wxCalendar'}]},[]}],
		%% Line 93
		'type' =
		    %% Line 93
		    [{{'record','wxSplitter'},[{'typed_record_field',{'record_field',93,{'atom',93,'type'}},{'type',93,'union',[{'atom',93,'undefined'}|[{'type',93,'wxSplitterEventType',[]}]]}}],[]}],
		%% Line 94
		'type' =
		    %% Line 94
		    [{'wxSplitterEventType',{'type',94,'union',[{'atom',94,'command_splitter_sash_pos_changed'}|[{'atom',94,'command_splitter_sash_pos_changing'}|[{'atom',94,'command_splitter_doubleclicked'}|[{'atom',94,'command_splitter_unsplit'}]]]]},[]}],
		%% Line 95
		'type' =
		    %% Line 95
		    [{'wxSplitter',{'type',95,'record',[{'atom',95,'wxSplitter'}]},[]}],
		%% Line 97
		'type' =
		    %% Line 97
		    [{{'record','wxScroll'},[{'typed_record_field',{'record_field',97,{'atom',97,'type'}},{'type',97,'union',[{'atom',97,'undefined'}|[{'type',97,'wxScrollEventType',[]}]]}}|[{'typed_record_field',{'record_field',98,{'atom',98,'commandInt'}},{'type',98,'union',[{'atom',98,'undefined'}|[{'type',98,'integer',[]}]]}}|[{'typed_record_field',{'record_field',99,{'atom',99,'extraLong'}},{'type',99,'union',[{'atom',99,'undefined'}|[{'type',99,'integer',[]}]]}}]]],[]}],
		%% Line 100
		'type' =
		    %% Line 100
		    [{'wxScrollEventType',{'type',100,'union',[{'atom',100,'scroll_top'}|[{'atom',100,'scroll_bottom'}|[{'atom',100,'scroll_lineup'}|[{'atom',100,'scroll_linedown'}|[{'atom',100,'scroll_pageup'}|[{'atom',100,'scroll_pagedown'}|[{'atom',100,'scroll_thumbtrack'}|[{'atom',100,'scroll_thumbrelease'}|[{'atom',100,'scroll_changed'}]]]]]]]]]},[]}],
		%% Line 101
		'type' =
		    %% Line 101
		    [{'wxScroll',{'type',101,'record',[{'atom',101,'wxScroll'}]},[]}],
		%% Line 103
		'type' =
		    %% Line 103
		    [{{'record','wxMenu'},[{'typed_record_field',{'record_field',103,{'atom',103,'type'}},{'type',103,'union',[{'atom',103,'undefined'}|[{'type',103,'wxMenuEventType',[]}]]}}],[]}],
		%% Line 104
		'type' =
		    %% Line 104
		    [{'wxMenuEventType',{'type',104,'union',[{'atom',104,'menu_open'}|[{'atom',104,'menu_close'}|[{'atom',104,'menu_highlight'}]]]},[]}],
		%% Line 105
		'type' =
		    %% Line 105
		    [{'wxMenu',{'type',105,'record',[{'atom',105,'wxMenu'}]},[]}],
		%% Line 107
		'type' =
		    %% Line 107
		    [{{'record','wxContextMenu'},[{'typed_record_field',{'record_field',107,{'atom',107,'type'}},{'type',107,'union',[{'atom',107,'undefined'}|[{'type',107,'wxContextMenuEventType',[]}]]}}],[]}],
		%% Line 108
		'type' =
		    %% Line 108
		    [{'wxContextMenuEventType',{'atom',108,'context_menu'},[]}],
		%% Line 109
		'type' =
		    %% Line 109
		    [{'wxContextMenu',{'type',109,'record',[{'atom',109,'wxContextMenu'}]},[]}],
		%% Line 111
		'type' =
		    %% Line 111
		    [{{'record','wxShow'},[{'typed_record_field',{'record_field',111,{'atom',111,'type'}},{'type',111,'union',[{'atom',111,'undefined'}|[{'type',111,'wxShowEventType',[]}]]}}],[]}],
		%% Line 112
		'type' =
		    %% Line 112
		    [{'wxShowEventType',{'atom',112,'show'},[]}],
		%% Line 113
		'type' =
		    %% Line 113
		    [{'wxShow',{'type',113,'record',[{'atom',113,'wxShow'}]},[]}],
		%% Line 115
		'type' =
		    %% Line 115
		    [{{'record','wxSpin'},[{'typed_record_field',{'record_field',115,{'atom',115,'type'}},{'type',115,'union',[{'atom',115,'undefined'}|[{'type',115,'wxSpinEventType',[]}]]}}|[{'typed_record_field',{'record_field',116,{'atom',116,'commandInt'}},{'type',116,'union',[{'atom',116,'undefined'}|[{'type',116,'integer',[]}]]}}]],[]}],
		%% Line 117
		'type' =
		    %% Line 117
		    [{'wxSpinEventType',{'type',117,'union',[{'atom',117,'command_spinctrl_updated'}|[{'atom',117,'spin_up'}|[{'atom',117,'spin_down'}|[{'atom',117,'spin'}]]]]},[]}],
		%% Line 118
		'type' =
		    %% Line 118
		    [{'wxSpin',{'type',118,'record',[{'atom',118,'wxSpin'}]},[]}],
		%% Line 120
		'type' =
		    %% Line 120
		    [{{'record','wxSetCursor'},[{'typed_record_field',{'record_field',120,{'atom',120,'type'}},{'type',120,'union',[{'atom',120,'undefined'}|[{'type',120,'wxSetCursorEventType',[]}]]}}],[]}],
		%% Line 121
		'type' =
		    %% Line 121
		    [{'wxSetCursorEventType',{'atom',121,'set_cursor'},[]}],
		%% Line 122
		'type' =
		    %% Line 122
		    [{'wxSetCursor',{'type',122,'record',[{'atom',122,'wxSetCursor'}]},[]}],
		%% Line 124
		'type' =
		    %% Line 124
		    [{{'record','wxFontPicker'},[{'typed_record_field',{'record_field',124,{'atom',124,'type'}},{'type',124,'union',[{'atom',124,'undefined'}|[{'type',124,'wxFontPickerEventType',[]}]]}}|[{'typed_record_field',{'record_field',125,{'atom',125,'font'}},{'type',125,'union',[{'atom',125,'undefined'}|[{'remote_type',125,[{'atom',125,'wxFont'}|[{'atom',125,'wxFont'}|[[]]]]}]]}}]],[]}],
		%% Line 126
		'type' =
		    %% Line 126
		    [{'wxFontPickerEventType',{'atom',126,'command_fontpicker_changed'},[]}],
		%% Line 127
		'type' =
		    %% Line 127
		    [{'wxFontPicker',{'type',127,'record',[{'atom',127,'wxFontPicker'}]},[]}],
		%% Line 129
		'type' =
		    %% Line 129
		    [{{'record','wxScrollWin'},[{'typed_record_field',{'record_field',129,{'atom',129,'type'}},{'type',129,'union',[{'atom',129,'undefined'}|[{'type',129,'wxScrollWinEventType',[]}]]}}],[]}],
		%% Line 130
		'type' =
		    %% Line 130
		    [{'wxScrollWinEventType',{'type',130,'union',[{'atom',130,'scrollwin_top'}|[{'atom',130,'scrollwin_bottom'}|[{'atom',130,'scrollwin_lineup'}|[{'atom',130,'scrollwin_linedown'}|[{'atom',130,'scrollwin_pageup'}|[{'atom',130,'scrollwin_pagedown'}|[{'atom',130,'scrollwin_thumbtrack'}|[{'atom',130,'scrollwin_thumbrelease'}]]]]]]]]},[]}],
		%% Line 131
		'type' =
		    %% Line 131
		    [{'wxScrollWin',{'type',131,'record',[{'atom',131,'wxScrollWin'}]},[]}],
		%% Line 133
		'type' =
		    %% Line 133
		    [{{'record','wxPaint'},[{'typed_record_field',{'record_field',133,{'atom',133,'type'}},{'type',133,'union',[{'atom',133,'undefined'}|[{'type',133,'wxPaintEventType',[]}]]}}],[]}],
		%% Line 134
		'type' =
		    %% Line 134
		    [{'wxPaintEventType',{'atom',134,'paint'},[]}],
		%% Line 135
		'type' =
		    %% Line 135
		    [{'wxPaint',{'type',135,'record',[{'atom',135,'wxPaint'}]},[]}],
		%% Line 137
		'type' =
		    %% Line 137
		    [{{'record','wxChildFocus'},[{'typed_record_field',{'record_field',137,{'atom',137,'type'}},{'type',137,'union',[{'atom',137,'undefined'}|[{'type',137,'wxChildFocusEventType',[]}]]}}],[]}],
		%% Line 138
		'type' =
		    %% Line 138
		    [{'wxChildFocusEventType',{'atom',138,'child_focus'},[]}],
		%% Line 139
		'type' =
		    %% Line 139
		    [{'wxChildFocus',{'type',139,'record',[{'atom',139,'wxChildFocus'}]},[]}],
		%% Line 141
		'type' =
		    %% Line 141
		    [{{'record','wxMaximize'},[{'typed_record_field',{'record_field',141,{'atom',141,'type'}},{'type',141,'union',[{'atom',141,'undefined'}|[{'type',141,'wxMaximizeEventType',[]}]]}}],[]}],
		%% Line 142
		'type' =
		    %% Line 142
		    [{'wxMaximizeEventType',{'atom',142,'maximize'},[]}],
		%% Line 143
		'type' =
		    %% Line 143
		    [{'wxMaximize',{'type',143,'record',[{'atom',143,'wxMaximize'}]},[]}],
		%% Line 145
		'type' =
		    %% Line 145
		    [{{'record','wxFileDirPicker'},[{'typed_record_field',{'record_field',145,{'atom',145,'type'}},{'type',145,'union',[{'atom',145,'undefined'}|[{'type',145,'wxFileDirPickerEventType',[]}]]}}|[{'typed_record_field',{'record_field',146,{'atom',146,'path'}},{'type',146,'union',[{'atom',146,'undefined'}|[{'remote_type',146,[{'atom',146,'unicode'}|[{'atom',146,'chardata'}|[[]]]]}]]}}]],[]}],
		%% Line 147
		'type' =
		    %% Line 147
		    [{'wxFileDirPickerEventType',{'type',147,'union',[{'atom',147,'command_filepicker_changed'}|[{'atom',147,'command_dirpicker_changed'}]]},[]}],
		%% Line 148
		'type' =
		    %% Line 148
		    [{'wxFileDirPicker',{'type',148,'record',[{'atom',148,'wxFileDirPicker'}]},[]}],
		%% Line 150
		'type' =
		    %% Line 150
		    [{{'record','wxFocus'},[{'typed_record_field',{'record_field',150,{'atom',150,'type'}},{'type',150,'union',[{'atom',150,'undefined'}|[{'type',150,'wxFocusEventType',[]}]]}}],[]}],
		%% Line 151
		'type' =
		    %% Line 151
		    [{'wxFocusEventType',{'type',151,'union',[{'atom',151,'set_focus'}|[{'atom',151,'kill_focus'}]]},[]}],
		%% Line 152
		'type' =
		    %% Line 152
		    [{'wxFocus',{'type',152,'record',[{'atom',152,'wxFocus'}]},[]}],
		%% Line 154
		'type' =
		    %% Line 154
		    [{{'record','wxDate'},[{'typed_record_field',{'record_field',154,{'atom',154,'type'}},{'type',154,'union',[{'atom',154,'undefined'}|[{'type',154,'wxDateEventType',[]}]]}}|[{'typed_record_field',{'record_field',155,{'atom',155,'date'}},{'type',155,'union',[{'atom',155,'undefined'}|[{'remote_type',155,[{'atom',155,'wx'}|[{'atom',155,'wx_datetime'}|[[]]]]}]]}}]],[]}],
		%% Line 156
		'type' =
		    %% Line 156
		    [{'wxDateEventType',{'atom',156,'date_changed'},[]}],
		%% Line 157
		'type' =
		    %% Line 157
		    [{'wxDate',{'type',157,'record',[{'atom',157,'wxDate'}]},[]}],
		%% Line 159
		'type' =
		    %% Line 159
		    [{{'record','wxHtmlLink'},[{'typed_record_field',{'record_field',159,{'atom',159,'type'}},{'type',159,'union',[{'atom',159,'undefined'}|[{'type',159,'wxHtmlLinkEventType',[]}]]}}|[{'typed_record_field',{'record_field',160,{'atom',160,'linkInfo'}},{'type',160,'union',[{'atom',160,'undefined'}|[{'remote_type',160,[{'atom',160,'wx'}|[{'atom',160,'wx_wxHtmlLinkInfo'}|[[]]]]}]]}}]],[]}],
		%% Line 161
		'type' =
		    %% Line 161
		    [{'wxHtmlLinkEventType',{'atom',161,'command_html_link_clicked'},[]}],
		%% Line 162
		'type' =
		    %% Line 162
		    [{'wxHtmlLink',{'type',162,'record',[{'atom',162,'wxHtmlLink'}]},[]}],
		%% Line 164
		'type' =
		    %% Line 164
		    [{{'record','wxHelp'},[{'typed_record_field',{'record_field',164,{'atom',164,'type'}},{'type',164,'union',[{'atom',164,'undefined'}|[{'type',164,'wxHelpEventType',[]}]]}}],[]}],
		%% Line 165
		'type' =
		    %% Line 165
		    [{'wxHelpEventType',{'type',165,'union',[{'atom',165,'help'}|[{'atom',165,'detailed_help'}]]},[]}],
		%% Line 166
		'type' =
		    %% Line 166
		    [{'wxHelp',{'type',166,'record',[{'atom',166,'wxHelp'}]},[]}],
		%% Line 168
		'type' =
		    %% Line 168
		    [{{'record','wxActivate'},[{'typed_record_field',{'record_field',168,{'atom',168,'type'}},{'type',168,'union',[{'atom',168,'undefined'}|[{'type',168,'wxActivateEventType',[]}]]}}|[{'typed_record_field',{'record_field',169,{'atom',169,'active'}},{'type',169,'union',[{'atom',169,'undefined'}|[{'type',169,'boolean',[]}]]}}]],[]}],
		%% Line 170
		'type' =
		    %% Line 170
		    [{'wxActivateEventType',{'type',170,'union',[{'atom',170,'activate'}|[{'atom',170,'activate_app'}|[{'atom',170,'hibernate'}]]]},[]}],
		%% Line 171
		'type' =
		    %% Line 171
		    [{'wxActivate',{'type',171,'record',[{'atom',171,'wxActivate'}]},[]}],
		%% Line 173
		'type' =
		    %% Line 173
		    [{{'record','wxStyledText'},[{'typed_record_field',{'record_field',173,{'atom',173,'type'}},{'type',173,'union',[{'atom',173,'undefined'}|[{'type',173,'wxStyledTextEventType',[]}]]}}|[{'typed_record_field',{'record_field',174,{'atom',174,'position'}},{'type',174,'union',[{'atom',174,'undefined'}|[{'type',174,'integer',[]}]]}}|[{'typed_record_field',{'record_field',175,{'atom',175,'key'}},{'type',175,'union',[{'atom',175,'undefined'}|[{'type',175,'integer',[]}]]}}|[{'typed_record_field',{'record_field',176,{'atom',176,'modifiers'}},{'type',176,'union',[{'atom',176,'undefined'}|[{'type',176,'integer',[]}]]}}|[{'typed_record_field',{'record_field',177,{'atom',177,'modificationType'}},{'type',177,'union',[{'atom',177,'undefined'}|[{'type',177,'integer',[]}]]}}|[{'typed_record_field',{'record_field',178,{'atom',178,'text'}},{'type',178,'union',[{'atom',178,'undefined'}|[{'remote_type',178,[{'atom',178,'unicode'}|[{'atom',178,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',179,{'atom',179,'length'}},{'type',179,'union',[{'atom',179,'undefined'}|[{'type',179,'integer',[]}]]}}|[{'typed_record_field',{'record_field',180,{'atom',180,'linesAdded'}},{'type',180,'union',[{'atom',180,'undefined'}|[{'type',180,'integer',[]}]]}}|[{'typed_record_field',{'record_field',181,{'atom',181,'line'}},{'type',181,'union',[{'atom',181,'undefined'}|[{'type',181,'integer',[]}]]}}|[{'typed_record_field',{'record_field',182,{'atom',182,'foldLevelNow'}},{'type',182,'union',[{'atom',182,'undefined'}|[{'type',182,'integer',[]}]]}}|[{'typed_record_field',{'record_field',183,{'atom',183,'foldLevelPrev'}},{'type',183,'union',[{'atom',183,'undefined'}|[{'type',183,'integer',[]}]]}}|[{'typed_record_field',{'record_field',184,{'atom',184,'margin'}},{'type',184,'union',[{'atom',184,'undefined'}|[{'type',184,'integer',[]}]]}}|[{'typed_record_field',{'record_field',185,{'atom',185,'message'}},{'type',185,'union',[{'atom',185,'undefined'}|[{'type',185,'integer',[]}]]}}|[{'typed_record_field',{'record_field',186,{'atom',186,'wParam'}},{'type',186,'union',[{'atom',186,'undefined'}|[{'type',186,'integer',[]}]]}}|[{'typed_record_field',{'record_field',187,{'atom',187,'lParam'}},{'type',187,'union',[{'atom',187,'undefined'}|[{'type',187,'integer',[]}]]}}|[{'typed_record_field',{'record_field',188,{'atom',188,'listType'}},{'type',188,'union',[{'atom',188,'undefined'}|[{'type',188,'integer',[]}]]}}|[{'typed_record_field',{'record_field',189,{'atom',189,'x'}},{'type',189,'union',[{'atom',189,'undefined'}|[{'type',189,'integer',[]}]]}}|[{'typed_record_field',{'record_field',190,{'atom',190,'y'}},{'type',190,'union',[{'atom',190,'undefined'}|[{'type',190,'integer',[]}]]}}|[{'typed_record_field',{'record_field',191,{'atom',191,'dragText'}},{'type',191,'union',[{'atom',191,'undefined'}|[{'remote_type',191,[{'atom',191,'unicode'}|[{'atom',191,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',192,{'atom',192,'dragAllowMove'}},{'type',192,'union',[{'atom',192,'undefined'}|[{'type',192,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',193,{'atom',193,'dragResult'}},{'type',193,'union',[{'atom',193,'undefined'}|[{'remote_type',193,[{'atom',193,'wx'}|[{'atom',193,'wx_enum'}|[[]]]]}]]}}]]]]]]]]]]]]]]]]]]]]],[]}],
		%% Line 194
		'type' =
		    %% Line 194
		    [{'wxStyledTextEventType',{'type',194,'union',[{'atom',194,'stc_change'}|[{'atom',194,'stc_styleneeded'}|[{'atom',194,'stc_charadded'}|[{'atom',194,'stc_savepointreached'}|[{'atom',194,'stc_savepointleft'}|[{'atom',194,'stc_romodifyattempt'}|[{'atom',194,'stc_key'}|[{'atom',194,'stc_doubleclick'}|[{'atom',194,'stc_updateui'}|[{'atom',194,'stc_modified'}|[{'atom',194,'stc_macrorecord'}|[{'atom',194,'stc_marginclick'}|[{'atom',194,'stc_needshown'}|[{'atom',194,'stc_painted'}|[{'atom',194,'stc_userlistselection'}|[{'atom',194,'stc_uridropped'}|[{'atom',194,'stc_dwellstart'}|[{'atom',194,'stc_dwellend'}|[{'atom',194,'stc_start_drag'}|[{'atom',194,'stc_drag_over'}|[{'atom',194,'stc_do_drop'}|[{'atom',194,'stc_zoom'}|[{'atom',194,'stc_hotspot_click'}|[{'atom',194,'stc_hotspot_dclick'}|[{'atom',194,'stc_calltip_click'}|[{'atom',194,'stc_autocomp_selection'}]]]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 195
		'type' =
		    %% Line 195
		    [{'wxStyledText',{'type',195,'record',[{'atom',195,'wxStyledText'}]},[]}],
		%% Line 197
		'type' =
		    %% Line 197
		    [{{'record','wxSysColourChanged'},[{'typed_record_field',{'record_field',197,{'atom',197,'type'}},{'type',197,'union',[{'atom',197,'undefined'}|[{'type',197,'wxSysColourChangedEventType',[]}]]}}],[]}],
		%% Line 198
		'type' =
		    %% Line 198
		    [{'wxSysColourChangedEventType',{'atom',198,'sys_colour_changed'},[]}],
		%% Line 199
		'type' =
		    %% Line 199
		    [{'wxSysColourChanged',{'type',199,'record',[{'atom',199,'wxSysColourChanged'}]},[]}],
		%% Line 201
		'type' =
		    %% Line 201
		    [{{'record','wxGrid'},[{'typed_record_field',{'record_field',201,{'atom',201,'type'}},{'type',201,'union',[{'atom',201,'undefined'}|[{'type',201,'wxGridEventType',[]}]]}}|[{'typed_record_field',{'record_field',202,{'atom',202,'row'}},{'type',202,'union',[{'atom',202,'undefined'}|[{'type',202,'integer',[]}]]}}|[{'typed_record_field',{'record_field',203,{'atom',203,'col'}},{'type',203,'union',[{'atom',203,'undefined'}|[{'type',203,'integer',[]}]]}}|[{'typed_record_field',{'record_field',204,{'atom',204,'x'}},{'type',204,'union',[{'atom',204,'undefined'}|[{'type',204,'integer',[]}]]}}|[{'typed_record_field',{'record_field',205,{'atom',205,'y'}},{'type',205,'union',[{'atom',205,'undefined'}|[{'type',205,'integer',[]}]]}}|[{'typed_record_field',{'record_field',206,{'atom',206,'selecting'}},{'type',206,'union',[{'atom',206,'undefined'}|[{'type',206,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',207,{'atom',207,'control'}},{'type',207,'union',[{'atom',207,'undefined'}|[{'type',207,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',208,{'atom',208,'meta'}},{'type',208,'union',[{'atom',208,'undefined'}|[{'type',208,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',209,{'atom',209,'shift'}},{'type',209,'union',[{'atom',209,'undefined'}|[{'type',209,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',210,{'atom',210,'alt'}},{'type',210,'union',[{'atom',210,'undefined'}|[{'type',210,'boolean',[]}]]}}]]]]]]]]]],[]}],
		%% Line 211
		'type' =
		    %% Line 211
		    [{'wxGridEventType',{'type',211,'union',[{'atom',211,'grid_cell_left_click'}|[{'atom',211,'grid_cell_right_click'}|[{'atom',211,'grid_cell_left_dclick'}|[{'atom',211,'grid_cell_right_dclick'}|[{'atom',211,'grid_label_left_click'}|[{'atom',211,'grid_label_right_click'}|[{'atom',211,'grid_label_left_dclick'}|[{'atom',211,'grid_label_right_dclick'}|[{'atom',211,'grid_row_size'}|[{'atom',211,'grid_col_size'}|[{'atom',211,'grid_range_select'}|[{'atom',211,'grid_cell_change'}|[{'atom',211,'grid_select_cell'}|[{'atom',211,'grid_editor_shown'}|[{'atom',211,'grid_editor_hidden'}|[{'atom',211,'grid_editor_created'}|[{'atom',211,'grid_cell_begin_drag'}]]]]]]]]]]]]]]]]]},[]}],
		%% Line 212
		'type' =
		    %% Line 212
		    [{'wxGrid',{'type',212,'record',[{'atom',212,'wxGrid'}]},[]}],
		%% Line 214
		'type' =
		    %% Line 214
		    [{{'record','wxPaletteChanged'},[{'typed_record_field',{'record_field',214,{'atom',214,'type'}},{'type',214,'union',[{'atom',214,'undefined'}|[{'type',214,'wxPaletteChangedEventType',[]}]]}}],[]}],
		%% Line 215
		'type' =
		    %% Line 215
		    [{'wxPaletteChangedEventType',{'atom',215,'palette_changed'},[]}],
		%% Line 216
		'type' =
		    %% Line 216
		    [{'wxPaletteChanged',{'type',216,'record',[{'atom',216,'wxPaletteChanged'}]},[]}],
		%% Line 218
		'type' =
		    %% Line 218
		    [{{'record','wxUpdateUI'},[{'typed_record_field',{'record_field',218,{'atom',218,'type'}},{'type',218,'union',[{'atom',218,'undefined'}|[{'type',218,'wxUpdateUIEventType',[]}]]}}],[]}],
		%% Line 219
		'type' =
		    %% Line 219
		    [{'wxUpdateUIEventType',{'atom',219,'update_ui'},[]}],
		%% Line 220
		'type' =
		    %% Line 220
		    [{'wxUpdateUI',{'type',220,'record',[{'atom',220,'wxUpdateUI'}]},[]}],
		%% Line 222
		'type' =
		    %% Line 222
		    [{{'record','wxSize'},[{'typed_record_field',{'record_field',222,{'atom',222,'type'}},{'type',222,'union',[{'atom',222,'undefined'}|[{'type',222,'wxSizeEventType',[]}]]}}|[{'typed_record_field',{'record_field',223,{'atom',223,'size'}},{'type',223,'union',[{'atom',223,'undefined'}|[{'type',223,'tuple',[{'ann_type',223,[{'var',223,'W'}|[{'type',223,'integer',[]}]]}|[{'ann_type',223,[{'var',223,'H'}|[{'type',223,'integer',[]}]]}]]}]]}}|[{'typed_record_field',{'record_field',224,{'atom',224,'rect'}},{'type',224,'union',[{'atom',224,'undefined'}|[{'type',224,'tuple',[{'ann_type',224,[{'var',224,'X'}|[{'type',224,'integer',[]}]]}|[{'ann_type',224,[{'var',224,'Y'}|[{'type',224,'integer',[]}]]}|[{'ann_type',224,[{'var',224,'W'}|[{'type',224,'integer',[]}]]}|[{'ann_type',224,[{'var',224,'H'}|[{'type',224,'integer',[]}]]}]]]]}]]}}]]],[]}],
		%% Line 225
		'type' =
		    %% Line 225
		    [{'wxSizeEventType',{'atom',225,'size'},[]}],
		%% Line 226
		'type' =
		    %% Line 226
		    [{'wxSize',{'type',226,'record',[{'atom',226,'wxSize'}]},[]}],
		%% Line 228
		'type' =
		    %% Line 228
		    [{{'record','wxIconize'},[{'typed_record_field',{'record_field',228,{'atom',228,'type'}},{'type',228,'union',[{'atom',228,'undefined'}|[{'type',228,'wxIconizeEventType',[]}]]}}],[]}],
		%% Line 229
		'type' =
		    %% Line 229
		    [{'wxIconizeEventType',{'atom',229,'iconize'},[]}],
		%% Line 230
		'type' =
		    %% Line 230
		    [{'wxIconize',{'type',230,'record',[{'atom',230,'wxIconize'}]},[]}],
		%% Line 232
		'type' =
		    %% Line 232
		    [{{'record','wxAuiNotebook'},[{'typed_record_field',{'record_field',232,{'atom',232,'type'}},{'type',232,'union',[{'atom',232,'undefined'}|[{'type',232,'wxAuiNotebookEventType',[]}]]}}|[{'typed_record_field',{'record_field',233,{'atom',233,'old_selection'}},{'type',233,'union',[{'atom',233,'undefined'}|[{'type',233,'integer',[]}]]}}|[{'typed_record_field',{'record_field',234,{'atom',234,'selection'}},{'type',234,'union',[{'atom',234,'undefined'}|[{'type',234,'integer',[]}]]}}|[{'typed_record_field',{'record_field',235,{'atom',235,'drag_source'}},{'type',235,'union',[{'atom',235,'undefined'}|[{'remote_type',235,[{'atom',235,'wxAuiNotebook'}|[{'atom',235,'wxAuiNotebook'}|[[]]]]}]]}}]]]],[]}],
		%% Line 236
		'type' =
		    %% Line 236
		    [{'wxAuiNotebookEventType',{'type',236,'union',[{'atom',236,'command_auinotebook_page_close'}|[{'atom',236,'command_auinotebook_page_changed'}|[{'atom',236,'command_auinotebook_page_changing'}|[{'atom',236,'command_auinotebook_button'}|[{'atom',236,'command_auinotebook_begin_drag'}|[{'atom',236,'command_auinotebook_end_drag'}|[{'atom',236,'command_auinotebook_drag_motion'}|[{'atom',236,'command_auinotebook_allow_dnd'}|[{'atom',236,'command_auinotebook_tab_middle_down'}|[{'atom',236,'command_auinotebook_tab_middle_up'}|[{'atom',236,'command_auinotebook_tab_right_down'}|[{'atom',236,'command_auinotebook_tab_right_up'}|[{'atom',236,'command_auinotebook_page_closed'}|[{'atom',236,'command_auinotebook_drag_done'}|[{'atom',236,'command_auinotebook_bg_dclick'}]]]]]]]]]]]]]]]},[]}],
		%% Line 237
		'type' =
		    %% Line 237
		    [{'wxAuiNotebook',{'type',237,'record',[{'atom',237,'wxAuiNotebook'}]},[]}],
		%% Line 239
		'type' =
		    %% Line 239
		    [{{'record','wxClose'},[{'typed_record_field',{'record_field',239,{'atom',239,'type'}},{'type',239,'union',[{'atom',239,'undefined'}|[{'type',239,'wxCloseEventType',[]}]]}}],[]}],
		%% Line 240
		'type' =
		    %% Line 240
		    [{'wxCloseEventType',{'type',240,'union',[{'atom',240,'close_window'}|[{'atom',240,'end_session'}|[{'atom',240,'query_end_session'}]]]},[]}],
		%% Line 241
		'type' =
		    %% Line 241
		    [{'wxClose',{'type',241,'record',[{'atom',241,'wxClose'}]},[]}],
		%% Line 243
		'type' =
		    %% Line 243
		    [{{'record','wxMouseCaptureChanged'},[{'typed_record_field',{'record_field',243,{'atom',243,'type'}},{'type',243,'union',[{'atom',243,'undefined'}|[{'type',243,'wxMouseCaptureChangedEventType',[]}]]}}],[]}],
		%% Line 244
		'type' =
		    %% Line 244
		    [{'wxMouseCaptureChangedEventType',{'atom',244,'mouse_capture_changed'},[]}],
		%% Line 245
		'type' =
		    %% Line 245
		    [{'wxMouseCaptureChanged',{'type',245,'record',[{'atom',245,'wxMouseCaptureChanged'}]},[]}],
		%% Line 247
		'type' =
		    %% Line 247
		    [{{'record','wxMouse'},[{'typed_record_field',{'record_field',247,{'atom',247,'type'}},{'type',247,'union',[{'atom',247,'undefined'}|[{'type',247,'wxMouseEventType',[]}]]}}|[{'typed_record_field',{'record_field',248,{'atom',248,'x'}},{'type',248,'union',[{'atom',248,'undefined'}|[{'type',248,'integer',[]}]]}}|[{'typed_record_field',{'record_field',249,{'atom',249,'y'}},{'type',249,'union',[{'atom',249,'undefined'}|[{'type',249,'integer',[]}]]}}|[{'typed_record_field',{'record_field',250,{'atom',250,'leftDown'}},{'type',250,'union',[{'atom',250,'undefined'}|[{'type',250,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',251,{'atom',251,'middleDown'}},{'type',251,'union',[{'atom',251,'undefined'}|[{'type',251,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',252,{'atom',252,'rightDown'}},{'type',252,'union',[{'atom',252,'undefined'}|[{'type',252,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',253,{'atom',253,'controlDown'}},{'type',253,'union',[{'atom',253,'undefined'}|[{'type',253,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',254,{'atom',254,'shiftDown'}},{'type',254,'union',[{'atom',254,'undefined'}|[{'type',254,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',255,{'atom',255,'altDown'}},{'type',255,'union',[{'atom',255,'undefined'}|[{'type',255,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',256,{'atom',256,'metaDown'}},{'type',256,'union',[{'atom',256,'undefined'}|[{'type',256,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',257,{'atom',257,'wheelRotation'}},{'type',257,'union',[{'atom',257,'undefined'}|[{'type',257,'integer',[]}]]}}|[{'typed_record_field',{'record_field',258,{'atom',258,'wheelDelta'}},{'type',258,'union',[{'atom',258,'undefined'}|[{'type',258,'integer',[]}]]}}|[{'typed_record_field',{'record_field',259,{'atom',259,'linesPerAction'}},{'type',259,'union',[{'atom',259,'undefined'}|[{'type',259,'integer',[]}]]}}]]]]]]]]]]]]],[]}],
		%% Line 260
		'type' =
		    %% Line 260
		    [{'wxMouseEventType',{'type',260,'union',[{'atom',260,'left_down'}|[{'atom',260,'left_up'}|[{'atom',260,'middle_down'}|[{'atom',260,'middle_up'}|[{'atom',260,'right_down'}|[{'atom',260,'right_up'}|[{'atom',260,'motion'}|[{'atom',260,'enter_window'}|[{'atom',260,'leave_window'}|[{'atom',260,'left_dclick'}|[{'atom',260,'middle_dclick'}|[{'atom',260,'right_dclick'}|[{'atom',260,'mousewheel'}]]]]]]]]]]]]]},[]}],
		%% Line 261
		'type' =
		    %% Line 261
		    [{'wxMouse',{'type',261,'record',[{'atom',261,'wxMouse'}]},[]}],
		%% Line 263
		'type' =
		    %% Line 263
		    [{{'record','wxClipboardText'},[{'typed_record_field',{'record_field',263,{'atom',263,'type'}},{'type',263,'union',[{'atom',263,'undefined'}|[{'type',263,'wxClipboardTextEventType',[]}]]}}],[]}],
		%% Line 264
		'type' =
		    %% Line 264
		    [{'wxClipboardTextEventType',{'type',264,'union',[{'atom',264,'command_text_copy'}|[{'atom',264,'command_text_cut'}|[{'atom',264,'command_text_paste'}]]]},[]}],
		%% Line 265
		'type' =
		    %% Line 265
		    [{'wxClipboardText',{'type',265,'record',[{'atom',265,'wxClipboardText'}]},[]}],
		%% Line 267
		'type' =
		    %% Line 267
		    [{{'record','wxWindowCreate'},[{'typed_record_field',{'record_field',267,{'atom',267,'type'}},{'type',267,'union',[{'atom',267,'undefined'}|[{'type',267,'wxWindowCreateEventType',[]}]]}}],[]}],
		%% Line 268
		'type' =
		    %% Line 268
		    [{'wxWindowCreateEventType',{'atom',268,'create'},[]}],
		%% Line 269
		'type' =
		    %% Line 269
		    [{'wxWindowCreate',{'type',269,'record',[{'atom',269,'wxWindowCreate'}]},[]}],
		%% Line 271
		'type' =
		    %% Line 271
		    [{{'record','wxAuiManager'},[{'typed_record_field',{'record_field',271,{'atom',271,'type'}},{'type',271,'union',[{'atom',271,'undefined'}|[{'type',271,'wxAuiManagerEventType',[]}]]}}|[{'typed_record_field',{'record_field',272,{'atom',272,'manager'}},{'type',272,'union',[{'atom',272,'undefined'}|[{'remote_type',272,[{'atom',272,'wxAuiManager'}|[{'atom',272,'wxAuiManager'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',273,{'atom',273,'pane'}},{'type',273,'union',[{'atom',273,'undefined'}|[{'remote_type',273,[{'atom',273,'wxAuiPaneInfo'}|[{'atom',273,'wxAuiPaneInfo'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',274,{'atom',274,'button'}},{'type',274,'union',[{'atom',274,'undefined'}|[{'type',274,'integer',[]}]]}}|[{'typed_record_field',{'record_field',275,{'atom',275,'veto_flag'}},{'type',275,'union',[{'atom',275,'undefined'}|[{'type',275,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',276,{'atom',276,'canveto_flag'}},{'type',276,'union',[{'atom',276,'undefined'}|[{'type',276,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',277,{'atom',277,'dc'}},{'type',277,'union',[{'atom',277,'undefined'}|[{'remote_type',277,[{'atom',277,'wxDC'}|[{'atom',277,'wxDC'}|[[]]]]}]]}}]]]]]]],[]}],
		%% Line 278
		'type' =
		    %% Line 278
		    [{'wxAuiManagerEventType',{'type',278,'union',[{'atom',278,'aui_pane_button'}|[{'atom',278,'aui_pane_close'}|[{'atom',278,'aui_pane_maximize'}|[{'atom',278,'aui_pane_restore'}|[{'atom',278,'aui_render'}|[{'atom',278,'aui_find_manager'}]]]]]]},[]}],
		%% Line 279
		'type' =
		    %% Line 279
		    [{'wxAuiManager',{'type',279,'record',[{'atom',279,'wxAuiManager'}]},[]}],
		%% Line 281
		'type' =
		    %% Line 281
		    [{{'record','wxInitDialog'},[{'typed_record_field',{'record_field',281,{'atom',281,'type'}},{'type',281,'union',[{'atom',281,'undefined'}|[{'type',281,'wxInitDialogEventType',[]}]]}}],[]}],
		%% Line 282
		'type' =
		    %% Line 282
		    [{'wxInitDialogEventType',{'atom',282,'init_dialog'},[]}],
		%% Line 283
		'type' =
		    %% Line 283
		    [{'wxInitDialog',{'type',283,'record',[{'atom',283,'wxInitDialog'}]},[]}],
		%% Line 285
		'type' =
		    %% Line 285
		    [{{'record','wxCommand'},[{'typed_record_field',{'record_field',285,{'atom',285,'type'}},{'type',285,'union',[{'atom',285,'undefined'}|[{'type',285,'wxCommandEventType',[]}]]}}|[{'typed_record_field',{'record_field',286,{'atom',286,'cmdString'}},{'type',286,'union',[{'atom',286,'undefined'}|[{'remote_type',286,[{'atom',286,'unicode'}|[{'atom',286,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',287,{'atom',287,'commandInt'}},{'type',287,'union',[{'atom',287,'undefined'}|[{'type',287,'integer',[]}]]}}|[{'typed_record_field',{'record_field',288,{'atom',288,'extraLong'}},{'type',288,'union',[{'atom',288,'undefined'}|[{'type',288,'integer',[]}]]}}]]]],[]}],
		%% Line 289
		'type' =
		    %% Line 289
		    [{'wxCommandEventType',{'type',289,'union',[{'atom',289,'command_button_clicked'}|[{'atom',289,'command_checkbox_clicked'}|[{'atom',289,'command_choice_selected'}|[{'atom',289,'command_listbox_selected'}|[{'atom',289,'command_listbox_doubleclicked'}|[{'atom',289,'command_text_updated'}|[{'atom',289,'command_text_enter'}|[{'atom',289,'command_menu_selected'}|[{'atom',289,'command_slider_updated'}|[{'atom',289,'command_radiobox_selected'}|[{'atom',289,'command_radiobutton_selected'}|[{'atom',289,'command_scrollbar_updated'}|[{'atom',289,'command_vlbox_selected'}|[{'atom',289,'command_combobox_selected'}|[{'atom',289,'command_tool_rclicked'}|[{'atom',289,'command_tool_enter'}|[{'atom',289,'command_checklistbox_toggled'}|[{'atom',289,'command_togglebutton_clicked'}|[{'atom',289,'command_left_click'}|[{'atom',289,'command_left_dclick'}|[{'atom',289,'command_right_click'}|[{'atom',289,'command_set_focus'}|[{'atom',289,'command_kill_focus'}|[{'atom',289,'command_enter'}]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 290
		'type' =
		    %% Line 290
		    [{'wxCommand',{'type',290,'record',[{'atom',290,'wxCommand'}]},[]}],
		%% Line 292
		'type' =
		    %% Line 292
		    [{{'record','wxJoystick'},[{'typed_record_field',{'record_field',292,{'atom',292,'type'}},{'type',292,'union',[{'atom',292,'undefined'}|[{'type',292,'wxJoystickEventType',[]}]]}}],[]}],
		%% Line 293
		'type' =
		    %% Line 293
		    [{'wxJoystickEventType',{'type',293,'union',[{'atom',293,'joy_button_down'}|[{'atom',293,'joy_button_up'}|[{'atom',293,'joy_move'}|[{'atom',293,'joy_zmove'}]]]]},[]}],
		%% Line 294
		'type' =
		    %% Line 294
		    [{'wxJoystick',{'type',294,'record',[{'atom',294,'wxJoystick'}]},[]}],
		%% Line 296
		'type' =
		    %% Line 296
		    [{{'record','wxQueryNewPalette'},[{'typed_record_field',{'record_field',296,{'atom',296,'type'}},{'type',296,'union',[{'atom',296,'undefined'}|[{'type',296,'wxQueryNewPaletteEventType',[]}]]}}],[]}],
		%% Line 297
		'type' =
		    %% Line 297
		    [{'wxQueryNewPaletteEventType',{'atom',297,'query_new_palette'},[]}],
		%% Line 298
		'type' =
		    %% Line 298
		    [{'wxQueryNewPalette',{'type',298,'record',[{'atom',298,'wxQueryNewPalette'}]},[]}],
		%% Line 300
		'type' =
		    %% Line 300
		    [{{'record','wxMove'},[{'typed_record_field',{'record_field',300,{'atom',300,'type'}},{'type',300,'union',[{'atom',300,'undefined'}|[{'type',300,'wxMoveEventType',[]}]]}}],[]}],
		%% Line 301
		'type' =
		    %% Line 301
		    [{'wxMoveEventType',{'atom',301,'move'},[]}],
		%% Line 302
		'type' =
		    %% Line 302
		    [{'wxMove',{'type',302,'record',[{'atom',302,'wxMove'}]},[]}],
		%% Line 304
		'type' =
		    %% Line 304
		    [{{'record','wxIdle'},[{'typed_record_field',{'record_field',304,{'atom',304,'type'}},{'type',304,'union',[{'atom',304,'undefined'}|[{'type',304,'wxIdleEventType',[]}]]}}],[]}],
		%% Line 305
		'type' =
		    %% Line 305
		    [{'wxIdleEventType',{'atom',305,'idle'},[]}],
		%% Line 306
		'type' =
		    %% Line 306
		    [{'wxIdle',{'type',306,'record',[{'atom',306,'wxIdle'}]},[]}],
		%% Line 308
		'type' =
		    %% Line 308
		    [{{'record','wxColourPicker'},[{'typed_record_field',{'record_field',308,{'atom',308,'type'}},{'type',308,'union',[{'atom',308,'undefined'}|[{'type',308,'wxColourPickerEventType',[]}]]}}|[{'typed_record_field',{'record_field',309,{'atom',309,'colour'}},{'type',309,'union',[{'atom',309,'undefined'}|[{'remote_type',309,[{'atom',309,'wx'}|[{'atom',309,'wx_colour'}|[[]]]]}]]}}]],[]}],
		%% Line 310
		'type' =
		    %% Line 310
		    [{'wxColourPickerEventType',{'atom',310,'command_colourpicker_changed'},[]}],
		%% Line 311
		'type' =
		    %% Line 311
		    [{'wxColourPicker',{'type',311,'record',[{'atom',311,'wxColourPicker'}]},[]}],
		%% Line 313
		'type' =
		    %% Line 313
		    [{{'record','wxTaskBarIcon'},[{'typed_record_field',{'record_field',313,{'atom',313,'type'}},{'type',313,'union',[{'atom',313,'undefined'}|[{'type',313,'wxTaskBarIconEventType',[]}]]}}],[]}],
		%% Line 314
		'type' =
		    %% Line 314
		    [{'wxTaskBarIconEventType',{'type',314,'union',[{'atom',314,'taskbar_move'}|[{'atom',314,'taskbar_left_down'}|[{'atom',314,'taskbar_left_up'}|[{'atom',314,'taskbar_right_down'}|[{'atom',314,'taskbar_right_up'}|[{'atom',314,'taskbar_left_dclick'}|[{'atom',314,'taskbar_right_dclick'}]]]]]]]},[]}],
		%% Line 315
		'type' =
		    %% Line 315
		    [{'wxTaskBarIcon',{'type',315,'record',[{'atom',315,'wxTaskBarIcon'}]},[]}],
		%% Line 317
		'type' =
		    %% Line 317
		    [{{'record','wxTree'},[{'typed_record_field',{'record_field',317,{'atom',317,'type'}},{'type',317,'union',[{'atom',317,'undefined'}|[{'type',317,'wxTreeEventType',[]}]]}}|[{'typed_record_field',{'record_field',318,{'atom',318,'item'}},{'type',318,'union',[{'atom',318,'undefined'}|[{'type',318,'integer',[]}]]}}|[{'typed_record_field',{'record_field',319,{'atom',319,'itemOld'}},{'type',319,'union',[{'atom',319,'undefined'}|[{'type',319,'integer',[]}]]}}|[{'typed_record_field',{'record_field',320,{'atom',320,'pointDrag'}},{'type',320,'union',[{'atom',320,'undefined'}|[{'type',320,'tuple',[{'ann_type',320,[{'var',320,'X'}|[{'type',320,'integer',[]}]]}|[{'ann_type',320,[{'var',320,'Y'}|[{'type',320,'integer',[]}]]}]]}]]}}]]]],[]}],
		%% Line 321
		'type' =
		    %% Line 321
		    [{'wxTreeEventType',{'type',321,'union',[{'atom',321,'command_tree_begin_drag'}|[{'atom',321,'command_tree_begin_rdrag'}|[{'atom',321,'command_tree_begin_label_edit'}|[{'atom',321,'command_tree_end_label_edit'}|[{'atom',321,'command_tree_delete_item'}|[{'atom',321,'command_tree_get_info'}|[{'atom',321,'command_tree_set_info'}|[{'atom',321,'command_tree_item_expanded'}|[{'atom',321,'command_tree_item_expanding'}|[{'atom',321,'command_tree_item_collapsed'}|[{'atom',321,'command_tree_item_collapsing'}|[{'atom',321,'command_tree_sel_changed'}|[{'atom',321,'command_tree_sel_changing'}|[{'atom',321,'command_tree_key_down'}|[{'atom',321,'command_tree_item_activated'}|[{'atom',321,'command_tree_item_right_click'}|[{'atom',321,'command_tree_item_middle_click'}|[{'atom',321,'command_tree_end_drag'}|[{'atom',321,'command_tree_state_image_click'}|[{'atom',321,'command_tree_item_gettooltip'}|[{'atom',321,'command_tree_item_menu'}]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 322
		'type' =
		    %% Line 322
		    [{'wxTree',{'type',322,'record',[{'atom',322,'wxTree'}]},[]}],
		%% Line 324
		'type' =
		    %% Line 324
		    [{'event',{'type',324,'union',[{'type',324,'wxActivate',[]}|[{'type',324,'wxAuiManager',[]}|[{'type',324,'wxAuiNotebook',[]}|[{'type',324,'wxCalendar',[]}|[{'type',324,'wxChildFocus',[]}|[{'type',324,'wxClipboardText',[]}|[{'type',324,'wxClose',[]}|[{'type',324,'wxColourPicker',[]}|[{'type',324,'wxCommand',[]}|[{'type',324,'wxContextMenu',[]}|[{'type',324,'wxDate',[]}|[{'type',324,'wxDisplayChanged',[]}|[{'type',324,'wxErase',[]}|[{'type',324,'wxFileDirPicker',[]}|[{'type',324,'wxFocus',[]}|[{'type',324,'wxFontPicker',[]}|[{'type',324,'wxGrid',[]}|[{'type',324,'wxHelp',[]}|[{'type',324,'wxHtmlLink',[]}|[{'type',324,'wxIconize',[]}|[{'type',324,'wxIdle',[]}|[{'type',324,'wxInitDialog',[]}|[{'type',324,'wxJoystick',[]}|[{'type',324,'wxKey',[]}|[{'type',324,'wxList',[]}|[{'type',324,'wxMaximize',[]}|[{'type',324,'wxMenu',[]}|[{'type',324,'wxMouse',[]}|[{'type',324,'wxMouseCaptureChanged',[]}|[{'type',324,'wxMove',[]}|[{'type',324,'wxNavigationKey',[]}|[{'type',324,'wxNotebook',[]}|[{'type',324,'wxPaint',[]}|[{'type',324,'wxPaletteChanged',[]}|[{'type',324,'wxQueryNewPalette',[]}|[{'type',324,'wxSash',[]}|[{'type',324,'wxScroll',[]}|[{'type',324,'wxScrollWin',[]}|[{'type',324,'wxSetCursor',[]}|[{'type',324,'wxShow',[]}|[{'type',324,'wxSize',[]}|[{'type',324,'wxSpin',[]}|[{'type',324,'wxSplitter',[]}|[{'type',324,'wxStyledText',[]}|[{'type',324,'wxSysColourChanged',[]}|[{'type',324,'wxTaskBarIcon',[]}|[{'type',324,'wxTree',[]}|[{'type',324,'wxUpdateUI',[]}|[{'type',324,'wxWindowCreate',[]}|[{'type',324,'wxWindowDestroy',[]}]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 325
		'type' =
		    %% Line 325
		    [{'wxEventType',{'type',325,'union',[{'type',325,'wxActivateEventType',[]}|[{'type',325,'wxAuiManagerEventType',[]}|[{'type',325,'wxAuiNotebookEventType',[]}|[{'type',325,'wxCalendarEventType',[]}|[{'type',325,'wxChildFocusEventType',[]}|[{'type',325,'wxClipboardTextEventType',[]}|[{'type',325,'wxCloseEventType',[]}|[{'type',325,'wxColourPickerEventType',[]}|[{'type',325,'wxCommandEventType',[]}|[{'type',325,'wxContextMenuEventType',[]}|[{'type',325,'wxDateEventType',[]}|[{'type',325,'wxDisplayChangedEventType',[]}|[{'type',325,'wxEraseEventType',[]}|[{'type',325,'wxFileDirPickerEventType',[]}|[{'type',325,'wxFocusEventType',[]}|[{'type',325,'wxFontPickerEventType',[]}|[{'type',325,'wxGridEventType',[]}|[{'type',325,'wxHelpEventType',[]}|[{'type',325,'wxHtmlLinkEventType',[]}|[{'type',325,'wxIconizeEventType',[]}|[{'type',325,'wxIdleEventType',[]}|[{'type',325,'wxInitDialogEventType',[]}|[{'type',325,'wxJoystickEventType',[]}|[{'type',325,'wxKeyEventType',[]}|[{'type',325,'wxListEventType',[]}|[{'type',325,'wxMaximizeEventType',[]}|[{'type',325,'wxMenuEventType',[]}|[{'type',325,'wxMouseCaptureChangedEventType',[]}|[{'type',325,'wxMouseEventType',[]}|[{'type',325,'wxMoveEventType',[]}|[{'type',325,'wxNavigationKeyEventType',[]}|[{'type',325,'wxNotebookEventType',[]}|[{'type',325,'wxPaintEventType',[]}|[{'type',325,'wxPaletteChangedEventType',[]}|[{'type',325,'wxQueryNewPaletteEventType',[]}|[{'type',325,'wxSashEventType',[]}|[{'type',325,'wxScrollEventType',[]}|[{'type',325,'wxScrollWinEventType',[]}|[{'type',325,'wxSetCursorEventType',[]}|[{'type',325,'wxShowEventType',[]}|[{'type',325,'wxSizeEventType',[]}|[{'type',325,'wxSpinEventType',[]}|[{'type',325,'wxSplitterEventType',[]}|[{'type',325,'wxStyledTextEventType',[]}|[{'type',325,'wxSysColourChangedEventType',[]}|[{'type',325,'wxTaskBarIconEventType',[]}|[{'type',325,'wxTreeEventType',[]}|[{'type',325,'wxUpdateUIEventType',[]}|[{'type',325,'wxWindowCreateEventType',[]}|[{'type',325,'wxWindowDestroyEventType',[]}]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]},[]}],
		%% Line 328
		'type' =
		    %% Line 328
		    [{{'record','wxMouseState'},[{'typed_record_field',{'record_field',328,{'atom',328,'x'}},{'type',328,'union',[{'atom',328,'undefined'}|[{'type',328,'integer',[]}]]}}|[{'typed_record_field',{'record_field',328,{'atom',328,'y'}},{'type',328,'union',[{'atom',328,'undefined'}|[{'type',328,'integer',[]}]]}}|[{'typed_record_field',{'record_field',329,{'atom',329,'leftDown'}},{'type',329,'union',[{'atom',329,'undefined'}|[{'type',329,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',329,{'atom',329,'middleDown'}},{'type',329,'union',[{'atom',329,'undefined'}|[{'atom',329,'boolean'}]]}}|[{'typed_record_field',{'record_field',329,{'atom',329,'rightDown'}},{'type',329,'union',[{'atom',329,'undefined'}|[{'atom',329,'boolean'}]]}}|[{'typed_record_field',{'record_field',330,{'atom',330,'controlDown'}},{'type',330,'union',[{'atom',330,'undefined'}|[{'type',330,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',330,{'atom',330,'shiftDown'}},{'type',330,'union',[{'atom',330,'undefined'}|[{'type',330,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',331,{'atom',331,'altDown'}},{'type',331,'union',[{'atom',331,'undefined'}|[{'type',331,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',331,{'atom',331,'metaDown'}},{'type',331,'union',[{'atom',331,'undefined'}|[{'type',331,'boolean',[]}]]}}|[{'typed_record_field',{'record_field',331,{'atom',331,'cmdDown'}},{'type',331,'union',[{'atom',331,'undefined'}|[{'type',331,'boolean',[]}]]}}]]]]]]]]]],[]}],
		%% Line 333
		'type' =
		    %% Line 333
		    [{{'record','wxHtmlLinkInfo'},[{'typed_record_field',{'record_field',334,{'atom',334,'href'}},{'type',334,'union',[{'atom',334,'undefined'}|[{'remote_type',334,[{'atom',334,'unicode'}|[{'atom',334,'chardata'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',334,{'atom',334,'target'}},{'type',334,'union',[{'atom',334,'undefined'}|[{'remote_type',334,[{'atom',334,'unicode'}|[{'atom',334,'chardata'}|[[]]]]}]]}}]],[]}],
		%% Line 19
		'type' =
		    %% Line 19
		    [{{'record','match_spec'},[{'record_field',19,{'atom',19,'name'},{'string',19,[]}}|[{'record_field',20,{'atom',20,'term'},{'nil',20}}|[{'record_field',21,{'atom',21,'str'},{'nil',21}}|[{'record_field',22,{'atom',22,'func'},{'string',22,[]}}]]]],[]}],
		%% Line 24
		'type' =
		    %% Line 24
		    [{{'record','tpattern'},[{'record_field',24,{'atom',24,'m'}}|[{'record_field',24,{'atom',24,'fa'}}|[{'record_field',24,{'atom',24,'ms'}}]]],[]}],
		%% Line 26
		'type' =
		    %% Line 26
		    [{{'record','traced_func'},[{'record_field',26,{'atom',26,'func_name'}}|[{'record_field',27,{'atom',27,'arity'}}|[{'record_field',28,{'atom',28,'match_spec'},{'record',28,'match_spec',[]}}]]],[]}],
		%% Line 30
		'type' =
		    %% Line 30
		    [{{'record','create_menu'},[{'record_field',31,{'atom',31,'id'}}|[{'record_field',32,{'atom',32,'text'}}|[{'record_field',33,{'atom',33,'help'},{'nil',33}}|[{'record_field',34,{'atom',34,'type'},{'atom',34,'append'}}|[{'record_field',35,{'atom',35,'check'},{'atom',35,'false'}}]]]]],[]}],
		%% Line 38
		'type' =
		    %% Line 38
		    [{{'record','attrs'},[{'record_field',38,{'atom',38,'even'}}|[{'record_field',38,{'atom',38,'odd'}}|[{'record_field',38,{'atom',38,'searched'}}|[{'record_field',38,{'atom',38,'deleted'}}|[{'record_field',38,{'atom',38,'changed_odd'}}|[{'record_field',38,{'atom',38,'changed_even'}}|[{'record_field',38,{'atom',38,'new_odd'}}|[{'record_field',38,{'atom',38,'new_even'}}]]]]]]]],[]}],
		%% Line 37
		'type' =
		    %% Line 37
		    [{{'record','sort'},[{'record_field',39,{'atom',39,'sort_key'}}|[{'record_field',40,{'atom',40,'sort_incr'},{'atom',40,'true'}}]],[]}],
		%% Line 43
		'type' =
		    %% Line 43
		    [{{'record','holder'},[{'record_field',43,{'atom',43,'parent'}}|[{'record_field',44,{'atom',44,'info'}}|[{'record_field',45,{'atom',45,'last_row'}}|[{'record_field',46,{'atom',46,'sort'}}|[{'record_field',47,{'atom',47,'attrs'}}|[{'record_field',48,{'atom',48,'callback'}}]]]]]],[]}],
		%% Line 51
		'type' =
		    %% Line 51
		    [{{'record','state'},[{'record_field',51,{'atom',51,'grid'}}|[{'record_field',52,{'atom',52,'panel'}}|[{'record_field',53,{'atom',53,'detail_wins'},{'nil',53}}|[{'record_field',54,{'atom',54,'holder'}}|[{'record_field',55,{'atom',55,'callback'}}|[{'record_field',56,{'atom',56,'trunc_warn'},{'nil',56}}|[{'record_field',57,{'atom',57,'menu_cols'},{'nil',57}}|[{'record_field',58,{'atom',58,'menu_items'},{'nil',58}}]]]]]]]],[]}]]
'start_link'/2 =
    %% Line 60
    fun (_cor1,_cor0) ->
	%% Line 61
	call 'wx_object':'start_link'
	    ({'local',_cor0}, 'cdv_virtual_list_wx', %% Line 62
						     [_cor1|[_cor0|['all']]], %% Line 62
									      [])
'start_link'/3 =
    %% Line 64
    fun (_cor2,_cor1,_cor0) ->
	%% Line 65
	call 'wx_object':'start_link'
	    ('cdv_virtual_list_wx', [_cor2|[_cor1|[_cor0|[]]]], [])
'start_detail_win'/1 =
    %% Line 67
    fun (_cor0) ->
	let <_cor4> =
	    %% Line 69
	    case _cor0 of
	      %% Line 70
	      <[60|_cor7]> when 'true' ->
		  %% Line 71
		  'cdv_proc_cb'
	      %% Line 72
	      <[35|[80|[111|[114|[116|_cor8]]]]]> when 'true' ->
		  %% Line 73
		  'cdv_port_cb'
	      %% Line 74
	      <_cor9> when 'true' ->
		  let <_cor1> =
		      catch
			  %% Line 75
			  call 'erlang':'list_to_integer'
			      (_cor0)
		  in  %% Line 75
		      case _cor1 of
			%% Line 76
			<NodeId>
			    when call 'erlang':'is_integer'
				  (_cor1) ->
			    %% Line 77
			    'cdv_dist_cb'
			%% Line 78
			<_cor10> when 'true' ->
			    %% Line 79
			    'cdv_mod_cb'
		      end
	    end
	in  %% Line 82
	    apply 'start_detail_win'/2
		(_cor4, _cor0)
'start_detail_win'/2 =
    %% Line 83
    fun (_cor1,_cor0) ->
	%% Line 84
	call 'wx_object':'cast'
	    (_cor1, {'start_detail_win',_cor0})
'init'/1 =
    %% Line 87
    fun (_cor0) ->
	case _cor0 of
	  <[ParentWin|[Callback|[Owner|[]]]]> when 'true' ->
	      %% Line 88
	      case apply 'spawn_table_holder'/2
		       (Callback, Owner) of
		<{Holder,TW}> when 'true' ->
		    let <Panel> =
			%% Line 89
			call 'wxPanel':'new'
			    (ParentWin)
		    in  %% Line 90
			case apply 'create_list_box'/4
				 (Panel, Holder, Callback, Owner) of
			  <{Grid,MenuCols}> when 'true' ->
			      let <Sizer> =
				  %% Line 91
				  call 'wxBoxSizer':'new'
				      (8)
			      in  do  %% Line 92
				      call 'wxSizer':'add'
					  (Sizer, Grid, [{'flag',8432}|[{'proportion',1}|[{'border',4}]]])
				      do  %% Line 96
					  call 'wxWindow':'setSizer'
					      (Panel, Sizer)
					  let <State> =
					      %% Line 98
					      {'state',Grid,%% Line 99
							    Panel,[],%% Line 100
								     Holder,%% Line 101
									    Callback,%% Line 102
										     TW,%% Line 103
											MenuCols,[]}
					  in  %% Line 105
					      {Panel,State}
			  ( <_cor3> when 'true' ->
				primop 'match_fail'
				    ({'badmatch',_cor3})
			    -| ['compiler_generated'] )
			end
		( <_cor1> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor1})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor10})
		  -| [{'function_name',{'init',1}}] )
	    -| ['compiler_generated'] )
	end
'create_list_box'/4 =
    %% Line 109
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor16> =
	    %% Line 115
	    ( fun (_cor12,_cor11,_cor10) ->
		  let <_cor9> =
		      %% Line 116
		      call 'erlang':'self'
			  ()
		  in  %% Line 116
		      apply 'call'/2
			  (_cor2, {'get_row',_cor9,_cor11,_cor10})
	      -| [{'id',{0,0,'-create_list_box/4-fun-0-'}}] )
	in  let <_cor22> =
		%% Line 119
		( fun (_cor19,_cor18) ->
		      let <_cor17> =
			  %% Line 120
			  call 'erlang':'self'
			      ()
		      in  %% Line 120
			  apply 'call'/2
			      (_cor2, {'get_attr',_cor17,_cor18})
		  -| [{'id',{0,0,'-create_list_box/4-fun-1-'}}] )
	    in  let <ListCtrl> =
		    %% Line 113
		    call 'wxListCtrl':'new'
			(_cor3, [{'style',3221234210}|%% Line 114
						      [{'onGetItemText',_cor16}|%% Line 118
										[{'onGetItemAttr',_cor22}|%% Line 122
													  []]]])
		in  let <Li> =
			%% Line 123
			call 'wxListItem':'new'
			    ()
		    in  let <AddListEntry> =
			    %% Line 124
			    ( fun (_cor26,_cor25) ->
				  case <_cor26,_cor25> of
				    <{Name,Align,DefSize},Col> when 'true' ->
					do  %% Line 125
					    call 'wxListItem':'setText'
						(Li, Name)
					    do  %% Line 126
						call 'wxListItem':'setAlign'
						    (Li, Align)
						do  %% Line 127
						    call 'wxListCtrl':'insertColumn'
							(ListCtrl, Col, Li)
						    do  %% Line 128
							call 'wxListCtrl':'setColumnWidth'
							    (ListCtrl, Col, DefSize)
							%% Line 129
							call 'erlang':'+'
							    (Col, 1)
				    ( <_cor28,_cor27> when 'true' ->
					  ( primop 'match_fail'
						({'function_clause',_cor28,_cor27})
					    -| [{'function_name',{'-create_list_box/4-fun-2-',2}}] )
				      -| ['compiler_generated'] )
				  end
			      -| [{'id',{0,0,'-create_list_box/4-fun-2-'}}] )
			in  let <ListItems> =
				%% Line 131
				call _cor1:'col_spec'
				    ()
			    in  do  %% Line 132
				    call 'lists':'foldl'
					(AddListEntry, 0, ListItems)
				    do  %% Line 133
					call 'wxListItem':'destroy'
					    (Li)
					do  %% Line 135
					    call 'wxListCtrl':'setItemCount'
						(ListCtrl, 0)
					    do  %% Line 136
						call 'wxListCtrl':'connect'
						    (ListCtrl, 'size', [{'skip','true'}])
						do  %% Line 137
						    call 'wxListCtrl':'connect'
							(ListCtrl, 'command_list_col_click')
						    let <_cor31> =
							catch
							    %% Line 143
							    call _cor1:'get_detail_cols'
								(_cor0)
						    in  let <_cor35> =
							    %% Line 143
							    case _cor31 of
							      %% Line 144
							      <{DC,DoubleClick}>
								  when let <_cor32> =
									call 'erlang':'is_list'
									    (DC)
								    in  let <_cor33> =
									    call 'erlang':'=/='
										(DC, [])
									in  call 'erlang':'and'
										(_cor32, _cor33) ->
								  do  %% Line 145
								      call 'wxListCtrl':'connect'
									  (ListCtrl, 'command_list_item_right_click')
								      do  %% Line 146
									  case <> of
									    <>
										when call 'erlang':'=:='
										      (DoubleClick,
										       'true') ->
										%% Line 147
										call 'wxListCtrl':'connect'
										    (ListCtrl, 'command_list_item_activated')
									    %% Line 148
									    <> when 'true' ->
										'ok'
									  end
									  %% Line 151
									  DC
							      %% Line 152
							      <_cor43> when 'true' ->
								  %% Line 153
								  []
							    end
							in  %% Line 156
							    {ListCtrl,_cor35}
'do_start_detail_win'/2 =
    %% Line 158
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'undefined',State> when 'true' ->
	      %% Line 159
	      State
	  %% Line 160
	  <Id,State = {'state',_cor10,Panel,Opened,_cor11,%% Line 161
							  Callback,_cor12,_cor13,_cor14}> when 'true' ->
	      let <_cor4> =
		  %% Line 163
		  case call 'lists':'keyfind'
			   (Id, 1, Opened) of
		    %% Line 164
		    <'false'> when 'true' ->
			%% Line 165
			case call 'cdv_detail_wx':'start_link'
				 (Id, Panel, Callback) of
			  %% Line 166
			  <{'error',_cor15}> when 'true' ->
			      %% Line 167
			      Opened
			  %% Line 168
			  <IW> when 'true' ->
			      %% Line 169
			      [{Id,IW}|Opened]
			end
		    %% Line 171
		    <{_cor16,IW}> when 'true' ->
			do  %% Line 172
			    call 'wxFrame':'raise'
				(IW)
			    %% Line 173
			    Opened
		    ( <_cor3> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor3})
		      -| ['compiler_generated'] )
		  end
	      in  %% Line 175
		  call 'erlang':'setelement'
		      (4, State, _cor4)
	  ( <_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8})
		  -| [{'function_name',{'do_start_detail_win',2}}] )
	    -| ['compiler_generated'] )
	end
'call'/2 =
    %% Line 177
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Holder,What>
	      when call 'erlang':'is_atom'
		    (Holder) ->
	      let <_cor2> =
		  %% Line 178
		  call 'erlang':'whereis'
		      (Holder)
	      in  %% Line 178
		  apply 'call'/2
		      (_cor2, What)
	  %% Line 179
	  <Holder,What>
	      when call 'erlang':'is_pid'
		    (Holder) ->
	      let <Ref> =
		  %% Line 180
		  call 'erlang':'monitor'
		      ('process', Holder)
	      in  do  %% Line 181
		      call 'erlang':'!'
			  (Holder, What)
		      %% Line 182
		      receive
			%% Line 183
			<{'DOWN',_cor6,_cor7,_cor8,_cor9}>
			    when call 'erlang':'=:='
				  (_cor6,
				   Ref) ->
			    []
			%% Line 184
			<{_cor10,Res}>
			    when call 'erlang':'=:='
				  (_cor10,
				   Holder) ->
			    do  %% Line 185
				call 'erlang':'demonitor'
				    (Ref)
				%% Line 186
				Res
		      after %% Line 187
			    5000 ->
			do  %% Line 188
			    call 'io':'format'
				([72|[97|[110|[103|[105|[110|[103|[32|[99|[97|[108|[108|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]], [What|[]])
			    %% Line 189
			    []
	  %% Line 191
	  <_cor11,_cor12> when 'true' ->
	      %% Line 192
	      []
	end
'handle_info'/2 =
    %% Line 197
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'holder_updated',Count},State = {'state',Grid,_cor9,_cor10,_cor11,_cor12,_cor13,_cor14,_cor15}> when 'true' ->
	      do  %% Line 198
		  call 'wxListCtrl':'setItemCount'
		      (Grid, Count)
		  do  %% Line 199
		      ( case <> of
			  ( <>
				when call 'erlang':'>'
				      (Count,
				       0) ->
				let <_cor3> =
				    call 'erlang':'-'
					(Count, 1)
				in  call 'wxListCtrl':'refreshItems'
					(Grid, 0, _cor3)
			    -| ['compiler_generated'] )
			  ( <> when 'true' ->
				'ok'
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		      %% Line 200
		      {'noreply',State}
	  %% Line 202
	  <'active',State> when 'true' ->
	      %% Line 203
	      ( case State of
		  ( <( {'state',_cor16,_cor17,_cor18,_cor19,_cor20,_rec1,_cor21,_cor22}
		       -| ['compiler_generated'] )> when 'true' ->
			do  call 'cdv_wx':'set_status'
				(_rec1)
			    %% Line 204
			    {'noreply',State}
		    -| ['compiler_generated'] )
		  ( <_cor23> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 206
	  <Info,State> when 'true' ->
	      do  %% Line 207
		  call 'io':'format'
		      ([126|[112|[58|[126|[112|[44|[32|[85|[110|[101|[120|[112|[101|[99|[116|[101|[100|[32|[105|[110|[102|[111|[58|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]], ['cdv_virtual_list_wx'|[207|[Info|[]]]])
		  %% Line 208
		  {'noreply',State}
	end
'terminate'/2 =
    %% Line 210
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_X_Reason,{'state',_cor4,_cor5,_cor6,Holder,_cor7,_cor8,_cor9,_cor10}> when 'true' ->
	      do  %% Line 211
		  call 'erlang':'!'
		      (Holder, 'stop')
		  %% Line 212
		  'ok'
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'terminate',2}}] )
	    -| ['compiler_generated'] )
	end
'code_change'/3 =
    %% Line 214
    fun (_cor2,_cor1,_cor0) ->
	%% Line 215
	{'ok',_cor0}
'handle_call'/3 =
    %% Line 217
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <'new_dump',_X_From,State = %% Line 218
				      {'state',Grid,_cor16,Opened,%% Line 219
								  Holder,%% Line 219
									 Callback,_cor17,_cor18,_cor19}> when 'true' ->
	      let <_cor5> =
		  %% Line 220
		  ( fun (_cor3) ->
			case _cor3 of
			  <{_X_Id,IW}> when 'true' ->
			      call 'wxFrame':'destroy'
				  (IW)
			  ( <_cor4> when 'true' ->
				( primop 'match_fail'
				      ({'function_clause',_cor4})
				  -| [{'function_name',{'-handle_call/3-fun-0-',1}}] )
			    -| ['compiler_generated'] )
			end
		    -| [{'id',{0,0,'-handle_call/3-fun-0-'}}] )
	      in  do  %% Line 220
		      call 'lists':'foreach'
			  (_cor5, Opened)
		      do  %% Line 221
			  call 'wxListCtrl':'deleteAllItems'
			      (Grid)
			  let <Ref> =
			      %% Line 222
			      call 'erlang':'monitor'
				  ('process', Holder)
			  in  do  %% Line 223
				  call 'erlang':'!'
				      (Holder, 'stop')
				  do  %% Line 224
				      receive
					<{'DOWN',_cor20,_cor21,_cor22,_cor23}>
					    when call 'erlang':'=:='
						  (_cor20,
						   Ref) ->
					    'ok'
				      after 'infinity' ->
					'ok'
				      %% Line 225
				      case apply 'spawn_table_holder'/2
					       (Callback, 'all') of
					<{NewHolder,TW}> when 'true' ->
					    let <_cor9> =
						%% Line 226
						call 'erlang':'setelement'
						    (7, State, TW)
					    in  let <_cor10> =
						    %% Line 226
						    call 'erlang':'setelement'
							(5, _cor9, NewHolder)
						in  let <_cor12> =
							%% Line 226
							call 'erlang':'setelement'
							    (4, _cor10, [])
						    in  %% Line 226
							{'reply','ok',_cor12}
					( <_cor7> when 'true' ->
					      primop 'match_fail'
						  ({'badmatch',_cor7})
					  -| ['compiler_generated'] )
				      end
	  %% Line 228
	  <Msg,_X_From,State> when 'true' ->
	      do  %% Line 229
		  call 'io':'format'
		      ([126|[112|[58|[126|[112|[58|[32|[85|[110|[104|[97|[110|[100|[108|[101|[100|[32|[99|[97|[108|[108|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]], ['cdv_virtual_list_wx'|[229|[Msg|[]]]])
		  %% Line 230
		  {'reply','ok',State}
	end
'handle_cast'/2 =
    %% Line 232
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'start_detail_win',Id},State> when 'true' ->
	      let <State2> =
		  %% Line 233
		  apply 'do_start_detail_win'/2
		      (Id, State)
	      in  %% Line 234
		  {'noreply',State2}
	  %% Line 236
	  <{'detail_win_closed',Id},State = {'state',_cor9,_cor10,Opened,_cor11,_cor12,_cor13,_cor14,_cor15}> when 'true' ->
	      let <Opened2> =
		  %% Line 237
		  call 'lists':'keydelete'
		      (Id, 1, Opened)
	      in  let <_cor6> =
		      %% Line 238
		      call 'erlang':'setelement'
			  (4, State, Opened2)
		  in  %% Line 238
		      {'noreply',_cor6}
	  %% Line 240
	  <Msg,State> when 'true' ->
	      do  %% Line 241
		  call 'io':'format'
		      ([126|[112|[58|[126|[112|[58|[32|[85|[110|[104|[97|[110|[100|[108|[101|[100|[32|[99|[97|[115|[116|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]], ['cdv_virtual_list_wx'|[241|[Msg|[]]]])
		  %% Line 242
		  {'noreply',State}
	end
'handle_event'/2 =
    %% Line 246
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{'wx',MenuId,_cor27,_cor28,%% Line 247
				      {'wxCommand','command_menu_selected',_cor29,_cor30,_cor31}},State = %% Line 248
													  {'state',_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,MenuItems}> when 'true' ->
	      do  %% Line 249
		  case call 'lists':'keyfind'
			   (MenuId, 1, MenuItems) of
		    %% Line 250
		    <{_cor39,Id}>
			when call 'erlang':'=:='
			      (_cor39,
			       MenuId) ->
			%% Line 251
			apply 'start_detail_win'/1
			    (Id)
		    %% Line 252
		    <'false'> when 'true' ->
			'ok'
		    ( <_cor2> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor2})
		      -| ['compiler_generated'] )
		  end
		  %% Line 255
		  {'noreply',State}
	  %% Line 257
	  <{'wx',_cor40,_cor41,_cor42,{'wxSize',_cor43,{W,_cor44},_cor45}},State = %% Line 258
										   {'state',Grid,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52}> when 'true' ->
	      do  %% Line 259
		  call 'observer_lib':'set_listctrl_col_size'
		      (Grid, W)
		  %% Line 260
		  {'noreply',State}
	  %% Line 262
	  <{'wx',_cor53,_cor54,_cor55,{'wxList','command_list_item_right_click',_cor56,_cor57,%% Line 263
											      Row,_cor58,_cor59}},State = %% Line 264
															  {'state',_cor60,Panel,_cor61,Holder,_cor62,_cor63,MenuCols,_cor64}> when 'true' ->
	      let <Menu> =
		  %% Line 265
		  call 'wxMenu':'new'
		      ()
	      in  let <_cor17> =
		      %% Line 268
		      ( fun (_cor15) ->
			    let <MenuId> =
				%% Line 269
				call 'erlang':'+'
				    (202, _cor15)
			    in  let <_cor5> =
				    %% Line 270
				    call 'erlang':'self'
					()
				in  let <ColText> =
					%% Line 270
					apply 'call'/2
					    (Holder, {'get_row',_cor5,Row,_cor15})
				    in  %% Line 271
					case ColText of
					  %% Line 272
					  <Empty>
					      when let <_cor7> =
						    call 'erlang':'=='
							(ColText, [91|[93]])
						in  let <_cor8> =
							call 'erlang':'=:='
							    (ColText, [])
						    in  call 'erlang':'or'
							    (_cor7, _cor8) ->
					      []
					  %% Line 273
					  <_cor65> when 'true' ->
					      let <_cor9> =
						  catch
						      %% Line 275
						      call 'erlang':'list_to_integer'
							  (ColText)
					      in  let <_cor11> =
						      %% Line 275
						      case _cor9 of
							%% Line 276
							<NodeId>
							    when call 'erlang':'is_integer'
								  (_cor9) ->
							    %% Line 277
							    call 'erlang':'++'
								([110|[111|[100|[101|[32]]]]], ColText)
							%% Line 278
							<_cor66> when 'true' ->
							    %% Line 279
							    ColText
						      end
						  in  let <Text> =
							  %% Line 281
							  call 'erlang':'++'
							      ([80|[114|[111|[112|[101|[114|[116|[105|[101|[115|[32|[102|[111|[114|[32]]]]]]]]]]]]]]], _cor11)
						      in  do  %% Line 282
							      call 'wxMenu':'append'
								  (Menu, MenuId, Text)
							      %% Line 283
							      [{MenuId,ColText}|[]]
					end
			-| [{'id',{0,0,'-handle_event/2-fun-0-'}}] )
		  in  let <MenuItems> =
			  %% Line 267
			  call 'lists':'flatmap'
			      (_cor17, %% Line 286
				       MenuCols)
		      in  do  %% Line 287
			      case MenuItems of
				%% Line 288
				<[]> when 'true' ->
				    %% Line 289
				    call 'wxMenu':'destroy'
					(Menu)
				%% Line 290
				<_cor67> when 'true' ->
				    do  %% Line 291
					call 'wxWindow':'popupMenu'
					    (Panel, Menu)
					%% Line 292
					call 'wxMenu':'destroy'
					    (Menu)
			      end
			      let <_cor22> =
				  %% Line 294
				  call 'erlang':'setelement'
				      (9, State, MenuItems)
			      in  %% Line 294
				  {'noreply',_cor22}
	  %% Line 296
	  <{'wx',_cor77,_cor78,_cor79,{'wxList','command_list_col_click',_cor80,_cor81,_cor82,Col,_cor83}},State = %% Line 297
														   {'state',_cor84,_cor85,_cor86,Holder,_cor87,_cor88,_cor89,_cor90}> when 'true' ->
	      do  %% Line 298
		  call 'erlang':'!'
		      (Holder, {'change_sort',Col})
		  %% Line 299
		  {'noreply',State}
	  %% Line 301
	  <{'wx',_cor91,_cor92,_cor93,{'wxList','command_list_item_activated',_cor94,_cor95,%% Line 302
											    Row,_cor96,_cor97}},State = %% Line 303
															{'state',_cor98,_cor99,_cor100,Holder,_cor101,_cor102,_cor103,_cor104}> when 'true' ->
	      let <_cor23> =
		  %% Line 304
		  call 'erlang':'self'
		      ()
	      in  let <Id> =
		      %% Line 304
		      apply 'call'/2
			  (Holder, {'get_row',_cor23,Row,'id'})
		  in  do  %% Line 305
			  apply 'start_detail_win'/1
			      (Id)
			  %% Line 306
			  {'noreply',State}
	  %% Line 308
	  <Event,State> when 'true' ->
	      do  %% Line 309
		  call 'io':'format'
		      ([126|[112|[58|[126|[112|[58|[32|[104|[97|[110|[100|[108|[101|[32|[101|[118|[101|[110|[116|[32|[126|[112|[10]]]]]]]]]]]]]]]]]]]]]]], ['cdv_virtual_list_wx'|[309|[Event|[]]]])
		  %% Line 310
		  {'noreply',State}
	end
'spawn_table_holder'/2 =
    %% Line 315
    fun (_cor1,_cor0) ->
	%% Line 316
	case call _cor1:'get_info'
		 (_cor0) of
	  <{Info,TW}> when 'true' ->
	      let <Attrs> =
		  %% Line 317
		  call 'observer_lib':'create_attrs'
		      ()
	      in  let <Parent> =
		      %% Line 318
		      call 'erlang':'self'
			  ()
		  in  let <_cor12> =
			  %% Line 320
			  case _cor0 of
			    %% Line 321
			    <'all'> when 'true' ->
				let <_cor5> =
				    %% Line 322
				    call 'erlang':'atom_to_list'
					(_cor1)
				in  let <_cor6> =
					%% Line 322
					call 'erlang':'++'
					    (_cor5, [95|[95|[104|[111|[108|[100|[101|[114]]]]]]]])
				    in  let <Name> =
					    %% Line 322
					    call 'erlang':'list_to_atom'
						(_cor6)
					in  let <_cor9> =
						%% Line 324
						( fun () ->
						      let <_cor8> =
							  %% Line 325
							  call 'erlang':'self'
							      ()
						      in  do  %% Line 325
							      call 'erlang':'register'
								  (Name, _cor8)
							      %% Line 326
							      apply 'init_table_holder'/4
								  (Parent, Attrs, _cor1, Info)
						  -| [{'id',{0,0,'-spawn_table_holder/2-fun-0-'}}] )
					    in  do  %% Line 323
						    call 'erlang':'spawn_link'
							(_cor9)
						    %% Line 328
						    Name
			    %% Line 329
			    <_cor16> when 'true' ->
				let <_cor10> =
				    %% Line 331
				    ( fun () ->
					  %% Line 332
					  apply 'init_table_holder'/4
					      (Parent, Attrs, _cor1, Info)
				      -| [{'id',{0,0,'-spawn_table_holder/2-fun-1-'}}] )
				in  %% Line 330
				    call 'erlang':'spawn_link'
					(_cor10)
			  end
		      in  %% Line 335
			  {_cor12,TW}
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor2})
	    -| ['compiler_generated'] )
	end
'init_table_holder'/4 =
    %% Line 337
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 338
	    call _cor1:'col_to_elem'
		('id')
	in  let <Sort> = {%% Line 338
		 'sort',_cor4,'true'}
	    in  %% Line 339
		case apply 'do_sort'/2
			 (Sort, _cor0) of
		  <{_X_Sort,InfoList}> when 'true' ->
		      let <Info> =
			  %% Line 340
			  call 'array':'from_list'
			      (InfoList)
		      in  let <NRows> =
			      %% Line 341
			      call 'array':'size'
				  (Info)
			  in  do  %% Line 342
				  call 'erlang':'!'
				      (_cor3, {'holder_updated',NRows})
				  %% Line 343
				  apply 'table_holder'/1
				      ({'holder',_cor3,%% Line 344
						       Info,'undefined',%% Line 345
									Sort,_cor2,_cor1})
		  ( <_cor6> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_cor6})
		    -| ['compiler_generated'] )
		end
'table_holder'/1 =
    %% Line 349
    fun (_cor0) ->
	case _cor0 of
	  <S0 = {'holder',_cor5,_cor6,_cor7,_cor8,Attrs,Callback}> when 'true' ->
	      %% Line 350
	      receive
		%% Line 351
		<_X_M = {'get_row',From,Row,Col}> when 'true' ->
		    let <State> =
			%% Line 353
			apply 'get_row'/4
			    (From, Row, Col, S0)
		    in  %% Line 354
			apply 'table_holder'/1
			    (State)
		%% Line 355
		<_X_M = {'get_attr',From,Row}> when 'true' ->
		    do  %% Line 357
			apply 'get_attr'/3
			    (From, Row, Attrs)
			%% Line 358
			apply 'table_holder'/1
			    (S0)
		%% Line 359
		<_X_M = {'change_sort',Col}> when 'true' ->
		    let <_cor2> =
			%% Line 361
			call Callback:'col_to_elem'
			    (Col)
		    in  let <State> =
			    %% Line 361
			    apply 'change_sort'/2
				(_cor2, S0)
			in  %% Line 362
			    apply 'table_holder'/1
				(State)
		%% Line 363
		<'stop'> when 'true' ->
		    %% Line 364
		    'ok'
		%% Line 365
		<What> when 'true' ->
		    do  %% Line 366
			call 'io':'format'
			    ([84|[97|[98|[108|[101|[32|[104|[111|[108|[100|[101|[114|[32|[103|[111|[116|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]], [What|[]])
			%% Line 367
			apply 'table_holder'/1
			    (S0)
	      after 'infinity' ->
		'true'
	  ( <_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4})
		  -| [{'function_name',{'table_holder',1}}] )
	    -| ['compiler_generated'] )
	end
'change_sort'/2 =
    %% Line 370
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Col,S0 = {'holder',Parent,Info0,_cor12,Sort0,_cor13,_cor14}> when 'true' ->
	      let <NRows> =
		  %% Line 371
		  call 'array':'size'
		      (Info0)
	      in  let <InfoList0> =
		      %% Line 372
		      call 'array':'to_list'
			  (Info0)
		  in  %% Line 373
		      case apply 'sort'/3
			       (Col, Sort0, InfoList0) of
			<{Sort,InfoList}> when 'true' ->
			    let <Info> =
				%% Line 374
				call 'array':'from_list'
				    (InfoList)
			    in  do  %% Line 375
				    call 'erlang':'!'
					(Parent, {'holder_updated',NRows})
				    let <_cor7> =
					%% Line 376
					call 'erlang':'setelement'
					    (5, S0, Sort)
				    in  let <_cor8> =
					    %% Line 376
					    call 'erlang':'setelement'
						(4, _cor7, 'undefined')
					in  %% Line 376
					    call 'erlang':'setelement'
						(3, _cor8, Info)
			( <_cor4> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor4})
			  -| ['compiler_generated'] )
		      end
	  ( <_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10})
		  -| [{'function_name',{'change_sort',2}}] )
	    -| ['compiler_generated'] )
	end
'sort'/3 =
    %% Line 378
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <Col,Opt = {'sort',_cor13,Bool},Table>
	      when call 'erlang':'=:='
		    (_cor13,
		     Col) ->
	      let <_rec6> =
		  %% Line 379
		  call 'erlang':'not'
		      (Bool)
	      in  let <_cor6> =
		      %% Line 379
		      call 'erlang':'setelement'
			  (3, Opt, _rec6)
		  in  %% Line 379
		      apply 'do_sort'/2
			  (_cor6, Table)
	  %% Line 380
	  <Col,Sort,Table> when 'true' ->
	      %% Line 381
	      case Sort of
		<{'sort',_rec9,_rec10}> when 'true' ->
		    let <_cor9> = {'sort',Col,'true'}
		    in  apply 'do_sort'/2
			    (_cor9, Table)
		( <_cor17> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','sort'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	end
'do_sort'/2 =
    %% Line 383
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Sort = {'sort',Col,'true'},Table> when 'true' ->
	      let <_cor2> =
		  %% Line 384
		  call 'lists':'keysort'
		      (Col, Table)
	      in  %% Line 384
		  {Sort,_cor2}
	  %% Line 385
	  <Sort = {'sort',Col,'false'},Table> when 'true' ->
	      let <_cor3> =
		  %% Line 386
		  call 'lists':'keysort'
		      (Col, Table)
	      in  let <_cor4> =
		      %% Line 386
		      call 'lists':'reverse'
			  (_cor3)
		  in  %% Line 386
		      {Sort,_cor4}
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'do_sort',2}}] )
	    -| ['compiler_generated'] )
	end
'get_cell_data'/3 =
    %% Line 390
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 391
	    call _cor2:'col_to_elem'
		(_cor1)
	in  %% Line 391
	    case call 'erlang':'element'
		     (_cor3, _cor0) of
	      %% Line 392
	      <'undefined'> when 'true' ->
		  []
	      %% Line 393
	      <Cell> when 'true' ->
		  try
		      call _cor2:'format'
			  (Cell)
		  of <_cor4> ->
		      _cor4
		  catch <_cor7,_cor6,_cor5> ->
		      case <_cor7,_cor6,_cor5> of
			<'error','undef',_cor12> when 'true' ->
			    Cell
			( <_cor7,_cor6,_cor5> when 'true' ->
			      primop 'raise'
				  (_cor5, _cor6)
			  -| ['compiler_generated'] )
		      end
	    end
'get_row'/4 =
    %% Line 396
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <From,Row,Col,State = %% Line 397
				{'holder',_cor23,_cor24,{_cor25,RowInfo},_cor26,_cor27,Callback}>
	      when call 'erlang':'=:='
		    (_cor25,
		     %% Line 397
		     Row) ->
	      let <Data> =
		  %% Line 398
		  apply 'get_cell_data'/3
		      (Callback, Col, RowInfo)
	      in  let <_cor6> =
		      %% Line 399
		      call 'erlang':'self'
			  ()
		  in  let <_cor5> =
			  %% Line 399
			  call 'observer_lib':'to_str'
			      (Data)
		      in  do  %% Line 399
			      call 'erlang':'!'
				  (From, {_cor6,_cor5})
			      %% Line 400
			      State
	  %% Line 401
	  <From,Row,Col,S0 = {'holder',_cor28,Info,_cor29,_cor30,_cor31,Callback}> when 'true' ->
	      let <_cor7> =
		  %% Line 403
		  call 'array':'size'
		      (Info)
	      in  let <Data,State> =
		      %% Line 403
		      case <> of
			%% Line 404
			<>
			    when call 'erlang':'>='
				  (Row,
				   _cor7) ->
			    %% Line 405
			    <[],S0>
			%% Line 406
			<> when 'true' ->
			    let <RowInfo> =
				%% Line 407
				call 'array':'get'
				    (Row, Info)
			    in  let <CellData> =
				    %% Line 408
				    apply 'get_cell_data'/3
					(Callback, Col, RowInfo)
				in  let <_rec11> = {%% Line 409
					 Row,%% Line 409
					     RowInfo}
				    in  let <_cor13> =
					    %% Line 409
					    call 'erlang':'setelement'
						(4, S0, _rec11)
					in  %% Line 409
					    <CellData,_cor13>
		      end
		  in  let <_cor18> =
			  %% Line 411
			  call 'erlang':'self'
			      ()
		      in  let <_cor17> =
			      %% Line 411
			      call 'observer_lib':'to_str'
				  (Data)
			  in  do  %% Line 411
				  call 'erlang':'!'
				      (From, {_cor18,_cor17})
				  %% Line 412
				  State
	  ( <_cor22,_cor21,_cor20,_cor19> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor22,_cor21,_cor20,_cor19})
		  -| [{'function_name',{'get_row',4}}] )
	    -| ['compiler_generated'] )
	end
'get_attr'/3 =
    %% Line 414
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 415
	    call 'erlang':'rem'
		(_cor1, 2)
	in  let <_cor7> =
		%% Line 415
		case <> of
		  %% Line 416
		  <>
		      when call 'erlang':'=:='
			    (_cor3,
			     0) ->
		      ( case _cor0 of
			  ( <( {'attrs',_rec13,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19}
			       -| ['compiler_generated'] )> when 'true' ->
				_rec13
			    -| ['compiler_generated'] )
			  ( <_cor20> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','attrs'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		  %% Line 417
		  <> when 'true' ->
		      ( case _cor0 of
			  ( <( {'attrs',_cor21,_rec14,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27}
			       -| ['compiler_generated'] )> when 'true' ->
				_rec14
			    -| ['compiler_generated'] )
			  ( <_cor28> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','attrs'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
		end
	    in  let <_cor9> =
		    %% Line 419
		    call 'erlang':'self'
			()
		in  %% Line 419
		    call 'erlang':'!'
			(_cor2, {_cor9,_cor7})
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('cdv_virtual_list_wx')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('cdv_virtual_list_wx', _cor0)
end