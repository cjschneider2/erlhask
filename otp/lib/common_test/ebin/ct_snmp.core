module 'ct_snmp' ['get_next_values'/3,
		  'get_values'/3,
		  'load_mibs'/1,
		  'module_info'/0,
		  'module_info'/1,
		  'register_agents'/2,
		  'register_users'/2,
		  'register_usm_users'/2,
		  'set_info'/1,
		  'set_values'/4,
		  'start'/2,
		  'start'/3,
		  'stop'/1,
		  'unload_mibs'/1,
		  'unregister_agents'/1,
		  'unregister_agents'/2,
		  'unregister_users'/1,
		  'unregister_users'/2,
		  'unregister_usm_users'/1,
		  'unregister_usm_users'/2]
    attributes [%% Line 38
		'type' =
		    %% Line 38
		    [{{'record','varbind'},[{'record_field',39,{'atom',39,'oid'}}|[{'record_field',40,{'atom',40,'variabletype'}}|[{'record_field',41,{'atom',41,'value'}}|[{'record_field',42,{'atom',42,'org_index'}}]]]],[]}],
		%% Line 52
		'type' =
		    %% Line 52
		    [{{'record','ivarbind'},[{'record_field',53,{'atom',53,'status'},{'atom',53,'noError'}}|[{'record_field',54,{'atom',54,'mibentry'}}|[{'record_field',55,{'atom',55,'varbind'}}]]],[]}],
		%% Line 66
		'type' =
		    %% Line 66
		    [{{'record','asn1_type'},[{'record_field',67,{'atom',67,'bertype'}}|[{'record_field',68,{'atom',68,'lo'}}|[{'record_field',69,{'atom',69,'hi'}}|[{'record_field',70,{'atom',70,'assocList'},{'nil',70}}|[{'record_field',71,{'atom',71,'imported'},{'atom',71,'false'}}|[{'record_field',72,{'atom',72,'aliasname'}}|[{'record_field',73,{'atom',73,'implied'},{'atom',73,'false'}}|[{'record_field',74,{'atom',74,'display_hint'}}]]]]]]]],[]}],
		%% Line 113
		'type' =
		    %% Line 113
		    [{{'record','table_info'},[{'record_field',114,{'atom',114,'nbr_of_cols'}}|[{'record_field',115,{'atom',115,'defvals'},{'nil',115}}|[{'record_field',116,{'atom',116,'status_col'}}|[{'record_field',117,{'atom',117,'not_accessible'}}|[{'record_field',118,{'atom',118,'index_types'}}|[{'record_field',119,{'atom',119,'first_accessible'},{'integer',119,1}}|[{'record_field',120,{'atom',120,'first_own_index'}}]]]]]]],[]}],
		%% Line 130
		'type' =
		    %% Line 130
		    [{{'record','variable_info'},[{'record_field',132,{'atom',132,'defval'}}],[]}],
		%% Line 150
		'type' =
		    %% Line 150
		    [{{'record','me'},[{'record_field',152,{'atom',152,'oid'}}|[{'record_field',153,{'atom',153,'entrytype'}}|[{'record_field',154,{'atom',154,'aliasname'}}|[{'record_field',155,{'atom',155,'asn1_type'}}|[{'record_field',156,{'atom',156,'access'}}|[{'record_field',157,{'atom',157,'mfa'}}|[{'record_field',158,{'atom',158,'imported'},{'atom',158,'false'}}|[{'record_field',159,{'atom',159,'assocList'},{'nil',159}}|[{'record_field',160,{'atom',160,'description'},{'atom',160,'undefined'}}|[{'record_field',161,{'atom',161,'units'}}]]]]]]]]]],[]}],
		%% Line 168
		'type' =
		    %% Line 168
		    [{{'record','trap'},[{'record_field',169,{'atom',169,'trapname'}}|[{'record_field',170,{'atom',170,'enterpriseoid'}}|[{'record_field',171,{'atom',171,'specificcode'}}|[{'record_field',172,{'atom',172,'oidobjects'}}|[{'record_field',173,{'atom',173,'description'},{'atom',173,'undefined'}}]]]]],[]}],
		%% Line 179
		'type' =
		    %% Line 179
		    [{{'record','notification'},[{'record_field',180,{'atom',180,'trapname'}}|[{'record_field',181,{'atom',181,'oid'}}|[{'record_field',182,{'atom',182,'oidobjects'}}|[{'record_field',183,{'atom',183,'description'},{'atom',183,'undefined'}}]]]],[]}],
		%% Line 206
		'type' =
		    %% Line 206
		    [{{'record','mib'},[{'record_field',207,{'atom',207,'misc'},{'nil',207}}|[{'record_field',208,{'atom',208,'mib_format_version'},{'string',208,[51|[46|[51]]]}}|[{'record_field',209,{'atom',209,'name'},{'string',209,[]}}|[{'record_field',210,{'atom',210,'module_identity'}}|[{'record_field',211,{'atom',211,'mes'},{'nil',211}}|[{'record_field',212,{'atom',212,'asn1_types'},{'nil',212}}|[{'record_field',213,{'atom',213,'traps'},{'nil',213}}|[{'record_field',214,{'atom',214,'variable_infos'},{'nil',214}}|[{'record_field',215,{'atom',215,'table_infos'},{'nil',215}}|[{'record_field',216,{'atom',216,'imports'}}]]]]]]]]]],[]}],
		%% Line 220
		'type' =
		    %% Line 220
		    [{{'record','module_identity'},[{'record_field',221,{'atom',221,'last_updated'}}|[{'record_field',222,{'atom',222,'organization'}}|[{'record_field',223,{'atom',223,'contact_info'}}|[{'record_field',224,{'atom',224,'description'}}|[{'record_field',225,{'atom',225,'revisions'}}]]]]],[]}],
		%% Line 248
		'type' =
		    %% Line 248
		    [{{'record','message'},[{'record_field',248,{'atom',248,'version'}}|[{'record_field',248,{'atom',248,'community'}}|[{'record_field',248,{'atom',248,'data'}}]]],[]}],
		%% Line 251
		'type' =
		    %% Line 251
		    [{{'record','v3_hdr'},[{'record_field',252,{'atom',252,'msgID'}}|[{'record_field',253,{'atom',253,'msgMaxSize'}}|[{'record_field',254,{'atom',254,'msgFlags'}}|[{'record_field',255,{'atom',255,'msgSecurityModel'}}|[{'record_field',256,{'atom',256,'msgSecurityParameters'}}|[{'record_field',257,{'atom',257,'hdr_size'}}]]]]]],[]}],
		%% Line 261
		'type' =
		    %% Line 261
		    [{{'record','scopedPdu'},[{'record_field',262,{'atom',262,'contextEngineID'}}|[{'record_field',263,{'atom',263,'contextName'}}|[{'record_field',264,{'atom',264,'data'}}]]],[]}],
		%% Line 271
		'type' =
		    %% Line 271
		    [{{'record','usmSecurityParameters'},[{'record_field',272,{'atom',272,'msgAuthoritativeEngineID'}}|[{'record_field',273,{'atom',273,'msgAuthoritativeEngineBoots'}}|[{'record_field',274,{'atom',274,'msgAuthoritativeEngineTime'}}|[{'record_field',275,{'atom',275,'msgUserName'}}|[{'record_field',276,{'atom',276,'msgAuthenticationParameters'}}|[{'record_field',277,{'atom',277,'msgPrivacyParameters'}}]]]]]],[]}],
		%% Line 289
		'type' =
		    %% Line 289
		    [{{'record','pdu'},[{'record_field',290,{'atom',290,'type'}}|[{'record_field',291,{'atom',291,'request_id'}}|[{'record_field',292,{'atom',292,'error_status'}}|[{'record_field',293,{'atom',293,'error_index'}}|[{'record_field',294,{'atom',294,'varbinds'}}]]]]],[]}],
		%% Line 298
		'type' =
		    %% Line 298
		    [{{'record','trappdu'},[{'record_field',299,{'atom',299,'enterprise'}}|[{'record_field',300,{'atom',300,'agent_addr'}}|[{'record_field',301,{'atom',301,'generic_trap'}}|[{'record_field',302,{'atom',302,'specific_trap'}}|[{'record_field',303,{'atom',303,'time_stamp'}}|[{'record_field',304,{'atom',304,'varbinds'}}]]]]]],[]}],
		%% Line 313
		'type' =
		    %% Line 313
		    [{{'record','snmp_variables'},[{'record_field',314,{'atom',314,'name'}}|[{'record_field',315,{'atom',315,'value'}}]],[]}],
		%% Line 370
		'type' =
		    %% Line 370
		    [{{'record','snmp_incr_timer'},[{'record_field',371,{'atom',371,'wait_for'},{'call',371,{'remote',371,{'atom',371,'timer'},{'atom',371,'seconds'}},[{'integer',371,5}]}}|[{'record_field',372,{'atom',372,'factor'},{'integer',372,2}}|[{'record_field',373,{'atom',373,'incr'},{'integer',373,0}}|[{'record_field',374,{'atom',374,'max_retries'},{'atom',374,'infinity'}}]]]],[]}],
		%% Line 403
		'type' =
		    %% Line 403
		    [{{'record','snmpa_notification_delivery_info'},[{'record_field',405,{'atom',405,'tag'}}|[{'record_field',406,{'atom',406,'mod'}}|[{'record_field',407,{'atom',407,'extra'}}]]],[]}],
		%% Line 22
		'type' =
		    %% Line 22
		    [{{'record','hostent'},[{'typed_record_field',{'record_field',24,{'atom',24,'h_name'}},{'type',24,'union',[{'atom',24,'undefined'}|[{'remote_type',24,[{'atom',24,'inet'}|[{'atom',24,'hostname'}|[[]]]]}]]}}|[{'typed_record_field',{'record_field',25,{'atom',25,'h_aliases'},{'nil',25}},{'type',25,'list',[{'remote_type',25,[{'atom',25,'inet'}|[{'atom',25,'hostname'}|[[]]]]}]}}|[{'typed_record_field',{'record_field',26,{'atom',26,'h_addrtype'}},{'type',26,'union',[{'atom',26,'undefined'}|[{'atom',26,'inet'}|[{'atom',26,'inet6'}]]]}}|[{'typed_record_field',{'record_field',27,{'atom',27,'h_length'}},{'type',27,'union',[{'atom',27,'undefined'}|[{'type',27,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',28,{'atom',28,'h_addr_list'},{'nil',28}},{'type',28,'list',[{'remote_type',28,[{'atom',28,'inet'}|[{'atom',28,'ip_address'}|[[]]]]}]}}]]]]],[]}]]
'start'/2 =
    %% Line 186
    fun (_cor1,_cor0) ->
	%% Line 187
	apply 'start'/3
	    (_cor1, _cor0, 'undefined')
'start'/3 =
    %% Line 208
    fun (_cor2,_cor1,_cor0) ->
	let <StartManager> =
	    %% Line 209
	    call 'ct':'get_config'
		({_cor1,'start_manager'}, 'true')
	in  let <StartAgent> =
		%% Line 210
		call 'ct':'get_config'
		    ({_cor1,'start_agent'}, 'false')
	    in  let <SysName> =
		    %% Line 212
		    call 'ct':'get_config'
			({_cor1,'agent_sysname'}, [99|[116|[95|[116|[101|[115|[116]]]]]]])
		in  %% Line 213
		    case call 'inet':'gethostname'
			     () of
		      <{'ok',HostName}> when 'true' ->
			  %% Line 214
			  case call 'inet':'getaddr'
				   (HostName, 'inet') of
			    <{'ok',Addr}> when 'true' ->
				let <IP> =
				    %% Line 215
				    call 'erlang':'tuple_to_list'
					(Addr)
				in  let <AgentManagerIP> =
					%% Line 216
					call 'ct':'get_config'
					    ({_cor1,'agent_manager_ip'}, IP)
				    in  do  %% Line 218
					    apply 'prepare_snmp_env'/0
						()
					    do  %% Line 219
						apply 'setup_agent'/7
						    (StartAgent, _cor1, _cor0, _cor2, %% Line 220
										      SysName, %% Line 220
											       AgentManagerIP, %% Line 220
													       IP)
						do  %% Line 221
						    apply 'setup_manager'/5
							(StartManager, _cor1, _cor0, _cor2, %% Line 222
											    AgentManagerIP)
						    do  %% Line 223
							call 'application':'start'
							    ('snmp')
							%% Line 225
							apply 'manager_register'/2
							    (StartManager, _cor1)
			    ( <_cor7> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor7})
			      -| ['compiler_generated'] )
			  end
		      ( <_cor6> when 'true' ->
			    primop 'match_fail'
				({'badmatch',_cor6})
			-| ['compiler_generated'] )
		    end
'stop'/1 =
    %% Line 233
    fun (_cor0) ->
	let <PrivDir> =
	    %% Line 234
	    call 'test_server':'lookup_config'
		('priv_dir', _cor0)
	in  do  %% Line 235
		call 'application':'stop'
		    ('snmp')
		do  %% Line 236
		    call 'application':'stop'
			('mnesia')
		    let <MgrDir> =
			%% Line 237
			call 'filename':'join'
			    (PrivDir, [109|[103|[114]]])
		    in  let <ConfDir> =
			    %% Line 238
			    call 'filename':'join'
				(PrivDir, [99|[111|[110|[102]]]])
			in  let <DbDir> =
				%% Line 239
				call 'filename':'join'
				    (PrivDir, [100|[98]])
			    in  do  catch
					%% Line 240
					apply 'del_dir'/1
					    (MgrDir)
				    do  catch
					    %% Line 241
					    apply 'del_dir'/1
						(ConfDir)
					catch
					    %% Line 242
					    apply 'del_dir'/1
						(DbDir)
'get_values'/3 =
    %% Line 253
    fun (_cor2,_cor1,_cor0) ->
	%% Line 254
	case apply 'agent_conf'/2
		 (_cor2, _cor0) of
	  <[Uid|_cor9]> when 'true' ->
	      let <_cor4> =
		  %% Line 255
		  apply 'target_name'/1
		      (_cor2)
	      in  %% Line 255
		  case call 'snmpm':'sync_get2'
			   (Uid, _cor4, _cor1) of
		    <{'ok',SnmpReply,_cor10}> when 'true' ->
			%% Line 256
			SnmpReply
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor5})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'get_next_values'/3 =
    %% Line 266
    fun (_cor2,_cor1,_cor0) ->
	%% Line 267
	case apply 'agent_conf'/2
		 (_cor2, _cor0) of
	  <[Uid|_cor9]> when 'true' ->
	      let <_cor4> =
		  %% Line 268
		  apply 'target_name'/1
		      (_cor2)
	      in  %% Line 268
		  case call 'snmpm':'sync_get_next2'
			   (Uid, _cor4, _cor1) of
		    <{'ok',SnmpReply,_cor10}> when 'true' ->
			%% Line 269
			SnmpReply
		    ( <_cor5> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor5})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor3})
	    -| ['compiler_generated'] )
	end
'set_values'/4 =
    %% Line 280
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <PrivDir> =
	    %% Line 281
	    call 'test_server':'lookup_config'
		('priv_dir', _cor0)
	in  %% Line 282
	    case apply 'agent_conf'/2
		     (_cor3, _cor1) of
	      <[Uid|_cor18]> when 'true' ->
		  let <_cor8> =
		      %% Line 283
		      ( fun (_cor6) ->
			    case _cor6 of
			      <{Oid,_cor19,_cor20}> when 'true' ->
				  Oid
			      ( <_cor7> when 'true' ->
				    ( primop 'match_fail'
					  ({'function_clause',_cor7})
				      -| [{'function_name',{'-set_values/4-fun-0-',1}}] )
				-| ['compiler_generated'] )
			    end
			-| [{'id',{0,0,'-set_values/4-fun-0-'}}] )
		  in  let <Oids> =
			  %% Line 283
			  call 'lists':'map'
			      (_cor8, _cor2)
		      in  let <TargetName> =
			      %% Line 284
			      apply 'target_name'/1
				  (_cor3)
			  in  %% Line 285
			      case call 'snmpm':'sync_get2'
				       (Uid, TargetName, Oids) of
				<{'ok',SnmpGetReply,_cor21}> when 'true' ->
				    %% Line 286
				    case call 'snmpm':'sync_set2'
					     (Uid, TargetName, _cor2) of
				      <{'ok',SnmpSetReply,_cor22}> when 'true' ->
					  do  %% Line 287
					      case SnmpSetReply of
						%% Line 288
						<{'noError',0,_cor23}>
						    when call 'erlang':'=/='
							  (PrivDir,
							   'false') ->
						    %% Line 289
						    apply 'log'/4
							(PrivDir, _cor3, SnmpGetReply, _cor2)
						%% Line 290
						<_cor24> when 'true' ->
						    'ok'
					      end
					      %% Line 293
					      SnmpSetReply
				      ( <_cor12> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_cor12})
					-| ['compiler_generated'] )
				    end
				( <_cor11> when 'true' ->
				      primop 'match_fail'
					  ({'badmatch',_cor11})
				  -| ['compiler_generated'] )
			      end
	      ( <_cor5> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor5})
		-| ['compiler_generated'] )
	    end
'set_info'/1 =
    %% Line 308
    fun (_cor0) ->
	let <PrivDir> =
	    %% Line 309
	    call 'test_server':'lookup_config'
		('priv_dir', _cor0)
	in  let <SetLogFile> =
		%% Line 310
		call 'filename':'join'
		    (PrivDir, [99|[116|[95|[115|[110|[109|[112|[95|[115|[101|[116|[46|[108|[111|[103]]]]]]]]]]]]]]])
	    in  %% Line 311
		case call 'file':'consult'
			 (SetLogFile) of
		  %% Line 312
		  <{'ok',SetInfo}> when 'true' ->
		      do  %% Line 313
			  call 'file':'delete'
			      (SetLogFile)
			  %% Line 314
			  call 'lists':'reverse'
			      (SetInfo)
		  %% Line 315
		  <_cor5> when 'true' ->
		      %% Line 316
		      []
		end
'register_users'/2 =
    %% Line 331
    fun (_cor1,_cor0) ->
	%% Line 332
	case apply 'setup_users'/1
		 (_cor0) of
	  %% Line 333
	  <'ok'> when 'true' ->
	      let <SnmpVals> =
		  %% Line 334
		  call 'ct':'get_config'
		      (_cor1)
	      in  let <OldUsers> =
		      %% Line 335
		      call 'ct':'get_config'
			  ({_cor1,'users'}, [])
		  in  let <_cor4> =
			  %% Line 337
			  call 'erlang':'++'
			      (_cor0, OldUsers)
		      in  let <NewSnmpVals> =
			      %% Line 336
			      call 'lists':'keystore'
				  ('users', 1, SnmpVals, %% Line 337
							 {'users',_cor4})
			  in  do  %% Line 338
				  call 'ct_config':'update_config'
				      (_cor1, NewSnmpVals)
				  %% Line 339
				  'ok'
	  %% Line 340
	  <Error> when 'true' ->
	      %% Line 341
	      Error
	end
'register_agents'/2 =
    %% Line 357
    fun (_cor1,_cor0) ->
	%% Line 358
	case apply 'setup_managed_agents'/2
		 (_cor1, _cor0) of
	  %% Line 359
	  <'ok'> when 'true' ->
	      let <SnmpVals> =
		  %% Line 360
		  call 'ct':'get_config'
		      (_cor1)
	      in  let <OldAgents> =
		      %% Line 361
		      call 'ct':'get_config'
			  ({_cor1,'managed_agents'}, [])
		  in  let <_cor4> =
			  %% Line 364
			  call 'erlang':'++'
			      (_cor0, OldAgents)
		      in  let <NewSnmpVals> =
			      %% Line 362
			      call 'lists':'keystore'
				  ('managed_agents', 1, SnmpVals, %% Line 363
								  {'managed_agents',_cor4})
			  in  do  %% Line 365
				  call 'ct_config':'update_config'
				      (_cor1, NewSnmpVals)
				  %% Line 366
				  'ok'
	  %% Line 367
	  <Error> when 'true' ->
	      %% Line 368
	      Error
	end
'register_usm_users'/2 =
    %% Line 383
    fun (_cor1,_cor0) ->
	let <EngineID> =
	    %% Line 384
	    call 'ct':'get_config'
		({_cor1,'engine_id'}, [109|[103|[114|[69|[110|[103|[105|[110|[101]]]]]]]]])
	in  %% Line 385
	    case apply 'setup_usm_users'/2
		     (_cor0, EngineID) of
	      %% Line 386
	      <'ok'> when 'true' ->
		  let <SnmpVals> =
		      %% Line 387
		      call 'ct':'get_config'
			  (_cor1)
		  in  let <OldUsmUsers> =
			  %% Line 388
			  call 'ct':'get_config'
			      ({_cor1,'usm_users'}, [])
		      in  let <_cor5> =
			      %% Line 390
			      call 'erlang':'++'
				  (_cor0, OldUsmUsers)
			  in  let <NewSnmpVals> =
				  %% Line 389
				  call 'lists':'keystore'
				      ('usm_users', 1, SnmpVals, %% Line 390
								 {'usm_users',_cor5})
			      in  do  %% Line 391
				      call 'ct_config':'update_config'
					  (_cor1, NewSnmpVals)
				      %% Line 392
				      'ok'
	      %% Line 393
	      <Error> when 'true' ->
		  %% Line 394
		  Error
	    end
'unregister_users'/1 =
    %% Line 403
    fun (_cor0) ->
	let <_cor6> =
	    %% Line 404
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor4) ->
			  case _cor4 of
			    <[{Id,_cor9}|_cor2]> when 'true' ->
				let <_cor5> =
				    apply 'lc$^0'/1
					(_cor2)
				in  ( [Id|_cor5]
				      -| ['compiler_generated'] )
			    ( <[_cor1|_cor2]> when 'true' ->
				  apply 'lc$^0'/1
				      (_cor2)
			      -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_cor4> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor4})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  let <_cor3> =
		      call 'ct':'get_config'
			  ({_cor0,'users'}, [])
		  in  apply 'lc$^0'/1
			  (_cor3)
	      -| ['list_comprehension'] )
	in  %% Line 405
	    apply 'unregister_users'/2
		(_cor0, _cor6)
'unregister_users'/2 =
    %% Line 414
    fun (_cor1,_cor0) ->
	do  %% Line 415
	    apply 'takedown_users'/1
		(_cor0)
	    let <SnmpVals> =
		%% Line 416
		call 'ct':'get_config'
		    (_cor1)
	    in  let <AllUsers> =
		    %% Line 417
		    call 'ct':'get_config'
			({_cor1,'users'}, [])
		in  let <_cor7> =
			%% Line 418
			( fun (_cor5) ->
			      case _cor5 of
				<{Id,_cor12}> when 'true' ->
				    let <_cor4> =
					%% Line 419
					call 'lists':'member'
					    (Id, _cor0)
				    in  %% Line 419
					call 'erlang':'not'
					    (_cor4)
				( <_cor6> when 'true' ->
				      ( primop 'match_fail'
					    ({'function_clause',_cor6})
					-| [{'function_name',{'-unregister_users/2-fun-0-',1}}] )
				  -| ['compiler_generated'] )
			      end
			  -| [{'id',{0,0,'-unregister_users/2-fun-0-'}}] )
		    in  let <RemainingUsers> =
			    %% Line 418
			    call 'lists':'filter'
				(_cor7, %% Line 421
					AllUsers)
			in  let <NewSnmpVals> =
				%% Line 422
				call 'lists':'keyreplace'
				    ('users', 1, SnmpVals, {'users',RemainingUsers})
			    in  do  %% Line 423
				    call 'ct_config':'update_config'
					(_cor1, NewSnmpVals)
				    %% Line 424
				    'ok'
'unregister_agents'/1 =
    %% Line 432
    fun (_cor0) ->
	let <_cor6> =
	    %% Line 433
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor4) ->
			  case _cor4 of
			    <[%% Line 434
			      {AgentName,_cor9}|_cor2]> when 'true' ->
				let <_cor5> =
				    %% Line 434
				    apply 'lc$^0'/1
					(_cor2)
				in  ( [AgentName|_cor5]
				      -| ['compiler_generated'] )
			    ( <[_cor1|_cor2]> when 'true' ->
				  %% Line 434
				  apply 'lc$^0'/1
				      (_cor2)
			      -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_cor4> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor4})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  let <_cor3> =
		      %% Line 435
		      call 'ct':'get_config'
			  ({_cor0,'managed_agents'}, [])
		  in  apply 'lc$^0'/1
			  (_cor3)
	      -| ['list_comprehension'] )
	in  %% Line 436
	    apply 'unregister_agents'/2
		(_cor0, _cor6)
'unregister_agents'/2 =
    %% Line 445
    fun (_cor1,_cor0) ->
	do  %% Line 446
	    apply 'takedown_managed_agents'/2
		(_cor1, _cor0)
	    let <SnmpVals> =
		%% Line 447
		call 'ct':'get_config'
		    (_cor1)
	    in  let <AllAgents> =
		    %% Line 448
		    call 'ct':'get_config'
			({_cor1,'managed_agents'}, [])
		in  let <_cor7> =
			%% Line 449
			( fun (_cor5) ->
			      case _cor5 of
				<{Name,_cor12}> when 'true' ->
				    let <_cor4> =
					%% Line 450
					call 'lists':'member'
					    (Name, _cor0)
				    in  %% Line 450
					call 'erlang':'not'
					    (_cor4)
				( <_cor6> when 'true' ->
				      ( primop 'match_fail'
					    ({'function_clause',_cor6})
					-| [{'function_name',{'-unregister_agents/2-fun-0-',1}}] )
				  -| ['compiler_generated'] )
			      end
			  -| [{'id',{0,0,'-unregister_agents/2-fun-0-'}}] )
		    in  let <RemainingAgents> =
			    %% Line 449
			    call 'lists':'filter'
				(_cor7, %% Line 452
					AllAgents)
			in  let <NewSnmpVals> =
				%% Line 453
				call 'lists':'keyreplace'
				    ('managed_agents', 1, SnmpVals, %% Line 454
								    {'managed_agents',RemainingAgents})
			    in  do  %% Line 455
				    call 'ct_config':'update_config'
					(_cor1, NewSnmpVals)
				    %% Line 456
				    'ok'
'unregister_usm_users'/1 =
    %% Line 464
    fun (_cor0) ->
	let <_cor6> =
	    %% Line 465
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor4) ->
			  case _cor4 of
			    <[{Id,_cor9}|_cor2]> when 'true' ->
				let <_cor5> =
				    apply 'lc$^0'/1
					(_cor2)
				in  ( [Id|_cor5]
				      -| ['compiler_generated'] )
			    ( <[_cor1|_cor2]> when 'true' ->
				  apply 'lc$^0'/1
				      (_cor2)
			      -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_cor4> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor4})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  let <_cor3> =
		      call 'ct':'get_config'
			  ({_cor0,'usm_users'}, [])
		  in  apply 'lc$^0'/1
			  (_cor3)
	      -| ['list_comprehension'] )
	in  %% Line 466
	    apply 'unregister_usm_users'/2
		(_cor0, _cor6)
'unregister_usm_users'/2 =
    %% Line 475
    fun (_cor1,_cor0) ->
	let <EngineID> =
	    %% Line 476
	    call 'ct':'get_config'
		({_cor1,'engine_id'}, [109|[103|[114|[69|[110|[103|[105|[110|[101]]]]]]]]])
	in  do  %% Line 477
		apply 'takedown_usm_users'/2
		    (_cor0, EngineID)
		let <SnmpVals> =
		    %% Line 478
		    call 'ct':'get_config'
			(_cor1)
		in  let <AllUsmUsers> =
			%% Line 479
			call 'ct':'get_config'
			    ({_cor1,'usm_users'}, [])
		    in  let <_cor8> =
			    %% Line 480
			    ( fun (_cor6) ->
				  case _cor6 of
				    <{Id,_cor13}> when 'true' ->
					let <_cor5> =
					    %% Line 481
					    call 'lists':'member'
						(Id, _cor0)
					in  %% Line 481
					    call 'erlang':'not'
						(_cor5)
				    ( <_cor7> when 'true' ->
					  ( primop 'match_fail'
						({'function_clause',_cor7})
					    -| [{'function_name',{'-unregister_usm_users/2-fun-0-',1}}] )
				      -| ['compiler_generated'] )
				  end
			      -| [{'id',{0,0,'-unregister_usm_users/2-fun-0-'}}] )
			in  let <RemainingUsmUsers> =
				%% Line 480
				call 'lists':'filter'
				    (_cor8, %% Line 483
					    AllUsmUsers)
			    in  let <NewSnmpVals> =
				    %% Line 484
				    call 'lists':'keyreplace'
					('usm_users', 1, SnmpVals, %% Line 485
								   {'usm_users',RemainingUsmUsers})
				in  do  %% Line 486
					call 'ct_config':'update_config'
					    (_cor1, NewSnmpVals)
					%% Line 487
					'ok'
'load_mibs'/1 =
    %% Line 496
    fun (_cor0) ->
	%% Line 497
	call 'snmpa':'load_mibs'
	    ('snmp_master_agent', _cor0)
'unload_mibs'/1 =
    %% Line 506
    fun (_cor0) ->
	%% Line 507
	call 'snmpa':'unload_mibs'
	    ('snmp_master_agent', _cor0)
'prepare_snmp_env'/0 =
    %% Line 512
    fun () ->
	do  %% Line 515
	    call 'application':'load'
		('snmp')
	    %% Line 520
	    call 'application':'unset_env'
		('snmp', 'agent')
'setup_manager'/5 =
    %% Line 522
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <'false',_cor20,_cor21,_cor22,_cor23> when 'true' ->
	      %% Line 523
	      'ok'
	  %% Line 524
	  <'true',MgrConfName,SnmpConfName,Config,IP> when 'true' ->
	      let <PrivDir> =
		  %% Line 525
		  call 'test_server':'lookup_config'
		      ('priv_dir', Config)
	      in  let <MaxMsgSize> =
		      %% Line 526
		      call 'ct':'get_config'
			  ({MgrConfName,'max_msg_size'}, 484)
		  in  let <Port> =
			  %% Line 527
			  call 'ct':'get_config'
			      ({MgrConfName,'mgr_port'}, 5000)
		      in  let <EngineID> =
			      %% Line 528
			      call 'ct':'get_config'
				  ({MgrConfName,'engine_id'}, [109|[103|[114|[69|[110|[103|[105|[110|[101]]]]]]]]])
			  in  let <MgrDir> =
				  %% Line 529
				  call 'filename':'join'
				      (PrivDir, [109|[103|[114]]])
			      in  do  %% Line 535
				      call 'file':'make_dir'
					  (MgrDir)
				      do  %% Line 537
					  call 'snmp_config':'write_manager_snmp_files'
					      (MgrDir, IP, Port, MaxMsgSize, %% Line 538
									     EngineID, [], [], [])
					  let <_cor13> =
					      %% Line 544
					      call 'ct':'get_config'
						  ({SnmpConfName,'manager'})
					  in  let <SnmpEnv> =
						  %% Line 539
						  apply 'merge_snmp_conf'/2
						      ([{'config',[{'dir',MgrDir}|[{'db_dir',MgrDir}|%% Line 540
												     [{'verbosity','trace'}]]]}|%% Line 541
																[{'server',[{'verbosity','trace'}]}|[{'net_if',[{'verbosity','trace'}]}|[{'versions',['v1'|['v2'|['v3']]]}]]]], _cor13)
					      in  %% Line 545
						  call 'application':'set_env'
						      ('snmp', 'manager', SnmpEnv)
	  ( <_cor19,_cor18,_cor17,_cor16,_cor15> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor19,_cor18,_cor17,_cor16,_cor15})
		  -| [{'function_name',{'setup_manager',5}}] )
	    -| ['compiler_generated'] )
	end
'setup_agent'/7 =
    %% Line 547
    fun (_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor6,_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <'false',_cor27,_cor28,_cor29,_cor30,_cor31,_cor32> when 'true' ->
	      %% Line 548
	      'ok'
	  %% Line 549
	  <'true',AgentConfName,SnmpConfName,%% Line 550
					     Config,%% Line 550
						    SysName,%% Line 550
							    ManagerIP,%% Line 550
								      AgentIP> when 'true' ->
	      do  %% Line 551
		  call 'application':'start'
		      ('mnesia')
		  let <PrivDir> =
		      %% Line 552
		      call 'test_server':'lookup_config'
			  ('priv_dir', Config)
		  in  let <Vsns> =
			  %% Line 553
			  call 'ct':'get_config'
			      ({AgentConfName,'agent_vsns'}, ['v2'])
		      in  let <TrapUdp> =
			      %% Line 554
			      call 'ct':'get_config'
				  ({AgentConfName,'agent_trap_udp'}, 5000)
			  in  let <AgentUdp> =
				  %% Line 555
				  call 'ct':'get_config'
				      ({AgentConfName,'agent_udp'}, 4000)
			      in  let <NotifType> =
				      %% Line 556
				      call 'ct':'get_config'
					  ({AgentConfName,'agent_notify_type'}, %% Line 557
										'trap')
				  in  let <SecType> =
					  %% Line 558
					  call 'ct':'get_config'
					      ({AgentConfName,'agent_sec_type'}, 'none')
				      in  let <Passwd> =
					      %% Line 559
					      call 'ct':'get_config'
						  ({AgentConfName,'agent_passwd'}, [])
					  in  let <AgentEngineID> =
						  %% Line 560
						  call 'ct':'get_config'
						      ({AgentConfName,'agent_engine_id'}, %% Line 561
											  [97|[103|[101|[110|[116|[69|[110|[103|[105|[110|[101]]]]]]]]]]])
					      in  let <AgentMaxMsgSize> =
						      %% Line 562
						      call 'ct':'get_config'
							  ({AgentConfName,'agent_max_msg_size'}, %% Line 563
												 484)
						  in  let <ConfDir> =
							  %% Line 565
							  call 'filename':'join'
							      (PrivDir, [99|[111|[110|[102]]]])
						      in  let <DbDir> =
							      %% Line 566
							      call 'filename':'join'
								  (PrivDir, [100|[98]])
							  in  do  %% Line 567
								  call 'file':'make_dir'
								      (ConfDir)
								  do  %% Line 568
								      call 'file':'make_dir'
									  (DbDir)
								      do  %% Line 569
									  call 'snmp_config':'write_agent_snmp_files'
									      (ConfDir, Vsns, ManagerIP, TrapUdp, %% Line 570
														  AgentIP, %% Line 570
															   AgentUdp, %% Line 570
																     SysName, %% Line 571
																	      NotifType, %% Line 571
																			 SecType, %% Line 571
																				  Passwd, %% Line 572
																					  AgentEngineID, %% Line 572
																							 AgentMaxMsgSize)
									  do  %% Line 574
									      apply 'override_default_configuration'/2
										  (Config, AgentConfName)
									      let <_cor18> =
										  %% Line 583
										  call 'ct':'get_config'
										      ({SnmpConfName,'agent'})
									      in  let <SnmpEnv> =
										      %% Line 576
										      apply 'merge_snmp_conf'/2
											  ([{'db_dir',DbDir}|%% Line 577
													     [{'config',[{'dir',ConfDir}|%% Line 578
																	 [{'verbosity','trace'}]]}|%% Line 579
																				   [{'agent_type','master'}|%% Line 580
																							    [{'agent_verbosity','trace'}|%% Line 581
																											 [{'net_if',[{'verbosity','trace'}]}|%% Line 582
																															     [{'versions',Vsns}|[]]]]]]], _cor18)
										  in  %% Line 584
										      call 'application':'set_env'
											  ('snmp', 'agent', SnmpEnv)
	  ( <_cor26,_cor25,_cor24,_cor23,_cor22,_cor21,_cor20> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor26,_cor25,_cor24,_cor23,_cor22,_cor21,_cor20})
		  -| [{'function_name',{'setup_agent',7}}] )
	    -| ['compiler_generated'] )
	end
'merge_snmp_conf'/2 =
    %% Line 586
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Defaults,'undefined'> when 'true' ->
	      %% Line 587
	      Defaults
	  %% Line 588
	  <[Def = {Key,DefList = [P|_cor19]}|DefParams],UserParams>
	      when call 'erlang':'is_tuple'
		    (P) ->
	      %% Line 589
	      case call 'lists':'keysearch'
		       (Key, 1, UserParams) of
		%% Line 590
		<'false'> when 'true' ->
		    let <_cor2> =
			%% Line 591
			apply 'merge_snmp_conf'/2
			    (DefParams, UserParams)
		    in  %% Line 591
			[Def|_cor2]
		%% Line 592
		<{'value',{_cor20,UserList}}>
		    when call 'erlang':'=:='
			  (_cor20,
			   Key) ->
		    let <_cor9> =
			%% Line 593
			( letrec
			      'lc$^0'/1 =
				  fun (_cor6) ->
				      case _cor6 of
					<[{SubKey,Val}|_cor4]> when 'true' ->
					    let <_cor5> =
						%% Line 594
						call 'lists':'keysearch'
						    (SubKey, 1, UserList)
					    in  %% Line 594
						( case <> of
						    <>
							when call 'erlang':'=:='
							      (_cor5,
							       'false') ->
							let <_cor7> =
							    apply 'lc$^0'/1
								(_cor4)
							in  ( [{SubKey,Val}|_cor7]
							      -| ['compiler_generated'] )
						    ( <> when 'true' ->
							  apply 'lc$^0'/1
							      (_cor4)
						      -| ['compiler_generated'] )
						  end
						  -| ['list_comprehension'] )
					( <[_cor3|_cor4]> when 'true' ->
					      apply 'lc$^0'/1
						  (_cor4)
					  -| ['compiler_generated'] )
					<[]> when 'true' ->
					    []
					( <_cor6> when 'true' ->
					      ( primop 'match_fail'
						    ({'function_clause',_cor6})
						-| [{'function_name',{'lc$^0',1}}] )
					  -| ['compiler_generated'] )
				      end
			  in  apply 'lc$^0'/1
				  (DefList)
			  -| ['list_comprehension'] )
		    in  let <_cor11> =
			    %% Line 595
			    call 'erlang':'++'
				(_cor9, UserList)
			in  let <_cor12> =
				%% Line 596
				call 'lists':'keydelete'
				    (Key, 1, UserParams)
			    in  let <_cor13> =
				    %% Line 595
				    apply 'merge_snmp_conf'/2
					(DefParams, _cor12)
				in  %% Line 595
				    [{Key,_cor11}|_cor13]
		( <_cor14> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor14})
		  -| ['compiler_generated'] )
	      end
	  %% Line 598
	  <[Def = {Key,_cor21}|DefParams],UserParams> when 'true' ->
	      %% Line 599
	      case call 'lists':'keysearch'
		       (Key, 1, UserParams) of
		%% Line 600
		<'false'> when 'true' ->
		    let <_cor15> =
			%% Line 601
			apply 'merge_snmp_conf'/2
			    (DefParams, UserParams)
		    in  %% Line 601
			[Def|_cor15]
		%% Line 602
		<{'value',_cor22}> when 'true' ->
		    %% Line 603
		    apply 'merge_snmp_conf'/2
			(DefParams, UserParams)
		( <_cor16> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor16})
		  -| ['compiler_generated'] )
	      end
	  %% Line 605
	  <[],UserParams> when 'true' ->
	      %% Line 606
	      UserParams
	  ( <_cor18,_cor17> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor18,_cor17})
		  -| [{'function_name',{'merge_snmp_conf',2}}] )
	    -| ['compiler_generated'] )
	end
'manager_register'/2 =
    %% Line 610
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <'false',_cor8> when 'true' ->
	      %% Line 611
	      'ok'
	  %% Line 612
	  <'true',MgrAgentConfName> when 'true' ->
	      let <Agents> =
		  %% Line 613
		  call 'ct':'get_config'
		      ({MgrAgentConfName,'managed_agents'}, [])
	      in  let <Users> =
		      %% Line 614
		      call 'ct':'get_config'
			  ({MgrAgentConfName,'users'}, [])
		  in  let <UsmUsers> =
			  %% Line 615
			  call 'ct':'get_config'
			      ({MgrAgentConfName,'usm_users'}, [])
		      in  let <EngineID> =
			      %% Line 616
			      call 'ct':'get_config'
				  ({MgrAgentConfName,'engine_id'}, [109|[103|[114|[69|[110|[103|[105|[110|[101]]]]]]]]])
			  in  do  %% Line 618
				  apply 'setup_usm_users'/2
				      (UsmUsers, EngineID)
				  do  %% Line 619
				      apply 'setup_users'/1
					  (Users)
				      %% Line 620
				      apply 'setup_managed_agents'/2
					  (MgrAgentConfName, Agents)
	  ( <_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6})
		  -| [{'function_name',{'manager_register',2}}] )
	    -| ['compiler_generated'] )
	end
'setup_users'/1 =
    %% Line 623
    fun (_cor0) ->
	let <_cor3> =
	    %% Line 624
	    ( fun (_cor1) ->
		  case _cor1 of
		    <{Id,[Module|[Data|[]]]}> when 'true' ->
			%% Line 625
			call 'snmpm':'register_user'
			    (Id, Module, Data)
		    ( <_cor2> when 'true' ->
			  ( primop 'match_fail'
				({'function_clause',_cor2})
			    -| [{'function_name',{'-setup_users/1-fun-0-',1}}] )
		      -| ['compiler_generated'] )
		  end
	      -| [{'id',{0,0,'-setup_users/1-fun-0-'}}] )
	in  %% Line 624
	    apply 'while_ok'/2
		(_cor3, _cor0)
'setup_managed_agents'/2 =
    %% Line 628
    fun (_cor1,_cor0) ->
	let <Fun> =
	    %% Line 630
	    ( fun (_cor14) ->
		  case _cor14 of
		    <{AgentName,[Uid|[AgentIp|[AgentUdpPort|[AgentConf0|[]]]]]}> when 'true' ->
			let <_cor7> =
			    %% Line 631
			    case AgentIp of
			      %% Line 632
			      <IpTuple>
				  when call 'erlang':'is_tuple'
					(AgentIp) ->
				  %% Line 633
				  IpTuple
			      %% Line 634
			      <HostName>
				  when call 'erlang':'is_list'
					(AgentIp) ->
				  %% Line 635
				  case call 'inet':'gethostbyname'
					   (HostName) of
				    <{'ok',Hostent}> when 'true' ->
					%% Line 636
					( case Hostent of
					    ( <( {'hostent',_cor19,_cor20,_cor21,_cor22,_rec0}
						 -| ['compiler_generated'] )> when 'true' ->
						  case _rec0 of
						    <[IpTuple|_cor24]> when 'true' ->
							%% Line 637
							IpTuple
						    ( <_cor5> when 'true' ->
							  primop 'match_fail'
							      ({'badmatch',_cor5})
						      -| ['compiler_generated'] )
						  end
					      -| ['compiler_generated'] )
					    ( <_cor23> when 'true' ->
						  ( call ( 'erlang'
							   -| ['compiler_generated'] ):( 'error'
											 -| ['compiler_generated'] )
							(( {'badrecord','hostent'}
							   -| ['compiler_generated'] ))
						    -| ['compiler_generated'] )
					      -| ['compiler_generated'] )
					  end
					  -| ['compiler_generated'] )
				    ( <_cor2> when 'true' ->
					  primop 'match_fail'
					      ({'badmatch',_cor2})
				      -| ['compiler_generated'] )
				  end
			      ( <_cor6> when 'true' ->
				    primop 'match_fail'
					({'case_clause',_cor6})
				-| ['compiler_generated'] )
			    end
			in  let <_cor11> =
				%% Line 640
				case call 'lists':'keymember'
					 ('engine_id', 1, AgentConf0) of
				  %% Line 641
				  <'true'> when 'true' ->
				      %% Line 642
				      AgentConf0
				  %% Line 643
				  <'false'> when 'true' ->
				      let <DefaultEngineID> =
					  %% Line 645
					  call 'ct':'get_config'
					      ({_cor1,'agent_engine_id'}, %% Line 646
									  [97|[103|[101|[110|[116|[69|[110|[103|[105|[110|[101]]]]]]]]]]])
				      in  %% Line 647
					  [{'engine_id',DefaultEngineID}|AgentConf0]
				  ( <_cor10> when 'true' ->
					primop 'match_fail'
					    ({'case_clause',_cor10})
				    -| ['compiler_generated'] )
				end
			    in  let <_cor13> =
				    %% Line 649
				    apply 'target_name'/1
					(AgentName)
				in  %% Line 649
				    call 'snmpm':'register_agent'
					(Uid, _cor13, %% Line 650
						      [{'address',_cor7}|[{'port',AgentUdpPort}|_cor11]])
		    ( <_cor15> when 'true' ->
			  ( primop 'match_fail'
				({'function_clause',_cor15})
			    -| [{'function_name',{'-setup_managed_agents/2-fun-0-',1}}] )
		      -| ['compiler_generated'] )
		  end
	      -| [{'id',{0,0,'-setup_managed_agents/2-fun-0-'}}] )
	in  %% Line 653
	    apply 'while_ok'/2
		(Fun, _cor0)
'setup_usm_users'/2 =
    %% Line 655
    fun (_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 656
	    ( fun (_cor2) ->
		  case _cor2 of
		    <{UsmUser,Conf}> when 'true' ->
			%% Line 657
			call 'snmpm':'register_usm_user'
			    (_cor0, UsmUser, Conf)
		    ( <_cor3> when 'true' ->
			  ( primop 'match_fail'
				({'function_clause',_cor3})
			    -| [{'function_name',{'-setup_usm_users/2-fun-0-',1}}] )
		      -| ['compiler_generated'] )
		  end
	      -| [{'id',{0,0,'-setup_usm_users/2-fun-0-'}}] )
	in  %% Line 656
	    apply 'while_ok'/2
		(_cor4, _cor1)
'takedown_users'/1 =
    %% Line 660
    fun (_cor0) ->
	let <_cor3> =
	    %% Line 661
	    ( fun (_cor1) ->
		  %% Line 662
		  call 'snmpm':'unregister_user'
		      (_cor1)
	      -| [{'id',{0,0,'-takedown_users/1-fun-0-'}}] )
	in  %% Line 661
	    call 'lists':'foreach'
		(_cor3, _cor0)
'takedown_managed_agents'/2 =
    %% Line 665
    fun (_cor1,_cor0) ->
	let <_cor6> =
	    %% Line 666
	    ( fun (_cor4) ->
		  %% Line 667
		  case apply 'agent_conf'/2
			   (_cor4, _cor1) of
		    <[Uid|_cor9]> when 'true' ->
			let <_cor3> =
			    %% Line 668
			    apply 'target_name'/1
				(_cor4)
			in  %% Line 668
			    call 'snmpm':'unregister_agent'
				(Uid, _cor3)
		    ( <_cor2> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor2})
		      -| ['compiler_generated'] )
		  end
	      -| [{'id',{0,0,'-takedown_managed_agents/2-fun-0-'}}] )
	in  %% Line 666
	    call 'lists':'foreach'
		(_cor6, _cor0)
'takedown_usm_users'/2 =
    %% Line 671
    fun (_cor1,_cor0) ->
	let <_cor4> =
	    %% Line 672
	    ( fun (_cor2) ->
		  %% Line 673
		  call 'snmpm':'unregister_usm_user'
		      (_cor0, _cor2)
	      -| [{'id',{0,0,'-takedown_usm_users/2-fun-0-'}}] )
	in  %% Line 672
	    call 'lists':'foreach'
		(_cor4, _cor1)
'log'/4 =
    %% Line 676
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <PrivDir,Agent,{_cor14,_cor15,Varbinds},NewVarsAndVals> when 'true' ->
	      let <Fun> =
		  %% Line 678
		  ( fun (_cor4) ->
			case _cor4 of
			  <{'varbind',Oid,Type,Value,_cor16}> when 'true' ->
			      %% Line 679
			      {Oid,Type,Value}
			  ( <_cor5> when 'true' ->
				( primop 'match_fail'
				      ({'function_clause',_cor5})
				  -| [{'function_name',{'-log/4-fun-0-',1}}] )
			    -| ['compiler_generated'] )
			end
		    -| [{'id',{0,0,'-log/4-fun-0-'}}] )
	      in  let <OldVarsAndVals> =
		      %% Line 681
		      call 'lists':'map'
			  (Fun, Varbinds)
		  in  let <File> =
			  %% Line 683
			  call 'filename':'join'
			      (PrivDir, [99|[116|[95|[115|[110|[109|[112|[95|[115|[101|[116|[46|[108|[111|[103]]]]]]]]]]]]]]])
		      in  %% Line 684
			  case call 'file':'open'
				   (File, ['write'|['append']]) of
			    <{'ok',Fd}> when 'true' ->
				do  %% Line 685
				    call 'io':'format'
					(Fd, [126|[112|[46|[126|[110]]]]], [{Agent,OldVarsAndVals,NewVarsAndVals}|[]])
				    do  %% Line 686
					call 'file':'close'
					    (Fd)
					%% Line 687
					'ok'
			    ( <_cor9> when 'true' ->
				  primop 'match_fail'
				      ({'badmatch',_cor9})
			      -| ['compiler_generated'] )
			  end
	  ( <_cor13,_cor12,_cor11,_cor10> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor13,_cor12,_cor11,_cor10})
		  -| [{'function_name',{'log',4}}] )
	    -| ['compiler_generated'] )
	end
'del_dir'/1 =
    %% Line 689
    fun (_cor0) ->
	%% Line 690
	case call 'file':'list_dir'
		 (_cor0) of
	  <{'ok',Files}> when 'true' ->
	      let <_cor4> =
		  %% Line 691
		  ( fun (_cor2) ->
			call 'filename':'join'
			    (_cor0, _cor2)
		    -| [{'id',{0,0,'-del_dir/1-fun-0-'}}] )
	      in  let <FullPathFiles> =
		      %% Line 691
		      call 'lists':'map'
			  (_cor4, %% Line 692
				  Files)
		  in  let <_cor6> =
			  %% Line 693
			  call 'erlang':'make_fun'
			      ('file', 'delete', 1)
		      in  do  %% Line 693
			      call 'lists':'foreach'
				  (_cor6, FullPathFiles)
			      do  %% Line 694
				  call 'file':'del_dir'
				      (_cor0)
				  %% Line 695
				  'ok'
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'agent_conf'/2 =
    %% Line 697
    fun (_cor1,_cor0) ->
	let <Agents> =
	    %% Line 698
	    call 'ct':'get_config'
		({_cor0,'managed_agents'})
	in  %% Line 699
	    case call 'lists':'keysearch'
		     (_cor1, 1, Agents) of
	      %% Line 700
	      <{'value',{_cor6,AgentConf}}>
		  when call 'erlang':'=:='
			(_cor6,
			 _cor1) ->
		  %% Line 701
		  AgentConf
	      %% Line 702
	      <_cor7> when 'true' ->
		  %% Line 703
		  call 'erlang':'exit'
		      ({'error',{'unknown_agent',_cor1,Agents}})
	    end
'override_default_configuration'/2 =
    %% Line 706
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 708
	    call 'ct':'get_config'
		({_cor0,'agent_contexts'}, 'undefined')
	in  do  %% Line 707
		apply 'override_contexts'/2
		    (_cor1, _cor2)
		let <_cor3> =
		    %% Line 710
		    call 'ct':'get_config'
			({_cor0,'agent_community'}, 'undefined')
		in  do  %% Line 709
			apply 'override_community'/2
			    (_cor1, _cor3)
			let <_cor4> =
			    %% Line 712
			    call 'ct':'get_config'
				({_cor0,'agent_sysinfo'}, 'undefined')
			in  do  %% Line 711
				apply 'override_sysinfo'/2
				    (_cor1, _cor4)
				let <_cor5> =
				    %% Line 714
				    call 'ct':'get_config'
					({_cor0,'agent_vacm'}, 'undefined')
				in  do  %% Line 713
					apply 'override_vacm'/2
					    (_cor1, _cor5)
					let <_cor6> =
					    %% Line 716
					    call 'ct':'get_config'
						({_cor0,'agent_usm'}, 'undefined')
					in  do  %% Line 715
						apply 'override_usm'/2
						    (_cor1, _cor6)
						let <_cor7> =
						    %% Line 718
						    call 'ct':'get_config'
							({_cor0,'agent_notify_def'}, 'undefined')
						in  do  %% Line 717
							apply 'override_notify'/2
							    (_cor1, _cor7)
							let <_cor8> =
							    %% Line 720
							    call 'ct':'get_config'
								({_cor0,%% Line 721
									'agent_target_address_def'}, %% Line 722
												     'undefined')
							in  do  %% Line 719
								apply 'override_target_address'/2
								    (_cor1, _cor8)
								let <_cor9> =
								    %% Line 724
								    call 'ct':'get_config'
									({_cor0,'agent_target_param_def'}, %% Line 725
													   'undefined')
								in  %% Line 723
								    apply 'override_target_params'/2
									(_cor1, _cor9)
'override_contexts'/2 =
    %% Line 728
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_cor10,'undefined'> when 'true' ->
	      %% Line 729
	      'ok'
	  %% Line 731
	  <Config,{'data_dir_file',File}> when 'true' ->
	      let <Dir> =
		  %% Line 732
		  call 'test_server':'lookup_config'
		      ('data_dir', Config)
	      in  let <FullPathFile> =
		      %% Line 733
		      call 'filename':'join'
			  (Dir, File)
		  in  %% Line 734
		      case call 'file':'consult'
			       (FullPathFile) of
			<{'ok',ContextInfo}> when 'true' ->
			    %% Line 735
			    apply 'override_contexts'/2
				(Config, ContextInfo)
			( <_cor4> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor4})
			  -| ['compiler_generated'] )
		      end
	  %% Line 737
	  <Config,Contexts> when 'true' ->
	      let <_cor5> =
		  %% Line 738
		  call 'test_server':'lookup_config'
		      ('priv_dir', Config)
	      in  let <Dir> =
		      %% Line 738
		      call 'filename':'join'
			  (_cor5, [99|[111|[110|[102]]]])
		  in  let <File> =
			  %% Line 739
			  call 'filename':'join'
			      (Dir, [99|[111|[110|[116|[101|[120|[116|[46|[99|[111|[110|[102]]]]]]]]]]]])
		      in  do  %% Line 740
			      call 'file':'delete'
				  (File)
			      %% Line 741
			      call 'snmp_config':'write_agent_context_config'
				  (Dir, [], Contexts)
	end
'override_sysinfo'/2 =
    %% Line 744
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_cor10,'undefined'> when 'true' ->
	      %% Line 745
	      'ok'
	  %% Line 747
	  <Config,{'data_dir_file',File}> when 'true' ->
	      let <Dir> =
		  %% Line 748
		  call 'test_server':'lookup_config'
		      ('data_dir', Config)
	      in  let <FullPathFile> =
		      %% Line 749
		      call 'filename':'join'
			  (Dir, File)
		  in  %% Line 750
		      case call 'file':'consult'
			       (FullPathFile) of
			<{'ok',SysInfo}> when 'true' ->
			    %% Line 751
			    apply 'override_sysinfo'/2
				(Config, SysInfo)
			( <_cor4> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor4})
			  -| ['compiler_generated'] )
		      end
	  %% Line 753
	  <Config,SysInfo> when 'true' ->
	      let <_cor5> =
		  %% Line 754
		  call 'test_server':'lookup_config'
		      ('priv_dir', Config)
	      in  let <Dir> =
		      %% Line 754
		      call 'filename':'join'
			  (_cor5, [99|[111|[110|[102]]]])
		  in  let <File> =
			  %% Line 755
			  call 'filename':'join'
			      (Dir, [115|[116|[97|[110|[100|[97|[114|[100|[46|[99|[111|[110|[102]]]]]]]]]]]]])
		      in  do  %% Line 756
			      call 'file':'delete'
				  (File)
			      %% Line 757
			      call 'snmp_config':'write_agent_standard_config'
				  (Dir, [], SysInfo)
	end
'override_target_address'/2 =
    %% Line 760
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_cor10,'undefined'> when 'true' ->
	      %% Line 761
	      'ok'
	  %% Line 762
	  <Config,{'data_dir_file',File}> when 'true' ->
	      let <Dir> =
		  %% Line 763
		  call 'test_server':'lookup_config'
		      ('data_dir', Config)
	      in  let <FullPathFile> =
		      %% Line 764
		      call 'filename':'join'
			  (Dir, File)
		  in  %% Line 765
		      case call 'file':'consult'
			       (FullPathFile) of
			<{'ok',TargetAddressConf}> when 'true' ->
			    %% Line 766
			    apply 'override_target_address'/2
				(Config, TargetAddressConf)
			( <_cor4> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor4})
			  -| ['compiler_generated'] )
		      end
	  %% Line 768
	  <Config,TargetAddressConf> when 'true' ->
	      let <_cor5> =
		  %% Line 769
		  call 'test_server':'lookup_config'
		      ('priv_dir', Config)
	      in  let <Dir> =
		      %% Line 769
		      call 'filename':'join'
			  (_cor5, [99|[111|[110|[102]]]])
		  in  let <File> =
			  %% Line 770
			  call 'filename':'join'
			      (Dir, [116|[97|[114|[103|[101|[116|[95|[97|[100|[100|[114|[46|[99|[111|[110|[102]]]]]]]]]]]]]]]])
		      in  do  %% Line 771
			      call 'file':'delete'
				  (File)
			      %% Line 772
			      call 'snmp_config':'write_agent_target_addr_config'
				  (Dir, [], TargetAddressConf)
	end
'override_target_params'/2 =
    %% Line 776
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_cor10,'undefined'> when 'true' ->
	      %% Line 777
	      'ok'
	  %% Line 778
	  <Config,{'data_dir_file',File}> when 'true' ->
	      let <Dir> =
		  %% Line 779
		  call 'test_server':'lookup_config'
		      ('data_dir', Config)
	      in  let <FullPathFile> =
		      %% Line 780
		      call 'filename':'join'
			  (Dir, File)
		  in  %% Line 781
		      case call 'file':'consult'
			       (FullPathFile) of
			<{'ok',TargetParamsConf}> when 'true' ->
			    %% Line 782
			    apply 'override_target_params'/2
				(Config, TargetParamsConf)
			( <_cor4> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor4})
			  -| ['compiler_generated'] )
		      end
	  %% Line 784
	  <Config,TargetParamsConf> when 'true' ->
	      let <_cor5> =
		  %% Line 785
		  call 'test_server':'lookup_config'
		      ('priv_dir', Config)
	      in  let <Dir> =
		      %% Line 785
		      call 'filename':'join'
			  (_cor5, [99|[111|[110|[102]]]])
		  in  let <File> =
			  %% Line 786
			  call 'filename':'join'
			      (Dir, [116|[97|[114|[103|[101|[116|[95|[112|[97|[114|[97|[109|[115|[46|[99|[111|[110|[102]]]]]]]]]]]]]]]]]])
		      in  do  %% Line 787
			      call 'file':'delete'
				  (File)
			      %% Line 788
			      call 'snmp_config':'write_agent_target_params_config'
				  (Dir, [], TargetParamsConf)
	end
'override_notify'/2 =
    %% Line 791
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_cor10,'undefined'> when 'true' ->
	      %% Line 792
	      'ok'
	  %% Line 793
	  <Config,{'data_dir_file',File}> when 'true' ->
	      let <Dir> =
		  %% Line 794
		  call 'test_server':'lookup_config'
		      ('data_dir', Config)
	      in  let <FullPathFile> =
		      %% Line 795
		      call 'filename':'join'
			  (Dir, File)
		  in  %% Line 796
		      case call 'file':'consult'
			       (FullPathFile) of
			<{'ok',NotifyConf}> when 'true' ->
			    %% Line 797
			    apply 'override_notify'/2
				(Config, NotifyConf)
			( <_cor4> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor4})
			  -| ['compiler_generated'] )
		      end
	  %% Line 799
	  <Config,NotifyConf> when 'true' ->
	      let <_cor5> =
		  %% Line 800
		  call 'test_server':'lookup_config'
		      ('priv_dir', Config)
	      in  let <Dir> =
		      %% Line 800
		      call 'filename':'join'
			  (_cor5, [99|[111|[110|[102]]]])
		  in  let <File> =
			  %% Line 801
			  call 'filename':'join'
			      (Dir, [110|[111|[116|[105|[102|[121|[46|[99|[111|[110|[102]]]]]]]]]]])
		      in  do  %% Line 802
			      call 'file':'delete'
				  (File)
			      %% Line 803
			      call 'snmp_config':'write_agent_notify_config'
				  (Dir, [], NotifyConf)
	end
'override_usm'/2 =
    %% Line 806
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_cor10,'undefined'> when 'true' ->
	      %% Line 807
	      'ok'
	  %% Line 808
	  <Config,{'data_dir_file',File}> when 'true' ->
	      let <Dir> =
		  %% Line 809
		  call 'test_server':'lookup_config'
		      ('data_dir', Config)
	      in  let <FullPathFile> =
		      %% Line 810
		      call 'filename':'join'
			  (Dir, File)
		  in  %% Line 811
		      case call 'file':'consult'
			       (FullPathFile) of
			<{'ok',UsmConf}> when 'true' ->
			    %% Line 812
			    apply 'override_usm'/2
				(Config, UsmConf)
			( <_cor4> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor4})
			  -| ['compiler_generated'] )
		      end
	  %% Line 814
	  <Config,UsmConf> when 'true' ->
	      let <_cor5> =
		  %% Line 815
		  call 'test_server':'lookup_config'
		      ('priv_dir', Config)
	      in  let <Dir> =
		      %% Line 815
		      call 'filename':'join'
			  (_cor5, [99|[111|[110|[102]]]])
		  in  let <File> =
			  %% Line 816
			  call 'filename':'join'
			      (Dir, [117|[115|[109|[46|[99|[111|[110|[102]]]]]]]])
		      in  do  %% Line 817
			      call 'file':'delete'
				  (File)
			      %% Line 818
			      call 'snmp_config':'write_agent_usm_config'
				  (Dir, [], UsmConf)
	end
'override_community'/2 =
    %% Line 821
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_cor10,'undefined'> when 'true' ->
	      %% Line 822
	      'ok'
	  %% Line 823
	  <Config,{'data_dir_file',File}> when 'true' ->
	      let <Dir> =
		  %% Line 824
		  call 'test_server':'lookup_config'
		      ('data_dir', Config)
	      in  let <FullPathFile> =
		      %% Line 825
		      call 'filename':'join'
			  (Dir, File)
		  in  %% Line 826
		      case call 'file':'consult'
			       (FullPathFile) of
			<{'ok',CommunityConf}> when 'true' ->
			    %% Line 827
			    apply 'override_community'/2
				(Config, CommunityConf)
			( <_cor4> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor4})
			  -| ['compiler_generated'] )
		      end
	  %% Line 829
	  <Config,CommunityConf> when 'true' ->
	      let <_cor5> =
		  %% Line 830
		  call 'test_server':'lookup_config'
		      ('priv_dir', Config)
	      in  let <Dir> =
		      %% Line 830
		      call 'filename':'join'
			  (_cor5, [99|[111|[110|[102]]]])
		  in  let <File> =
			  %% Line 831
			  call 'filename':'join'
			      (Dir, [99|[111|[109|[109|[117|[110|[105|[116|[121|[46|[99|[111|[110|[102]]]]]]]]]]]]]])
		      in  do  %% Line 832
			      call 'file':'delete'
				  (File)
			      %% Line 833
			      call 'snmp_config':'write_agent_community_config'
				  (Dir, [], CommunityConf)
	end
'override_vacm'/2 =
    %% Line 837
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <_cor10,'undefined'> when 'true' ->
	      %% Line 838
	      'ok'
	  %% Line 839
	  <Config,{'data_dir_file',File}> when 'true' ->
	      let <Dir> =
		  %% Line 840
		  call 'test_server':'lookup_config'
		      ('data_dir', Config)
	      in  let <FullPathFile> =
		      %% Line 841
		      call 'filename':'join'
			  (Dir, File)
		  in  %% Line 842
		      case call 'file':'consult'
			       (FullPathFile) of
			<{'ok',VacmConf}> when 'true' ->
			    %% Line 843
			    apply 'override_vacm'/2
				(Config, VacmConf)
			( <_cor4> when 'true' ->
			      primop 'match_fail'
				  ({'badmatch',_cor4})
			  -| ['compiler_generated'] )
		      end
	  %% Line 845
	  <Config,VacmConf> when 'true' ->
	      let <_cor5> =
		  %% Line 846
		  call 'test_server':'lookup_config'
		      ('priv_dir', Config)
	      in  let <Dir> =
		      %% Line 846
		      call 'filename':'join'
			  (_cor5, [99|[111|[110|[102]]]])
		  in  let <File> =
			  %% Line 847
			  call 'filename':'join'
			      (Dir, [118|[97|[99|[109|[46|[99|[111|[110|[102]]]]]]]]])
		      in  do  %% Line 848
			      call 'file':'delete'
				  (File)
			      %% Line 849
			      call 'snmp_config':'write_agent_vacm_config'
				  (Dir, [], VacmConf)
	end
'target_name'/1 =
    %% Line 853
    fun (_cor0) ->
	%% Line 854
	call 'erlang':'atom_to_list'
	    (_cor0)
'while_ok'/2 =
    %% Line 856
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Fun,[H|T]> when 'true' ->
	      %% Line 857
	      case apply Fun
		       (H) of
		%% Line 858
		<'ok'> when 'true' ->
		    apply 'while_ok'/2
			(Fun, T)
		%% Line 859
		<Error> when 'true' ->
		    Error
	      end
	  %% Line 861
	  <_X_Fun,[]> when 'true' ->
	      %% Line 862
	      'ok'
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'while_ok',2}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('ct_snmp')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('ct_snmp', _cor0)
end