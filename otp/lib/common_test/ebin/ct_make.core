module 'ct_make' ['all'/0,
		  'all'/1,
		  'files'/1,
		  'files'/2,
		  'module_info'/0,
		  'module_info'/1]
    attributes [%% Line 24
		'type' =
		    %% Line 24
		    [{{'record','file_info'},[{'typed_record_field',{'record_field',25,{'atom',25,'size'}},{'type',25,'union',[{'atom',25,'undefined'}|[{'type',25,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',26,{'atom',26,'type'}},{'type',26,'union',[{'atom',26,'undefined'}|[{'atom',26,'device'}|[{'atom',26,'directory'}|[{'atom',26,'other'}|[{'atom',26,'regular'}|[{'atom',26,'symlink'}]]]]]]}}|[{'typed_record_field',{'record_field',27,{'atom',27,'access'}},{'type',27,'union',[{'atom',27,'undefined'}|[{'atom',27,'read'}|[{'atom',27,'write'}|[{'atom',27,'read_write'}|[{'atom',27,'none'}]]]]]}}|[{'typed_record_field',{'record_field',28,{'atom',28,'atime'}},{'type',28,'union',[{'atom',28,'undefined'}|[{'remote_type',28,[{'atom',28,'file'}|[{'atom',28,'date_time'}|[[]]]]}|[{'type',28,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',32,{'atom',32,'mtime'}},{'type',32,'union',[{'atom',32,'undefined'}|[{'remote_type',32,[{'atom',32,'file'}|[{'atom',32,'date_time'}|[[]]]]}|[{'type',32,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',34,{'atom',34,'ctime'}},{'type',34,'union',[{'atom',34,'undefined'}|[{'remote_type',34,[{'atom',34,'file'}|[{'atom',34,'date_time'}|[[]]]]}|[{'type',34,'non_neg_integer',[]}]]]}}|[{'typed_record_field',{'record_field',40,{'atom',40,'mode'}},{'type',40,'union',[{'atom',40,'undefined'}|[{'type',40,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',43,{'atom',43,'links'}},{'type',43,'union',[{'atom',43,'undefined'}|[{'type',43,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',46,{'atom',46,'major_device'}},{'type',46,'union',[{'atom',46,'undefined'}|[{'type',46,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',52,{'atom',52,'minor_device'}},{'type',52,'union',[{'atom',52,'undefined'}|[{'type',52,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',53,{'atom',53,'inode'}},{'type',53,'union',[{'atom',53,'undefined'}|[{'type',53,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',54,{'atom',54,'uid'}},{'type',54,'union',[{'atom',54,'undefined'}|[{'type',54,'non_neg_integer',[]}]]}}|[{'typed_record_field',{'record_field',55,{'atom',55,'gid'}},{'type',55,'union',[{'atom',55,'undefined'}|[{'type',55,'non_neg_integer',[]}]]}}]]]]]]]]]]]]],[]}],
		%% Line 58
		'type' =
		    %% Line 58
		    [{{'record','file_descriptor'},[{'typed_record_field',{'record_field',59,{'atom',59,'module'}},{'type',59,'union',[{'atom',59,'undefined'}|[{'type',59,'module',[]}]]}}|[{'typed_record_field',{'record_field',60,{'atom',60,'data'}},{'type',60,'union',[{'atom',60,'undefined'}|[{'type',60,'term',[]}]]}}]],[]}]]
'all'/0 =
    %% Line 37
    fun () ->
	%% Line 38
	apply 'all'/1
	    ([])
'all'/1 =
    %% Line 40
    fun (_cor0) ->
	%% Line 41
	case apply 'sort_options'/3
		 (_cor0, [], []) of
	  <{MakeOpts,CompileOpts}> when 'true' ->
	      %% Line 42
	      case apply 'read_emakefile'/2
		       ('Emakefile', CompileOpts) of
		%% Line 43
		<Files>
		    when call 'erlang':'is_list'
			  (Files) ->
		    %% Line 44
		    apply 'do_make_files'/2
			(Files, MakeOpts)
		%% Line 45
		<'error'> when 'true' ->
		    %% Line 46
		    {'error',[]}
		( <_cor2> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor2})
		  -| ['compiler_generated'] )
	      end
	  ( <_cor1> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor1})
	    -| ['compiler_generated'] )
	end
'files'/1 =
    %% Line 49
    fun (_cor0) ->
	%% Line 50
	apply 'files'/2
	    (_cor0, [])
'files'/2 =
    %% Line 52
    fun (_cor1,_cor0) ->
	let <_cor7> =
	    %% Line 53
	    ( letrec
		  'lc$^0'/1 =
		      fun (_cor4) ->
			  case _cor4 of
			    <[F|_cor3]> when 'true' ->
				let <_cor5> =
				    call 'filename':'rootname'
					(F, [46|[101|[114|[108]]]])
				in  let <_cor6> =
					apply 'lc$^0'/1
					    (_cor3)
				    in  ( [_cor5|_cor6]
					  -| ['compiler_generated'] )
			    <[]> when 'true' ->
				[]
			    ( <_cor4> when 'true' ->
				  ( primop 'match_fail'
					({'function_clause',_cor4})
				    -| [{'function_name',{'lc$^0',1}}] )
			      -| ['compiler_generated'] )
			  end
	      in  apply 'lc$^0'/1
		      (_cor1)
	      -| ['list_comprehension'] )
	in  %% Line 54
	    case apply 'sort_options'/3
		     (_cor0, [], []) of
	      <{MakeOpts,CompileOpts}> when 'true' ->
		  %% Line 55
		  case apply 'get_opts_from_emakefile'/3
			   (_cor7, 'Emakefile', CompileOpts) of
		    %% Line 56
		    <Files>
			when call 'erlang':'is_list'
			      (Files) ->
			%% Line 57
			apply 'do_make_files'/2
			    (Files, MakeOpts)
		    %% Line 58
		    <'error'> when 'true' ->
			%% Line 59
			{'error',[]}
		    ( <_cor10> when 'true' ->
			  primop 'match_fail'
			      ({'case_clause',_cor10})
		      -| ['compiler_generated'] )
		  end
	      ( <_cor9> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor9})
		-| ['compiler_generated'] )
	    end
'do_make_files'/2 =
    %% Line 62
    fun (_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 63
	    call 'lists':'member'
		('noexec', _cor0)
	in  let <_cor2> =
		%% Line 63
		apply 'load_opt'/1
		    (_cor0)
	    in  %% Line 63
		apply 'process'/4
		    (_cor1, _cor3, _cor2, [])
'sort_options'/3 =
    %% Line 66
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[H|T],Make,Comp> when 'true' ->
	      %% Line 67
	      case call 'lists':'member'
		       (H, ['noexec'|['load'|['netload'|['noload']]]]) of
		%% Line 68
		<'true'> when 'true' ->
		    %% Line 69
		    apply 'sort_options'/3
			(T, [H|Make], Comp)
		%% Line 70
		<'false'> when 'true' ->
		    %% Line 71
		    apply 'sort_options'/3
			(T, Make, [H|Comp])
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor3})
		  -| ['compiler_generated'] )
	      end
	  %% Line 73
	  <[],Make,Comp> when 'true' ->
	      let <_cor4> =
		  %% Line 74
		  call 'lists':'reverse'
		      (Comp)
	      in  %% Line 74
		  {Make,_cor4}
	  ( <_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5})
		  -| [{'function_name',{'sort_options',3}}] )
	    -| ['compiler_generated'] )
	end
'read_emakefile'/2 =
    %% Line 88
    fun (_cor1,_cor0) ->
	%% Line 89
	case call 'file':'consult'
		 (_cor1) of
	  %% Line 90
	  <{'ok',Emake}> when 'true' ->
	      %% Line 91
	      apply 'transform'/4
		  (Emake, _cor0, [], [])
	  %% Line 92
	  <{'error','enoent'}> when 'true' ->
	      let <_cor8> =
		  %% Line 95
		  ( letrec
			'lc$^0'/1 =
			    fun (_cor5) ->
				case _cor5 of
				  <[F|_cor3]> when 'true' ->
				      let <_cor6> =
					  call 'filename':'rootname'
					      (F)
				      in  let <_cor7> =
					      apply 'lc$^0'/1
						  (_cor3)
					  in  ( [_cor6|_cor7]
						-| ['compiler_generated'] )
				  <[]> when 'true' ->
				      []
				  ( <_cor5> when 'true' ->
					( primop 'match_fail'
					      ({'function_clause',_cor5})
					  -| [{'function_name',{'lc$^0',1}}] )
				    -| ['compiler_generated'] )
				end
		    in  let <_cor4> =
			    call 'filelib':'wildcard'
				([42|[46|[101|[114|[108]]]]])
			in  apply 'lc$^0'/1
				(_cor4)
		    -| ['list_comprehension'] )
	      in  %% Line 96
		  [{_cor8,_cor0}|[]]
	  %% Line 97
	  <{'error',Other}> when 'true' ->
	      do  %% Line 98
		  call 'io':'format'
		      ([109|[97|[107|[101|[58|[32|[84|[114|[111|[117|[98|[108|[101|[32|[114|[101|[97|[100|[105|[110|[103|[32|[39|[69|[109|[97|[107|[101|[102|[105|[108|[101|[39|[58|[126|[110|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Other|[]])
		  %% Line 99
		  'error'
	  ( <_cor10> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor10})
	    -| ['compiler_generated'] )
	end
'transform'/4 =
    %% Line 102
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[{Mod,ModOpts}|Emake],Opts,Files,Already> when 'true' ->
	      %% Line 103
	      case apply 'expand'/2
		       (Mod, Already) of
		%% Line 104
		<[]> when 'true' ->
		    %% Line 105
		    apply 'transform'/4
			(Emake, Opts, Files, Already)
		%% Line 106
		<Mods> when 'true' ->
		    let <_cor5> =
			%% Line 107
			call 'erlang':'++'
			    (ModOpts, Opts)
		    in  let <_cor4> =
			    %% Line 107
			    call 'erlang':'++'
				(Mods, Already)
			in  %% Line 107
			    apply 'transform'/4
				(Emake, Opts, [{Mods,_cor5}|Files], _cor4)
	      end
	  %% Line 109
	  <[Mod|Emake],Opts,Files,Already> when 'true' ->
	      %% Line 110
	      case apply 'expand'/2
		       (Mod, Already) of
		%% Line 111
		<[]> when 'true' ->
		    %% Line 112
		    apply 'transform'/4
			(Emake, Opts, Files, Already)
		%% Line 113
		<Mods> when 'true' ->
		    let <_cor7> =
			%% Line 114
			call 'erlang':'++'
			    (Mods, Already)
		    in  %% Line 114
			apply 'transform'/4
			    (Emake, Opts, [{Mods,Opts}|Files], _cor7)
	      end
	  %% Line 116
	  <[],_X_Opts,Files,_X_Already> when 'true' ->
	      %% Line 117
	      call 'lists':'reverse'
		  (Files)
	  ( <_cor12,_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11,_cor10,_cor9})
		  -| [{'function_name',{'transform',4}}] )
	    -| ['compiler_generated'] )
	end
'expand'/2 =
    %% Line 119
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Mod,Already>
	      when call 'erlang':'is_atom'
		    (Mod) ->
	      let <_cor2> =
		  %% Line 120
		  call 'erlang':'atom_to_list'
		      (Mod)
	      in  %% Line 120
		  apply 'expand'/2
		      (_cor2, Already)
	  %% Line 121
	  <Mods,Already>
	      when try
		    let <_cor3> =
			call 'erlang':'is_list'
			    (Mods)
		    in  let <_cor4> =
			    call 'erlang':'hd'
				(Mods)
			in  let <_cor5> =
				call 'erlang':'is_integer'
				    (_cor4)
			    in  let <_cor6> =
				    call 'erlang':'not'
					(_cor5)
				in  call 'erlang':'and'
					(_cor3, _cor6)
		of <Try> ->
		    Try
		catch <T,R> ->
		    'false' ->
	      let <_cor12> =
		  %% Line 122
		  ( letrec
			'lc$^0'/1 =
			    fun (_cor9) ->
				case _cor9 of
				  <[Mod|_cor8]> when 'true' ->
				      let <_cor10> =
					  apply 'expand'/2
					      (Mod, Already)
				      in  let <_cor11> =
					      apply 'lc$^0'/1
						  (_cor8)
					  in  ( [_cor10|_cor11]
						-| ['compiler_generated'] )
				  <[]> when 'true' ->
				      []
				  ( <_cor9> when 'true' ->
					( primop 'match_fail'
					      ({'function_clause',_cor9})
					  -| [{'function_name',{'lc$^0',1}}] )
				    -| ['compiler_generated'] )
				end
		    in  apply 'lc$^0'/1
			    (Mods)
		    -| ['list_comprehension'] )
	      in  %% Line 122
		  call 'lists':'concat'
		      (_cor12)
	  %% Line 123
	  <Mod,Already> when 'true' ->
	      %% Line 124
	      case call 'lists':'member'
		       (42, Mod) of
		%% Line 125
		<'true'> when 'true' ->
		    let <Fun> =
			%% Line 126
			( fun (_cor16,_cor15) ->
			      let <M> =
				  %% Line 127
				  call 'filename':'rootname'
				      (_cor16)
			      in  %% Line 128
				  case call 'lists':'member'
					   (M, Already) of
				    %% Line 129
				    <'true'> when 'true' ->
					_cor15
				    %% Line 130
				    <'false'> when 'true' ->
					[M|_cor15]
				    ( <_cor14> when 'true' ->
					  primop 'match_fail'
					      ({'case_clause',_cor14})
				      -| ['compiler_generated'] )
				  end
			  -| [{'id',{0,0,'-expand/2-fun-0-'}}] )
		    in  let <_cor20> =
			    %% Line 133
			    call 'erlang':'++'
				(Mod, [46|[101|[114|[108]]]])
			in  let <_cor21> =
				%% Line 133
				call 'filelib':'wildcard'
				    (_cor20)
			    in  %% Line 133
				call 'lists':'foldl'
				    (Fun, [], _cor21)
		%% Line 134
		<'false'> when 'true' ->
		    let <Mod2> =
			%% Line 135
			call 'filename':'rootname'
			    (Mod, [46|[101|[114|[108]]]])
		    in  %% Line 136
			case call 'lists':'member'
				 (Mod2, Already) of
			  %% Line 137
			  <'true'> when 'true' ->
			      []
			  %% Line 138
			  <'false'> when 'true' ->
			      [Mod2|[]]
			  ( <_cor23> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor23})
			    -| ['compiler_generated'] )
			end
		( <_cor24> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor24})
		  -| ['compiler_generated'] )
	      end
	end
'get_opts_from_emakefile'/3 =
    %% Line 144
    fun (_cor2,_cor1,_cor0) ->
	%% Line 145
	case call 'file':'consult'
		 (_cor1) of
	  %% Line 146
	  <{'ok',Emake}> when 'true' ->
	      let <Modsandopts> =
		  %% Line 147
		  apply 'transform'/4
		      (Emake, _cor0, [], [])
	      in  let <_cor9> =
		      %% Line 148
		      ( letrec
			    'lc$^0'/1 =
				fun (_cor6) ->
				    case _cor6 of
				      <[M|_cor5]> when 'true' ->
					  let <_cor7> =
					      apply 'coerce_2_list'/1
						  (M)
					  in  let <_cor8> =
						  apply 'lc$^0'/1
						      (_cor5)
					      in  ( [_cor7|_cor8]
						    -| ['compiler_generated'] )
				      <[]> when 'true' ->
					  []
				      ( <_cor6> when 'true' ->
					    ( primop 'match_fail'
						  ({'function_clause',_cor6})
					      -| [{'function_name',{'lc$^0',1}}] )
					-| ['compiler_generated'] )
				    end
			in  apply 'lc$^0'/1
				(_cor2)
			-| ['list_comprehension'] )
		  in  %% Line 149
		      apply 'get_opts_from_emakefile2'/4
			  (Modsandopts, _cor9, _cor0, [])
	  %% Line 150
	  <{'error','enoent'}> when 'true' ->
	      %% Line 151
	      [{_cor2,_cor0}|[]]
	  %% Line 152
	  <{'error',Other}> when 'true' ->
	      do  %% Line 153
		  call 'io':'format'
		      ([109|[97|[107|[101|[58|[32|[84|[114|[111|[117|[98|[108|[101|[32|[114|[101|[97|[100|[105|[110|[103|[32|[39|[69|[109|[97|[107|[101|[102|[105|[108|[101|[39|[58|[126|[110|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [Other|[]])
		  %% Line 154
		  'error'
	  ( <_cor11> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor11})
	    -| ['compiler_generated'] )
	end
'get_opts_from_emakefile2'/4 =
    %% Line 157
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[{MakefileMods,O}|Rest],Mods,Opts,Result> when 'true' ->
	      %% Line 158
	      case apply 'members'/4
		       (Mods, MakefileMods, [], Mods) of
		%% Line 159
		<{[],_cor9}> when 'true' ->
		    %% Line 160
		    apply 'get_opts_from_emakefile2'/4
			(Rest, Mods, Opts, Result)
		%% Line 161
		<{I,RestOfMods}> when 'true' ->
		    %% Line 162
		    apply 'get_opts_from_emakefile2'/4
			(Rest, RestOfMods, Opts, [{I,O}|Result])
		( <_cor4> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor4})
		  -| ['compiler_generated'] )
	      end
	  %% Line 164
	  <[],[],_X_Opts,Result> when 'true' ->
	      %% Line 165
	      Result
	  %% Line 166
	  <[],RestOfMods,Opts,Result> when 'true' ->
	      %% Line 167
	      [{RestOfMods,Opts}|Result]
	  ( <_cor8,_cor7,_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6,_cor5})
		  -| [{'function_name',{'get_opts_from_emakefile2',4}}] )
	    -| ['compiler_generated'] )
	end
'members'/4 =
    %% Line 169
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[H|T],MakefileMods,I,Rest> when 'true' ->
	      %% Line 170
	      case call 'lists':'member'
		       (H, MakefileMods) of
		%% Line 171
		<'true'> when 'true' ->
		    let <_cor4> =
			%% Line 172
			call 'lists':'delete'
			    (H, Rest)
		    in  %% Line 172
			apply 'members'/4
			    (T, MakefileMods, [H|I], _cor4)
		%% Line 173
		<'false'> when 'true' ->
		    %% Line 174
		    apply 'members'/4
			(T, MakefileMods, I, Rest)
		( <_cor5> when 'true' ->
		      primop 'match_fail'
			  ({'case_clause',_cor5})
		  -| ['compiler_generated'] )
	      end
	  %% Line 176
	  <[],_X_MakefileMods,I,Rest> when 'true' ->
	      %% Line 177
	      {I,Rest}
	  ( <_cor9,_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor9,_cor8,_cor7,_cor6})
		  -| [{'function_name',{'members',4}}] )
	    -| ['compiler_generated'] )
	end
'load_opt'/1 =
    %% Line 185
    fun (_cor0) ->
	%% Line 186
	case call 'lists':'member'
		 ('netload', _cor0) of
	  %% Line 187
	  <'true'> when 'true' ->
	      %% Line 188
	      'netload'
	  %% Line 189
	  <'false'> when 'true' ->
	      %% Line 190
	      case call 'lists':'member'
		       ('load', _cor0) of
		%% Line 191
		<'true'> when 'true' ->
		    %% Line 192
		    'load'
		%% Line 193
		<_cor4> when 'true' ->
		    %% Line 194
		    'noload'
	      end
	  ( <_cor2> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor2})
	    -| ['compiler_generated'] )
	end
'process'/4 =
    %% Line 199
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[{[],_X_Opts}|Rest],NoExec,Load,Result> when 'true' ->
	      %% Line 200
	      apply 'process'/4
		  (Rest, NoExec, Load, Result)
	  %% Line 201
	  <[{[H|T],Opts}|Rest],NoExec,Load,Result> when 'true' ->
	      let <_cor4> =
		  %% Line 202
		  apply 'coerce_2_list'/1
		      (H)
	      in  %% Line 202
		  case apply 'recompilep'/4
			   (_cor4, NoExec, Load, Opts) of
		    %% Line 203
		    <'error'> when 'true' ->
			%% Line 204
			apply 'process'/4
			    ([{T,Opts}|Rest], NoExec, Load, [{H,'error'}|Result])
		    %% Line 205
		    <Info> when 'true' ->
			%% Line 206
			apply 'process'/4
			    ([{T,Opts}|Rest], NoExec, Load, [{H,Info}|Result])
		  end
	  %% Line 208
	  <[],NoExec,_X_Load,Result> when 'true' ->
	      %% Line 209
	      case <> of
		<>
		    when let <_cor6> =
			  call 'erlang':'=:='
			      (NoExec, 'false')
		      in  let <_cor7> =
			      call 'erlang':'is_boolean'
				  (NoExec)
			  in  call 'erlang':'and'
				  (_cor6, _cor7) ->
		    %% Line 210
		    case call 'lists':'keysearch'
			     ('error', 2, Result) of
		      %% Line 211
		      <{'value',_cor13}> when 'true' ->
			  %% Line 212
			  {'error',Result}
		      %% Line 213
		      <'false'> when 'true' ->
			  %% Line 214
			  {'up_to_date',Result}
		      ( <_cor8> when 'true' ->
			    primop 'match_fail'
				({'case_clause',_cor8})
			-| ['compiler_generated'] )
		    end
		%% Line 216
		<> when 'true' ->
		    %% Line 217
		    Result
	      end
	  ( <_cor12,_cor11,_cor10,_cor9> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12,_cor11,_cor10,_cor9})
		  -| [{'function_name',{'process',4}}] )
	    -| ['compiler_generated'] )
	end
'recompilep'/4 =
    %% Line 220
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <_cor5> =
	    %% Line 221
	    call 'filename':'basename'
		(_cor3)
	in  let <_cor4> =
		%% Line 222
		call 'code':'objfile_extension'
		    ()
	    in  let <ObjName> =
		    %% Line 221
		    call 'lists':'append'
			(_cor5, _cor4)
		in  let <_cor9> =
			%% Line 223
			case call 'lists':'keysearch'
				 ('outdir', 1, _cor0) of
			  %% Line 224
			  <{'value',{'outdir',OutDir}}> when 'true' ->
			      let <_cor7> =
				  %% Line 225
				  apply 'coerce_2_list'/1
				      (OutDir)
			      in  %% Line 225
				  call 'filename':'join'
				      (_cor7, ObjName)
			  %% Line 226
			  <'false'> when 'true' ->
			      %% Line 227
			      ObjName
			  ( <_cor8> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor8})
			    -| ['compiler_generated'] )
			end
		    in  %% Line 229
			case apply 'exists'/1
				 (_cor9) of
			  %% Line 230
			  <'true'> when 'true' ->
			      %% Line 231
			      apply 'recompilep1'/5
				  (_cor3, _cor2, _cor1, _cor0, _cor9)
			  %% Line 232
			  <'false'> when 'true' ->
			      %% Line 233
			      apply 'recompile'/4
				  (_cor3, _cor2, _cor1, _cor0)
			  ( <_cor11> when 'true' ->
				primop 'match_fail'
				    ({'case_clause',_cor11})
			    -| ['compiler_generated'] )
			end
'recompilep1'/5 =
    %% Line 236
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <_cor5> =
	    %% Line 237
	    call 'lists':'append'
		(_cor4, [46|[101|[114|[108]]]])
	in  %% Line 237
	    case call 'file':'read_file_info'
		     (_cor5) of
	      <{'ok',Erl}> when 'true' ->
		  %% Line 238
		  case call 'file':'read_file_info'
			   (_cor0) of
		    <{'ok',Obj}> when 'true' ->
			let <_cor9> =
			    %% Line 239
			    apply 'readable'/1
				(Erl)
			in  let <_cor8> =
				%% Line 239
				apply 'writable'/1
				    (Obj)
			    in  %% Line 239
				case <_cor9,_cor8> of
				  %% Line 240
				  <'true','true'> when 'true' ->
				      %% Line 241
				      apply 'recompilep1'/6
					  (Erl, Obj, _cor4, _cor3, _cor2, _cor1)
				  %% Line 242
				  <_fol18,_fol19> when 'true' ->
				      %% Line 243
				      'error'
				end
		    ( <_cor7> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor7})
		      -| ['compiler_generated'] )
		  end
	      ( <_cor6> when 'true' ->
		    primop 'match_fail'
			({'badmatch',_cor6})
		-| ['compiler_generated'] )
	    end
'recompilep1'/6 =
    %% Line 246
    fun (_cor5,_cor4,_cor3,_cor2,_cor1,_cor0) ->
	case <_cor5,_cor4,_cor3,_cor2,_cor1,_cor0> of
	  <{'file_info',_cor12,_cor13,_cor14,_cor15,Te,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23},%% Line 247
														{'file_info',_cor24,_cor25,_cor26,_cor27,To,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35},%% Line 247
																										     File,%% Line 247
																											  NoExec,%% Line 247
																												 Load,%% Line 247
																												      Opts>
	      when %% Line 247
		call 'erlang':'>'
		    (Te,
		     To) ->
	      %% Line 248
	      apply 'recompile'/4
		  (File, NoExec, Load, Opts)
	  %% Line 249
	  <_X_Erl,{'file_info',_cor36,_cor37,_cor38,_cor39,To,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47},File,NoExec,Load,Opts> when 'true' ->
	      %% Line 250
	      apply 'recompile2'/5
		  (To, File, NoExec, Load, Opts)
	  ( <_cor11,_cor10,_cor9,_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9,_cor8,_cor7,_cor6})
		  -| [{'function_name',{'recompilep1',6}}] )
	    -| ['compiler_generated'] )
	end
'recompile2'/5 =
    %% Line 254
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	let <IncludePath> =
	    %% Line 255
	    apply 'include_opt'/1
		(_cor0)
	in  let <_cor6> =
		%% Line 256
		call 'lists':'append'
		    (_cor3, [46|[101|[114|[108]]]])
	    in  %% Line 256
		case apply 'check_includes'/3
			 (_cor6, IncludePath, _cor4) of
		  %% Line 257
		  <'true'> when 'true' ->
		      %% Line 258
		      apply 'recompile'/4
			  (_cor3, _cor2, _cor1, _cor0)
		  %% Line 259
		  <'false'> when 'true' ->
		      %% Line 260
		      'up_to_date'
		  ( <_cor7> when 'true' ->
			primop 'match_fail'
			    ({'case_clause',_cor7})
		    -| ['compiler_generated'] )
		end
'include_opt'/1 =
    %% Line 263
    fun (_cor0) ->
	case _cor0 of
	  <[{'i',Path}|Rest]> when 'true' ->
	      let <_cor1> =
		  %% Line 264
		  apply 'include_opt'/1
		      (Rest)
	      in  %% Line 264
		  [Path|_cor1]
	  %% Line 265
	  <[_X_First|Rest]> when 'true' ->
	      %% Line 266
	      apply 'include_opt'/1
		  (Rest)
	  %% Line 267
	  <[]> when 'true' ->
	      %% Line 268
	      []
	  ( <_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor2})
		  -| [{'function_name',{'include_opt',1}}] )
	    -| ['compiler_generated'] )
	end
'recompile'/4 =
    %% Line 274
    fun (_cor3,_cor2,_cor1,_cor0) ->
	%% Line 275
	case apply 'do_recompile'/4
		 (_cor3, _cor2, _cor1, _cor0) of
	  %% Line 276
	  <{'ok',_cor9}> when 'true' ->
	      'ok'
	  %% Line 277
	  <Other> when 'true' ->
	      Other
	end
'do_recompile'/4 =
    %% Line 280
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <_X_File,'true',_X_Load,_X_Opts> when 'true' ->
	      %% Line 281
	      'out_of_date'
	  %% Line 282
	  <File,'false','noload',Opts> when 'true' ->
	      do  %% Line 283
		  call 'io':'format'
		      ([82|[101|[99|[111|[109|[112|[105|[108|[101|[58|[32|[126|[116|[115|[10]]]]]]]]]]]]]]], [File|[]])
		  %% Line 284
		  call 'compile':'file'
		      (File, ['report_errors'|['report_warnings'|['error_summary'|Opts]]])
	  %% Line 285
	  <File,'false','load',Opts> when 'true' ->
	      do  %% Line 286
		  call 'io':'format'
		      ([82|[101|[99|[111|[109|[112|[105|[108|[101|[58|[32|[126|[116|[115|[10]]]]]]]]]]]]]]], [File|[]])
		  %% Line 287
		  call 'c':'c'
		      (File, Opts)
	  %% Line 288
	  <File,'false','netload',Opts> when 'true' ->
	      do  %% Line 289
		  call 'io':'format'
		      ([82|[101|[99|[111|[109|[112|[105|[108|[101|[58|[32|[126|[116|[115|[10]]]]]]]]]]]]]]], [File|[]])
		  %% Line 290
		  call 'c':'nc'
		      (File, Opts)
	  ( <_cor7,_cor6,_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor7,_cor6,_cor5,_cor4})
		  -| [{'function_name',{'do_recompile',4}}] )
	    -| ['compiler_generated'] )
	end
'exists'/1 =
    %% Line 292
    fun (_cor0) ->
	%% Line 293
	case call 'file':'read_file_info'
		 (_cor0) of
	  %% Line 294
	  <{'ok',_cor3}> when 'true' ->
	      %% Line 295
	      'true'
	  %% Line 296
	  <_cor4> when 'true' ->
	      %% Line 297
	      'false'
	end
'readable'/1 =
    %% Line 300
    fun (_cor0) ->
	case _cor0 of
	  <{'file_info',_cor2,_cor3,'read_write',_cor4,_cor5,_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13}> when 'true' ->
	      'true'
	  %% Line 301
	  <{'file_info',_cor14,_cor15,'read',_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25}> when 'true' ->
	      'true'
	  %% Line 302
	  <_cor26> when 'true' ->
	      'false'
	end
'writable'/1 =
    %% Line 304
    fun (_cor0) ->
	case _cor0 of
	  <{'file_info',_cor2,_cor3,'read_write',_cor4,_cor5,_cor6,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12,_cor13}> when 'true' ->
	      'true'
	  %% Line 305
	  <{'file_info',_cor14,_cor15,'write',_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25}> when 'true' ->
	      'true'
	  %% Line 306
	  <_cor26> when 'true' ->
	      'false'
	end
'coerce_2_list'/1 =
    %% Line 308
    fun (_cor0) ->
	case _cor0 of
	  <X>
	      when call 'erlang':'is_atom'
		    (_cor0) ->
	      %% Line 309
	      call 'erlang':'atom_to_list'
		  (X)
	  %% Line 310
	  <X> when 'true' ->
	      %% Line 311
	      X
	end
'check_includes'/3 =
    %% Line 316
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 317
	    call 'filename':'dirname'
		(_cor2)
	in  let <Path> =
		%% Line 317
		[_cor3|_cor1]
	    in  %% Line 318
		case call 'epp':'open'
			 (_cor2, Path, []) of
		  %% Line 319
		  <{'ok',Epp}> when 'true' ->
		      %% Line 320
		      apply 'check_includes2'/3
			  (Epp, _cor2, _cor0)
		  %% Line 321
		  <_X_Error> when 'true' ->
		      %% Line 322
		      'false'
		end
'check_includes2'/3 =
    %% Line 325
    fun (_cor2,_cor1,_cor0) ->
	%% Line 326
	case call 'epp':'parse_erl_form'
		 (_cor2) of
	  %% Line 327
	  <{'ok',{'attribute',1,'file',{_cor8,1}}}>
	      when call 'erlang':'=:='
		    (_cor8,
		     _cor1) ->
	      %% Line 328
	      apply 'check_includes2'/3
		  (_cor2, _cor1, _cor0)
	  %% Line 329
	  <{'ok',{'attribute',1,'file',{IncFile,1}}}> when 'true' ->
	      %% Line 330
	      case call 'file':'read_file_info'
		       (IncFile) of
		%% Line 331
		<{'ok',{'file_info',_cor9,_cor10,_cor11,_cor12,MTime,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20}}>
		    when call 'erlang':'>'
			  (MTime,
			   _cor0) ->
		    do  %% Line 332
			call 'epp':'close'
			    (_cor2)
			%% Line 333
			'true'
		%% Line 334
		<_cor21> when 'true' ->
		    %% Line 335
		    apply 'check_includes2'/3
			(_cor2, _cor1, _cor0)
	      end
	  %% Line 337
	  <{'ok',_cor22}> when 'true' ->
	      %% Line 338
	      apply 'check_includes2'/3
		  (_cor2, _cor1, _cor0)
	  %% Line 339
	  <{'eof',_cor23}> when 'true' ->
	      do  %% Line 340
		  call 'epp':'close'
		      (_cor2)
		  %% Line 341
		  'false'
	  %% Line 342
	  <{'error',_X_Error}> when 'true' ->
	      %% Line 343
	      apply 'check_includes2'/3
		  (_cor2, _cor1, _cor0)
	  ( <_cor4> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor4})
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('ct_make')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('ct_make', _cor0)
end