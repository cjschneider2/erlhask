module 'vts' ['add_config_file'/2,
	      'add_test_dir'/2,
	      'browse_config_file'/2,
	      'config_data'/0,
	      'config_frame'/2,
	      'init_data'/5,
	      'menu_frame'/2,
	      'module_info'/0,
	      'module_info'/1,
	      'no_result_log_frame'/2,
	      'redirect_to_result_log_frame'/2,
	      'remove_config_file'/2,
	      'remove_test_dir'/2,
	      'report'/2,
	      'result_frameset'/2,
	      'result_summary_frame'/2,
	      'run_frame'/2,
	      'run_test'/2,
	      'select_case'/2,
	      'select_suite'/2,
	      'start'/0,
	      'start_link'/0,
	      'start_page'/2,
	      'stop'/0,
	      'test_info'/3,
	      'title_frame'/2,
	      'welcome_frame'/2]
    attributes []
'start'/0 =
    %% Line 65
    fun () ->
	do  %% Line 66
	    call 'webtool':'start'
		()
	    %% Line 67
	    call 'webtool':'start_tools'
		([], [97|[112|[112|[61|[118|[116|[115]]]]]]])
'init_data'/5 =
    %% Line 69
    fun (_cor4,_cor3,_cor2,_cor1,_cor0) ->
	%% Line 70
	apply 'call'/1
	    ({'init_data',_cor4,_cor3,_cor2,_cor1,_cor0})
'stop'/0 =
    %% Line 72
    fun () ->
	do  %% Line 73
	    call 'webtool':'stop_tools'
		([], [97|[112|[112|[61|[118|[116|[115]]]]]]])
	    %% Line 74
	    call 'webtool':'stop'
		()
'report'/2 =
    %% Line 76
    fun (_cor1,_cor0) ->
	%% Line 77
	apply 'call'/1
	    ({'report',_cor1,_cor0})
'config_data'/0 =
    %% Line 81
    fun () ->
	let <_cor0> =
	    %% Line 83
	    call 'init':'get_arguments'
		()
	in  let <_cor3> =
		%% Line 83
		case call 'lists':'keysearch'
			 ('logdir', 1, _cor0) of
		  %% Line 84
		  <{'value',{'logdir',[LogD|[]]}}> when 'true' ->
		      let <_cor1> =
			  call 'filename':'absname'
			      (LogD)
		      in  {'ok',_cor1}
		  %% Line 85
		  <'false'> when 'true' ->
		      call 'file':'get_cwd'
			  ()
		  ( <_cor2> when 'true' ->
			primop 'match_fail'
			    ({'case_clause',_cor2})
		    -| ['compiler_generated'] )
		end
	    in  %% Line 82
		case _cor3 of
		  <{'ok',LogDir}> when 'true' ->
		      %% Line 87
		      {'vts',%% Line 88
			     [{'web_data',{[86|[105|[115|[117|[97|[108|[84|[101|[115|[116|[83|[101|[114|[118|[101|[114]]]]]]]]]]]]]]]],[47|[118|[116|[115|[95|[101|[114|[108|[47|[118|[116|[115|[47|[115|[116|[97|[114|[116|[95|[112|[97|[103|[101]]]]]]]]]]]]]]]]]]]]]]]}}|%% Line 89
																																	    [{'alias',{'erl_alias',[47|[118|[116|[115|[95|[101|[114|[108]]]]]]]],['vts']}}|%% Line 90
																																											   [{'alias',{[47|[108|[111|[103|[95|[100|[105|[114]]]]]]]],LogDir}}|%% Line 91
																																																			     [{'start',{'child',{{'local','vts'},{'vts','start_link',[]},'permanent',100,'worker',['vts']}}}]]]]}
		  ( <_cor4> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_cor4})
		    -| ['compiler_generated'] )
		end
'start_link'/0 =
    %% Line 96
    fun () ->
	%% Line 97
	case call 'erlang':'whereis'
		 ('vts') of
	  %% Line 98
	  <'undefined'> when 'true' ->
	      let <Self> =
		  %% Line 99
		  call 'erlang':'self'
		      ()
	      in  let <_cor1> =
		      %% Line 100
		      ( fun () ->
			    apply 'init'/1
				(Self)
			-| [{'id',{0,0,'-start_link/0-fun-0-'}}] )
		  in  let <Pid> =
			  %% Line 100
			  call 'erlang':'spawn_link'
			      (_cor1)
		      in  let <MRef> =
			      %% Line 101
			      call 'erlang':'monitor'
				  ('process', Pid)
			  in  %% Line 102
			      receive
				%% Line 103
				<{_cor5,'started'}>
				    when call 'erlang':'=:='
					  (_cor5,
					   Pid) ->
				    do  %% Line 104
					call 'erlang':'demonitor'
					    (MRef, ['flush'])
					%% Line 105
					{'ok',Pid}
				%% Line 106
				<{'DOWN',_cor6,'process',_cor7,Reason}>
				    when call 'erlang':'=:='
					  (_cor6,
					   MRef) ->
				    %% Line 107
				    {'error',{'vts','died',Reason}}
			      after 'infinity' ->
				'true'
	  %% Line 109
	  <Pid> when 'true' ->
	      %% Line 110
	      {'ok',Pid}
	end
'start_page'/2 =
    %% Line 113
    fun (_cor1,_cor0) ->
	%% Line 114
	apply 'call'/1
	    ('start_page')
'title_frame'/2 =
    %% Line 115
    fun (_cor1,_cor0) ->
	%% Line 116
	apply 'call'/1
	    ('title_frame')
'welcome_frame'/2 =
    %% Line 117
    fun (_cor1,_cor0) ->
	%% Line 118
	apply 'call'/1
	    ('welcome_frame')
'menu_frame'/2 =
    %% Line 119
    fun (_cor1,_cor0) ->
	%% Line 120
	apply 'call'/1
	    ('menu_frame')
'config_frame'/2 =
    %% Line 121
    fun (_cor1,_cor0) ->
	%% Line 122
	apply 'call'/1
	    ('config_frame')
'browse_config_file'/2 =
    %% Line 123
    fun (_cor1,_cor0) ->
	%% Line 124
	apply 'call'/1
	    ({'browse_config_file',_cor0})
'add_config_file'/2 =
    %% Line 125
    fun (_cor1,_cor0) ->
	%% Line 126
	apply 'call'/1
	    ({'add_config_file',_cor0})
'remove_config_file'/2 =
    %% Line 127
    fun (_cor1,_cor0) ->
	%% Line 128
	apply 'call'/1
	    ({'remove_config_file',_cor0})
'run_frame'/2 =
    %% Line 129
    fun (_cor1,_cor0) ->
	%% Line 130
	apply 'call'/1
	    ('run_frame')
'add_test_dir'/2 =
    %% Line 131
    fun (_cor1,_cor0) ->
	%% Line 132
	apply 'call'/1
	    ({'add_test_dir',_cor0})
'remove_test_dir'/2 =
    %% Line 133
    fun (_cor1,_cor0) ->
	%% Line 134
	apply 'call'/1
	    ({'remove_test_dir',_cor0})
'select_suite'/2 =
    %% Line 135
    fun (_cor1,_cor0) ->
	%% Line 136
	apply 'call'/1
	    ({'select_suite',_cor0})
'select_case'/2 =
    %% Line 137
    fun (_cor1,_cor0) ->
	%% Line 138
	apply 'call'/1
	    ({'select_case',_cor0})
'run_test'/2 =
    %% Line 139
    fun (_cor1,_cor0) ->
	%% Line 140
	apply 'call'/1
	    ('run_test')
'result_frameset'/2 =
    %% Line 141
    fun (_cor1,_cor0) ->
	%% Line 142
	apply 'call'/1
	    ('result_frameset')
'redirect_to_result_log_frame'/2 =
    %% Line 143
    fun (_cor1,_cor0) ->
	%% Line 144
	apply 'call'/1
	    ('redirect_to_result_log_frame')
'result_summary_frame'/2 =
    %% Line 145
    fun (_cor1,_cor0) ->
	%% Line 146
	apply 'call'/1
	    ('result_summary_frame')
'no_result_log_frame'/2 =
    %% Line 147
    fun (_cor1,_cor0) ->
	%% Line 148
	apply 'call'/1
	    ('no_result_log_frame')
'aborted'/0 =
    %% Line 150
    fun () ->
	%% Line 151
	apply 'call'/1
	    ('aborted')
'test_info'/3 =
    %% Line 153
    fun (_cor2,_cor1,_cor0) ->
	%% Line 154
	apply 'call'/1
	    ({'test_info',_cor1,_cor0})
'init'/1 =
    %% Line 156
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 157
	    call 'erlang':'self'
		()
	in  do  %% Line 157
		call 'erlang':'register'
		    ('vts', _cor1)
		do  %% Line 158
		    call 'erlang':'process_flag'
			('trap_exit', 'true')
		    let <_cor2> =
			%% Line 159
			call 'erlang':'self'
			    ()
		    in  do  %% Line 159
			    call 'erlang':'!'
				(_cor0, {_cor2,'started'})
			    %% Line 160
			    case call 'file':'get_cwd'
				     () of
			      <{'ok',Cwd}> when 'true' ->
				  let <InitState> =
				      %% Line 161
				      {'state',[],[],[],'undefined',0,'false',Cwd,'undefined',[],0,0,0,0,[]}
				  in  %% Line 162
				      apply 'loop'/1
					  (InitState)
			      ( <_cor3> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_cor3})
				-| ['compiler_generated'] )
			    end
'loop'/1 =
    %% Line 164
    fun (_cor0) ->
	%% Line 165
	receive
	  %% Line 166
	  <{{'init_data',Config,EvHandlers,LogDir,LogOpts,Tests},From}> when 'true' ->
	      %% Line 170
	      case _cor0 of
		<{'state',_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54}> when 'true' ->
		    let <_cor2> =
			call 'erlang':'setelement'
			    (10, _cor0, LogOpts)
		    in  let <_cor3> =
			    call 'erlang':'setelement'
				(9, _cor2, LogDir)
			in  let <_cor4> =
				call 'erlang':'setelement'
				    (4, _cor3, EvHandlers)
			    in  let <_cor5> =
				    call 'erlang':'setelement'
					(3, _cor4, Config)
				in  let <_cor7> =
					call 'erlang':'setelement'
					    (2, _cor5, Tests)
				    in  do  %% Line 171
					    apply 'ct_install'/1
						(_cor7)
					    do  %% Line 172
						apply 'return'/2
						    (From, 'ok')
						%% Line 173
						apply 'loop'/1
						    (_cor7)
		( <_cor55> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','state'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	  %% Line 174
	  <{'start_page',From}> when 'true' ->
	      let <_cor9> =
		  %% Line 175
		  apply 'start_page1'/0
		      ()
	      in  do  %% Line 175
		      apply 'return'/2
			  (From, _cor9)
		      %% Line 176
		      apply 'loop'/1
			  (_cor0)
	  %% Line 177
	  <{'title_frame',From}> when 'true' ->
	      let <_cor10> =
		  %% Line 178
		  apply 'title_frame1'/0
		      ()
	      in  do  %% Line 178
		      apply 'return'/2
			  (From, _cor10)
		      %% Line 179
		      apply 'loop'/1
			  (_cor0)
	  %% Line 180
	  <{'welcome_frame',From}> when 'true' ->
	      let <_cor11> =
		  %% Line 181
		  apply 'welcome_frame1'/0
		      ()
	      in  do  %% Line 181
		      apply 'return'/2
			  (From, _cor11)
		      %% Line 182
		      apply 'loop'/1
			  (_cor0)
	  %% Line 183
	  <{'menu_frame',From}> when 'true' ->
	      let <_cor12> =
		  %% Line 184
		  apply 'menu_frame1'/0
		      ()
	      in  do  %% Line 184
		      apply 'return'/2
			  (From, _cor12)
		      %% Line 185
		      apply 'loop'/1
			  (_cor0)
	  %% Line 186
	  <{'config_frame',From}> when 'true' ->
	      let <_cor13> =
		  %% Line 187
		  apply 'config_frame1'/1
		      (_cor0)
	      in  do  %% Line 187
		      apply 'return'/2
			  (From, _cor13)
		      %% Line 188
		      apply 'loop'/1
			  (_cor0)
	  %% Line 189
	  <{{'browse_config_file',_X_Input},From}> when 'true' ->
	      do  %% Line 190
		  apply 'return'/2
		      (From, 'ok')
		  %% Line 191
		  apply 'loop'/1
		      (_cor0)
	  %% Line 192
	  <{{'add_config_file',Input},From}> when 'true' ->
	      %% Line 193
	      case apply 'add_config_file1'/2
		       (Input, _cor0) of
		<{Return,State1}> when 'true' ->
		    do  %% Line 194
			apply 'ct_install'/1
			    (State1)
			do  %% Line 195
			    apply 'return'/2
				(From, Return)
			    %% Line 196
			    apply 'loop'/1
				(State1)
		( <_cor14> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor14})
		  -| ['compiler_generated'] )
	      end
	  %% Line 197
	  <{{'remove_config_file',Input},From}> when 'true' ->
	      %% Line 198
	      case apply 'remove_config_file1'/2
		       (Input, _cor0) of
		<{Return,State1}> when 'true' ->
		    do  %% Line 199
			apply 'ct_install'/1
			    (State1)
			do  %% Line 200
			    apply 'return'/2
				(From, Return)
			    %% Line 201
			    apply 'loop'/1
				(State1)
		( <_cor15> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor15})
		  -| ['compiler_generated'] )
	      end
	  %% Line 202
	  <{'run_frame',From}> when 'true' ->
	      let <_cor16> =
		  %% Line 203
		  apply 'run_frame1'/1
		      (_cor0)
	      in  do  %% Line 203
		      apply 'return'/2
			  (From, _cor16)
		      %% Line 204
		      apply 'loop'/1
			  (_cor0)
	  %% Line 205
	  <{{'add_test_dir',Input},From}> when 'true' ->
	      %% Line 206
	      case apply 'add_test_dir1'/2
		       (Input, _cor0) of
		<{Return,State1}> when 'true' ->
		    do  %% Line 207
			apply 'return'/2
			    (From, Return)
			%% Line 208
			apply 'loop'/1
			    (State1)
		( <_cor17> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor17})
		  -| ['compiler_generated'] )
	      end
	  %% Line 209
	  <{{'remove_test_dir',Input},From}> when 'true' ->
	      %% Line 210
	      case apply 'remove_test_dir1'/2
		       (Input, _cor0) of
		<{Return,State1}> when 'true' ->
		    do  %% Line 211
			apply 'return'/2
			    (From, Return)
			%% Line 212
			apply 'loop'/1
			    (State1)
		( <_cor18> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor18})
		  -| ['compiler_generated'] )
	      end
	  %% Line 213
	  <{{'select_suite',Input},From}> when 'true' ->
	      %% Line 214
	      case apply 'select_suite1'/2
		       (Input, _cor0) of
		<{Return,State1}> when 'true' ->
		    do  %% Line 215
			apply 'return'/2
			    (From, Return)
			%% Line 216
			apply 'loop'/1
			    (State1)
		( <_cor19> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor19})
		  -| ['compiler_generated'] )
	      end
	  %% Line 217
	  <{{'select_case',Input},From}> when 'true' ->
	      %% Line 218
	      case apply 'select_case1'/2
		       (Input, _cor0) of
		<{Return,State1}> when 'true' ->
		    do  %% Line 219
			apply 'return'/2
			    (From, Return)
			%% Line 220
			apply 'loop'/1
			    (State1)
		( <_cor20> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor20})
		  -| ['compiler_generated'] )
	      end
	  %% Line 221
	  <{'run_test',From}> when 'true' ->
	      let <State1> =
		  %% Line 222
		  apply 'run_test1'/1
		      (_cor0)
	      in  let <_cor22> =
		      %% Line 223
		      apply 'redirect_to_result_frameset1'/0
			  ()
		  in  do  %% Line 223
			  apply 'return'/2
			      (From, _cor22)
			  %% Line 224
			  apply 'loop'/1
			      (State1)
	  %% Line 225
	  <{'result_frameset',From}> when 'true' ->
	      let <_cor23> =
		  %% Line 226
		  apply 'result_frameset1'/1
		      (_cor0)
	      in  do  %% Line 226
		      apply 'return'/2
			  (From, _cor23)
		      %% Line 227
		      apply 'loop'/1
			  (_cor0)
	  %% Line 228
	  <{'redirect_to_result_log_frame',From}> when 'true' ->
	      let <_cor24> =
		  %% Line 229
		  apply 'redirect_to_result_log_frame1'/1
		      (_cor0)
	      in  do  %% Line 229
		      apply 'return'/2
			  (From, _cor24)
		      %% Line 230
		      apply 'loop'/1
			  (_cor0)
	  %% Line 231
	  <{'result_summary_frame',From}> when 'true' ->
	      let <_cor25> =
		  %% Line 232
		  apply 'result_summary_frame1'/1
		      (_cor0)
	      in  do  %% Line 232
		      apply 'return'/2
			  (From, _cor25)
		      %% Line 233
		      apply 'loop'/1
			  (_cor0)
	  %% Line 234
	  <'stop_reload_results'> when 'true' ->
	      %% Line 235
	      ( case _cor0 of
		  ( <( {'state',_cor56,_cor57,_cor58,_cor59,_cor60,_cor61,_rec1,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68}
		       -| ['compiler_generated'] )> when 'true' ->
			do  call 'file':'set_cwd'
				(_rec1)
			    let <_cor30> =
				%% Line 236
				call 'erlang':'setelement'
				    (7, _cor0, 'false')
			    in  %% Line 236
				apply 'loop'/1
				    (_cor30)
		    -| ['compiler_generated'] )
		  ( <_cor69> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 237
	  <{'no_result_log_frame',From}> when 'true' ->
	      let <_cor31> =
		  %% Line 238
		  apply 'no_result_log_frame1'/0
		      ()
	      in  do  %% Line 238
		      apply 'return'/2
			  (From, _cor31)
		      %% Line 239
		      apply 'loop'/1
			  (_cor0)
	  %% Line 240
	  <{'aborted',From}> when 'true' ->
	      do  %% Line 241
		  apply 'return'/2
		      (From, 'ok')
		  %% Line 242
		  case _cor0 of
		    <{'state',_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91,_cor92,_cor93,_cor94,_cor95,_cor96,_cor97,_cor98}> when 'true' ->
			let <_cor33> =
			    call 'erlang':'setelement'
				(6, _cor0, 0)
			in  let <_cor35> =
				call 'erlang':'setelement'
				    (5, _cor33, 'undefined')
			    in  apply 'loop'/1
				    (_cor35)
		    ( <_cor99> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','state'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
	  %% Line 243
	  <{{'report',What,Data},From}> when 'true' ->
	      let <State1> =
		  %% Line 244
		  apply 'report1'/3
		      (What, Data, _cor0)
	      in  do  %% Line 245
		      apply 'return'/2
			  (From, 'ok')
		      %% Line 246
		      apply 'loop'/1
			  (State1)
	  %% Line 247
	  <{'stop',From}> when 'true' ->
	      %% Line 248
	      apply 'return'/2
		  (From, 'ok')
	  %% Line 249
	  <{'EXIT',Pid,Reason}> when 'true' ->
	      %% Line 250
	      ( case _cor0 of
		  ( <( {'state',_cor100,_cor101,_cor102,_rec4,_cor103,_cor104,_cor105,_cor106,_cor107,_cor108,_cor109,_cor110,_cor111,_cor112}
		       -| ['compiler_generated'] )> when 'true' ->
			case _rec4 of
			  %% Line 251
			  <_cor114>
			      when call 'erlang':'=:='
				    (_rec4,
				     Pid) ->
			      do  %% Line 252
				  call 'io':'format'
				      ([84|[101|[115|[116|[32|[114|[117|[110|[32|[101|[114|[114|[111|[114|[58|[32|[126|[112|[10]]]]]]]]]]]]]]]]]]], [Reason|[]])
				  %% Line 253
				  apply 'loop'/1
				      (_cor0)
			  %% Line 254
			  <_cor115> when 'true' ->
			      %% Line 255
			      apply 'loop'/1
				  (_cor0)
			end
		    -| ['compiler_generated'] )
		  ( <_cor113> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 257
	  <{{'test_info',_X_Type,_X_Data},From}> when 'true' ->
	      do  %% Line 258
		  apply 'return'/2
		      (From, 'ok')
		  %% Line 259
		  apply 'loop'/1
		      (_cor0)
	after 'infinity' ->
	  'true'
'call'/1 =
    %% Line 262
    fun (_cor0) ->
	%% Line 263
	case call 'erlang':'whereis'
		 ('vts') of
	  %% Line 264
	  <'undefined'> when 'true' ->
	      {'error','no_proc'}
	  %% Line 265
	  <Pid> when 'true' ->
	      let <MRef> =
		  %% Line 266
		  call 'erlang':'monitor'
		      ('process', Pid)
	      in  let <Ref> =
		      %% Line 267
		      call 'erlang':'make_ref'
			  ()
		  in  let <_cor3> =
			  %% Line 268
			  call 'erlang':'self'
			      ()
		      in  do  %% Line 268
			      call 'erlang':'!'
				  (Pid, {_cor0,{_cor3,Ref}})
			      %% Line 269
			      receive
				%% Line 270
				<{_cor6,Result}>
				    when call 'erlang':'=:='
					  (_cor6,
					   Ref) ->
				    do  %% Line 271
					call 'erlang':'demonitor'
					    (MRef, ['flush'])
					%% Line 272
					Result
				%% Line 273
				<{'DOWN',_cor7,'process',_cor8,Reason}>
				    when call 'erlang':'=:='
					  (_cor7,
					   MRef) ->
				    %% Line 274
				    {'error',{'process_down',Pid,Reason}}
			      after 'infinity' ->
				'true'
	end
'return'/2 =
    %% Line 278
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <{To,Ref},Result> when 'true' ->
	      %% Line 279
	      call 'erlang':'!'
		  (To, {Ref,Result})
	  ( <_cor3,_cor2> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor3,_cor2})
		  -| [{'function_name',{'return',2}}] )
	    -| ['compiler_generated'] )
	end
'run_test1'/1 =
    %% Line 282
    fun (_cor0) ->
	case _cor0 of
	  <State = {'state',Tests,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,LogDir,%% Line 283
										   LogOpts,_cor24,_cor25,_cor26,_cor27,_cor28}> when 'true' ->
	      let <Self> =
		  %% Line 284
		  call 'erlang':'self'
		      ()
	      in  let <RunTest> =
		      %% Line 285
		      ( fun () ->
			    do  %% Line 286
				case call 'ct_run':'do_run'
					 (Tests, [], LogDir, LogOpts) of
				  %% Line 287
				  <{'error',_X_Reason}> when 'true' ->
				      %% Line 288
				      apply 'aborted'/0
					  ()
				  %% Line 289
				  <_cor29> when 'true' ->
				      'ok'
				end
				%% Line 292
				call 'erlang':'unlink'
				    (Self)
			-| [{'id',{0,0,'-run_test1/1-fun-0-'}}] )
		  in  let <Pid> =
			  %% Line 294
			  call 'erlang':'spawn_link'
			      (RunTest)
		      in  let <Total,Tests1> =
			      %% Line 296
			      receive
				%% Line 297
				<{{'test_info','start_info',{_cor30,_cor31,Cases}},From}> when 'true' ->
				    do  %% Line 298
					apply 'return'/2
					    (From, 'ok')
					%% Line 299
					<Cases,Tests>
				%% Line 300
				<EXIT = {'EXIT',_cor32,_cor33}> when 'true' ->
				    let <_cor5> =
					%% Line 301
					call 'erlang':'self'
					    ()
				    in  do  %% Line 301
					    call 'erlang':'!'
						(_cor5, EXIT)
					    %% Line 302
					    <0,[]>
			      after %% Line 303
				    30000 ->
				%% Line 304
				<0,[]>
			  in  let <_rec5> =
				  %% Line 306
				  call 'erlang':'length'
				      (Tests1)
			      in  let <_cor10> =
				      %% Line 307
				      call 'erlang':'setelement'
					  (15, State, [])
				  in  let <_cor11> =
					  %% Line 307
					  call 'erlang':'setelement'
					      (14, _cor10, 0)
				      in  let <_cor12> =
					      %% Line 307
					      call 'erlang':'setelement'
						  (13, _cor11, 0)
					  in  let <_cor13> =
						  %% Line 307
						  call 'erlang':'setelement'
						      (12, _cor12, 0)
					      in  let <_cor14> =
						      %% Line 307
						      call 'erlang':'setelement'
							  (11, _cor13, Total)
						  in  let <_cor15> =
							  %% Line 306
							  call 'erlang':'setelement'
							      (6, _cor14, _rec5)
						      in  %% Line 306
							  call 'erlang':'setelement'
							      (5, _cor15, Pid)
	  ( <_cor17> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor17})
		  -| [{'function_name',{'run_test1',1}}] )
	    -| ['compiler_generated'] )
	end
'ct_install'/1 =
    %% Line 310
    fun (_cor0) ->
	case _cor0 of
	  <{'state',_cor2,Config,EvHandlers,_cor3,_cor4,_cor5,_cor6,%% Line 311
								    LogDir,_cor7,_cor8,_cor9,_cor10,_cor11,_cor12}> when 'true' ->
	      %% Line 312
	      call 'ct_run':'install'
		  ([{'config',Config}|[{'event_handler',EvHandlers}|[]]], LogDir)
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'ct_install',1}}] )
	    -| ['compiler_generated'] )
	end
'start_page1'/0 =
    %% Line 316
    fun () ->
	let <_cor0> =
	    %% Line 317
	    apply 'start_page_frameset'/0
		()
	in  %% Line 317
	    apply 'header'/2
		([86|[105|[115|[117|[97|[108|[32|[84|[101|[115|[116|[32|[83|[101|[114|[118|[101|[114|[32|[83|[116|[97|[114|[116|[32|[80|[97|[103|[101]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor0)
'start_page_frameset'/0 =
    %% Line 319
    fun () ->
	let <_cor0> =
	    %% Line 322
	    apply 'frame'/1
		([[78|[65|[77|[69|[61|[34|[116|[105|[116|[108|[101|[34|[32|[83|[82|[67|[61|[34|[46|[47|[116|[105|[116|[108|[101|[95|[102|[114|[97|[109|[101|[34]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
	in  let <_cor1> =
		%% Line 325
		apply 'frame'/1
		    ([[78|[65|[77|[69|[61|[34|[109|[101|[110|[117|[34|[32|[83|[82|[67|[61|[34|[46|[47|[109|[101|[110|[117|[95|[102|[114|[97|[109|[101|[34]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
	    in  let <_cor2> =
		    %% Line 326
		    apply 'frame'/1
			([[78|[65|[77|[69|[61|[34|[109|[97|[105|[110|[34|[32|[83|[82|[67|[61|[34|[46|[47|[119|[101|[108|[99|[111|[109|[101|[95|[102|[114|[97|[109|[101|[34]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
		in  let <_cor3> =
			%% Line 323
			apply 'frameset'/2
			    (%% Line 324
			     [67|[79|[76|[83|[61|[34|[49|[53|[48|[44|[42|[34]]]]]]]]]]]], %% Line 325
											  [_cor1|%% Line 326
												 [_cor2|[]]])
		    in  %% Line 320
			apply 'frameset'/2
			    (%% Line 321
			     [82|[79|[87|[83|[61|[34|[54|[48|[44|[42|[34]]]]]]]]]]], %% Line 322
										     [_cor0|%% Line 323
											    [_cor3|%% Line 326
												   []]])
'title_frame1'/0 =
    %% Line 329
    fun () ->
	let <_cor0> =
	    %% Line 330
	    apply 'title_body'/0
		()
	in  let <_cor1> =
		%% Line 330
		apply 'body'/2
		    ([66|[71|[67|[79|[76|[79|[82|[61|[108|[105|[103|[104|[116|[103|[114|[101|[121|[32|[84|[69|[88|[84|[61|[100|[97|[114|[107|[103|[114|[101|[101|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor0)
	    in  %% Line 330
		apply 'header'/1
		    (_cor1)
'title_body'/0 =
    %% Line 332
    fun () ->
	let <_cor0> =
	    %% Line 333
	    apply 'b'/1
		([86|[105|[115|[117|[97|[108|[32|[84|[101|[115|[116|[32|[83|[101|[114|[118|[101|[114]]]]]]]]]]]]]]]]]])
	in  let <_cor1> =
		%% Line 333
		apply 'font'/2
		    ([83|[73|[90|[69|[61|[34|[43|[51|[34]]]]]]]]], _cor0)
	    in  %% Line 333
		apply 'p'/2
		    ([65|[76|[73|[71|[78|[61|[99|[101|[110|[116|[101|[114]]]]]]]]]]]], _cor1)
'welcome_frame1'/0 =
    %% Line 335
    fun () ->
	let <_cor0> =
	    %% Line 336
	    apply 'welcome_body'/0
		()
	in  let <_cor1> =
		%% Line 336
		apply 'body'/1
		    (_cor0)
	    in  %% Line 336
		apply 'header'/1
		    (_cor1)
'welcome_body'/0 =
    %% Line 338
    fun () ->
	let <_cor0> =
	    %% Line 344
	    apply 'br'/0
		()
	in  let <_cor1> =
		%% Line 343
		apply 'font'/2
		    ([83|[73|[90|[69|[61|[54]]]]]], %% Line 344
						    [[87|[101|[108|[99|[111|[109|[101|[32|[116|[111|[32|[116|[104|[101]]]]]]]]]]]]]]|[_cor0|%% Line 345
																	    [[86|[105|[115|[117|[97|[108|[32|[84|[101|[115|[116|[32|[83|[101|[114|[118|[101|[114]]]]]]]]]]]]]]]]]]]]])
	    in  let <_cor2> =
		    %% Line 342
		    apply 'td'/2
			([65|[76|[73|[71|[78|[61|[99|[101|[110|[116|[101|[114]]]]]]]]]]]], _cor1)
		in  let <_cor3> =
			%% Line 341
			apply 'tr'/2
			    ([86|[65|[76|[73|[71|[78|[61|[109|[105|[100|[100|[108|[101]]]]]]]]]]]]], _cor2)
		    in  %% Line 339
			apply 'table'/2
			    (%% Line 340
			     [87|[73|[68|[84|[72|[61|[49|[48|[48|[37|[32|[72|[69|[73|[71|[72|[84|[61|[54|[48|[37]]]]]]]]]]]]]]]]]]]]], %% Line 341
																       [_cor3|%% Line 345
																	      []])
'menu_frame1'/0 =
    %% Line 347
    fun () ->
	let <_cor0> =
	    %% Line 348
	    apply 'menu_body'/0
		()
	in  let <_cor1> =
		%% Line 348
		apply 'body'/1
		    (_cor0)
	    in  %% Line 348
		apply 'header'/1
		    (_cor1)
'menu_body'/0 =
    %% Line 350
    fun () ->
	let <_cor0> =
	    %% Line 351
	    apply 'h2'/1
		([67|[111|[110|[116|[101|[110|[116]]]]]]])
	in  let <_cor1> =
		%% Line 353
		apply 'href'/3
		    ([[84|[65|[82|[71|[69|[84|[61|[34|[109|[97|[105|[110|[34]]]]]]]]]]]]]], [46|[47|[99|[111|[110|[102|[105|[103|[95|[102|[114|[97|[109|[101]]]]]]]]]]]]]], [67|[111|[110|[102|[105|[103]]]]]])
	    in  let <_cor2> =
		    %% Line 353
		    apply 'li'/1
			(_cor1)
		in  let <_cor3> =
			%% Line 354
			apply 'href'/3
			    ([[84|[65|[82|[71|[69|[84|[61|[34|[109|[97|[105|[110|[34]]]]]]]]]]]]]], [46|[47|[114|[117|[110|[95|[102|[114|[97|[109|[101]]]]]]]]]]], [82|[117|[110]]])
		    in  let <_cor4> =
			    %% Line 354
			    apply 'li'/1
				(_cor3)
			in  let <_cor5> =
				%% Line 355
				apply 'href'/3
				    ([[84|[65|[82|[71|[69|[84|[61|[34|[109|[97|[105|[110|[34]]]]]]]]]]]]]], [46|[47|[114|[101|[115|[117|[108|[116|[95|[102|[114|[97|[109|[101|[115|[101|[116]]]]]]]]]]]]]]]]], [82|[101|[115|[117|[108|[116]]]]]])
			    in  let <_cor6> =
				    %% Line 355
				    apply 'li'/1
					(_cor5)
				in  let <_cor7> =
					%% Line 352
					apply 'ul'/1
					    ([_cor2|%% Line 354
						    [_cor4|%% Line 355
							   [_cor6|%% Line 356
								  []]]])
				    in  let <_cor8> =
					    %% Line 357
					    apply 'h2'/1
						([76|[111|[103|[115]]]])
					in  let <_cor9> =
						%% Line 359
						apply 'href'/3
						    ([[84|[65|[82|[71|[69|[84|[61|[34|[110|[101|[119|[34]]]]]]]]]]]]], [47|[108|[111|[103|[95|[100|[105|[114|[47|[105|[110|[100|[101|[120|[46|[104|[116|[109|[108]]]]]]]]]]]]]]]]]]], [76|[97|[115|[116|[32|[82|[117|[110|[115]]]]]]]]])
					    in  let <_cor10> =
						    %% Line 359
						    apply 'li'/1
							(_cor9)
						in  let <_cor11> =
							%% Line 360
							apply 'href'/3
							    ([[84|[65|[82|[71|[69|[84|[61|[34|[110|[101|[119|[34]]]]]]]]]]]]], [47|[108|[111|[103|[95|[100|[105|[114|[47|[97|[108|[108|[95|[114|[117|[110|[115|[46|[104|[116|[109|[108]]]]]]]]]]]]]]]]]]]]]], [65|[108|[108|[32|[82|[117|[110|[115]]]]]]]])
						    in  let <_cor12> =
							    %% Line 360
							    apply 'li'/1
								(_cor11)
							in  let <_cor13> =
								%% Line 358
								apply 'ul'/1
								    ([_cor10|%% Line 360
									     [_cor12|%% Line 361
										     []]])
							    in  %% Line 351
								[_cor0|%% Line 352
								       [_cor7|%% Line 357
									      [_cor8|%% Line 358
										     [_cor13|%% Line 362
											     []]]]]
'config_frame1'/1 =
    %% Line 364
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 365
	    apply 'config_body'/1
		(_cor0)
	in  let <_cor2> =
		%% Line 365
		apply 'body'/1
		    (_cor1)
	    in  %% Line 365
		apply 'header'/2
		    ([67|[111|[110|[102|[105|[103]]]]]], _cor2)
'config_body'/1 =
    %% Line 367
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 368
	    apply 'input'/1
		([84|[89|[80|[69|[61|[102|[105|[108|[101|[32|[78|[65|[77|[69|[61|[98|[114|[111|[119|[115|[101|[32|[83|[73|[90|[69|[61|[52|[48]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
	in  let <_cor2> =
		%% Line 369
		apply 'input'/1
		    ([84|[89|[80|[69|[61|[104|[105|[100|[100|[101|[110|[32|[78|[65|[77|[69|[61|[102|[105|[108|[101]]]]]]]]]]]]]]]]]]]]])
	    in  let <Entry> =
		    %% Line 368
		    [_cor1|%% Line 369
			   [_cor2|[]]]
		in  let <_cor4> =
			%% Line 375
			apply 'td'/1
			    ([49|[46|[32|[76|[111|[99|[97|[116|[101|[32|[99|[111|[110|[102|[105|[103|[32|[102|[105|[108|[101]]]]]]]]]]]]]]]]]]]]])
		    in  let <_cor5> =
			    %% Line 375
			    apply 'tr'/1
				(_cor4)
			in  let <_cor6> =
				%% Line 376
				apply 'td'/1
				    (Entry)
			    in  let <_cor7> =
				    %% Line 376
				    apply 'tr'/1
					(_cor6)
				in  let <_cor8> =
					%% Line 373
					apply 'table'/2
					    (%% Line 374
					     [66|[79|[82|[68|[69|[82|[61|[48]]]]]]]], %% Line 375
										      [_cor5|%% Line 376
											     [_cor7|[]]])
				    in  let <BrowseForm> =
					    %% Line 371
					    apply 'form'/2
						(%% Line 372
						 [78|[65|[77|[69|[61|[114|[101|[97|[100|[95|[102|[105|[108|[101|[95|[102|[111|[114|[109|[32|[77|[69|[84|[72|[79|[68|[61|[112|[111|[115|[116|[32|[65|[67|[84|[73|[79|[78|[61|[34|[46|[47|[98|[114|[111|[119|[115|[101|[95|[99|[111|[110|[102|[105|[103|[95|[102|[105|[108|[101|[34]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor8)
					in  let <_cor10> =
						%% Line 382
						apply 'td'/1
						    ([50|[46|[32|[80|[97|[115|[116|[101|[32|[102|[117|[108|[108|[32|[99|[111|[110|[102|[105|[103|[32|[102|[105|[108|[101|[32|[110|[97|[109|[101|[32|[104|[101|[114|[101]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
					    in  let <_cor11> =
						    %% Line 382
						    apply 'tr'/1
							(_cor10)
						in  let <_cor12> =
							%% Line 384
							apply 'input'/1
							    ([84|[89|[80|[69|[61|[116|[101|[120|[116|[32|[78|[65|[77|[69|[61|[102|[105|[108|[101|[32|[83|[73|[90|[69|[61|[52|[48]]]]]]]]]]]]]]]]]]]]]]]]]]])
						    in  let <_cor13> =
							    %% Line 384
							    apply 'td'/1
								(_cor12)
							in  let <_cor14> =
								%% Line 386
								apply 'input'/1
								    ([84|[89|[80|[69|[61|[115|[117|[98|[109|[105|[116|[32|[111|[110|[67|[108|[105|[99|[107|[61|[34|[102|[105|[108|[101|[46|[118|[97|[108|[117|[101|[61|[98|[114|[111|[119|[115|[101|[46|[118|[97|[108|[117|[101|[59|[34|[32|[86|[65|[76|[85|[69|[61|[34|[65|[100|[100|[34]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
							    in  let <_cor15> =
								    %% Line 385
								    apply 'td'/2
									([65|[76|[73|[71|[78|[61|[99|[101|[110|[116|[101|[114]]]]]]]]]]]], _cor14)
								in  let <_cor16> =
									%% Line 383
									apply 'tr'/1
									    (%% Line 384
									     [_cor13|%% Line 385
										     [_cor15|%% Line 387
											     []]])
								    in  let <_cor17> =
									    %% Line 380
									    apply 'table'/2
										(%% Line 381
										 [66|[79|[82|[68|[69|[82|[61|[48]]]]]]]], %% Line 382
															  [_cor11|%% Line 383
																  [_cor16|%% Line 387
																	  []]])
									in  let <AddForm> =
										%% Line 378
										apply 'form'/2
										    (%% Line 379
										     [78|[65|[77|[69|[61|[97|[100|[100|[95|[102|[105|[108|[101|[95|[102|[111|[114|[109|[32|[77|[69|[84|[72|[79|[68|[61|[112|[111|[115|[116|[32|[65|[67|[84|[73|[79|[78|[61|[34|[46|[47|[97|[100|[100|[95|[99|[111|[110|[102|[105|[103|[95|[102|[105|[108|[101|[34]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor17)
									    in  %% Line 390
										( case _cor0 of
										    ( <( {'state',_cor57,_rec7,_cor58,_cor59,_cor60,_cor61,_cor62,_cor63,_cor64,_cor65,_cor66,_cor67,_cor68,_cor69}
											 -| ['compiler_generated'] )> when 'true' ->
											  let <Text,RemoveForm> =
											      case _rec7 of
												%% Line 391
												<[]> when 'true' ->
												    %% Line 397
												    <[66|[101|[102|[111|[114|[101|[32|[114|[117|[110|[110|[105|[110|[103|[32|[116|[104|[101|[32|[116|[101|[115|[116|[115|[44|[32|[111|[110|[101|[32|[111|[114|[32|[109|[111|[114|[101|[32|[99|[111|[110|[102|[105|[103|[117|[114|[97|[116|[105|[111|[110|[32|[102|[105|[108|[101|[115|[32|[109|[97|[121|[32|[98|[101|[32|[97|[100|[100|[101|[100|[46|[32|[76|[111|[99|[97|[116|[101|[32|[116|[104|[101|[32|[99|[111|[110|[102|[105|[103|[32|[102|[105|[108|[101|[44|[32|[99|[111|[112|[121|[32|[105|[116|[115|[32|[102|[117|[108|[108|[32|[110|[97|[109|[101|[44|[32|[112|[97|[115|[116|[101|[32|[116|[104|[105|[115|[32|[105|[110|[116|[111|[32|[116|[104|[101|[32|[116|[101|[120|[116|[32|[102|[105|[101|[108|[100|[32|[98|[101|[108|[111|[119|[44|[32|[116|[104|[101|[110|[32|[99|[108|[105|[99|[107|[32|[116|[104|[101|[32|[34|[65|[100|[100|[34|[32|[98|[117|[116|[116|[111|[110|[46]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],[]>
												%% Line 398
												<Files> when 'true' ->
												    let <_cor29> =
													%% Line 404
													( letrec
													      'lc$^0'/1 =
														  fun (_cor26) ->
														      case _cor26 of
															<[File|_cor25]> when 'true' ->
															    let <_cor27> =
																apply 'option'/1
																    (File)
															    in  let <_cor28> =
																    apply 'lc$^0'/1
																	(_cor25)
																in  ( [_cor27|_cor28]
																      -| ['compiler_generated'] )
															<[]> when 'true' ->
															    []
															( <_cor26> when 'true' ->
															      ( primop 'match_fail'
																    ({'function_clause',_cor26})
																-| [{'function_name',{'lc$^0',1}}] )
															  -| ['compiler_generated'] )
														      end
													  in  apply 'lc$^0'/1
														  (Files)
													  -| ['list_comprehension'] )
												    in  let <Select> =
													    %% Line 405
													    apply 'select'/2
														([78|[65|[77|[69|[61|[102|[105|[108|[101|[32|[84|[73|[84|[76|[69|[61|[34|[83|[101|[108|[101|[99|[116|[32|[67|[111|[110|[102|[105|[103|[32|[70|[105|[108|[101|[34|[32|[77|[85|[76|[84|[73|[80|[76|[69|[61|[116|[114|[117|[101]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor29)
													in  let <_cor32> =
														%% Line 413
														apply 'td'/2
														    ([65|[76|[73|[71|[78|[61|[99|[101|[110|[116|[101|[114]]]]]]]]]]]], Select)
													    in  let <_cor33> =
														    %% Line 413
														    apply 'tr'/1
															(_cor32)
														in  let <_cor34> =
															%% Line 415
															apply 'input'/1
															    ([84|[89|[80|[69|[61|[115|[117|[98|[109|[105|[116|[32|[86|[65|[76|[85|[69|[61|[34|[82|[101|[109|[111|[118|[101|[34]]]]]]]]]]]]]]]]]]]]]]]]]])
														    in  let <_cor35> =
															    %% Line 414
															    apply 'td'/2
																([65|[76|[73|[71|[78|[61|[99|[101|[110|[116|[101|[114]]]]]]]]]]]], _cor34)
															in  let <_cor36> =
																%% Line 414
																apply 'tr'/1
																    (_cor35)
															    in  let <_cor37> =
																    %% Line 411
																    apply 'table'/2
																	(%% Line 412
																	 [66|[79|[82|[68|[69|[82|[61|[48]]]]]]]], %% Line 413
																						  [_cor33|%% Line 414
																							  [_cor36|%% Line 415
																								  []]])
																in  let <R> =
																	%% Line 409
																	apply 'form'/2
																	    ([[78|[65|[77|[69|[61|[114|[101|[109|[111|[118|[101|[95|[99|[111|[110|[102|[105|[103|[32|[77|[69|[84|[72|[79|[68|[61|[112|[111|[115|[116|[32]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[[65|[67|[84|[73|[79|[78|[61|[34|[46|[47|[114|[101|[109|[111|[118|[101|[95|[99|[111|[110|[102|[105|[103|[95|[102|[105|[108|[101|[34]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor37)
																    in  %% Line 399
																	<[84|[104|[101|[32|[99|[117|[114|[114|[101|[110|[116|[108|[121|[32|[107|[110|[111|[119|[110|[32|[99|[111|[110|[102|[105|[103|[117|[114|[97|[116|[105|[111|[110|[32|[102|[105|[108|[101|[115|[32|[97|[114|[101|[32|[108|[105|[115|[116|[101|[100|[32|[98|[101|[108|[111|[119|[46|[32|[84|[111|[32|[97|[100|[100|[32|[97|[32|[102|[105|[108|[101|[44|[32|[116|[121|[112|[101|[32|[116|[104|[101|[32|[102|[105|[108|[101|[110|[97|[109|[101|[32|[105|[110|[32|[116|[104|[101|[32|[101|[110|[116|[114|[121|[32|[97|[110|[100|[32|[99|[108|[105|[99|[107|[32|[116|[104|[101|[32|[34|[65|[100|[100|[34|[32|[98|[117|[116|[116|[111|[110|[46|[32|[84|[111|[32|[114|[101|[109|[111|[118|[101|[32|[97|[32|[102|[105|[108|[101|[44|[32|[115|[101|[108|[101|[99|[116|[32|[105|[116|[32|[97|[110|[100|[32|[99|[108|[105|[99|[107|[32|[116|[104|[101|[32|[34|[82|[101|[109|[111|[118|[101|[34|[32|[98|[117|[116|[116|[111|[110|[46]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]],%% Line 416
																																																																																																																																																							    R>
											      end
											  in  let <_cor42> =
												  %% Line 419
												  apply 'h1'/2
												      ([65|[76|[73|[71|[78|[61|[99|[101|[110|[116|[101|[114]]]]]]]]]]]], [67|[111|[110|[102|[105|[103]]]]]])
											      in  let <_cor43> =
												      %% Line 422
												      apply 'td'/2
													  ([[66|[71|[67|[79|[76|[79|[82|[61]]]]]]]]|[[35|[67|[48|[67|[48|[69|[65]]]]]]]]], Text)
												  in  let <_cor44> =
													  %% Line 422
													  apply 'tr'/1
													      (_cor43)
												      in  let <_cor45> =
													      %% Line 423
													      apply 'td'/1
														  ([])
													  in  let <_cor46> =
														  %% Line 423
														  apply 'tr'/1
														      (_cor45)
													      in  let <_cor47> =
														      %% Line 424
														      apply 'td'/1
															  ([])
														  in  let <_cor48> =
															  %% Line 424
															  apply 'tr'/1
															      (_cor47)
														      in  let <_cor49> =
															      %% Line 425
															      apply 'td'/2
																  ([65|[76|[73|[71|[78|[61|[108|[101|[102|[116]]]]]]]]]], BrowseForm)
															  in  let <_cor50> =
																  %% Line 425
																  apply 'tr'/1
																      (_cor49)
															      in  let <_cor51> =
																      %% Line 426
																      apply 'td'/2
																	  ([65|[76|[73|[71|[78|[61|[108|[101|[102|[116]]]]]]]]]], AddForm)
																  in  let <_cor52> =
																	  %% Line 426
																	  apply 'tr'/1
																	      (_cor51)
																      in  let <_cor53> =
																	      %% Line 427
																	      apply 'td'/2
																		  ([65|[76|[73|[71|[78|[61|[108|[101|[102|[116]]]]]]]]]], RemoveForm)
																	  in  let <_cor54> =
																		  %% Line 427
																		  apply 'tr'/1
																		      (_cor53)
																	      in  let <_cor55> =
																		      %% Line 420
																		      apply 'table'/2
																			  (%% Line 421
																			   [87|[73|[68|[84|[72|[61|[52|[53|[48|[32|[65|[76|[73|[71|[78|[61|[99|[101|[110|[116|[101|[114|[32|[67|[69|[76|[76|[80|[65|[68|[68|[73|[78|[71|[61|[53]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 422
																																										     [_cor44|%% Line 423
																																											     [_cor46|%% Line 424
																																												     [_cor48|%% Line 425
																																													     [_cor50|%% Line 426
																																														     [_cor52|%% Line 427
																																															     [_cor54|[]]]]]]])
																		  in  %% Line 419
																		      [_cor42|%% Line 420
																			      [_cor55|%% Line 427
																				      []]]
										      -| ['compiler_generated'] )
										    ( <_cor70> when 'true' ->
											  ( call ( 'erlang'
												   -| ['compiler_generated'] ):( 'error'
																 -| ['compiler_generated'] )
												(( {'badrecord','state'}
												   -| ['compiler_generated'] ))
											    -| ['compiler_generated'] )
										      -| ['compiler_generated'] )
										  end
										  -| ['compiler_generated'] )
'add_config_file1'/2 =
    %% Line 429
    fun (_cor1,_cor0) ->
	let <_cor8> =
	    %% Line 431
	    case apply 'get_input_data'/2
		     (_cor1, [102|[105|[108|[101]]]]) of
	      %% Line 432
	      <[]> when 'true' ->
		  _cor0
	      %% Line 434
	      <File> when 'true' ->
		  %% Line 435
		  ( case _cor0 of
		      ( <( {'state',_cor13,_rec10,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25}
			   -| ['compiler_generated'] )> when 'true' ->
			    let <_rec8> =
				[File|_rec10]
			    in  call 'erlang':'setelement'
				    (3, _cor0, _rec8)
			-| ['compiler_generated'] )
		      ( <_cor26> when 'true' ->
			    ( call ( 'erlang'
				     -| ['compiler_generated'] ):( 'error'
								   -| ['compiler_generated'] )
				  (( {'badrecord','state'}
				     -| ['compiler_generated'] ))
			      -| ['compiler_generated'] )
			-| ['compiler_generated'] )
		    end
		    -| ['compiler_generated'] )
	    end
	in  let <Return> =
		%% Line 437
		apply 'config_frame1'/1
		    (_cor8)
	    in  %% Line 438
		{Return,_cor8}
'remove_config_file1'/2 =
    %% Line 440
    fun (_cor1,_cor0) ->
	let <Files> =
	    %% Line 441
	    apply 'get_all_input_data'/2
		(_cor1, [102|[105|[108|[101]]]])
	in  %% Line 442
	    ( case _cor0 of
		( <( {'state',_cor13,_rec13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25}
		     -| ['compiler_generated'] )> when 'true' ->
		      let <_rec11> =
			  call 'erlang':'--'
			      (_rec13, Files)
		      in  let <_cor8> =
			      call 'erlang':'setelement'
				  (3, _cor0, _rec11)
			  in  let <Return> =
				  %% Line 443
				  apply 'config_frame1'/1
				      (_cor8)
			      in  %% Line 444
				  {Return,_cor8}
		  -| ['compiler_generated'] )
		( <_cor26> when 'true' ->
		      ( call ( 'erlang'
			       -| ['compiler_generated'] ):( 'error'
							     -| ['compiler_generated'] )
			    (( {'badrecord','state'}
			       -| ['compiler_generated'] ))
			-| ['compiler_generated'] )
		  -| ['compiler_generated'] )
	      end
	      -| ['compiler_generated'] )
'run_frame1'/1 =
    %% Line 448
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 449
	    apply 'run_body'/1
		(_cor0)
	in  let <_cor2> =
		%% Line 449
		apply 'body'/1
		    (_cor1)
	    in  %% Line 449
		apply 'header'/2
		    ([82|[117|[110|[32|[84|[101|[115|[116]]]]]]]], _cor2)
'run_body'/1 =
    %% Line 451
    fun (_cor0) ->
	case _cor0 of
	  <{'state',_cor65,_cor66,_cor67,_cor68,Running,_cor69,_cor70,_cor71,_cor72,_cor73,_cor74,_cor75,_cor76,_cor77}>
	      when call 'erlang':'>'
		    (Running,
		     0) ->
	      let <_cor1> =
		  %% Line 452
		  apply 'h1'/2
		      ([65|[76|[73|[71|[78|[61|[99|[101|[110|[116|[101|[114]]]]]]]]]]]], [82|[117|[110|[32|[84|[101|[115|[116]]]]]]]])
	      in  let <_cor2> =
		      %% Line 453
		      apply 'href'/2
			  ([46|[47|[114|[101|[115|[117|[108|[116|[95|[102|[114|[97|[109|[101|[115|[101|[116]]]]]]]]]]]]]]]]], [82|[101|[115|[117|[108|[116|[115]]]]]]])
		  in  let <_cor3> =
			  %% Line 453
			  apply 'p'/1
			      ([[84|[101|[115|[116|[32|[97|[114|[101|[32|[111|[110|[103|[111|[105|[110|[103|[58|[32]]]]]]]]]]]]]]]]]]|[_cor2|[]]])
		      in  %% Line 452
			  [_cor1|%% Line 453
				 [_cor3|[]]]
	  %% Line 454
	  <State> when 'true' ->
	      %% Line 456
	      ( case State of
		  ( <( {'state',_cor78,_rec14,_cor79,_cor80,_cor81,_cor82,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_cor13> =
			    case _rec14 of
			      %% Line 457
			      <[]> when 'true' ->
				  %% Line 458
				  apply 'ul'/1
				      ([[110|[111|[110|[101]]]]])
			      %% Line 459
			      <CfgFiles> when 'true' ->
				  let <_cor11> =
				      %% Line 460
				      ( letrec
					    'lc$^0'/1 =
						fun (_cor8) ->
						    case _cor8 of
						      <[File|_cor7]> when 'true' ->
							  let <_cor9> =
							      apply 'li'/1
								  (File)
							  in  let <_cor10> =
								  apply 'lc$^0'/1
								      (_cor7)
							      in  ( [_cor9|_cor10]
								    -| ['compiler_generated'] )
						      <[]> when 'true' ->
							  []
						      ( <_cor8> when 'true' ->
							    ( primop 'match_fail'
								  ({'function_clause',_cor8})
							      -| [{'function_name',{'lc$^0',1}}] )
							-| ['compiler_generated'] )
						    end
					in  apply 'lc$^0'/1
						(CfgFiles)
					-| ['list_comprehension'] )
				  in  %% Line 460
				      apply 'ul'/1
					  (_cor11)
			    end
			in  let <_cor15> =
				%% Line 462
				apply 'h3'/1
				    ([67|[111|[110|[102|[105|[103|[32|[70|[105|[108|[101|[115]]]]]]]]]]]])
			    in  let <ConfigFiles> =
				    %% Line 462
				    [_cor15|%% Line 463
					    [_cor13|[]]]
				in  %% Line 464
				    case call 'file':'get_cwd'
					     () of
				      <{'ok',CWD}> when 'true' ->
					  let <_cor18> =
					      %% Line 465
					      apply 'h3'/1
						  ([67|[117|[114|[114|[101|[110|[116|[32|[87|[111|[114|[107|[105|[110|[103|[32|[68|[105|[114|[101|[99|[116|[111|[114|[121]]]]]]]]]]]]]]]]]]]]]]]]])
					  in  let <_cor19> =
						  %% Line 465
						  apply 'ul'/1
						      (CWD)
					      in  let <CurrWD> =
						      %% Line 465
						      [_cor18|[_cor19|[]]]
						  in  let <_cor21> =
							  %% Line 471
							  apply 'td'/2
							      ([67|[79|[76|[83|[80|[65|[78|[61|[50]]]]]]]]], [69|[110|[116|[101|[114|[32|[116|[101|[115|[116|[32|[100|[105|[114|[101|[99|[116|[111|[114|[121]]]]]]]]]]]]]]]]]]]])
						      in  let <_cor22> =
							      %% Line 471
							      apply 'tr'/1
								  (_cor21)
							  in  let <_cor23> =
								  %% Line 473
								  apply 'input'/1
								      ([84|[89|[80|[69|[61|[116|[101|[120|[116|[32|[78|[65|[77|[69|[61|[100|[105|[114|[32|[83|[73|[90|[69|[61|[52|[48]]]]]]]]]]]]]]]]]]]]]]]]]])
							      in  let <_cor24> =
								      %% Line 473
								      apply 'td'/1
									  (_cor23)
								  in  let <_cor25> =
									  %% Line 475
									  apply 'input'/1
									      ([84|[89|[80|[69|[61|[115|[117|[98|[109|[105|[116|[32|[111|[110|[67|[108|[105|[99|[107|[61|[34|[100|[105|[114|[46|[118|[97|[108|[117|[101|[61|[98|[114|[111|[119|[115|[101|[46|[118|[97|[108|[117|[101|[59|[34|[32|[86|[65|[76|[85|[69|[61|[34|[65|[100|[100|[32|[84|[101|[115|[116|[32|[68|[105|[114|[34]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
								      in  let <_cor26> =
									      %% Line 474
									      apply 'td'/2
										  ([65|[76|[73|[71|[78|[61|[99|[101|[110|[116|[101|[114]]]]]]]]]]]], _cor25)
									  in  let <_cor27> =
										  %% Line 472
										  apply 'tr'/1
										      (%% Line 473
										       [_cor24|%% Line 474
											       [_cor26|%% Line 476
												       []]])
									      in  let <_cor28> =
										      %% Line 469
										      apply 'table'/2
											  (%% Line 470
											   [66|[79|[82|[68|[69|[82|[61|[48]]]]]]]], %% Line 471
																    [_cor22|%% Line 472
																	    [_cor27|%% Line 476
																		    []]])
										  in  let <AddDirForm> =
											  %% Line 467
											  apply 'form'/2
											      (%% Line 468
											       [78|[65|[77|[69|[61|[97|[100|[100|[95|[100|[105|[114|[95|[102|[111|[114|[109|[32|[77|[69|[84|[72|[79|[68|[61|[112|[111|[115|[116|[32|[65|[67|[84|[73|[79|[78|[61|[34|[46|[47|[97|[100|[100|[95|[116|[101|[115|[116|[95|[100|[105|[114|[34]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor28)
										      in  let <LoadedTestsTable,Submit> =
											      %% Line 478
											      case apply 'create_testdir_entries'/2
												       (_cor78, 1) of
												%% Line 479
												<[]> when 'true' ->
												    <[],[]>
												%% Line 480
												<TestDirs> when 'true' ->
												    let <_cor32> =
													%% Line 481
													apply 'th'/1
													    ([])
												    in  let <_cor33> =
													    %% Line 482
													    apply 'th'/2
														([65|[76|[73|[71|[78|[61|[108|[101|[102|[116]]]]]]]]]], [68|[105|[114|[101|[99|[116|[111|[114|[121]]]]]]]]])
													in  let <_cor34> =
														%% Line 483
														apply 'th'/2
														    ([65|[76|[73|[71|[78|[61|[108|[101|[102|[116]]]]]]]]]], [83|[117|[105|[116|[101]]]]])
													    in  let <_cor35> =
														    %% Line 484
														    apply 'th'/2
															([65|[76|[73|[71|[78|[61|[108|[101|[102|[116]]]]]]]]]], [67|[97|[115|[101]]]])
														in  let <Heading> =
															%% Line 481
															apply 'tr'/1
															    ([_cor32|%% Line 482
																     [_cor33|%% Line 483
																	     [_cor34|%% Line 484
																		     [_cor35|[]]]]])
														    in  let <_cor38> =
															    %% Line 485
															    apply 'table'/2
																([67|[69|[76|[76|[80|[65|[68|[68|[73|[78|[71|[61|[53]]]]]]]]]]]]], [Heading|[TestDirs|[]]])
															in  let <_cor37> =
																%% Line 486
																apply 'submit_button'/0
																    ()
															    in  <_cor38,_cor37>
											      end
											  in  let <_cor42> =
												  %% Line 491
												  apply 'td'/1
												      ([])
											      in  let <_cor43> =
												      %% Line 491
												      apply 'tr'/1
													  (_cor42)
												  in  let <_cor44> =
													  %% Line 492
													  apply 'td'/1
													      ([])
												      in  let <_cor45> =
													      %% Line 492
													      apply 'tr'/1
														  (_cor44)
													  in  let <_cor46> =
														  %% Line 493
														  apply 'td'/1
														      (ConfigFiles)
													      in  let <_cor47> =
														      %% Line 493
														      apply 'tr'/1
															  (_cor46)
														  in  let <_cor48> =
															  %% Line 494
															  apply 'td'/1
															      ([])
														      in  let <_cor49> =
															      %% Line 494
															      apply 'tr'/1
																  (_cor48)
															  in  let <_cor50> =
																  %% Line 495
																  apply 'td'/1
																      (CurrWD)
															      in  let <_cor51> =
																      %% Line 495
																      apply 'tr'/1
																	  (_cor50)
																  in  let <_cor52> =
																	  %% Line 496
																	  apply 'td'/1
																	      ([])
																      in  let <_cor53> =
																	      %% Line 496
																	      apply 'tr'/1
																		  (_cor52)
																	  in  let <_cor54> =
																		  %% Line 497
																		  apply 'td'/1
																		      (AddDirForm)
																	      in  let <_cor55> =
																		      %% Line 497
																		      apply 'tr'/1
																			  (_cor54)
																		  in  let <_cor56> =
																			  %% Line 498
																			  apply 'td'/1
																			      ([])
																		      in  let <_cor57> =
																			      %% Line 498
																			      apply 'tr'/1
																				  (_cor56)
																			  in  let <_cor58> =
																				  %% Line 499
																				  apply 'td'/1
																				      (LoadedTestsTable)
																			      in  let <_cor59> =
																				      %% Line 499
																				      apply 'tr'/1
																					  (_cor58)
																				  in  let <_cor60> =
																					  %% Line 500
																					  apply 'td'/1
																					      (Submit)
																				      in  let <_cor61> =
																					      %% Line 500
																					      apply 'tr'/1
																						  (_cor60)
																					  in  let <Body> =
																						  %% Line 489
																						  apply 'table'/2
																						      (%% Line 490
																						       [87|[73|[68|[84|[72|[61|[52|[53|[48|[32|[65|[76|[73|[71|[78|[61|[99|[101|[110|[116|[101|[114]]]]]]]]]]]]]]]]]]]]]], %% Line 491
																																					   [_cor43|%% Line 492
																																						   [_cor45|%% Line 493
																																							   [_cor47|%% Line 494
																																								   [_cor49|%% Line 495
																																									   [_cor51|%% Line 496
																																										   [_cor53|%% Line 497
																																											   [_cor55|%% Line 498
																																												   [_cor57|%% Line 499
																																													   [_cor59|%% Line 500
																																														   [_cor61|%% Line 501
																																															   []]]]]]]]]]])
																					      in  let <_cor63> =
																						      %% Line 502
																						      apply 'h1'/2
																							  ([65|[76|[73|[71|[78|[61|[99|[101|[110|[116|[101|[114]]]]]]]]]]]], [82|[117|[110|[32|[84|[101|[115|[116]]]]]]]])
																						  in  %% Line 502
																						      [_cor63|[Body|[]]]
				      ( <_cor17> when 'true' ->
					    primop 'match_fail'
						({'badmatch',_cor17})
					-| ['compiler_generated'] )
				    end
		    -| ['compiler_generated'] )
		  ( <_cor91> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	end
'create_testdir_entries'/2 =
    %% Line 504
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <[{Dir,Suite,Case}|Tests],N> when 'true' ->
	      let <_cor2> =
		  %% Line 505
		  apply 'testdir_entry'/4
		      (Dir, Suite, Case, N)
	      in  let <_cor3> =
		      %% Line 505
		      call 'erlang':'+'
			  (N, 1)
		  in  let <_cor4> =
			  %% Line 505
			  apply 'create_testdir_entries'/2
			      (Tests, _cor3)
		      in  %% Line 505
			  [_cor2|_cor4]
	  %% Line 506
	  <[],_X_N> when 'true' ->
	      %% Line 507
	      []
	  ( <_cor6,_cor5> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor6,_cor5})
		  -| [{'function_name',{'create_testdir_entries',2}}] )
	    -| ['compiler_generated'] )
	end
'testdir_entry'/4 =
    %% Line 509
    fun (_cor3,_cor2,_cor1,_cor0) ->
	let <NStr> =
	    %% Line 510
	    apply 'vts_integer_to_list'/1
		(_cor0)
	in  let <_cor5> =
		%% Line 511
		apply 'delete_button'/1
		    (NStr)
	    in  let <_cor6> =
		    %% Line 511
		    apply 'td'/1
			(_cor5)
		in  let <_cor7> =
			%% Line 512
			apply 'td'/1
			    (_cor3)
		    in  let <_cor8> =
			    %% Line 513
			    apply 'suite_select'/3
				(_cor3, _cor2, NStr)
			in  let <_cor9> =
				%% Line 513
				apply 'td'/1
				    (_cor8)
			    in  let <_cor10> =
				    %% Line 514
				    apply 'case_select'/4
					(_cor3, _cor2, _cor1, NStr)
				in  let <_cor11> =
					%% Line 514
					apply 'td'/1
					    (_cor10)
				    in  %% Line 511
					apply 'tr'/1
					    ([_cor6|%% Line 512
						    [_cor7|%% Line 513
							   [_cor9|%% Line 514
								  [_cor11|[]]]]])
'delete_button'/1 =
    %% Line 516
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 518
	    apply 'input'/1
		([[84|[89|[80|[69|[61|[104|[105|[100|[100|[101|[110|[32|[78|[65|[77|[69|[61|[100|[105|[114|[32|[86|[65|[76|[85|[69|[61|[39]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[_cor0|[[39]]]])
	in  let <_cor2> =
		%% Line 519
		apply 'input'/1
		    ([[84|[89|[80|[69|[61|[115|[117|[98|[109|[105|[116|[32|[86|[65|[76|[85|[69|[61|[88]]]]]]]]]]]]]]]]]]]])
	    in  %% Line 517
		apply 'form'/2
		    ([[78|[65|[77|[69|[61|[114|[101|[109|[111|[118|[101|[95|[100|[105|[114|[95|[102|[111|[114|[109|[32|[77|[69|[84|[72|[79|[68|[61|[112|[111|[115|[116|[32|[65|[67|[84|[73|[79|[78|[61|[34|[46|[47|[114|[101|[109|[111|[118|[101|[95|[116|[101|[115|[116|[95|[100|[105|[114|[34]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 518
																																											     [_cor1|%% Line 519
																																												    [_cor2|[]]])
'suite_select'/3 =
    %% Line 521
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 522
	    call 'filename':'join'
		(_cor2, [42|[95|[83|[85|[73|[84|[69|[46|[101|[114|[108]]]]]]]]]]])
	in  %% Line 522
	    case call 'filelib':'wildcard'
		     (_cor3) of
	      %% Line 523
	      <[]> when 'true' ->
		  %% Line 524
		  apply 'select'/2
		      ([78|[65|[77|[69|[61|[115|[117|[105|[116|[101|[32|[84|[73|[84|[76|[69|[61|[34|[83|[101|[108|[101|[99|[116|[32|[115|[117|[105|[116|[101|[34]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], [])
	      %% Line 525
	      <Suites0> when 'true' ->
		  let <_cor10> =
		      %% Line 526
		      ( letrec
			    'lc$^0'/1 =
				fun (_cor6) ->
				    case _cor6 of
				      <[S|_cor5]> when 'true' ->
					  let <_cor7> =
					      call 'filename':'rootname'
						  (S)
					  in  let <_cor8> =
						  call 'filename':'basename'
						      (_cor7)
					      in  let <_cor9> =
						      apply 'lc$^0'/1
							  (_cor5)
						  in  ( [_cor8|_cor9]
							-| ['compiler_generated'] )
				      <[]> when 'true' ->
					  []
				      ( <_cor6> when 'true' ->
					    ( primop 'match_fail'
						  ({'function_clause',_cor6})
					      -| [{'function_name',{'lc$^0',1}}] )
					-| ['compiler_generated'] )
				    end
			in  apply 'lc$^0'/1
				(Suites0)
			-| ['list_comprehension'] )
		  in  let <_cor12> =
			  %% Line 528
			  call 'erlang':'atom_to_list'
			      (_cor1)
		      in  let <_cor13> =
			      %% Line 528
			      apply 'options'/4
				  ([[97|[108|[108]]]|_cor10], _cor12, _cor0, [115|[101|[108|[101|[99|[116|[95|[115|[117|[105|[116|[101]]]]]]]]]]]])
			  in  %% Line 527
			      apply 'select'/2
				  ([78|[65|[77|[69|[61|[115|[117|[105|[116|[101|[32|[84|[73|[84|[76|[69|[61|[34|[83|[101|[108|[101|[99|[116|[32|[115|[117|[105|[116|[101|[34]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor13)
	    end
'case_select'/4 =
    %% Line 531
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <_X_Dir,'all',_cor36,N> when 'true' ->
	      let <_cor4> =
		  %% Line 533
		  apply 'options'/4
		      ([[97|[108|[108]]]], [97|[108|[108]]], N, [115|[101|[108|[101|[99|[116|[95|[99|[97|[115|[101]]]]]]]]]]])
	      in  %% Line 532
		  apply 'select'/2
		      ([78|[65|[77|[69|[61|[99|[97|[115|[101|[32|[84|[73|[84|[76|[69|[61|[34|[83|[101|[108|[101|[99|[116|[32|[99|[97|[115|[101|[34]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor4)
	  %% Line 534
	  <Dir,Suite,Case,N> when 'true' ->
	      let <_cor14> =
		  %% Line 536
		  case call 'application':'get_env'
			   ('common_test', 'auto_compile') of
		    %% Line 537
		    <{'ok','false'}> when 'true' ->
			%% Line 538
			'ok'
		    %% Line 539
		    <_cor37> when 'true' ->
			let <_cor11> =
			    %% Line 541
			    case call 'application':'get_env'
				     ('common_test', 'include') of
			      %% Line 542
			      <{'ok',UserInclDirs}>
				  when try
					let <_cor5> =
					    call 'erlang':'length'
						(UserInclDirs)
					in  call 'erlang':'>'
						(_cor5, 0)
				    of <Try> ->
					Try
				    catch <T,R> ->
					'false' ->
				  %% Line 543
				  ( letrec
					'lc$^0'/1 =
					    fun (_cor8) ->
						case _cor8 of
						  <[UserInclDir|_cor7]> when 'true' ->
						      let <_cor9> =
							  apply 'lc$^0'/1
							      (_cor7)
						      in  ( [{'i',UserInclDir}|_cor9]
							    -| ['compiler_generated'] )
						  <[]> when 'true' ->
						      []
						  ( <_cor8> when 'true' ->
							( primop 'match_fail'
							      ({'function_clause',_cor8})
							  -| [{'function_name',{'lc$^0',1}}] )
						    -| ['compiler_generated'] )
						end
				    in  apply 'lc$^0'/1
					    (UserInclDirs)
				    -| ['list_comprehension'] )
			      %% Line 544
			      <_cor38> when 'true' ->
				  %% Line 545
				  []
			    end
			in  %% Line 547
			    call 'ct_run':'run_make'
				(Dir, Suite, _cor11)
		  end
	      in  %% Line 549
		  case _cor14 of
		    %% Line 550
		    <'ok'> when 'true' ->
			do  %% Line 551
			    call 'code':'add_pathz'
				(Dir)
			    let <_cor16> =
				catch
				    %% Line 552
				    call Suite:'all'
					()
			    in  %% Line 552
				case _cor16 of
				  %% Line 553
				  <{'EXIT',Reason}> when 'true' ->
				      do  %% Line 554
					  call 'io':'format'
					      ([10|[126|[112|[10]]]], [Reason|[]])
					  let <_cor17> =
					      %% Line 555
					      apply 'br'/0
						  ()
					  in  %% Line 555
					      apply 'red'/1
						  ([[67|[79|[85|[76|[68|[32|[78|[79|[84|[32|[82|[69|[65|[68|[32|[84|[69|[83|[84|[67|[65|[83|[69|[83|[33|[33]]]]]]]]]]]]]]]]]]]]]]]]]]|[_cor17|%% Line 556
																							      [[83|[101|[101|[32|[101|[114|[108|[97|[110|[103|[32|[115|[104|[101|[108|[108|[32|[102|[111|[114|[32|[105|[110|[102|[111]]]]]]]]]]]]]]]]]]]]]]]]]]]])
				  %% Line 557
				  <{'skip',_X_Reason}> when 'true' ->
				      let <_cor18> =
					  %% Line 559
					  apply 'options'/4
					      ([[97|[108|[108]]]], [97|[108|[108]]], N, [115|[101|[108|[101|[99|[116|[95|[99|[97|[115|[101]]]]]]]]]]])
				      in  %% Line 558
					  apply 'select'/2
					      ([78|[65|[77|[69|[61|[99|[97|[115|[101|[32|[84|[73|[84|[76|[69|[61|[34|[83|[101|[108|[101|[99|[116|[32|[99|[97|[115|[101|[34]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor18)
				  %% Line 560
				  <AllCasesAtoms> when 'true' ->
				      let <_cor24> =
					  %% Line 561
					  ( letrec
						'lc$^1'/1 =
						    fun (_cor21) ->
							case _cor21 of
							  <[C|_cor20]>
							      when %% Line 562
								call 'erlang':'is_atom'
								    (C) ->
							      let <_cor22> =
								  call 'erlang':'atom_to_list'
								      (C)
							      in  let <_cor23> =
								      apply 'lc$^1'/1
									  (_cor20)
								  in  ( [_cor22|_cor23]
									-| ['compiler_generated'] )
							  ( <[C|_cor20]> when 'true' ->
								apply 'lc$^1'/1
								    (_cor20)
							    -| ['compiler_generated'] )
							  <[]> when 'true' ->
							      []
							  ( <_cor21> when 'true' ->
								( primop 'match_fail'
								      ({'function_clause',_cor21})
								  -| [{'function_name',{'lc$^1',1}}] )
							    -| ['compiler_generated'] )
							end
					    in  apply 'lc$^1'/1
						    (AllCasesAtoms)
					    -| ['list_comprehension'] )
				      in  let <_cor26> =
					      %% Line 564
					      call 'erlang':'atom_to_list'
						  (Case)
					  in  let <_cor27> =
						  %% Line 564
						  apply 'options'/4
						      ([[97|[108|[108]]]|_cor24], _cor26, %% Line 565
											  N, %% Line 565
											     [115|[101|[108|[101|[99|[116|[95|[99|[97|[115|[101]]]]]]]]]]])
					      in  %% Line 563
						  apply 'select'/2
						      ([78|[65|[77|[69|[61|[99|[97|[115|[101|[32|[84|[73|[84|[76|[69|[61|[34|[83|[101|[108|[101|[99|[116|[32|[99|[97|[115|[101|[34]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor27)
				end
		    %% Line 567
		    <_X_Error> when 'true' ->
			let <_cor29> =
			    %% Line 568
			    apply 'br'/0
				()
			in  let <_cor30> =
				%% Line 569
				apply 'br'/0
				    ()
			    in  %% Line 568
				apply 'red'/1
				    ([[67|[79|[77|[80|[73|[76|[65|[84|[73|[79|[78|[32|[69|[82|[82|[79|[82|[33|[33]]]]]]]]]]]]]]]]]]]|[_cor29|%% Line 569
																	     [[83|[101|[101|[32|[101|[114|[108|[97|[110|[103|[32|[115|[104|[101|[108|[108|[32|[102|[111|[114|[32|[105|[110|[102|[111]]]]]]]]]]]]]]]]]]]]]]]]]|[_cor30|%% Line 570
																																				      [[82|[101|[108|[111|[97|[100|[32|[116|[104|[105|[115|[32|[112|[97|[103|[101|[32|[119|[104|[101|[110|[32|[101|[114|[114|[111|[114|[115|[32|[97|[114|[101|[32|[102|[105|[120|[101|[100]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
		  end
	end
'options'/4 =
    %% Line 574
    fun (_cor3,_cor2,_cor1,_cor0) ->
	case <_cor3,_cor2,_cor1,_cor0> of
	  <[Selected|Elements],_cor12,N,Func>
	      when call 'erlang':'=:='
		    (_cor12,
		     Selected) ->
	      let <_cor4> =
		  %% Line 575
		  apply 'option'/2
		      ([[83|[69|[76|[69|[67|[84|[69|[68|[32]]]]]]]]]|%% Line 576
								     [[111|[110|[67|[108|[105|[99|[107|[61|[34|[100|[111|[99|[117|[109|[101|[110|[116|[46|[108|[111|[99|[97|[116|[105|[111|[110|[46|[104|[114|[101|[102|[61|[39|[46|[47]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[Func|[[63|[110|[61]]]|[N|%% Line 577
																																				     [[38|[115|[101|[108|[101|[99|[116|[101|[100|[61]]]]]]]]]]|[Selected|[[39|[59|[34]]]]]]]]]]], %% Line 578
																																																  Selected)
	      in  let <_cor5> =
		      %% Line 579
		      apply 'options'/4
			  (Elements, Selected, N, Func)
		  in  %% Line 575
		      [_cor4|_cor5]
	  %% Line 580
	  <[Element|Elements],Selected,N,Func> when 'true' ->
	      let <_cor6> =
		  %% Line 581
		  apply 'option'/2
		      ([[111|[110|[67|[108|[105|[99|[107|[61|[34|[100|[111|[99|[117|[109|[101|[110|[116|[46|[108|[111|[99|[97|[116|[105|[111|[110|[46|[104|[114|[101|[102|[61|[39|[46|[47]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[Func|[[63|[110|[61]]]|[N|%% Line 582
																														       [[38|[115|[101|[108|[101|[99|[116|[101|[100|[61]]]]]]]]]]|[Element|[[39|[59|[34]]]]]]]]]], %% Line 583
																																										  Element)
	      in  let <_cor7> =
		      %% Line 584
		      apply 'options'/4
			  (Elements, Selected, N, Func)
		  in  %% Line 581
		      [_cor6|_cor7]
	  %% Line 585
	  <[],_X_Selected,_X_N,_X_Func> when 'true' ->
	      %% Line 586
	      []
	  ( <_cor11,_cor10,_cor9,_cor8> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor11,_cor10,_cor9,_cor8})
		  -| [{'function_name',{'options',4}}] )
	    -| ['compiler_generated'] )
	end
'add_test_dir1'/2 =
    %% Line 588
    fun (_cor1,_cor0) ->
	let <_cor13> =
	    %% Line 590
	    case apply 'get_input_data'/2
		     (_cor1, [100|[105|[114]]]) of
	      %% Line 591
	      <[]> when 'true' ->
		  _cor0
	      %% Line 592
	      <Dir0> when 'true' ->
		  let <_cor3> =
		      %% Line 593
		      case call 'ct_util':'is_test_dir'
			       (Dir0) of
			%% Line 594
			<'true'> when 'true' ->
			    Dir0
			%% Line 595
			<'false'> when 'true' ->
			    call 'ct_util':'get_testdir'
				(Dir0, 'all')
			( <_cor2> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor2})
			  -| ['compiler_generated'] )
		      end
		  in  %% Line 597
		      case call 'filelib':'is_dir'
			       (_cor3) of
			%% Line 598
			<'true'> when 'true' ->
			    let <Test> =
				%% Line 599
				call 'ct_run':'tests'
				    (_cor3)
			    in  %% Line 600
				( case _cor0 of
				    ( <( {'state',_rec18,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28,_cor29,_cor30}
					 -| ['compiler_generated'] )> when 'true' ->
					  let <_rec16> =
					      call 'erlang':'++'
						  (_rec18, Test)
					  in  call 'erlang':'setelement'
						  (2, _cor0, _rec16)
				      -| ['compiler_generated'] )
				    ( <_cor31> when 'true' ->
					  ( call ( 'erlang'
						   -| ['compiler_generated'] ):( 'error'
										 -| ['compiler_generated'] )
						(( {'badrecord','state'}
						   -| ['compiler_generated'] ))
					    -| ['compiler_generated'] )
				      -| ['compiler_generated'] )
				  end
				  -| ['compiler_generated'] )
			%% Line 601
			<'false'> when 'true' ->
			    _cor0
			( <_cor11> when 'true' ->
			      primop 'match_fail'
				  ({'case_clause',_cor11})
			  -| ['compiler_generated'] )
		      end
	    end
	in  let <Return> =
		%% Line 605
		apply 'run_frame1'/1
		    (_cor13)
	    in  %% Line 606
		{Return,_cor13}
'remove_test_dir1'/2 =
    %% Line 608
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 609
	    apply 'get_input_data'/2
		(_cor1, [100|[105|[114]]])
	in  let <N> =
		%% Line 609
		call 'erlang':'list_to_integer'
		    (_cor2)
	    in  %% Line 610
		( case _cor0 of
		    ( <( {'state',_rec21,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26}
			 -| ['compiler_generated'] )> when 'true' ->
			  let <_rec19> =
			      apply 'delete_test'/2
				  (N, _rec21)
			  in  let <_cor9> =
				  call 'erlang':'setelement'
				      (2, _cor0, _rec19)
			      in  let <Return> =
				      %% Line 611
				      apply 'run_frame1'/1
					  (_cor9)
				  in  %% Line 612
				      {Return,_cor9}
		      -| ['compiler_generated'] )
		    ( <_cor27> when 'true' ->
			  ( call ( 'erlang'
				   -| ['compiler_generated'] ):( 'error'
								 -| ['compiler_generated'] )
				(( {'badrecord','state'}
				   -| ['compiler_generated'] ))
			    -| ['compiler_generated'] )
		      -| ['compiler_generated'] )
		  end
		  -| ['compiler_generated'] )
'delete_test'/2 =
    %% Line 614
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <1,[_cor6|T]> when 'true' ->
	      %% Line 615
	      T
	  %% Line 616
	  <N,[H|T]> when 'true' ->
	      let <_cor2> =
		  %% Line 617
		  call 'erlang':'-'
		      (N, 1)
	      in  let <_cor3> =
		      %% Line 617
		      apply 'delete_test'/2
			  (_cor2, T)
		  in  %% Line 617
		      [H|_cor3]
	  ( <_cor5,_cor4> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4})
		  -| [{'function_name',{'delete_test',2}}] )
	    -| ['compiler_generated'] )
	end
'select_suite1'/2 =
    %% Line 619
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 620
	    apply 'get_input_data'/2
		(_cor1, [110])
	in  let <N> =
		%% Line 620
		call 'erlang':'list_to_integer'
		    (_cor2)
	    in  let <_cor4> =
		    %% Line 621
		    apply 'get_input_data'/2
			(_cor1, [115|[101|[108|[101|[99|[116|[101|[100]]]]]]]])
		in  let <Suite> =
			%% Line 621
			call 'erlang':'list_to_atom'
			    (_cor4)
		    in  %% Line 622
			( case _cor0 of
			    ( <( {'state',_rec22,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28}
				 -| ['compiler_generated'] )> when 'true' ->
				  let <Tests1> =
				      apply 'replace_suite'/3
					  (N, Suite, _rec22)
				  in  let <_cor11> =
					  %% Line 623
					  call 'erlang':'setelement'
					      (2, _cor0, Tests1)
				      in  let <Return> =
					      %% Line 624
					      apply 'run_frame1'/1
						  (_cor11)
					  in  %% Line 625
					      {Return,_cor11}
			      -| ['compiler_generated'] )
			    ( <_cor29> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','state'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
'replace_suite'/3 =
    %% Line 627
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <1,Suite,[{Dir,_cor9,_cor10}|T]> when 'true' ->
	      %% Line 628
	      case call 'ct_run':'tests'
		       (Dir, Suite) of
		<[Test|[]]> when 'true' ->
		    %% Line 629
		    [Test|T]
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  %% Line 630
	  <N,Suite,[H|T]> when 'true' ->
	      let <_cor4> =
		  %% Line 631
		  call 'erlang':'-'
		      (N, 1)
	      in  let <_cor5> =
		      %% Line 631
		      apply 'replace_suite'/3
			  (_cor4, Suite, T)
		  in  %% Line 631
		      [H|_cor5]
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6})
		  -| [{'function_name',{'replace_suite',3}}] )
	    -| ['compiler_generated'] )
	end
'select_case1'/2 =
    %% Line 633
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 634
	    apply 'get_input_data'/2
		(_cor1, [110])
	in  let <N> =
		%% Line 634
		call 'erlang':'list_to_integer'
		    (_cor2)
	    in  let <_cor4> =
		    %% Line 635
		    apply 'get_input_data'/2
			(_cor1, [115|[101|[108|[101|[99|[116|[101|[100]]]]]]]])
		in  let <Case> =
			%% Line 635
			call 'erlang':'list_to_atom'
			    (_cor4)
		    in  %% Line 636
			( case _cor0 of
			    ( <( {'state',_rec24,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_cor27,_cor28}
				 -| ['compiler_generated'] )> when 'true' ->
				  let <Tests1> =
				      apply 'replace_case'/3
					  (N, Case, _rec24)
				  in  let <_cor11> =
					  %% Line 637
					  call 'erlang':'setelement'
					      (2, _cor0, Tests1)
				      in  let <Return> =
					      %% Line 638
					      apply 'run_frame1'/1
						  (_cor11)
					  in  %% Line 639
					      {Return,_cor11}
			      -| ['compiler_generated'] )
			    ( <_cor29> when 'true' ->
				  ( call ( 'erlang'
					   -| ['compiler_generated'] ):( 'error'
									 -| ['compiler_generated'] )
					(( {'badrecord','state'}
					   -| ['compiler_generated'] ))
				    -| ['compiler_generated'] )
			      -| ['compiler_generated'] )
			  end
			  -| ['compiler_generated'] )
'replace_case'/3 =
    %% Line 641
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <1,Case,[{Dir,Suite,_cor9}|T]> when 'true' ->
	      %% Line 642
	      case call 'ct_run':'tests'
		       (Dir, Suite, Case) of
		<[Test|[]]> when 'true' ->
		    %% Line 643
		    [Test|T]
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  %% Line 644
	  <N,Case,[H|T]> when 'true' ->
	      let <_cor4> =
		  %% Line 645
		  call 'erlang':'-'
		      (N, 1)
	      in  let <_cor5> =
		      %% Line 645
		      apply 'replace_case'/3
			  (_cor4, Case, T)
		  in  %% Line 645
		      [H|_cor5]
	  ( <_cor8,_cor7,_cor6> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor8,_cor7,_cor6})
		  -| [{'function_name',{'replace_case',3}}] )
	    -| ['compiler_generated'] )
	end
'submit_button'/0 =
    %% Line 648
    fun () ->
	let <_cor0> =
	    %% Line 650
	    apply 'input'/1
		([84|[89|[80|[69|[61|[115|[117|[98|[109|[105|[116|[32|[86|[65|[76|[85|[69|[61|[34|[82|[117|[110|[32|[84|[101|[115|[116|[34]]]]]]]]]]]]]]]]]]]]]]]]]]]])
	in  %% Line 649
	    apply 'form'/2
		([[78|[65|[77|[69|[61|[114|[117|[110|[95|[116|[101|[115|[116|[95|[102|[111|[114|[109|[32|[77|[69|[84|[72|[79|[68|[61|[112|[111|[115|[116|[32|[65|[67|[84|[73|[79|[78|[61|[34|[46|[47|[114|[117|[110|[95|[116|[101|[115|[116|[34]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], %% Line 650
																																				    [_cor0|[]])
'redirect_to_result_frameset1'/0 =
    %% Line 653
    fun () ->
	let <_cor1> =
	    %% Line 656
	    apply 'body'/1
		([80|[108|[101|[97|[115|[101|[32|[119|[97|[105|[116|[46|[46|[46]]]]]]]]]]]]]])
	in  let <_cor2> =
		%% Line 656
		apply 'header'/3
		    ([], [[60|[77|[69|[84|[65|[32|[72|[84|[84|[80|[45|[69|[81|[85|[73|[86|[61|[34|[114|[101|[102|[114|[101|[115|[104|[34|[32|[67|[79|[78|[84|[69|[78|[84|[61|[34|[49|[59|[32|[85|[82|[76|[61|[46|[47|[114|[101|[115|[117|[108|[116|[95|[102|[114|[97|[109|[101|[115|[101|[116|[34|[62]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor1)
	    in  %% Line 656
		[_cor2|[]]
'result_frameset1'/1 =
    %% Line 658
    fun (_cor0) ->
	let <_cor1> =
	    %% Line 659
	    apply 'result_frameset2'/1
		(_cor0)
	in  %% Line 659
	    apply 'header'/2
		([82|[101|[115|[117|[108|[116|[115]]]]]]], _cor1)
'result_frameset2'/1 =
    %% Line 661
    fun (_cor0) ->
	%% Line 663
	( case _cor0 of
	    ( <( {'state',_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,_cor26,_rec26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_cor15> =
		      case <_rec26,_cor24> of
			%% Line 664
			<'undefined',0> when 'true' ->
			    %% Line 665
			    [46|[47|[110|[111|[95|[114|[101|[115|[117|[108|[116|[95|[108|[111|[103|[95|[102|[114|[97|[109|[101]]]]]]]]]]]]]]]]]]]]]
			%% Line 666
			<'undefined',_cor48> when 'true' ->
			    %% Line 667
			    [46|[47|[114|[101|[100|[105|[114|[101|[99|[116|[95|[116|[111|[95|[114|[101|[115|[117|[108|[116|[95|[108|[111|[103|[95|[102|[114|[97|[109|[101]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
			%% Line 668
			<_X_Dir,0> when 'true' ->
			    %% Line 669
			    call 'filename':'join'
				([[47|[108|[111|[103|[95|[100|[105|[114]]]]]]]]|[[105|[110|[100|[101|[120|[46|[104|[116|[109|[108]]]]]]]]]]]])
			%% Line 670
			<_X_Dir,_cor49>
			    when ( call 'erlang':'=:='
				    (_cor32,
				     [])
				-| ['compiler_generated'] ) ->
			    %% Line 672
			    [46|[47|[110|[111|[95|[114|[101|[115|[117|[108|[116|[95|[108|[111|[103|[95|[102|[114|[97|[109|[101]]]]]]]]]]]]]]]]]]]]]
			%% Line 673
			<_X_Dir,_cor50> when 'true' ->
			    %% Line 674
			    case call 'erlang':'hd'
				     (_cor32) of
			      <{_cor65,CurrentLog}> when 'true' ->
				  %% Line 675
				  CurrentLog
			      ( <_cor13> when 'true' ->
				    primop 'match_fail'
					({'badmatch',_cor13})
				-| ['compiler_generated'] )
			    end
		      end
		  in  let <_cor17> =
			  %% Line 679
			  apply 'frame'/1
			      ([[78|[65|[77|[69|[61|[34|[114|[101|[115|[117|[108|[116|[95|[115|[117|[109|[109|[97|[114|[121|[34|[32|[83|[82|[67|[61|[34|[46|[47|[114|[101|[115|[117|[108|[116|[95|[115|[117|[109|[109|[97|[114|[121|[95|[102|[114|[97|[109|[101|[34]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]])
		      in  let <_cor18> =
			      %% Line 680
			      apply 'frame'/1
				  ([[78|[65|[77|[69|[61|[34|[114|[101|[115|[117|[108|[116|[95|[108|[111|[103|[34|[32|[83|[82|[67|[61|[34]]]]]]]]]]]]]]]]]]]]]]]|[_cor15|[[34]]]])
			  in  %% Line 677
			      apply 'frameset'/2
				  (%% Line 678
				   [67|[79|[76|[83|[61|[34|[50|[48|[48|[44|[42|[34]]]]]]]]]]]], %% Line 679
												[_cor17|%% Line 680
													[_cor18|[]]])
	      -| ['compiler_generated'] )
	    ( <_cor33> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'redirect_to_result_log_frame1'/1 =
    %% Line 682
    fun (_cor0) ->
	%% Line 684
	( case _cor0 of
	    ( <( {'state',_cor12,_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_rec29}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_cor6> =
		      case <_rec29,_cor16> of
			%% Line 685
			<[],0> when 'true' ->
			    %% Line 686
			    [46|[47|[110|[111|[95|[114|[101|[115|[117|[108|[116|[95|[108|[111|[103|[95|[102|[114|[97|[109|[101]]]]]]]]]]]]]]]]]]]]]
			%% Line 687
			<[],_cor40> when 'true' ->
			    %% Line 688
			    [46|[47|[114|[101|[100|[105|[114|[101|[99|[116|[95|[116|[111|[95|[114|[101|[115|[117|[108|[116|[95|[108|[111|[103|[95|[102|[114|[97|[109|[101]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
			%% Line 689
			<[{_cor41,CurrentLog}|_cor42],_cor43> when 'true' ->
			    %% Line 690
			    CurrentLog
			( <_fol410,_fol411> when 'true' ->
			      let <_cor5> = {_fol410,_fol411}
			      in  primop 'match_fail'
				      ({'case_clause',_cor5})
			  -| ['compiler_generated'] )
		      end
		  in  let <Head> =
			  %% Line 692
			  [[60|[77|[69|[84|[65|[32|[72|[84|[84|[80|[45|[69|[81|[85|[73|[86|[61|[34|[114|[101|[102|[114|[101|[115|[104|[34|[32|[67|[79|[78|[84|[69|[78|[84|[61|[34|[49|[59|[32|[85|[82|[76|[61]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|[_cor6|[[34|[62]]]]]
		      in  let <_cor9> =
			      %% Line 693
			      apply 'body'/1
				  ([80|[108|[101|[97|[115|[101|[32|[119|[97|[105|[116|[46|[46|[46]]]]]]]]]]]]]])
			  in  let <_cor10> =
				  %% Line 693
				  apply 'header'/3
				      ([], Head, _cor9)
			      in  %% Line 693
				  [_cor10|[]]
	      -| ['compiler_generated'] )
	    ( <_cor25> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'result_summary_frame1'/1 =
    %% Line 695
    fun (_cor0) ->
	%% Line 696
	( case _cor0 of
	    ( <( {'state',_cor12,_cor13,_cor14,_cor15,_rec31,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24}
		 -| ['compiler_generated'] )> when 'true' ->
		  case <_rec31,_cor16> of
		    %% Line 697
		    <0,'false'> when 'true' ->
			let <_cor5> =
			    %% Line 698
			    apply 'result_summary_body'/1
				(_cor0)
			in  let <_cor6> =
				%% Line 698
				apply 'body'/1
				    (_cor5)
			    in  %% Line 698
				apply 'header'/2
				    ([82|[101|[115|[117|[108|[116|[32|[83|[117|[109|[109|[97|[114|[121]]]]]]]]]]]]]], _cor6)
		    %% Line 699
		    <_fol442,_fol443> when 'true' ->
			let <_cor8> =
			    %% Line 715
			    apply 'result_summary_body'/1
				(_cor0)
			in  let <_cor9> =
				%% Line 714
				apply 'body'/2
				    ([111|[110|[76|[111|[97|[100|[61|[34|[115|[116|[97|[114|[116|[82|[101|[108|[111|[97|[100|[73|[110|[116|[101|[114|[118|[97|[108|[40|[41|[34|[32|[66|[71|[67|[79|[76|[79|[82|[61|[34|[35|[70|[70|[70|[70|[70|[70|[34]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor8)
			    in  %% Line 713
				apply 'header'/3
				    ([82|[101|[115|[117|[108|[116|[32|[83|[117|[109|[109|[97|[114|[121]]]]]]]]]]]]]], [60|[83|[67|[82|[73|[80|[84|[32|[76|[65|[78|[71|[85|[65|[71|[69|[61|[34|[74|[97|[118|[97|[83|[99|[114|[105|[112|[116|[49|[46|[50|[34|[62|[10|[10|[102|[117|[110|[99|[116|[105|[111|[110|[32|[115|[116|[97|[114|[116|[82|[101|[108|[111|[97|[100|[73|[110|[116|[101|[114|[118|[97|[108|[40|[41|[32|[123|[10|[32|[32|[32|[32|[105|[110|[116|[101|[114|[118|[97|[108|[73|[100|[32|[61|[32|[115|[101|[116|[73|[110|[116|[101|[114|[118|[97|[108|[40|[34|[114|[101|[108|[111|[97|[100|[80|[97|[103|[101|[40|[41|[34|[44|[53|[48|[48|[48|[41|[10|[125|[10|[10|[102|[117|[110|[99|[116|[105|[111|[110|[32|[114|[101|[108|[111|[97|[100|[80|[97|[103|[101|[40|[41|[32|[123|[10|[32|[32|[32|[32|[108|[111|[99|[97|[116|[105|[111|[110|[46|[114|[101|[108|[111|[97|[100|[40|[41|[10|[32|[32|[32|[32|[112|[97|[114|[101|[110|[116|[46|[114|[101|[115|[117|[108|[116|[95|[108|[111|[103|[46|[108|[111|[99|[97|[116|[105|[111|[110|[46|[114|[101|[108|[111|[97|[100|[40|[41|[10|[125|[10|[60|[47|[83|[67|[82|[73|[80|[84|[62|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], _cor9)
		  end
	      -| ['compiler_generated'] )
	    ( <_cor25> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'result_summary_body'/1 =
    %% Line 718
    fun (_cor0) ->
	%% Line 719
	( case _cor0 of
	    ( <( {'state',_cor37,_cor38,_cor39,_cor40,_cor41,_cor42,_cor43,_cor44,_cor45,_cor46,_rec33,_cor47,_cor48,_cor49}
		 -| ['compiler_generated'] )> when 'true' ->
		  let <_cor7> =
		      call 'erlang':'+'
			  (_rec33, _cor47)
		  in  let <N> =
			  call 'erlang':'+'
			      (_cor7, _cor48)
		      in  let <_cor9> =
			      %% Line 720
			      apply 'h2'/1
				  ([82|[101|[115|[117|[108|[116|[32|[83|[117|[109|[109|[97|[114|[121]]]]]]]]]]]]]])
			  in  let <_cor10> =
				  %% Line 721
				  apply 'vts_integer_to_list'/1
				      (N)
			      in  let <_cor11> =
				      %% Line 721
				      apply 'b'/1
					  (_cor10)
				  in  let <_cor14> =
					  %% Line 722
					  apply 'vts_integer_to_list'/1
					      (_cor46)
				      in  let <_cor15> =
					      %% Line 722
					      apply 'b'/1
						  (_cor14)
					  in  let <_cor16> =
						  %% Line 721
						  apply 'p'/1
						      ([_cor11|[[32|[99|[97|[115|[101|[115|[32|[101|[120|[101|[99|[117|[116|[101|[100|[32|[40|[111|[102|[32]]]]]]]]]]]]]]]]]]]]|%% Line 722
																						[_cor15|[[41]]]]])
					      in  let <_cor19> =
						      %% Line 723
						      apply 'vts_integer_to_list'/1
							  (_rec33)
						  in  let <_cor20> =
							  %% Line 723
							  apply 'b'/1
							      (_cor19)
						      in  let <_cor21> =
							      %% Line 723
							      apply 'green'/1
								  ([_cor20|[[32|[115|[117|[99|[99|[101|[115|[115|[102|[117|[108]]]]]]]]]]]]])
							  in  let <_cor22> =
								  %% Line 723
								  apply 'br'/0
								      ()
							      in  let <_cor25> =
								      %% Line 724
								      apply 'vts_integer_to_list'/1
									  (_cor47)
								  in  let <_cor26> =
									  %% Line 724
									  apply 'b'/1
									      (_cor25)
								      in  let <_cor27> =
									      %% Line 724
									      apply 'red'/1
										  ([_cor26|[[32|[102|[97|[105|[108|[101|[100]]]]]]]]])
									  in  let <_cor28> =
										  %% Line 724
										  apply 'br'/0
										      ()
									      in  let <_cor31> =
										      %% Line 725
										      apply 'vts_integer_to_list'/1
											  (_cor48)
										  in  let <_cor32> =
											  %% Line 725
											  apply 'b'/1
											      (_cor31)
										      in  let <_cor33> =
											      %% Line 725
											      apply 'orange'/1
												  ([_cor32|[[32|[115|[107|[105|[112|[112|[101|[100]]]]]]]]]])
											  in  let <_cor34> =
												  %% Line 723
												  apply 'p'/1
												      ([_cor21|[_cor22|%% Line 724
														       [_cor27|[_cor28|%% Line 725
																       [_cor33|[]]]]]])
											      in  let <_cor35> =
												      %% Line 726
												      apply 'executed_test_list'/1
													  (_cor0)
												  in  %% Line 720
												      [_cor9|%% Line 721
													     [_cor16|%% Line 723
														     [_cor34|%% Line 726
															     [_cor35|[]]]]]
	      -| ['compiler_generated'] )
	    ( <_cor50> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {'badrecord','state'}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'executed_test_list'/1 =
    %% Line 728
    fun (_cor0) ->
	case _cor0 of
	  <{'state',_cor13,_cor14,_cor15,_cor16,_cor17,_cor18,_cor19,_cor20,_cor21,_cor22,_cor23,_cor24,_cor25,[]}> when 'true' ->
	      %% Line 729
	      []
	  %% Line 730
	  <{'state',_cor26,_cor27,_cor28,_cor29,_cor30,_cor31,_cor32,_cor33,_cor34,_cor35,_cor36,_cor37,_cor38,TestRuns}> when 'true' ->
	      let <_cor1> =
		  %% Line 731
		  apply 'h2'/1
		      ([69|[120|[101|[99|[117|[116|[101|[100|[32|[84|[101|[115|[116|[115]]]]]]]]]]]]]])
	      in  let <_cor10> =
		      %% Line 734
		      ( letrec
			    'lc$^0'/1 =
				fun (_cor5) ->
				    case _cor5 of
				      <[%% Line 735
					{Name,Log}|_cor3]> when 'true' ->
					  let <_cor6> =
					      apply 'href'/3
						  ([84|[65|[82|[71|[69|[84|[61|[34|[114|[101|[115|[117|[108|[116|[95|[108|[111|[103|[34]]]]]]]]]]]]]]]]]]], Log, Name)
					  in  let <_cor7> =
						  apply 'td'/1
						      (_cor6)
					      in  let <_cor8> =
						      apply 'tr'/1
							  (_cor7)
						  in  let <_cor9> =
							  %% Line 735
							  apply 'lc$^0'/1
							      (_cor3)
						      in  ( [_cor8|_cor9]
							    -| ['compiler_generated'] )
				      ( <[_cor2|_cor3]> when 'true' ->
					    %% Line 735
					    apply 'lc$^0'/1
						(_cor3)
					-| ['compiler_generated'] )
				      <[]> when 'true' ->
					  []
				      ( <_cor5> when 'true' ->
					    ( primop 'match_fail'
						  ({'function_clause',_cor5})
					      -| [{'function_name',{'lc$^0',1}}] )
					-| ['compiler_generated'] )
				    end
			in  let <_cor4> =
				%% Line 735
				call 'lists':'reverse'
				    (TestRuns)
			    in  apply 'lc$^0'/1
				    (_cor4)
			-| ['list_comprehension'] )
		  in  let <_cor11> =
			  %% Line 732
			  apply 'table'/2
			      (%% Line 733
			       [], _cor10)
		      in  %% Line 731
			  [_cor1|%% Line 732
				 [_cor11|%% Line 735
					 []]]
	  ( <_cor12> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor12})
		  -| [{'function_name',{'executed_test_list',1}}] )
	    -| ['compiler_generated'] )
	end
'no_result_log_frame1'/0 =
    %% Line 738
    fun () ->
	let <_cor0> =
	    %% Line 739
	    apply 'no_result_log_body'/0
		()
	in  let <_cor1> =
		%% Line 739
		apply 'body'/1
		    (_cor0)
	    in  %% Line 739
		apply 'header'/2
		    ([84|[101|[115|[116|[32|[82|[101|[115|[117|[108|[116|[115]]]]]]]]]]]], _cor1)
'no_result_log_body'/0 =
    %% Line 741
    fun () ->
	let <_cor0> =
	    %% Line 742
	    apply 'h1'/2
		([65|[76|[73|[71|[78|[61|[99|[101|[110|[116|[101|[114]]]]]]]]]]]], [84|[101|[115|[116|[32|[82|[101|[115|[117|[108|[116|[115]]]]]]]]]]]])
	in  let <_cor1> =
		%% Line 744
		apply 'br'/0
		    ()
	    in  let <_cor2> =
		    %% Line 744
		    apply 'href'/3
			([84|[65|[82|[71|[69|[84|[61|[34|[109|[97|[105|[110|[34]]]]]]]]]]]]], [46|[47|[114|[117|[110|[95|[102|[114|[97|[109|[101]]]]]]]]]]], [89|[111|[117|[32|[99|[97|[110|[32|[114|[117|[110|[32|[116|[101|[115|[116|[115|[32|[104|[101|[114|[101]]]]]]]]]]]]]]]]]]]]]])
		in  let <_cor3> =
			%% Line 743
			apply 'p'/1
			    ([[84|[104|[101|[114|[101|[32|[97|[114|[101|[32|[99|[117|[114|[114|[101|[110|[116|[108|[121|[32|[110|[111|[32|[116|[101|[115|[116|[32|[114|[101|[115|[117|[108|[116|[115|[32|[97|[118|[97|[105|[108|[97|[98|[108|[101|[46|[32]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]|%% Line 744
																																					 [_cor1|[_cor2|[]]]])
		    in  %% Line 742
			[_cor0|%% Line 743
			       [_cor3|%% Line 744
				      []]]
'report1'/3 =
    %% Line 746
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <'tests_start',{TestName,_X_N},State> when 'true' ->
	      %% Line 747
	      case call 'ct_logs':'get_log_dir'
		       () of
		<{'ok',LogDir}> when 'true' ->
		    %% Line 749
		    ( case State of
			( <( {'state',_cor47,_cor48,_cor49,_cor50,_cor51,_cor52,_cor53,_cor54,_cor55,_cor56,_cor57,_cor58,_cor59,_rec40}
			     -| ['compiler_generated'] )> when 'true' ->
			      let <_cor8> =
				  case _rec40 of
				    %% Line 750
				    <TR = [{_cor61,_cor62}|_cor63]>
					when call 'erlang':'=:='
					      (_cor61,
					       TestName) ->
					%% Line 751
					TR
				    %% Line 752
				    <TR> when 'true' ->
					let <_cor6> =
					    %% Line 753
					    apply 'get_test_log'/2
						(TestName, LogDir)
					in  %% Line 753
					    [{TestName,_cor6}|TR]
				  end
			      in  %% Line 755
				  call 'erlang':'setelement'
				      (15, State, _cor8)
			  -| ['compiler_generated'] )
			( <_cor60> when 'true' ->
			      ( call ( 'erlang'
				       -| ['compiler_generated'] ):( 'error'
								     -| ['compiler_generated'] )
				    (( {'badrecord','state'}
				       -| ['compiler_generated'] ))
				-| ['compiler_generated'] )
			  -| ['compiler_generated'] )
		      end
		      -| ['compiler_generated'] )
		( <_cor3> when 'true' ->
		      primop 'match_fail'
			  ({'badmatch',_cor3})
		  -| ['compiler_generated'] )
	      end
	  %% Line 756
	  <'tests_done',{_X_Ok,_X_Fail,_X_Skip},State> when 'true' ->
	      let <_cor12> =
		  %% Line 757
		  call 'erlang':'self'
		      ()
	      in  do  %% Line 757
		      call 'timer':'send_after'
			  (5000, _cor12, 'stop_reload_results')
		      %% Line 758
		      ( case State of
			  ( <( {'state',_cor79,_cor80,_cor81,_cor82,_rec44,_cor83,_cor84,_cor85,_cor86,_cor87,_cor88,_cor89,_cor90,_cor91}
			       -| ['compiler_generated'] )> when 'true' ->
				let <_rec42> =
				    call 'erlang':'-'
					(_rec44, 1)
				in  let <_cor17> =
					call 'erlang':'setelement'
					    (7, State, 'true')
				    in  call 'erlang':'setelement'
					    (6, _cor17, _rec42)
			    -| ['compiler_generated'] )
			  ( <_cor92> when 'true' ->
				( call ( 'erlang'
					 -| ['compiler_generated'] ):( 'error'
								       -| ['compiler_generated'] )
				      (( {'badrecord','state'}
					 -| ['compiler_generated'] ))
				  -| ['compiler_generated'] )
			    -| ['compiler_generated'] )
			end
			-| ['compiler_generated'] )
	  %% Line 759
	  <'tc_start',{_X_Suite,_X_Case},State> when 'true' ->
	      %% Line 760
	      State
	  %% Line 761
	  <'tc_done',{_X_Suite,'init_per_suite',_cor108},State> when 'true' ->
	      %% Line 762
	      State
	  %% Line 763
	  <'tc_done',{_X_Suite,'end_per_suite',_cor109},State> when 'true' ->
	      %% Line 764
	      State
	  %% Line 765
	  <'tc_done',{_X_Suite,'init_per_group',_cor110},State> when 'true' ->
	      %% Line 766
	      State
	  %% Line 767
	  <'tc_done',{_X_Suite,'end_per_group',_cor111},State> when 'true' ->
	      %% Line 768
	      State
	  %% Line 769
	  <'tc_done',{_X_Suite,_X_Case,'ok'},State> when 'true' ->
	      %% Line 770
	      ( case State of
		  ( <( {'state',_cor112,_cor113,_cor114,_cor115,_cor116,_cor117,_cor118,_cor119,_cor120,_cor121,_rec47,_cor122,_cor123,_cor124}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_rec45> =
			    call 'erlang':'+'
				(_rec47, 1)
			in  call 'erlang':'setelement'
				(12, State, _rec45)
		    -| ['compiler_generated'] )
		  ( <_cor125> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 771
	  <'tc_done',{_X_Suite,_X_Case,{'failed',_X_Reason}},State> when 'true' ->
	      %% Line 772
	      ( case State of
		  ( <( {'state',_cor141,_cor142,_cor143,_cor144,_cor145,_cor146,_cor147,_cor148,_cor149,_cor150,_cor151,_rec50,_cor152,_cor153}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_rec48> =
			    call 'erlang':'+'
				(_rec50, 1)
			in  call 'erlang':'setelement'
				(13, State, _rec48)
		    -| ['compiler_generated'] )
		  ( <_cor154> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 773
	  <'tc_done',{_X_Suite,_X_Case,{'skipped',_X_Reason}},State> when 'true' ->
	      %% Line 774
	      ( case State of
		  ( <( {'state',_cor170,_cor171,_cor172,_cor173,_cor174,_cor175,_cor176,_cor177,_cor178,_cor179,_cor180,_cor181,_rec53,_cor182}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_rec51> =
			    call 'erlang':'+'
				(_rec53, 1)
			in  call 'erlang':'setelement'
				(14, State, _rec51)
		    -| ['compiler_generated'] )
		  ( <_cor183> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 775
	  <'tc_user_skip',{_X_Suite,_X_Case,_X_Reason},State> when 'true' ->
	      %% Line 776
	      ( case State of
		  ( <( {'state',_cor199,_cor200,_cor201,_cor202,_cor203,_cor204,_cor205,_cor206,_cor207,_cor208,_cor209,_cor210,_rec56,_cor211}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_rec54> =
			    call 'erlang':'+'
				(_rec56, 1)
			in  call 'erlang':'setelement'
				(14, State, _rec54)
		    -| ['compiler_generated'] )
		  ( <_cor212> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 777
	  <'tc_auto_skip',{_X_Suite,_X_Case,_X_Reason},State> when 'true' ->
	      %% Line 778
	      ( case State of
		  ( <( {'state',_cor228,_cor229,_cor230,_cor231,_cor232,_cor233,_cor234,_cor235,_cor236,_cor237,_cor238,_cor239,_rec59,_cor240}
		       -| ['compiler_generated'] )> when 'true' ->
			let <_rec57> =
			    call 'erlang':'+'
				(_rec59, 1)
			in  call 'erlang':'setelement'
				(14, State, _rec57)
		    -| ['compiler_generated'] )
		  ( <_cor241> when 'true' ->
			( call ( 'erlang'
				 -| ['compiler_generated'] ):( 'error'
							       -| ['compiler_generated'] )
			      (( {'badrecord','state'}
				 -| ['compiler_generated'] ))
			  -| ['compiler_generated'] )
		    -| ['compiler_generated'] )
		end
		-| ['compiler_generated'] )
	  %% Line 779
	  <'loginfo',_cor257,State> when 'true' ->
	      %% Line 780
	      State
	  ( <_cor46,_cor45,_cor44> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor46,_cor45,_cor44})
		  -| [{'function_name',{'report1',3}}] )
	    -| ['compiler_generated'] )
	end
'get_test_log'/2 =
    %% Line 782
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 785
	    call 'erlang':'++'
		(_cor1, [46|[108|[111|[103|[115]]]]])
	in  let <_cor3> =
		%% Line 785
		call 'filename':'join'
		    ([_cor2|[[114|[117|[110|[42]]]]|[[115|[117|[105|[116|[101|[46|[108|[111|[103|[46|[104|[116|[109|[108]]]]]]]]]]]]]]]]])
	    in  %% Line 783
		case %% Line 784
		     call 'filelib':'wildcard'
			 (_cor3) of
		  <[Log|[]]> when 'true' ->
		      %% Line 786
		      call 'filename':'join'
			  ([[47|[108|[111|[103|[95|[100|[105|[114]]]]]]]]|[_cor0|[Log|[]]]])
		  ( <_cor4> when 'true' ->
			primop 'match_fail'
			    ({'badmatch',_cor4})
		    -| ['compiler_generated'] )
		end
'header'/1 =
    %% Line 810
    fun (_cor0) ->
	%% Line 811
	apply 'header'/3
	    ([], [], _cor0)
'header'/2 =
    %% Line 812
    fun (_cor1,_cor0) ->
	%% Line 813
	apply 'header'/3
	    (_cor1, [], _cor0)
'header'/3 =
    %% Line 814
    fun (_cor2,_cor1,_cor0) ->
	let <_cor3> =
	    %% Line 817
	    apply 'html_header'/3
		(_cor2, _cor1, _cor0)
	in  %% Line 815
	    [[80|[114|[97|[103|[109|[97|[58|[110|[111|[45|[99|[97|[99|[104|[101|[13|[10]]]]]]]]]]]]]]]]]|%% Line 816
													 [[67|[111|[110|[116|[101|[110|[116|[45|[116|[121|[112|[101|[58|[32|[116|[101|[120|[116|[47|[104|[116|[109|[108|[13|[10|[13|[10]]]]]]]]]]]]]]]]]]]]]]]]]]]|%% Line 817
																																   [_cor3|[]]]]
'html_header'/3 =
    %% Line 819
    fun (_cor2,_cor1,_cor0) ->
	%% Line 820
	[[60|[72|[84|[77|[76|[62|[10]]]]]]]|%% Line 821
					    [[60|[72|[69|[65|[68|[62|[10]]]]]]]|%% Line 822
										[[60|[84|[73|[84|[76|[69|[62]]]]]]]|[_cor2|[[60|[47|[84|[73|[84|[76|[69|[62|[10]]]]]]]]]|%% Line 823
																					 [_cor1|%% Line 824
																						[[60|[47|[72|[69|[65|[68|[62|[10]]]]]]]]|%% Line 825
																											 [_cor0|%% Line 826
																												[[60|[47|[72|[84|[77|[76|[62]]]]]]]]]]]]]]]]
'body'/1 =
    %% Line 828
    fun (_cor0) ->
	%% Line 829
	[[60|[66|[79|[68|[89|[32|[66|[71|[67|[79|[76|[79|[82|[61|[34|[35|[70|[70|[70|[70|[70|[70|[34|[62|[10]]]]]]]]]]]]]]]]]]]]]]]]]|[_cor0|[[60|[66|[79|[68|[89|[62|[10]]]]]]]]]]
'body'/2 =
    %% Line 830
    fun (_cor1,_cor0) ->
	%% Line 831
	[[60|[66|[79|[68|[89|[32]]]]]]|[_cor1|[[62|[10]]|[_cor0|[[60|[66|[79|[68|[89|[62|[10]]]]]]]]]]]]
'frameset'/2 =
    %% Line 834
    fun (_cor1,_cor0) ->
	%% Line 835
	[[60|[70|[82|[65|[77|[69|[83|[69|[84|[32]]]]]]]]]]|[_cor1|[[62|[10]]|[_cor0|[[10|[60|[47|[70|[82|[65|[77|[69|[83|[69|[84|[62|[10]]]]]]]]]]]]]]]]]]
'frame'/1 =
    %% Line 836
    fun (_cor0) ->
	%% Line 837
	[[60|[70|[82|[65|[77|[69|[32]]]]]]]|[_cor0|[[62|[10]]]]]
'table'/2 =
    %% Line 839
    fun (_cor1,_cor0) ->
	%% Line 840
	[[60|[84|[65|[66|[76|[69|[32]]]]]]]|[_cor1|[[62|[10]]|[_cor0|[[10|[60|[47|[84|[65|[66|[76|[69|[62|[10]]]]]]]]]]]]]]]
'tr'/1 =
    %% Line 841
    fun (_cor0) ->
	%% Line 842
	[[60|[84|[82|[62|[10]]]]]|[_cor0|[[10|[60|[47|[84|[82|[62|[10]]]]]]]]]]
'tr'/2 =
    %% Line 843
    fun (_cor1,_cor0) ->
	%% Line 844
	[[60|[84|[82|[32]]]]|[_cor1|[[62|[10]]|[_cor0|[[10|[60|[47|[84|[82|[62|[10]]]]]]]]]]]]
'th'/1 =
    %% Line 845
    fun (_cor0) ->
	%% Line 846
	[[60|[84|[72|[62]]]]|[_cor0|[[60|[47|[84|[72|[62]]]]]]]]
'th'/2 =
    %% Line 847
    fun (_cor1,_cor0) ->
	%% Line 848
	[[60|[84|[72|[32]]]]|[_cor1|[[62|[10]]|[_cor0|[[10|[60|[47|[84|[72|[62|[10]]]]]]]]]]]]
'td'/1 =
    %% Line 849
    fun (_cor0) ->
	%% Line 850
	[[60|[84|[68|[62]]]]|[_cor0|[[60|[47|[84|[68|[62]]]]]]]]
'td'/2 =
    %% Line 851
    fun (_cor1,_cor0) ->
	%% Line 852
	[[60|[84|[68|[32]]]]|[_cor1|[[62]|[_cor0|[[60|[47|[84|[68|[62]]]]]]]]]]
'b'/1 =
    %% Line 854
    fun (_cor0) ->
	%% Line 855
	[[60|[66|[62]]]|[_cor0|[[60|[47|[66|[62]]]]]]]
'href'/2 =
    %% Line 860
    fun (_cor1,_cor0) ->
	%% Line 861
	[[60|[65|[32|[72|[82|[69|[70|[61|[34]]]]]]]]]|[_cor1|[[34|[62]]|[_cor0|[[60|[47|[65|[62]]]]]]]]]
'href'/3 =
    %% Line 862
    fun (_cor2,_cor1,_cor0) ->
	%% Line 863
	[[60|[65|[32|[72|[82|[69|[70|[61|[34]]]]]]]]]|[_cor1|[[34|[32]]|[_cor2|[[62]|[_cor0|[[60|[47|[65|[62]]]]]]]]]]]
'form'/2 =
    %% Line 864
    fun (_cor1,_cor0) ->
	%% Line 865
	[[60|[70|[79|[82|[77|[32]]]]]]|[_cor1|[[62|[10]]|[_cor0|[[10|[60|[47|[70|[79|[82|[77|[62|[10]]]]]]]]]]]]]]
'input'/1 =
    %% Line 866
    fun (_cor0) ->
	%% Line 867
	[[60|[73|[78|[80|[85|[84|[32]]]]]]]|[_cor0|[[62|[10]]]]]
'select'/2 =
    %% Line 868
    fun (_cor1,_cor0) ->
	%% Line 869
	[[60|[83|[69|[76|[69|[67|[84|[32]]]]]]]]|[_cor1|[[62|[10]]|[_cor0|[[10|[60|[47|[83|[69|[76|[69|[67|[84|[62|[10]]]]]]]]]]]]]]]]
'option'/1 =
    %% Line 870
    fun (_cor0) ->
	%% Line 871
	[[60|[79|[80|[84|[73|[79|[78|[62|[10]]]]]]]]]|[_cor0|[[10|[60|[47|[79|[80|[84|[73|[79|[78|[62|[10]]]]]]]]]]]]]]
'option'/2 =
    %% Line 872
    fun (_cor1,_cor0) ->
	%% Line 873
	[[60|[79|[80|[84|[73|[79|[78|[32]]]]]]]]|[_cor1|[[62|[10]]|[_cor0|[[10|[60|[47|[79|[80|[84|[73|[79|[78|[62|[10]]]]]]]]]]]]]]]]
'h1'/2 =
    %% Line 874
    fun (_cor1,_cor0) ->
	%% Line 875
	[[60|[72|[49|[32]]]]|[_cor1|[[62]|[_cor0|[[60|[47|[72|[49|[62|[10]]]]]]]]]]]
'h2'/1 =
    %% Line 876
    fun (_cor0) ->
	%% Line 877
	[[60|[72|[50|[62]]]]|[_cor0|[[60|[47|[72|[50|[62|[10]]]]]]]]]
'h3'/1 =
    %% Line 878
    fun (_cor0) ->
	%% Line 879
	[[60|[72|[51|[62]]]]|[_cor0|[[60|[47|[72|[51|[62|[10]]]]]]]]]
'font'/2 =
    %% Line 882
    fun (_cor1,_cor0) ->
	%% Line 883
	[[60|[70|[79|[78|[84|[32]]]]]]|[_cor1|[[62|[10]]|[_cor0|[[10|[60|[47|[70|[79|[78|[84|[62|[10]]]]]]]]]]]]]]
'p'/1 =
    %% Line 884
    fun (_cor0) ->
	%% Line 885
	[[60|[80|[62]]]|[_cor0|[[60|[47|[80|[62|[10]]]]]]]]
'p'/2 =
    %% Line 886
    fun (_cor1,_cor0) ->
	%% Line 887
	[[60|[80|[32]]]|[_cor1|[[62]|[_cor0|[[60|[47|[80|[62|[10]]]]]]]]]]
'ul'/1 =
    %% Line 888
    fun (_cor0) ->
	%% Line 889
	[[60|[85|[76|[62]]]]|[_cor0|[[60|[47|[85|[76|[62|[10]]]]]]]]]
'li'/1 =
    %% Line 890
    fun (_cor0) ->
	%% Line 891
	[[60|[76|[73|[62]]]]|[_cor0|[[60|[47|[76|[73|[62|[10]]]]]]]]]
'br'/0 =
    %% Line 892
    fun () ->
	%% Line 893
	[60|[66|[82|[62|[10]]]]]
'red'/1 =
    %% Line 895
    fun (_cor0) ->
	apply 'color'/2
	    ('red', _cor0)
'green'/1 =
    %% Line 896
    fun (_cor0) ->
	apply 'color'/2
	    ('green', _cor0)
'orange'/1 =
    %% Line 897
    fun (_cor0) ->
	apply 'color'/2
	    ('orange', _cor0)
'color'/2 =
    %% Line 898
    fun (_cor1,_cor0) ->
	case <_cor1,_cor0> of
	  <Color,Text>
	      when call 'erlang':'is_atom'
		    (Color) ->
	      let <_cor2> =
		  %% Line 899
		  call 'erlang':'atom_to_list'
		      (Color)
	      in  %% Line 899
		  apply 'font'/2
		      ([[67|[79|[76|[79|[82|[61]]]]]]|[_cor2|[]]], Text)
	  ( <_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor4,_cor3})
		  -| [{'function_name',{'color',2}}] )
	    -| ['compiler_generated'] )
	end
'get_all_input_data'/2 =
    %% Line 901
    fun (_cor1,_cor0) ->
	let <List> =
	    %% Line 902
	    apply 'parse'/1
		(_cor1)
	in  %% Line 903
	    apply 'get_all_input_data'/3
		(List, _cor0, [])
'get_all_input_data'/3 =
    %% Line 904
    fun (_cor2,_cor1,_cor0) ->
	case <_cor2,_cor1,_cor0> of
	  <[{Key,Value}|List],_cor6,Acc>
	      when call 'erlang':'=:='
		    (_cor6,
		     Key) ->
	      %% Line 905
	      apply 'get_all_input_data'/3
		  (List, Key, [Value|Acc])
	  %% Line 906
	  <[{_X_OtherKey,_X_Value}|List],Key,Acc> when 'true' ->
	      %% Line 907
	      apply 'get_all_input_data'/3
		  (List, Key, Acc)
	  %% Line 908
	  <[],_X_Key,Acc> when 'true' ->
	      %% Line 909
	      Acc
	  ( <_cor5,_cor4,_cor3> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor5,_cor4,_cor3})
		  -| [{'function_name',{'get_all_input_data',3}}] )
	    -| ['compiler_generated'] )
	end
'get_input_data'/2 =
    %% Line 911
    fun (_cor1,_cor0) ->
	let <_cor2> =
	    %% Line 912
	    apply 'parse'/1
		(_cor1)
	in  %% Line 912
	    case call 'lists':'keysearch'
		     (_cor0, 1, _cor2) of
	      %% Line 913
	      <{'value',{_cor6,Value}}>
		  when call 'erlang':'=:='
			(_cor6,
			 _cor0) ->
		  %% Line 914
		  Value
	      %% Line 915
	      <'false'> when 'true' ->
		  %% Line 916
		  'undefined'
	      ( <_cor3> when 'true' ->
		    primop 'match_fail'
			({'case_clause',_cor3})
		-| ['compiler_generated'] )
	    end
'parse'/1 =
    %% Line 919
    fun (_cor0) ->
	%% Line 920
	call 'httpd':'parse_query'
	    (_cor0)
'vts_integer_to_list'/1 =
    %% Line 922
    fun (_cor0) ->
	case _cor0 of
	  <X>
	      when call 'erlang':'is_atom'
		    (_cor0) ->
	      %% Line 923
	      call 'erlang':'atom_to_list'
		  (X)
	  %% Line 924
	  <X>
	      when call 'erlang':'is_integer'
		    (_cor0) ->
	      %% Line 925
	      call 'erlang':'integer_to_list'
		  (X)
	  ( <_cor1> when 'true' ->
		( primop 'match_fail'
		      ({'function_clause',_cor1})
		  -| [{'function_name',{'vts_integer_to_list',1}}] )
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('vts')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('vts', _cor0)
end