module 'otp_ring0' ['module_info'/0,
		    'module_info'/1,
		    'start'/2]
    attributes [%% Line 25
		'spec' =
		    %% Line 25
		    [{{'start',2},[{'type',25,'fun',[{'type',25,'product',[{'var',25,'_'}|[{'type',25,'term',[]}]]}|[{'type',25,'term',[]}]]}]}]]
'start'/2 =
    %% Line 26
    fun (_cor1,_cor0) ->
	%% Line 27
	apply 'run'/3
	    ('init', 'boot', _cor0)
'run'/3 =
    %% Line 29
    fun (_cor2,_cor1,_cor0) ->
	%% Line 30
	case call 'erlang':'function_exported'
		 (_cor2, _cor1, 1) of
	  %% Line 31
	  <'false'> when 'true' ->
	      do  %% Line 32
		  call 'erlang':'display'
		      ({'fatal','error','module',_cor2,[100|[111|[101|[115|[32|[110|[111|[116|[32|[101|[120|[112|[111|[114|[116]]]]]]]]]]]]]]],_cor1,[47|[49]]})
		  %% Line 33
		  call 'erlang':'halt'
		      (1)
	  %% Line 34
	  <'true'> when 'true' ->
	      %% Line 35
	      call _cor2:_cor1
		  (_cor0)
	  ( <_cor3> when 'true' ->
		primop 'match_fail'
		    ({'case_clause',_cor3})
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('otp_ring0')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('otp_ring0', _cor0)
end